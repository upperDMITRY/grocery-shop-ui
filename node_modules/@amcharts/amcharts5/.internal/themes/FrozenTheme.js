import { __extends } from "tslib";
import { Color } from "../core/util/Color";
import { Theme } from "../core/Theme";
/**
 * @ignore
 */
var FrozenTheme = /** @class */ (function (_super) {
    __extends(FrozenTheme, _super);
    function FrozenTheme() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FrozenTheme.prototype, "setupDefaultRules", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            _super.prototype.setupDefaultRules.call(this);
            this.rule("ColorSet").setAll({
                colors: [
                    Color.fromHex(0xbec4f8),
                    Color.fromHex(0xa5abee),
                    Color.fromHex(0x6a6dde),
                    Color.fromHex(0x4d42cf),
                    Color.fromHex(0x713e8d),
                    Color.fromHex(0xa160a0),
                    Color.fromHex(0xeb6eb0),
                    Color.fromHex(0xf597bb),
                    Color.fromHex(0xfbb8c9),
                    Color.fromHex(0xf8d4d8)
                ],
                reuse: true
            });
        }
    });
    return FrozenTheme;
}(Theme));
export { FrozenTheme };
//# sourceMappingURL=FrozenTheme.js.map