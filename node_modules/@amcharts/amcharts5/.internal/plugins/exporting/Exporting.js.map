{"version":3,"file":"Exporting.js","sourceRoot":"","sources":["../../../../../src/.internal/plugins/exporting/Exporting.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ExportingMenu } from \"./ExportingMenu\"\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../core/util/Entity\"\nimport { Color } from \"../../core/util/Color\";\nimport { Root } from \"../../core/Root\"\nimport { StyleRule } from \"../../core/util/Utils\"\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IFile {\n\tpath: string;\n\tbytes: string;\n}\n\nexport interface IFont {\n\tname: string;\n\tnormal: IFile;\n\tbold?: IFile;\n\titalics?: IFile;\n\tbolditalics?: IFile;\n}\n\n/**\n * This is used to cache the pdfmake loading.\n *\n * @ignore\n */\nlet pdfmakePromise: Promise<any>;\n\n/**\n * Loads pdfmake dynamic module\n *\n * This is an asynchronous function. Check the description of `getImage()`\n * for description and example usage.\n *\n * @ignore\n */\nasync function _pdfmake(): Promise<any> {\n\tlet a = await Promise.all([\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\n\t\timport(/* webpackChunkName: \"pdfmake\" */ \"./pdfmake/vfs_fonts\")\n\t]);\n\tlet pdfmake = a[0];\n\tlet vfs_fonts = a[1];\n\tconst global = <any>window;\n\tglobal.pdfMake = global.pdfMake || {};\n\tglobal.pdfMake.vfs = vfs_fonts.default;\n\tpdfmake.vfs = vfs_fonts.default;\n\treturn pdfmake;\n}\n\nexport type ExportingTypes = \"image\" | \"data\" | \"print\";\nexport type ExportingFormats = \"png\" | \"jpg\" | \"canvas\" | \"pdf\" | \"xlsx\" | \"csv\" | \"json\" | \"html\" | \"pdfdata\" | \"print\";\nexport type ExportingImageFormats = \"png\" | \"jpg\";\n\nexport interface IExportingImageSource {\n\n\t/**\n\t * A root object of an extra chart to add in export.\n\t */\n\tsource: Root;\n\n\t/**\n\t * Top margin in pixels.\n\t */\n\tmarginTop?: number;\n\n\t/**\n\t * Right margin in pixels.\n\t */\n\tmarginRight?: number;\n\n\t/**\n\t * Bottom margin in pixels.\n\t */\n\tmarginBottom?: number;\n\n\t/**\n\t * Left margin in pixels.\n\t */\n\tmarginLeft?: number;\n\n\t/**\n\t * Position to place extra image in releation to the main chart.\n\t *\n\t * @default \"bottom\"\n\t */\n\tposition?: \"left\" | \"right\" | \"top\" | \"bottom\";\n\n\t/**\n\t * Crop extra image if it's larger than the main chart.\n\t */\n\tcrop?: boolean;\n\n}\n\nexport interface IExportingSettings extends IEntitySettings {\n\n\t/**\n\t * A reference to [[ExportingMenu]] object.\n\t */\n\tmenu?: ExportingMenu;\n\n\t/**\n\t * Export will try to determine background color based on the DOM styles.\n\t *\n\t * You can use this setting to explicitly specify background color for\n\t * exported images.\n\t */\n\tbackgroundColor?: Color;\n\n\t/**\n\t * A string to prefix exported files with.\n\t *\n\t * @default \"chart\"\n\t */\n\tfilePrefix?: string;\n\n\t/**\n\t * Chart title. Used for print, PDF and Excel exports.\n\t */\n\ttitle?: string;\n\n\t/**\n\t * Charset to use for export.\n\t *\n\t * @defaul \"utf-8\"\n\t */\n\tcharset?: string;\n\n\t/**\n\t * Fields to include in data export.\n\t *\n\t * Key - field in data.\n\t * Value - column name.\n\t */\n\tdataFields?: { [index: string]: string },\n\n\t/**\n\t * Specifies the order of fields to export in data.\n\t */\n\tdataFieldsOrder?: string[],\n\n\t/**\n\t * Fields in data that are numeric.\n\t */\n\tnumericFields?: string[],\n\n\t/**\n\t * Use this number format on numeric values.\n\t */\n\tnumberFormat?: string | Intl.NumberFormatOptions,\n\n\t/**\n\t * Fields in data that have date/time value.\n\t */\n\tdateFields?: string[],\n\n\t/**\n\t * Use this date format on date values.\n\t */\n\tdateFormat?: string | Intl.DateTimeFormatOptions,\n\n\t/**\n\t * Include these images or other charts in image exports.\n\t */\n\textraImages?: Array<Root | IExportingImageSource>;\n\n\t/**\n\t * Data to export.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/#Exporting_data} for more info\n\t */\n\tdataSource?: any;\n\n\t/**\n\t * PNG format options.\n\t */\n\tpngOptions?: IExportingImageOptions;\n\n\t/**\n\t * JPEG format options.\n\t */\n\tjpgOptions?: IExportingImageOptions;\n\n\t/**\n\t * Canvas format options.\n\t */\n\tcanvasOptions?: IExportingImageOptions;\n\n\t/**\n\t * PDF format options.\n\t */\n\tpdfOptions?: IExportingPDFOptions;\n\n\t/**\n\t * PDF with data table format options.\n\t */\n\tpdfdataOptions?: IExportingDataOptions;\n\n\t/**\n\t * XSLX format options.\n\t */\n\txlsxOptions?: IExportingXLSXOptions;\n\n\t/**\n\t * CSV format options.\n\t */\n\tcsvOptions?: IExportingCSVOptions;\n\n\t/**\n\t * JSON format options.\n\t */\n\tjsonOptions?: IExportingJSONOptions;\n\n\t/**\n\t * HTML format options.\n\t */\n\thtmlOptions?: IExportingHTMLOptions;\n\n\t/**\n\t * Print options.\n\t */\n\tprintOptions?: IExportingPrintOptions;\n\n}\n\nexport interface IExportingPrivate extends IEntityPrivate {\n}\n\nexport interface IExportEvent {\n\n\t/**\n\t * Format.\n\t */\n\tformat: ExportingFormats,\n\n\t/**\n\t * Format options.\n\t */\n\toptions: IExportingFormatOptions\n\n}\n\nexport interface IExportingEvents extends IEntityEvents {\n\n\t/**\n\t * Invoked when export starts.\n\t */\n\texportstarted: IExportEvent;\n\n\t/**\n\t * Invoked when export finishes.\n\t */\n\texportfinished: IExportEvent;\n\n\t/**\n\t * Invoked when download of the export starts.\n\t */\n\tdownloadstarted: IExportEvent & {\n\t\tfileName: string,\n\t};\n\n\t/**\n\t * Invoked when print starts.\n\t */\n\tprintstarted: IExportEvent;\n\n\t/**\n\t * Invoked when data finishes pre-processing for export.\n\t */\n\tdataprocessed: IExportEvent & {\n\t\tdata: any\n\t}\n\n\t/**\n\t * Invoked when XLSX export finishes preparing a workbook.\n\t *\n\t * At this point it can still be modified for export.\n\t */\n\tworkbookready: IExportEvent & {\n\t\tworkbook: any,\n\t\tworkbookOptions: any,\n\t\txlsx: any\n\t}\n\n\t/**\n\t * Invoked when PDF export finishes preparing a document.\n\t *\n\t * At this point it can still be modified for export.\n\t */\n\tpdfdocready: IExportEvent & {\n\t\tdoc: any\n\t}\n\n}\n\nexport interface IExportingFormatOptions {\n\n\t/**\n\t * If set to `true`, this format will not appear in [[ExportMenu]].\n\t */\n\tdisabled?: boolean;\n\n}\n\nexport interface IExportingImageOptions extends IExportingFormatOptions {\n\n\t/**\n\t * Quality of the exported image: 0 to 1.\n\t */\n\tquality?: number;\n\n\t/**\n\t * Export images with hardware resolution (`false`), or the way they appear\n\t * on screen (`true`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Pixel_ratio} for more info\n\t * @default false\n\t */\n\tmaintainPixelRatio?: boolean;\n\n\t/**\n\t * Minimal width of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tminWidth?: number;\n\n\t/**\n\t * Maximal width of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tmaxWidth?: number;\n\n\t/**\n\t * Minimal height of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tminHeight?: number;\n\n\t/**\n\t * Maximal height of exported image, in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-images/#Sizing_exported_image} for more info\n\t */\n\tmaxHeight?: number;\n\n}\n\nexport interface IExportingPrintOptions extends IExportingImageOptions {\n\n\t/**\n\t * A delay in milliseconds to wait before initiating print.\n\t *\n\t * This delay is necessary to ensure DOM is prepared and repainted before\n\t * print dialog kicks in.\n\t *\n\t * @default 500\n\t */\n\tdelay?: number;\n\n\t/**\n\t * Method to use for printing.\n\t *\n\t * If one fails for your particular setup, try the other.\n\t *\n\t * \"css\" - inserts dynamic CSS that hides everything, except the image being printed.\n\t * \"iframe\" - creates a dynamic `<iframe>` with the image, then prints it.\n\t *\n\t * @default \"iframe\"\n\t */\n\tprintMethod?: \"css\" | \"iframe\";\n\n\t/**\n\t * Image format to use for printing.\n\t *\n\t * @default \"png\"\n\t */\n\timageFormat?: \"png\" | \"jpg\";\n\n}\n\n/**\n * Available PDF page sizes.\n */\nexport type pageSizes = \"4A0\" | \"2A0\" | \"A0\" | \"A1\" | \"A2\" | \"A3\" | \"A4\" | \"A5\" | \"A6\" | \"A7\" | \"A8\" | \"A9\" | \"A10\" |\n\t\"B0\" | \"B1\" | \"B2\" | \"B3\" | \"B4\" | \"B5\" | \"B6\" | \"B7\" | \"B8\" | \"B9\" | \"B10\" |\n\t\"C0\" | \"C1\" | \"C2\" | \"C3\" | \"C4\" | \"C5\" | \"C6\" | \"C7\" | \"C8\" | \"C9\" | \"C10\" |\n\t\"RA0\" | \"RA1\" | \"RA2\" | \"RA3\" | \"RA4\" |\n\t\"SRA0\" | \"SRA1\" | \"SRA2\" | \"SRA3\" | \"SRA4\" |\n\t\"EXECUTIVE\" | \"FOLIO\" | \"LEGAL\" | \"LETTER\" | \"TABLOID\";\n\nexport interface IExportingPDFOptions extends IExportingFormatOptions {\n\n\t/**\n\t * Include data into PDF\n\t */\n\tincludeData?: boolean;\n\n\t/**\n\t * An image format to use for embedded images in PDF.\n\t *\n\t * See `imageFormats` in [[Export_module]].\n\t */\n\timageFormat?: \"png\" | \"jpg\";\n\n\t/**\n\t * Font size to use for all texts.\n\t */\n\tfontSize?: number;\n\n\t/**\n\t * Alignment of the chart image in PDF.\n\t *\n\t * Supported options: `\"left\"` (default), `\"center\"`, `\"right\"`.\n\t *\n\t * @default left\n\t */\n\talign?: \"left\" | \"center\" | \"middle\";\n\n\t/**\n\t * Whether to add a URL of the web page the chart has been exported from.\n\t *\n\t * @default true\n\t */\n\taddURL?: boolean;\n\n\t/**\n\t * Page size of the exported PDF.\n\t */\n\tpageSize?: pageSizes;\n\n\t/**\n\t * Page orientation.\n\t */\n\tpageOrientation?: \"landscape\" | \"portrait\";\n\n\t/**\n\t * Page margins.\n\t *\n\t * Can be one of the following:\n\t *\n\t * A single number, in which case it will act as margin setting\n\t * for all four edges of the page.\n\t *\n\t * An array of two numbers `[ horizontal, vertical ]`.\n\t *\n\t * An array of four numbers `[ left, top, right, bottom ]`.\n\t */\n\tpageMargins?: number | number[];\n\n\t/**\n\t * Font which should be used for the export.\n\t *\n\t * Default font used for PDF includes only Latin-based and Cyrilic\n\t * characters. If you are exporting text in other languages, you might need\n\t * to use some other export font.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-pdf/#Fonts} for more info\n\t */\n\tfont?: IFont;\n\n\t/**\n\t * Additional optional fonts which can be used on individual elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/exporting-pdf/#Fonts} for more info\n\t */\n\textraFonts?: Array<IFont>;\n\n}\n\nexport interface IExportingDataOptions extends IExportingFormatOptions {\n\n\t/**\n\t * Replace empty values with this string.\n\t */\n\temptyAs?: string;\n\n\t/**\n\t * Use timestamps instead of formatted dates.\n\t *\n\t * @default false\n\t */\n\tuseTimestamps?: boolean;\n\n\t/**\n\t * Use client's locale when formatting dates.\n\t *\n\t * @default false\n\t */\n\tuseLocale?: boolean;\n\n\t/**\n\t * If set to `true` will pivot the able so that columns are horizontal.\n\t */\n\tpivot?: boolean;\n\n\t/**\n\t * Will add a line with column names in CSV/HTML/PDF tables.\n\t */\n\taddColumnNames?: boolean;\n\n}\n\nexport interface IExportingJSONOptions extends IExportingDataOptions {\n\n\t/**\n\t * If set to a number, each line will be indented by X spaces, maintaining\n\t * hierarchy.\n\t *\n\t * If set to a string, will use that string to indent.\n\t *\n\t * @default 2\n\t */\n\tindent?: string | number;\n\n\t/**\n\t * If set to `true` and `dataFields` are set to `true`, will rename keys in\n\t * data.\n\t *\n\t * @default true\n\t */\n\trenameFields?: boolean;\n\n}\n\nexport interface IExportingCSVOptions extends IExportingDataOptions {\n\n\t/**\n\t * Column separator.\n\t *\n\t * @default \",\"\n\t */\n\tseparator?: string;\n\n\t/**\n\t * Force all values to be included in quotes, including numeric.\n\t *\n\t * @default false\n\t */\n\tforceQuotes?: boolean;\n\n\t/**\n\t * Reverse order of the records in data.\n\t *\n\t * @default false\n\t */\n\treverse?: boolean;\n\n}\n\nexport interface IExportingHTMLOptions extends IExportingDataOptions {\n\n\t/**\n\t * A `class` attribute for `<table>` tag.\n\t */\n\ttableClass?: string;\n\n\t/**\n\t * A `class` attribute for `<tr>` tags.\n\t */\n\trowClass?: string;\n\n\t/**\n\t * A `class` attribute for `<th>` tags.\n\t */\n\theaderClass?: string;\n\n\t/**\n\t * A `class` attribute for `<td>` tags.\n\t */\n\tcellClass?: string;\n\n}\n\nexport interface IExportingXLSXOptions extends IExportingDataOptions {\n\t// @todo\n\t//sheets?: string[];\n}\n\n/**\n * A plugin that can be used to export chart snapshots and data.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/exporting/} for more info\n */\nexport class Exporting extends Entity {\n\tpublic static className: string = \"Exporting\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Exporting.className]);\n\n\tdeclare public _settings: IExportingSettings;\n\tdeclare public _privateSettings: IExportingPrivate;\n\tdeclare public _events: IExportingEvents;\n\n\t//public extraImages: Array<Root | IExportingImageSource> = [];\n\t//public dataSources: any[] = [];\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._setRawDefault(\"filePrefix\", \"chart\");\n\t\tthis._setRawDefault(\"charset\", \"utf-8\");\n\t\tthis._setRawDefault(\"numericFields\", []);\n\t\tthis._setRawDefault(\"dateFields\", []);\n\t\tthis._setRawDefault(\"extraImages\", []);\n\t\tthis._setRawDefault(\"pngOptions\", { quality: 1, maintainPixelRatio: false });\n\t\tthis._setRawDefault(\"jpgOptions\", { quality: 0.8, maintainPixelRatio: false });\n\t\tthis._setRawDefault(\"printOptions\", { quality: 1, maintainPixelRatio: false, delay: 500, printMethod: \"iframe\", imageFormat: \"png\" });\n\t\tthis._setRawDefault(\"jsonOptions\", { indent: 2, renameFields: true });\n\t\tthis._setRawDefault(\"csvOptions\", { separator: \",\", addColumnNames: true, emptyAs: \"\" });\n\t\tthis._setRawDefault(\"htmlOptions\", { emptyAs: \"-\", addColumnNames: true });\n\t\tthis._setRawDefault(\"xlsxOptions\", { emptyAs: \"\", addColumnNames: true });\n\t\tthis._setRawDefault(\"pdfOptions\", { fontSize: 14, imageFormat: \"png\", align: \"left\", addURL: true });\n\t\tthis._setRawDefault(\"pdfdataOptions\", { emptyAs: \"\", addColumnNames: true });\n\n\t\tthis._root.addDisposer(this);\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"menu\")) {\n\t\t\tconst menu = this.get(\"menu\");\n\t\t\tif (menu) {\n\t\t\t\tmenu.set(\"exporting\", this);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getFormatOptions(format: ExportingFormats, options?: IExportingFormatOptions): IExportingFormatOptions {\n\t\tconst newOptions: any = $object.copy((<any>this).get(format + \"Options\", {}));\n\t\tif (options) {\n\t\t\t$object.each(options, (key, value) => {\n\t\t\t\tnewOptions[key] = value;\n\t\t\t});\n\t\t}\n\t\treturn newOptions;\n\t}\n\n\t/**\n\t * Triggers a download of the chart/data in specific format.\n\t *\n\t * @param  format         Format\n\t * @param  customOptions  Format options\n\t */\n\tpublic async download(format: ExportingFormats, customOptions?: IExportingFormatOptions) {\n\t\tconst ext = format == \"pdfdata\" ? \"pdf\" : format;\n\t\tconst fileName = this.get(\"filePrefix\", \"chart\") + \".\" + ext;\n\t\tconst options = this._getFormatOptions(format, customOptions);\n\t\tthis.events.dispatch(\"downloadstarted\", {\n\t\t\ttype: \"downloadstarted\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\tfileName: fileName,\n\t\t\ttarget: this\n\t\t});\n\t\tconst uri = await this.export(format, options);\n\t\tthis.streamFile(uri, fileName);\n\t}\n\n\t/**\n\t * Triggers print of the chart.\n\t *\n\t * @param  customOptions  Print options\n\t */\n\tpublic async print(customOptions?: IExportingPrintOptions) {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tthis.events.dispatch(\"printstarted\", {\n\t\t\ttype: \"printstarted\",\n\t\t\tformat: \"print\",\n\t\t\toptions: options,\n\t\t\ttarget: this\n\t\t});\n\t\tconst uri = await this.export(options.imageFormat || \"png\", options);\n\t\tthis.initiatePrint(uri, options, this.get(\"title\"));\n\t}\n\n\t/**\n\t * Returns data uri of the chart/data in specific format.\n\t *\n\t * @param          format  Format\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async export(format: ExportingFormats, customOptions?: IExportingFormatOptions): Promise<string> {\n\t\tconst options = this._getFormatOptions(format, customOptions);\n\t\tthis.events.dispatch(\"exportstarted\", {\n\t\t\ttype: \"exportstarted\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\ttarget: this\n\t\t});\n\t\tswitch (format) {\n\t\t\tcase \"png\":\n\t\t\tcase \"jpg\":\n\t\t\t\treturn this.exportImage(format, options);\n\t\t\t\tbreak;\n\t\t\tcase \"json\":\n\t\t\t\treturn this.exportJSON(options);\n\t\t\t\tbreak;\n\t\t\tcase \"csv\":\n\t\t\t\treturn this.exportCSV(options);\n\t\t\t\tbreak;\n\t\t\tcase \"html\":\n\t\t\t\treturn this.exportHTML(options);\n\t\t\t\tbreak;\n\t\t\tcase \"xlsx\":\n\t\t\t\treturn this.exportXLSX(options);\n\t\t\t\tbreak;\n\t\t\tcase \"pdf\":\n\t\t\t\treturn this.exportPDF(options);\n\t\t\t\tbreak;\n\t\t\tcase \"pdfdata\":\n\t\t\t\treturn this.exportPDFData(options);\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.events.dispatch(\"exportfinished\", {\n\t\t\ttype: \"exportfinished\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\ttarget: this\n\t\t});\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * Images\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns chart image as a data:uri.\n\t *\n\t * @param   format         Image format\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportImage(format: ExportingImageFormats, customOptions?: IExportingImageOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(format, customOptions);\n\t\treturn (await this.getCanvas(options)).toDataURL(this.getContentType(format), options.quality || 1);\n\t}\n\n\t/**\n\t * Returns canvas data.\n\t *\n\t * @param   customOptions  Image options\n\t * @return                 Promise\n\t */\n\tpublic async exportCanvas(customOptions?: IExportingImageOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"canvas\", customOptions);\n\t\treturn (await this.getCanvas(options)).toDataURL(this.getContentType(\"canvas\"), options.quality || 1);\n\t}\n\n\t/**\n\t * Returns a `<canvas>` element with snapshot of the chart.\n\t *\n\t * @param   options  Image options\n\t * @return           Promise\n\t */\n\tpublic async getCanvas(options: IExportingImageOptions): Promise<HTMLCanvasElement> {\n\t\tconst mainCanvas = this._root._renderer.getCanvas(this._root._rootContainer._display, options);\n\t\tconst extraImages = this.get(\"extraImages\", []);\n\n\t\tif (extraImages.length == 0) {\n\t\t\t// Nothing to add, just use the main object canvas\n\t\t\treturn mainCanvas;\n\t\t}\n\n\t\t// Add other canvases\n\t\t// @todo\n\n\t\tlet middleLeft = 0;\n\t\tlet middleTop = 0;\n\t\tlet middleWidth = mainCanvas.width;\n\t\tlet middleHeight = mainCanvas.height;\n\t\tlet extraRight = 0;\n\t\tlet extraBottom = 0;\n\n\t\tconst extras: any[] = [];\n\n\t\t$array.each(extraImages, (extraRoot) => {\n\n\t\t\t// Get that extra\n\t\t\tlet extra: IExportingImageSource;\n\n\t\t\tif (extraRoot instanceof Root) {\n\t\t\t\textra = {\n\t\t\t\t\tsource: extraRoot,\n\t\t\t\t\tposition: \"bottom\"\n\t\t\t\t};\n\n\t\t\t} else {\n\t\t\t\textra = <IExportingImageSource>extraRoot;\n\t\t\t}\n\n\t\t\t// Set defaults\n\t\t\textra.position = extra.position || \"bottom\";\n\t\t\textra.marginTop = extra.marginTop || 0;\n\t\t\textra.marginRight = extra.marginRight || 0;\n\t\t\textra.marginBottom = extra.marginBottom || 0;\n\t\t\textra.marginLeft = extra.marginLeft || 0;\n\n\t\t\tconst extraCanvas = extra.source._renderer.getCanvas(extra.source._rootContainer._display, options);\n\n\t\t\tconst extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\n\t\t\tconst extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\n\n\t\t\tif (extra.position == \"top\") {\n\t\t\t\tmiddleWidth = extra.crop ? middleHeight : Math.max(middleWidth, extraWidth);\n\t\t\t\tmiddleTop += extraHeight;\n\n\t\t\t} else if (extra.position == \"right\") {\n\t\t\t\tmiddleHeight = extra.crop ? middleHeight : Math.max(middleHeight, extraHeight);\n\t\t\t\textraRight += extraWidth;\n\n\t\t\t} else if (extra.position == \"left\") {\n\t\t\t\tmiddleHeight = extra.crop ? middleHeight : Math.max(middleHeight, extraHeight);\n\t\t\t\tmiddleLeft += extraWidth;\n\n\t\t\t} else if (extra.position === \"bottom\") {\n\t\t\t\tmiddleWidth = extra.crop ? middleHeight : Math.max(middleWidth, extraWidth);\n\t\t\t\textraBottom += extraHeight;\n\t\t\t}\n\n\t\t\textras.push({\n\t\t\t\tcanvas: extraCanvas,\n\t\t\t\tposition: extra.position,\n\t\t\t\tleft: extra.marginLeft,\n\t\t\t\ttop: extra.marginTop,\n\t\t\t\twidth: extraWidth,\n\t\t\t\theight: extraHeight\n\t\t\t});\n\n\t\t});\n\n\t\tconst newCanvas = this.getDisposableCanvas();\n\n\t\tnewCanvas.width = middleLeft + middleWidth + extraRight;\n\t\tnewCanvas.height = middleTop + middleHeight + extraBottom;\n\n\t\tconst ctx = newCanvas.getContext(\"2d\");\n\n\t\t// Get background\n\t\tconst background = this.get(\"backgroundColor\", this.findBackgroundColor(this._root.dom));\n\n\t\tif (background) {\n\t\t\tctx!.fillStyle = background.toCSS();\n\t\t\tctx!.fillRect(0, 0, newCanvas.width, newCanvas.height);\n\t\t}\n\n\t\tlet left = middleLeft;\n\t\tlet top = middleTop;\n\t\tlet right = left + middleWidth;\n\t\tlet bottom = top + middleHeight;\n\n\t\t// Radiates outwards from center\n\t\t$array.each(extras, (extra) => {\n\t\t\tif (extra.position == \"top\") {\n\t\t\t\ttop -= extra.height;\n\t\t\t\tctx!.drawImage(extra.canvas, middleLeft + extra.left, top + extra.top);\n\n\t\t\t} else if (extra.position == \"right\") {\n\t\t\t\tctx!.drawImage(extra.canvas, right + extra.left, middleTop + extra.top);\n\t\t\t\tright += extra.width;\n\n\t\t\t} else if (extra.position == \"left\") {\n\t\t\t\tleft -= extra.width;\n\t\t\t\tctx!.drawImage(extra.canvas, left + extra.left, middleTop + extra.top);\n\n\t\t\t} else if (extra.position === \"bottom\") {\n\t\t\t\tctx!.drawImage(extra.canvas, middleLeft + extra.left, bottom + extra.top);\n\t\t\t\tbottom += extra.height;\n\t\t\t}\n\n\t\t\t//this.disposeCanvas(extra.canvas);\n\t\t});\n\n\t\tctx!.drawImage(mainCanvas, middleLeft, middleTop);\n\n\t\treturn newCanvas;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * JSON\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of a JSON file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportJSON(customOptions?: IExportingJSONOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"json\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getJSON(customOptions));\n\t}\n\n\t/**\n\t * Returns data in JSON format.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async getJSON(customOptions?: IExportingJSONOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"json\", customOptions);\n\t\treturn JSON.stringify(this.getData(\"json\", customOptions, options.renameFields), (_key, value) => {\n\t\t\tif ($type.isObject(value)) {\n\t\t\t\t$object.each(value, (field, item) => {\n\t\t\t\t\tvalue[field] = this.convertToSpecialFormat(field, item, options);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn value;\n\t\t}, options.indent);\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * CSV\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of a CSV file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportCSV(customOptions?: IExportingCSVOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"csv\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getCSV(customOptions));\n\t}\n\n\t/**\n\t * Returns a CSV with export data.\n\t *\n\t * @param   customOptions  CSV options\n\t * @return                 Promise\n\t */\n\tpublic async getCSV(customOptions?: IExportingCSVOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"csv\", customOptions);\n\n\t\t// Init output\n\t\tlet csv = \"\";\n\n\t\t// Add rows\n\t\tlet br = \"\";\n\t\tconst data = this.getData(\"csv\", options);\n\n\t\t// Data fields\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\tcsv += br + this.getCSVRow(dataRow, options, undefined, true);\n\t\t\t\tbr = \"\\n\";\n\t\t\t}, (a, b) => {\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t}\n\n\t\telse {\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\tlet row = this.getCSVRow(data[i], options, dataFields);\n\t\t\t\tif (options.reverse) {\n\t\t\t\t\tcsv = row + br + csv;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcsv += br + row;\n\t\t\t\t}\n\t\t\t\tbr = \"\\n\";\n\t\t\t}\n\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\tcsv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\n\t\t\t}\n\t\t}\n\n\t\treturn csv;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getCSVRow(row: any, options: IExportingCSVOptions, dataFields: any, asIs: boolean = false): string {\n\n\t\t// Init\n\t\tlet separator = options.separator || \",\";\n\t\tlet items: any[] = [];\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = {};\n\t\t\t$object.each(row, (key, value) => {\n\t\t\t\tdataFields[key] = value;\n\t\t\t});\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// Process each row item\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Check if we need to skip\n\t\t\t// This is no longer required because we are iterating via dataFields anyway\n\t\t\t/*if (this.dataFields != null && this.dataFields[key] == null) {\n\t\t\t\treturn;\n\t\t\t}*/\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options);\n\n\t\t\t// Cast and escape doublequotes\n\t\t\titem = \"\" + item;\n\t\t\titem = item.replace(/\"/g, '\"\"');\n\n\t\t\t// Enclose into double quotes\n\t\t\tif (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\n\t\t\t\titem = \"\\\"\" + item + \"\\\"\";\n\t\t\t}\n\n\t\t\t// Add to item\n\t\t\titems.push(item);\n\t\t}, (a, b) => {\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn items.join(separator);\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * HTML\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of an HTML file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportHTML(customOptions?: IExportingHTMLOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"html\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getHTML(customOptions));\n\t}\n\n\t/**\n\t * Returns an HTML with a table with export data.\n\t *\n\t * @param   customOptions  HTML options\n\t * @return                 Promise\n\t */\n\tpublic async getHTML(customOptions?: IExportingHTMLOptions): Promise<string> {\n\t\tconst options: any = this._getFormatOptions(\"html\", customOptions);\n\n\t\t// Init output\n\t\tlet html = \"<table>\";\n\t\tif (options.tableClass) {\n\t\t\thtml = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\n\t\t}\n\n\t\t// Get data\n\t\tconst data = this.getData(\"html\", options);\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\thtml += \"\\n<tbody>\";\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(dataRow, options, undefined, true);\n\t\t\t}, (a, b) => {\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t\thtml += \"\\n</tbody>\";\n\n\t\t}\n\n\t\telse {\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\thtml += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\n\t\t\t}\n\n\t\t\thtml += \"\\n<tbody>\";\n\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\thtml += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\n\t\t\t}\n\n\t\t\thtml += \"\\n</tbody>\";\n\t\t}\n\n\t\thtml += \"\\n</table>\";\n\n\t\treturn html;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getHTMLRow(row: any, options: IExportingHTMLOptions, dataFields: any, asIs: boolean = false, headerRow: boolean = false): string {\n\n\t\t// Init output\n\t\tlet html = \"\\t<tr>\";\n\t\tif (options.rowClass) {\n\t\t\thtml = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\n\t\t}\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = row;\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// th or dh?\n\t\tconst tag = headerRow ? \"th\" : \"td\";\n\n\t\t// Process each row item\n\t\tlet first = true;\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options);\n\n\t\t\t// Escape HTML entities\n\t\t\titem = \"\" + item;\n\t\t\titem = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function(i: string) {\n\t\t\t\treturn \"&#\" + i.charCodeAt(0) + \";\";\n\t\t\t});\n\n\t\t\t// Which tag to use\n\t\t\tlet useTag = tag;\n\t\t\tif (options.pivot && first) {\n\t\t\t\tuseTag = \"th\";\n\t\t\t}\n\n\t\t\t// Add cell\n\t\t\tif (options.cellClass) {\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\thtml += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\n\t\t\t}\n\n\t\t\tfirst = false;\n\t\t}, (a, b) => {\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\thtml += \"\\n\\t</tr>\";\n\n\t\treturn html;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * XLSX\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of an XLSX file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportXLSX(customOptions?: IExportingXLSXOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"xlsx\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getXLSX(customOptions));\n\t}\n\n\t/**\n\t * Returns a data:uri of XLSX data.\n\t *\n\t * @param  customOptions  Format options\n\t * @return                Promise\n\t */\n\tpublic async getXLSX(customOptions?: IExportingXLSXOptions): Promise<string> {\n\n\t\tconst options: any = this._getFormatOptions(\"xlsx\", customOptions);\n\n\t\t// Load xlsx\n\t\tlet XLSX = await this.getXLSXLib();\n\n\t\t// Create workbook options\n\t\tlet wbOptions = {\n\t\t\tbookType: \"xlsx\",\n\t\t\tbookSST: false,\n\t\t\ttype: \"base64\",\n\t\t\t//dateNF: 'yyyy-mm-dd'\n\t\t};\n\n\t\t// Get sheet name\n\t\tlet sheetName = this._normalizeExcelSheetName(this.get(\"title\", this._t(\"Data\")));\n\n\t\t// Create a workbook\n\t\tlet wb = {\n\t\t\tSheetNames: <any>[sheetName],\n\t\t\tSheets: <any>{}\n\t\t};\n\n\t\t// Init worksheet data\n\t\tlet wsData: Array<any> = [];\n\n\t\t// Get data\n\t\tconst data = this.getData(\"html\", options);\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\twsData.push(this.getXLSXRow(dataRow, options, undefined, true));\n\t\t\t}, (a, b) => {\n\t\t\t\t//console.log(a, b)\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t}\n\n\t\telse {\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\twsData.push(this.getXLSXRow(dataFields, options, undefined, true));\n\t\t\t}\n\n\t\t\t// Add lines\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\twsData.push(this.getXLSXRow(data[i], options, dataFields));\n\t\t\t}\n\t\t}\n\n\t\t// Create sheet and add data\n\t\twb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(wsData);\n\n\t\tthis.events.dispatch(\"workbookready\", {\n\t\t\ttype: \"workbookready\",\n\t\t\tformat: \"xlsx\",\n\t\t\toptions: options,\n\t\t\tworkbook: wb,\n\t\t\tworkbookOptions: wbOptions,\n\t\t\txlsx: XLSX,\n\t\t\ttarget: this\n\t\t});\n\n\t\treturn XLSX.write(wb, wbOptions);\n\t}\n\n\tprivate _normalizeExcelSheetName(name: string): string {\n\t\tname = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\n\t\treturn name.length > 30 ? name.substr(0, 30) + \"...\" : name;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getXLSXRow(row: any, options: IExportingXLSXOptions, dataFields: any, asIs: boolean = false): any[] {\n\n\t\t// Init\n\t\tlet items: any[] = [];\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = row;\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// Process each row item\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options, true);\n\n\t\t\titems.push(item);\n\t\t}, (a, b) => {\n\t\t\t//console.log(a, b)\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn items;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tprivate async _xlsx(): Promise<any> {\n\t\treturn await import(/* webpackChunkName: \"xlsx\" */ \"xlsx/dist/xlsx.core.min.js\");\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getXLSXLib(): Promise<any> {\n\t\treturn this._xlsx();\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * PDF\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Returns a data:uri representation of a PDF file with chart image.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportPDF(customOptions?: IExportingPDFOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"pdf\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getPDF(customOptions, true));\n\t}\n\n\t/**\n\t * Returns a data:uri representation of a PDF file with chart data.\n\t *\n\t * @param   customOptions  Format options\n\t * @return                 Promise\n\t */\n\tpublic async exportPDFData(customOptions?: IExportingDataOptions): Promise<string> {\n\t\treturn \"data:\" + this.getContentType(\"pdf\") + \";\" + this.get(\"charset\", \"utf-8\") + \",\" + encodeURIComponent(await this.getPDF(customOptions, false, true));\n\t}\n\n\t/**\n\t * Returns Base64-encoded binary data for a PDF file.\n\t * @param   customOptions  PDF options\n\t * @param   includeImage   Include chart snapshot\n\t * @param   includeData    Include data\n\t * @return                 Promise\n\t */\n\tpublic async getPDF(customOptions?: IExportingPDFOptions, includeImage: boolean = true, includeData: boolean = false): Promise<string> {\n\n\t\tconst options: any = this._getFormatOptions(\"pdf\", customOptions);\n\t\tconst dataOptions: any = this._getFormatOptions(\"pdfdata\", customOptions);\n\n\t\t// Get image\n\t\tlet image: string;\n\t\tif (includeImage) {\n\t\t\timage = await this.exportImage(options.imageFormat || \"png\", options);\n\t\t}\n\t\t// Load pdfmake\n\n\t\tconst pdfmake = await this.getPdfmake();\n\n\t\t// Defaults\n\t\tconst defaultMargins = [30, 30, 30, 30];\n\n\t\t// Init content for PDF\n\t\tlet doc = {\n\t\t\tpageSize: options.pageSize || \"A4\",\n\t\t\tpageOrientation: options.pageOrientation || \"portrait\",\n\t\t\tpageMargins: options.pageMargins || defaultMargins,\n\t\t\tdefaultStyle: {\n\t\t\t\tfont: options.font ? options.font.name : undefined\n\t\t\t},\n\t\t\t//header: <any>[],\n\t\t\tcontent: <any>[]\n\t\t};\n\n\t\t// Should we add title?\n\t\tconst title = this.get(\"title\");\n\n\t\tlet extraMargin = 0;\n\n\t\tif (title) {\n\t\t\tdoc.content.push({\n\t\t\t\ttext: title,\n\t\t\t\tfontSize: options.fontSize || 14,\n\t\t\t\tbold: true,\n\t\t\t\tmargin: [0, 0, 0, 15]\n\t\t\t});\n\n\t\t\t// Add some leftover margin for title\n\t\t\textraMargin += 50;\n\t\t}\n\n\t\t// Add page URL?\n\t\tif (options.addURL) {\n\t\t\tdoc.content.push({\n\t\t\t\ttext: this._t(\"Saved from\") + \": \" + document.location.href,\n\t\t\t\tfontSize: options.fontSize,\n\t\t\t\tmargin: [0, 0, 0, 15]\n\t\t\t});\n\n\t\t\t// Add some leftover margin for URL\n\t\t\textraMargin += 50;\n\t\t}\n\n\t\t// Add image\n\t\tif (includeImage && image!) {\n\t\t\tdoc.content.push({\n\t\t\t\timage: image!,\n\t\t\t\talignment: options.align || \"left\",\n\t\t\t\tfit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\n\t\t\t});\n\t\t}\n\n\t\t// Add data\n\t\tif ((includeData || options.includeData) && this.hasData()) {\n\t\t\tdoc.content.push({\n\t\t\t\ttable: await this.getPDFData(dataOptions),\n\t\t\t\tfontSize: options.fontSize || 14\n\t\t\t});\n\t\t}\n\n\t\tlet fonts: { [name: string]: { [types: string]: string } } | null = null;\n\t\tlet vfs: { [path: string]: string } | null = null;\n\n\t\tfunction addFont(font: IFont) {\n\t\t\tconst paths: { [path: string]: string } = {};\n\n\t\t\tpaths.normal = font.normal.path;\n\t\t\tvfs![font.normal.path] = font.normal.bytes;\n\n\t\t\tif (font.bold) {\n\t\t\t\tpaths.bold = font.bold.path;\n\t\t\t\tvfs![font.bold.path] = font.bold.bytes;\n\n\t\t\t} else {\n\t\t\t\tpaths.bold = font.normal.path;\n\t\t\t}\n\n\t\t\tif (font.italics) {\n\t\t\t\tpaths.italics = font.italics.path;\n\t\t\t\tvfs![font.italics.path] = font.italics.bytes;\n\n\t\t\t} else {\n\t\t\t\tpaths.italics = font.normal.path;\n\t\t\t}\n\n\t\t\tif (font.bolditalics) {\n\t\t\t\tpaths.bolditalics = font.bolditalics.path;\n\t\t\t\tvfs![font.bolditalics.path] = font.bolditalics.bytes;\n\n\t\t\t} else {\n\t\t\t\tpaths.bolditalics = font.normal.path;\n\t\t\t}\n\n\t\t\tfonts![font.name] = paths;\n\t\t}\n\n\t\tif (options.font) {\n\t\t\tfonts = {};\n\t\t\tvfs = {};\n\t\t\taddFont(options.font);\n\n\t\t\tif (options.extraFonts) {\n\t\t\t\t$array.each(options.extraFonts, addFont);\n\t\t\t}\n\t\t}\n\n\t\tthis.events.dispatch(\"pdfdocready\", {\n\t\t\ttype: \"pdfdocready\",\n\t\t\tformat: \"pdf\",\n\t\t\toptions: options,\n\t\t\tdoc: doc,\n\t\t\ttarget: this\n\t\t});\n\n\t\t// Create PDF\n\t\treturn new Promise<string>((success, _error) => {\n\t\t\tpdfmake.createPdf(doc, null, fonts, vfs).getBase64((uri: string) => {\n\t\t\t\tsuccess(uri);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic async getPDFData(customOptions?: IExportingDataOptions): Promise<any> {\n\n\t\tconst options: any = this._getFormatOptions(\"pdfdata\", customOptions);\n\n\t\t// Init output\n\t\tlet content = <any>{\n\t\t\t\"body\": <any>[]\n\t\t};\n\n\t\t// Get data\n\t\tconst data = this.getData(\"html\", options);\n\t\tconst dataFields = this.getDataFields(data);\n\n\t\t// Vertical or horizontal (default) layout\n\t\tif (options.pivot) {\n\n\t\t\t// Data fields order\n\t\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t\t$object.eachOrdered(dataFields, (key, val) => {\n\t\t\t\tlet dataRow = [];\n\t\t\t\tif (options.addColumnNames) {\n\t\t\t\t\tdataRow.push(val);\n\t\t\t\t}\n\t\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\t\tlet dataValue = data[i][key];\n\t\t\t\t\tdataRow.push(this.convertToSpecialFormat(key, dataValue, options, true));\n\t\t\t\t}\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataRow, options, undefined, true));\n\t\t\t}, (a, b) => {\n\t\t\t\t//console.log(a, b)\n\t\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\t\tif (ai > bi) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\telse if (ai < bi) {\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\n\t\t}\n\n\t\telse {\n\n\t\t\t// Add column names?\n\t\t\tif (options.addColumnNames) {\n\t\t\t\tcontent.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\n\t\t\t\tcontent.headerRows = 1;\n\t\t\t}\n\n\t\t\tfor (let len = data.length, i = 0; i < len; i++) {\n\t\t\t\tcontent.body.push(this.getPDFDataRow(data[i], options, dataFields));\n\t\t\t}\n\n\t\t}\n\n\t\treturn content;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPDFDataRow(row: any, options: IExportingDataOptions, dataFields?: any, asIs: boolean = false): Array<string> {\n\n\t\t// Init\n\t\tlet items: any[] = [];\n\n\t\t// Data fields\n\t\tif (!dataFields) {\n\t\t\tdataFields = row;\n\t\t}\n\n\t\t// Data fields order\n\t\tconst dataFieldsOrder: string[] = this.get(\"dataFieldsOrder\", []);\n\n\t\t// Process each row item\n\t\t$object.eachOrdered(dataFields, (key, _name) => {\n\n\t\t\t// Get value\n\t\t\tlet value = this.convertEmptyValue(key, row[key], options);\n\n\t\t\t// Convert dates\n\t\t\tlet item = asIs ? value : this.convertToSpecialFormat(key, value, options);\n\t\t\titem = \"\" + item;\n\n\t\t\t// Add to item\n\t\t\titems.push(item);\n\t\t}, (a, b) => {\n\t\t\t//console.log(a, b)\n\t\t\tlet ai = dataFieldsOrder.indexOf(a);\n\t\t\tlet bi = dataFieldsOrder.indexOf(b);\n\t\t\tif (ai > bi) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (ai < bi) {\n\t\t\t\treturn -1\n\t\t\t}\n\t\t\treturn 0;\n\t\t});\n\n\t\treturn items;\n\t}\n\n\t/**\n\t * Returns pdfmake instance.\n\t *\n\t * @ignore\n\t * @return Instance of pdfmake\n\t */\n\tpublic getPdfmake(): Promise<any> {\n\t\tif (pdfmakePromise === undefined) {\n\t\t\tpdfmakePromise = _pdfmake();\n\t\t}\n\n\t\treturn pdfmakePromise;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPageSizeFit(pageSize: pageSizes, margins: number | number[], extraMargin: number = 0): number[] {\n\n\t\t// Check margins\n\t\tlet newMargins = [0, 0, 0, 0];\n\t\tif ($type.isNumber(margins)) {\n\t\t\tnewMargins = [margins, margins, margins, margins];\n\t\t}\n\t\telse if (margins.length == 2) {\n\t\t\tnewMargins = [margins[0], margins[1], margins[0], margins[1]];\n\t\t}\n\t\telse if (margins.length == 4) {\n\t\t\tnewMargins = margins;\n\t\t}\n\n\t\t// Define available page sizes\n\t\tlet sizes = {\n\t\t\t\"4A0\": [4767.87, 6740.79],\n\t\t\t\"2A0\": [3370.39, 4767.87],\n\t\t\tA0: [2383.94, 3370.39],\n\t\t\tA1: [1683.78, 2383.94],\n\t\t\tA2: [1190.55, 1683.78],\n\t\t\tA3: [841.89, 1190.55],\n\t\t\tA4: [595.28, 841.89],\n\t\t\tA5: [419.53, 595.28],\n\t\t\tA6: [297.64, 419.53],\n\t\t\tA7: [209.76, 297.64],\n\t\t\tA8: [147.40, 209.76],\n\t\t\tA9: [104.88, 147.40],\n\t\t\tA10: [73.70, 104.88],\n\t\t\tB0: [2834.65, 4008.19],\n\t\t\tB1: [2004.09, 2834.65],\n\t\t\tB2: [1417.32, 2004.09],\n\t\t\tB3: [1000.63, 1417.32],\n\t\t\tB4: [708.66, 1000.63],\n\t\t\tB5: [498.90, 708.66],\n\t\t\tB6: [354.33, 498.90],\n\t\t\tB7: [249.45, 354.33],\n\t\t\tB8: [175.75, 249.45],\n\t\t\tB9: [124.72, 175.75],\n\t\t\tB10: [87.87, 124.72],\n\t\t\tC0: [2599.37, 3676.54],\n\t\t\tC1: [1836.85, 2599.37],\n\t\t\tC2: [1298.27, 1836.85],\n\t\t\tC3: [918.43, 1298.27],\n\t\t\tC4: [649.13, 918.43],\n\t\t\tC5: [459.21, 649.13],\n\t\t\tC6: [323.15, 459.21],\n\t\t\tC7: [229.61, 323.15],\n\t\t\tC8: [161.57, 229.61],\n\t\t\tC9: [113.39, 161.57],\n\t\t\tC10: [79.37, 113.39],\n\t\t\tRA0: [2437.80, 3458.27],\n\t\t\tRA1: [1729.13, 2437.80],\n\t\t\tRA2: [1218.90, 1729.13],\n\t\t\tRA3: [864.57, 1218.90],\n\t\t\tRA4: [609.45, 864.57],\n\t\t\tSRA0: [2551.18, 3628.35],\n\t\t\tSRA1: [1814.17, 2551.18],\n\t\t\tSRA2: [1275.59, 1814.17],\n\t\t\tSRA3: [907.09, 1275.59],\n\t\t\tSRA4: [637.80, 907.09],\n\t\t\tEXECUTIVE: [521.86, 756.00],\n\t\t\tFOLIO: [612.00, 936.00],\n\t\t\tLEGAL: [612.00, 1008.00],\n\t\t\tLETTER: [612.00, 792.00],\n\t\t\tTABLOID: [792.00, 1224.00]\n\t\t};\n\n\t\t// Calculate size\n\t\tlet fitSize = sizes[pageSize]\n\t\tfitSize[0] -= newMargins[0] + newMargins[2];\n\t\tfitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\n\t\treturn fitSize;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * Data\n\t * ==========================================================================\n\t */\n\n\t/**\n\t\t* Returns `true` if `dataSource` is set, and the contents are proper\n\t\t* data (array).\n\t\t*\n\t\t* @return Has data?\n\t\t*/\n\tpublic hasData(): boolean {\n\t\tconst dataSource = this.get(\"dataSource\");\n\t\treturn $type.isArray(dataSource) && dataSource.length ? true : false;\n\t}\n\n\t/**\n\t * Returns processed data according to format options.\n\t *\n\t * @param   format         Format\n\t * @param   customOptions  Format options\n\t * @param   renameFields   Should fields be renamed?\n\t * @return                 Processed data\n\t */\n\tpublic getData(format: ExportingFormats, customOptions?: IExportingDataOptions, renameFields: boolean = false): any {\n\t\tconst options: any = this._getFormatOptions(format, customOptions);\n\t\tconst dataSource = this.get(\"dataSource\", []);\n\t\tlet data: any = dataSource;\n\n\t\t// Re-generate the data based on data fields if set\n\t\tconst dataFields = this.get(\"dataFields\");\n\t\tif (dataFields && $type.isArray(dataSource)) {\n\t\t\tdata = [];\n\t\t\t$array.each(dataSource, (row) => {\n\t\t\t\tif ($type.isObject(row)) {\n\t\t\t\t\tconst newRow: any = {}\n\t\t\t\t\t$object.each(dataFields, (field, value) => {\n\t\t\t\t\t\tif (dataFields![field] != null) {\n\t\t\t\t\t\t\tnewRow[renameFields ? value : field] = this.convertToSpecialFormat(field, row[field], options);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tdata.push(newRow);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tconst event: any = {\n\t\t\ttype: \"dataprocessed\",\n\t\t\tformat: format,\n\t\t\toptions: options,\n\t\t\tdata: data,\n\t\t\ttarget: this\n\t\t};\n\n\t\tthis.events.dispatch(\"dataprocessed\", event);\n\n\t\treturn event.data;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataFields(data: any): { [index: string]: string } {\n\t\tlet dataFields = this.get(\"dataFields\");\n\t\tif (!dataFields) {\n\t\t\tdataFields = {};\n\t\t\tif ($type.isArray(data) && data.length) {\n\t\t\t\t$array.each(data, (row) => {\n\t\t\t\t\t$object.each(row, (key, _value) => {\n\t\t\t\t\t\tif (dataFields![key] == null) {\n\t\t\t\t\t\t\tdataFields![key] = key;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn dataFields!;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic convertEmptyValue(_field: string, value: any, options: IExportingDataOptions): any {\n\t\treturn value != null ? value : options.emptyAs;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic convertToSpecialFormat(field: any, value: any, options: IExportingDataOptions, keepOriginal?: boolean): any {\n\n\t\t// Is this a timestamp or duration?\n\t\tif (typeof value == \"number\") {\n\t\t\tif (this.isDateField(field)) {\n\t\t\t\tvalue = new Date(value);\n\t\t\t}\n\t\t\telse if (this.isNumericField(field) && this.get(\"numberFormat\")) {\n\t\t\t\treturn this._root.numberFormatter.format(value, this.get(\"numberFormat\"));\n\t\t\t}\n\t\t}\n\n\t\tif (value instanceof Date) {\n\t\t\tif (options.useTimestamps) {\n\t\t\t\tvalue = value.getTime();\n\t\t\t}\n\t\t\telse if (options.useLocale) {\n\t\t\t\tif (!keepOriginal) {\n\t\t\t\t\tvalue = value.toLocaleString();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = this._root.dateFormatter.format(value, this.get(\"dateFormat\"));\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isDateField(field: string): boolean {\n\t\treturn this.get(\"dateFields\")!.indexOf(field) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic isNumericField(field: string): boolean {\n\t\treturn this.get(\"numericFields\")!.indexOf(field) !== -1;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getContentType(type: ExportingFormats): string {\n\t\tlet contentType = \"\";\n\t\tswitch (type) {\n\t\t\tcase \"png\":\n\t\t\t\tcontentType = \"image/\" + type;\n\t\t\t\tbreak;\n\t\t\tcase \"jpg\":\n\t\t\t\tcontentType = \"image/jpeg\";\n\t\t\t\tbreak;\n\t\t\tcase \"csv\":\n\t\t\t\tcontentType = \"text/csv\";\n\t\t\t\tbreak;\n\t\t\tcase \"json\":\n\t\t\t\tcontentType = \"application/json\";\n\t\t\t\tbreak;\n\t\t\tcase \"html\":\n\t\t\t\tcontentType = \"text/html\";\n\t\t\t\tbreak;\n\t\t\tcase \"pdf\":\n\t\t\tcase \"pdfdata\":\n\t\t\t\tcontentType = \"application/pdf\";\n\t\t\t\tbreak;\n\t\t\tcase \"xlsx\":\n\t\t\t\tcontentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontentType = \"application/octet-stream\";\n\t\t}\n\n\t\treturn contentType;\n\t}\n\n\tprotected getDisposableCanvas(): HTMLCanvasElement {\n\t\tlet canvas = document.createElement(\"canvas\");\n\t\tcanvas.style.position = \"fixed\";\n\t\tcanvas.style.top = \"-10000px\";\n\t\tdocument.body.appendChild(canvas);\n\t\treturn canvas;\n\t}\n\n\tprotected disposeCanvas(canvas: HTMLCanvasElement): void {\n\t\tdocument.body.removeChild(canvas);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic findBackgroundColor(element: Element): Color {\n\n\t\t// Check if element has styles set\n\t\tlet opacity = 1;\n\t\tlet currentColor = getComputedStyle(element, \"background-color\").getPropertyValue(\"background-color\");\n\n\t\t// Check opacity\n\t\tif (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\n\t\t\topacity = 0;\n\t\t}\n\n\t\tif (opacity == 0) {\n\t\t\tlet parent = element.parentElement;// || <Element>element.parentNode;\n\n\t\t\t// Completely transparent. Look for a parent\n\t\t\tif (parent) {\n\t\t\t\treturn this.findBackgroundColor(parent);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn Color.fromHex(0xffffff);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn Color.fromCSS(currentColor);\n\t\t}\n\n\t}\n\n\t/**\n\t * Triggers download of the file.\n\t *\n\t * @param   uri       data:uri with file content\n\t * @param   fileName  File name\n\t * @return            Promise\n\t */\n\tpublic streamFile(uri: string, fileName: string): boolean {\n\n\t\tif (this.msBlobDownloadSupport()) {\n\n\t\t\t/**\n\t\t\t * For all IEs 10 and up we use native method `msSaveBlob`\n\t\t\t */\n\n\t\t\t// Extract content type and get pure data without headers\n\t\t\tlet parts = uri.split(\";\");\n\t\t\tlet contentType = parts!.shift()!.replace(/data:/, \"\");\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n\n\n\t\t\t// Check if we need to Base64-decode\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\n\t\t\t\ttry {\n\t\t\t\t\tlet decoded = atob(uri);\n\t\t\t\t\turi = decoded;\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\n\t\t\t\twindow.navigator.msSaveBlob(blob, fileName);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Dissect uri into array\n\t\t\tlet chars = new Array(uri.length);\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\n\t\t\t\tlet charCode = uri.charCodeAt(i);\n\t\t\t\tchars[i] = charCode;\n\t\t\t}\n\n\t\t\t// Prep Blob and force the download\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\n\t\t\twindow.navigator.msSaveBlob(blob, fileName);\n\n\t\t}\n\n\t\telse if (this.blobDownloadSupport()) {\n\n\t\t\t/**\n\t\t\t * Supports Blob object.\n\t\t\t * Use it.\n\t\t\t */\n\t\t\tlet link = document.createElement(\"a\");\n\t\t\tlink.download = fileName;\n\t\t\tdocument.body.appendChild(link);\n\n\t\t\t// Extract content type and get pure data without headers\n\t\t\tlet parts = uri.split(\";\");\n\t\t\tlet contentType = parts!.shift()!.replace(/data:/, \"\");\n\n\t\t\turi = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n\n\t\t\tif ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\n\t\t\t\ttry {\n\t\t\t\t\tlet decoded = atob(uri);\n\t\t\t\t\turi = decoded;\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// Error occurred, meaning string was not Base64-encoded. Do nothing.\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet blob = new Blob([uri], { type: contentType });\n\t\t\t\tlet url = window.URL.createObjectURL(blob);\n\t\t\t\tlink.href = url;\n\t\t\t\tlink.download = fileName;\n\t\t\t\tlink.click();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tdocument.body.removeChild(link);\n\t\t\t\t\twindow.URL.revokeObjectURL(url);\n\t\t\t\t}, 100);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Dissect uri into array\n\t\t\tlet chars = new Array(uri.length);\n\t\t\tfor (let i = 0; i < uri.length; ++i) {\n\t\t\t\tlet charCode = uri.charCodeAt(i);\n\t\t\t\tchars[i] = charCode;\n\t\t\t}\n\n\t\t\tlet blob = new Blob([new Uint8Array(chars)], { type: contentType });\n\t\t\tlet url = window.URL.createObjectURL(blob);\n\t\t\tlink.href = url;\n\t\t\tlink.download = fileName;\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.URL.revokeObjectURL(url);\n\t\t\t}, 100);\n\n\t\t}\n\n\t\telse if (this.linkDownloadSupport()) {\n\n\t\t\t/**\n\t\t\t * For regular browsers, we create a link then simulate a click on it\n\t\t\t */\n\n\t\t\tlet link = document.createElement(\"a\");\n\t\t\tlink.download = fileName;\n\t\t\tlink.href = uri;\n\t\t\tdocument.body.appendChild(link);\n\t\t\tlink.click();\n\t\t\tdocument.body.removeChild(link);\n\n\t\t}\n\t\telse {\n\n\t\t\t/**\n\t\t\t * Something else - perhaps a mobile.\n\t\t\t * Let's just display it in the same page.\n\t\t\t * (hey we don't like it either)\n\t\t\t */\n\t\t\twindow.location.href = uri;\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic downloadSupport(): boolean {\n\t\treturn this.linkDownloadSupport() || this.msBlobDownloadSupport();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic linkDownloadSupport(): boolean {\n\t\tlet a = document.createElement(\"a\");\n\t\tlet res = typeof a.download !== \"undefined\";\n\t\treturn res;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic blobDownloadSupport(): boolean {\n\t\treturn window.Blob != null;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic msBlobDownloadSupport(): boolean {\n\t\treturn window.navigator.msSaveOrOpenBlob != null;\n\t}\n\n\t/**\n\t * ==========================================================================\n\t * Print\n\t * ==========================================================================\n\t */\n\n\t/**\n\t * Initiates print of the chart.\n\t *\n\t * @param   data     data:uri for the image\n\t * @param   options  Options\n\t * @param   title    Optional title to use (uses window's title by default)\n\t * @return           Promise\n\t */\n\tpublic initiatePrint(data: string, customOptions?: IExportingPrintOptions, title?: string): void {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tif (options.printMethod == \"css\") {\n\t\t\tthis._printViaCSS(data, options, title);\n\t\t}\n\t\telse {\n\t\t\tthis._printViaIframe(data, options, title);\n\t\t}\n\n\t}\n\n\tprotected _printViaCSS(data: string, customOptions?: IExportingPrintOptions, title?: string): void {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tlet delay = options.delay || 500;\n\n\t\t//Save current scroll position\n\t\tlet scroll = document.documentElement.scrollTop || document.body.scrollTop;\n\n\t\t// Hide all document nodes by applyin custom CSS\n\t\tlet rule = new StyleRule($utils.getShadowRoot(this._root.dom), \"body > *\", {\n\t\t\t\"display\": \"none\",\n\t\t\t\"position\": \"fixed\",\n\t\t\t\"visibility\": \"hidden\",\n\t\t\t\"opacity\": \"0\",\n\t\t\t\"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\n\t\t}, this._root.nonce);\n\n\t\t// Replace title?\n\t\tlet originalTitle: string;\n\t\tif (title && document && document.title) {\n\t\t\toriginalTitle = document.title;\n\t\t\tdocument.title = title;\n\t\t}\n\n\t\t// Create and add exported image\n\t\tlet img = new Image();\n\t\timg.src = data;\n\t\timg.style.maxWidth = \"100%\";\n\t\timg.style.display = \"block\";\n\t\timg.style.position = \"relative\";\n\t\timg.style.visibility = \"visible\";\n\t\timg.style.opacity = \"1\";\n\t\timg.style.clipPath = \"none\";\n\t\tdocument.body.appendChild(img);\n\n\t\t// Print\n\t\tthis.setTimeout(() => {\n\t\t\t(<any>window).print();\n\t\t}, 50);\n\n\t\t// Delay needs to be at least a second for iOS devices\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\n\t\tif (isIOS && (delay < 1000)) {\n\t\t\tdelay = 1000;\n\t\t}\n\t\telse if (delay < 100) {\n\t\t\tdelay = 100;\n\t\t}\n\n\t\t// Delay function that resets back the document the way ot was before\n\t\tthis.setTimeout(() => {\n\n\t\t\t// Remove image\n\t\t\tdocument.body.removeChild(img);\n\n\t\t\t// Reset back all elements\n\t\t\t/*for (let len = items.length, i = 0; i < len; i++) {\n\t\t\t\tlet item = <HTMLElement>items[i];\n\t\t\t\tif ($dom.isElement(item)) {\n\t\t\t\t\titem.style.display = states[i];\n\t\t\t\t}\n\t\t\t}*/\n\t\t\trule.dispose();\n\n\t\t\t// Restore title\n\t\t\tif (originalTitle) {\n\t\t\t\tdocument.title = document.title;\n\t\t\t}\n\n\t\t\t// Scroll back the document the way it was before\n\t\t\tdocument.documentElement.scrollTop = document.body.scrollTop = scroll;\n\n\t\t}, delay || 500);\n\n\t}\n\n\tprotected _printViaIframe(data: string, customOptions?: IExportingPrintOptions, title?: string): void {\n\t\tconst options = <IExportingPrintOptions>this._getFormatOptions(\"print\", customOptions);\n\t\tlet delay = options.delay || 500;\n\n\t\t// Create an iframe\n\t\tconst iframe = document.createElement(\"iframe\");\n\t\tiframe.style.visibility = \"hidden\";\n\t\tdocument.body.appendChild(iframe);\n\n\t\t// This is needed for FireFox\n\t\tiframe.contentWindow!.document.open();\n\t\tiframe.contentWindow!.document.close();\n\n\t\t// Create and add exported image\n\t\tlet img = new Image();\n\t\timg.src = data;\n\t\timg.style.maxWidth = \"100%\";\n\t\timg.style.height = \"auto\";\n\t\tif (title) {\n\t\t\tiframe.contentWindow!.document.title = title;\n\t\t}\n\t\tiframe.contentWindow!.document.body.appendChild(img);\n\n\t\t(<any>iframe).load = function() {\n\t\t\tiframe.contentWindow!.document.body.appendChild(img);\n\t\t};\n\n\t\t// Print\n\t\tthis.setTimeout(() => {\n\t\t\ttry {\n\t\t\t\tif (!(<any>iframe).contentWindow.document.execCommand(\"print\", false, null)) {\n\t\t\t\t\t(<any>iframe).contentWindow.print();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t(<any>iframe).contentWindow.print();\n\t\t\t}\n\t\t}, delay || 50);\n\n\t\t// Delay needs to be at least a second for iOS devices\n\t\tlet isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !(<any>window).MSStream;\n\t\tif (isIOS && (delay < 1000)) {\n\t\t\tdelay = 1000;\n\t\t}\n\t\telse if (delay < 100) {\n\t\t\tdelay = 100;\n\t\t}\n\n\t\t// Delay function that resets back the document the way ot was before\n\t\tthis.setTimeout(() => {\n\n\t\t\t// Remove image\n\t\t\tdocument.body.removeChild(iframe);\n\n\t\t}, delay + 50 || 100);\n\n\t}\n\n\t/**\n\t * Returns a list of formats that can be exported in current browser.\n\t *\n\t * @return Formats\n\t */\n\tpublic supportedFormats(): ExportingFormats[] {\n\t\tconst res: ExportingFormats[] = [];\n\t\tconst hasData = this.hasData();\n\t\tconst downloadSupport = this.downloadSupport();\n\t\t$array.each(<ExportingFormats[]>[\"png\", \"jpg\", \"canvas\", \"pdf\", \"xlsx\", \"csv\", \"json\", \"html\", \"pdfdata\", \"print\"], (format) => {\n\t\t\tconst options = this._getFormatOptions(format);\n\t\t\tif (options.disabled !== true) {\n\t\t\t\tif ([\"xlsx\", \"csv\", \"json\", \"html\", \"pdfdata\"].indexOf(format) == -1 || (hasData && downloadSupport)) {\n\t\t\t\t\tres.push(<ExportingFormats>format);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t}\n\n\t/**\n\t * Returns a list of supported export types: image or print.\n\t *\n\t * @return Supported types\n\t */\n\tpublic supportedExportTypes(): ExportingTypes[] {\n\t\tconst res: ExportingTypes[] = [\"image\", \"print\"];\n\t\tif (this.downloadSupport() && this.hasData()) {\n\t\t\tres.push(\"data\");\n\t\t}\n\t\treturn res;\n\t}\n\n}\n"]}