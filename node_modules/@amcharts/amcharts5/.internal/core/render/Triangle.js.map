{"version":3,"file":"Triangle.js","sourceRoot":"","sources":["../../../../../src/.internal/core/render/Triangle.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,QAAQ,EAAuC,MAAM,YAAY,CAAC;AAQ3E;;;;;GAKG;AACH;IAA8B,4BAAQ;IAAtC;;IAuCA,CAAC;;;;;eA/BA;YACC,iBAAM,cAAc,WAAE,CAAC;YAEvB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;gBACrH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;aACnB;QACF,CAAC;;;;;;eAED;YACC,iBAAM,QAAQ,WAAE,CAAC;YAEjB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACrC,IAAI,CAAC,KAAK,EAAE,CAAC;aACb;QACF,CAAC;;;;;;eAED;YACC,IAAM,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;YACvB,IAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;YACxB,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC9B,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9B,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC1B,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7B,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE/B,CAAC;;;;;;eAED;YACC,IAAI,CAAC,SAAS,EAAE,CAAA;YAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,CAAC;;IAjCD;;;;eAAkC,UAAU;OAAC;IAC7C;;;;eAA0C,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;OAAC;IAiC5F,eAAC;CAAA,AAvCD,CAA8B,QAAQ,GAuCrC;SAvCY,QAAQ","sourcesContent":["import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\r\n\r\nexport interface ITriangleSettings extends IGraphicsSettings {\r\n}\r\n\r\nexport interface ITrianglePrivate extends IGraphicsPrivate {\r\n}\r\n\r\n/**\r\n * Draws a triangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\r\nexport class Triangle extends Graphics {\r\n\r\n\tdeclare public _settings: ITriangleSettings;\r\n\tdeclare public _privateSettings: ITrianglePrivate;\r\n\r\n\tpublic static className: string = \"Triangle\";\r\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Triangle.className]);\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\r\n\t\t\tthis._clear = true;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear && !this.get(\"draw\")) {\r\n\t\t\tthis._draw();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _draw() {\r\n\t\tconst w = this.width();\r\n\t\tconst h = this.height();\r\n\t\tconst display = this._display;\r\n\t\tdisplay.moveTo(-w / 2, h / 2);\r\n\t\tdisplay.lineTo(0, -h / 2);\r\n\t\tdisplay.lineTo(w / 2, h / 2);\r\n\t\tdisplay.lineTo(-w / 2, h / 2);\r\n\r\n\t}\r\n\r\n\tpublic _updateSize() {\r\n\t\tthis.markDirty()\r\n\t\tthis._clear = true;\r\n\t}\r\n}\r\n"]}