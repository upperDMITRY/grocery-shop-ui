/**
 * @ignore
 */
var CounterRef = /** @class */ (function () {
    function CounterRef(f) {
        Object.defineProperty(this, "_refs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: 0
        });
        Object.defineProperty(this, "_disposed", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
        Object.defineProperty(this, "_dispose", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this._dispose = f;
    }
    Object.defineProperty(CounterRef.prototype, "incrementRef", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            ++this._refs;
        }
    });
    Object.defineProperty(CounterRef.prototype, "decrementRef", {
        enumerable: false,
        configurable: true,
        writable: true,
        value: function () {
            --this._refs;
            if (this._refs <= 0) {
                if (!this._disposed) {
                    this._disposed = true;
                    this._dispose();
                }
            }
        }
    });
    return CounterRef;
}());
export { CounterRef };
//# sourceMappingURL=Counter.js.map