{"version":3,"file":"DataProcessor.js","sourceRoot":"","sources":["../../../../../src/.internal/core/util/DataProcessor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"./Entity\"\nimport { Color } from \"./Color\"\nimport * as $type from \"./Type\"\nimport * as $object from \"./Object\"\nimport * as $array from \"./Array\"\n\n\nexport interface IDataProcessorSettings extends IEntitySettings {\n\n\t/**\n\t * Date format used for parsing string-based dates.\n\t */\n\tdateFormat?: string;\n\n\t/**\n\t * A list of fields in data that need to be converted to tiemstamps.\n\t */\n\tdateFields?: string[];\n\n\t/**\n\t * A list of fields in data that need to be converted to numbers.\n\t */\n\tnumericFields?: string[];\n\n\t/**\n\t * A list of fields in data that need to be converted to [[Color]] objects.\n\t */\n\tcolorFields?: string[];\n\n\t/**\n\t * Replace empty values with this.\n\t */\n\temptyAs?: any;\n\n}\n\nexport interface IDataProcessorPrivate extends IEntityPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tdeepFields?: string[];\n}\n\nexport interface IDataProcessorEvents extends IEntityEvents {\n}\n\n/**\n * A tool that can process the data before it is being used in charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/data/#Pre_processing_data} for more info\n * @important\n */\nexport class DataProcessor extends Entity {\n\tdeclare public _settings: IDataProcessorSettings;\n\tdeclare public _privateSettings: IDataProcessorPrivate;\n\n\tprotected _checkDates: boolean = false;\n\tprotected _checkNumbers: boolean = false;\n\tprotected _checkColors: boolean = false;\n\tprotected _checkEmpty: boolean = false;\n\tprotected _checkDeep: boolean = false;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._checkFeatures();\n\t\tthis.on(\"dateFields\", () => this._checkFeatures());\n\t\tthis.on(\"dateFormat\", () => this._checkFeatures());\n\t\tthis.on(\"numericFields\", () => this._checkFeatures());\n\t\tthis.on(\"colorFields\", () => this._checkFeatures());\n\t\tthis.on(\"emptyAs\", () => this._checkFeatures());\n\t}\n\n\tprotected _checkFeatures(): void {\n\t\tif (this.isDirty(\"dateFields\") || this.isDirty(\"dateFormat\")) {\n\t\t\tthis._checkDates = this.get(\"dateFields\") && (this.get(\"dateFields\")!.length > 0);\n\t\t}\n\t\tif (this.isDirty(\"numericFields\")) {\n\t\t\tthis._checkNumbers = this.get(\"numericFields\") && (this.get(\"numericFields\")!.length > 0);\n\t\t}\n\t\tif (this.isDirty(\"colorFields\")) {\n\t\t\tthis._checkColors = this.get(\"colorFields\") && (this.get(\"colorFields\")!.length > 0);\n\t\t}\n\t\tif (this.isDirty(\"emptyAs\")) {\n\t\t\tthis._checkEmpty = this.get(\"emptyAs\") != null;\n\t\t}\n\t\tthis._checkDeepFeatures();\n\t}\n\n\tprotected _checkDeepFeatures(): void {\n\t\tconst deepFields: string[] = [];\n\t\t$array.each([\"dateFields\", \"numericFields\", \"colorFields\"], (where: any) => {\n\t\t\t$array.each(this.get(where, []), (field) => {\n\t\t\t\tconst steps = (<string>field).split(\".\");\n\t\t\t\tsteps.pop();\n\t\t\t\twhile (steps.length > 0) {\n\t\t\t\t\tdeepFields.push(steps.join(\".\"));\n\t\t\t\t\tsteps.pop();\n\t\t\t\t}\n\t\t\t});\n\t\t})\n\t\tthis._checkDeep = deepFields.length > 0;\n\t\tthis.setPrivate(\"deepFields\", deepFields);\n\t}\n\n\t/**\n\t * Processess entire array of data.\n\t *\n\t * NOTE: calling this will modify original array!\n\t */\n\tpublic processMany(data: { [index: string]: any }[]): void {\n\t\tif ($type.isArray(data) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty)) {\n\t\t\t$array.each(data, (row) => {\n\t\t\t\tthis.processRow(row);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Processes a row (object) of data.\n\t * \n\t * NOTE: calling this will modify values of the original object!\n\t */\n\tpublic processRow(row: { [index: string]: any }, prefix: string = \"\"): void {\n\t\t$object.each(row, (key: any, _value) => {\n\t\t\tconst lookupKey: string = prefix + key;\n\t\t\tif (this._checkEmpty) {\n\t\t\t\trow[key] = this._maybeToEmpty(row[key]);\n\t\t\t}\n\t\t\tif (this._checkNumbers) {\n\t\t\t\trow[key] = this._maybeToNumber(lookupKey, row[key]);\n\t\t\t}\n\t\t\tif (this._checkDates) {\n\t\t\t\trow[key] = this._maybeToDate(lookupKey, row[key]);\n\t\t\t}\n\t\t\tif (this._checkColors) {\n\t\t\t\trow[key] = this._maybeToColor(lookupKey, row[key]);\n\t\t\t}\n\t\t\tif (this._checkDeep && (<any>this).getPrivate(\"deepFields\", []).indexOf(lookupKey) !== -1 && $type.isObject(row[key])) {\n\t\t\t\tthis.processRow(row[key], lookupKey + \".\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _maybeToNumber(field: string, value: any): any {\n\t\tif (this.get(\"numericFields\")!.indexOf(field) !== -1) {\n\t\t\treturn $type.toNumber(value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tprotected _maybeToDate(field: string, value: any): any {\n\t\tif (this.get(\"dateFields\")!.indexOf(field) !== -1) {\n\t\t\treturn this._root.dateFormatter.parse(value, this.get(\"dateFormat\", \"\")).getTime();\n\t\t}\n\t\treturn value;\n\t}\n\n\tprotected _maybeToEmpty(value: any): any {\n\t\tif ((value == null || value == \"\") && this.get(\"emptyAs\") != null) {\n\t\t\treturn this.get(\"emptyAs\");\n\t\t}\n\t\treturn value;\n\t}\n\n\tprotected _maybeToColor(field: string, value: any): any {\n\t\tif (this.get(\"colorFields\")!.indexOf(field) !== -1) {\n\t\t\treturn Color.fromAny(value);\n\t\t}\n\t\treturn value;\n\t}\n\n}\n"]}