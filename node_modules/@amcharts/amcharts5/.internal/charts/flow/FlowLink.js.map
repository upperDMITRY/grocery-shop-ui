{"version":3,"file":"FlowLink.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/flow/FlowLink.ts"],"names":[],"mappings":";AACA,OAAO,EAAE,QAAQ,EAAuC,MAAM,4BAA4B,CAAC;AAK3F,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AA6BlD;;GAEG;AACH;IAAuC,4BAAQ;IAA/C;QAAA,qEAqCC;QAnCA;;;;;WAAgC;QAUhC;;;;;WAAiD;QACjD;;;;;WAAmD;;IAwBpD,CAAC;;;;;eAtBA;YACC,iBAAM,QAAQ,WAAE,CAAC;YACjB,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBAC9B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAmC,CAAC;gBAC1D,IAAI,MAAM,IAAI,QAAQ,EAAE;oBACvB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;iBAClC;aACD;QACF,CAAC;;;;;;eAID;YACC,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACpC,IAAI,QAAQ,GAAG,GAAG,CAAC;YACnB,IAAI,QAAQ,YAAY,OAAO,EAAE;gBAChC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC;aAC1B;YAED,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC;;IA7BD;;;;eAAkC,UAAU;OAAC;IAC7C;;;;eAA0C,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;OAAC;IA6B5F,eAAC;CAAA,AArCD,CAAuC,QAAQ,GAqC9C;SArCqB,QAAQ","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { IFlowDataItem, Flow } from \"./Flow\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport type { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport { Percent } from \"../../core/util/Percent\";\n\nexport interface IFlowLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Source node data item.\n\t */\n\ttarget?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Type of fill to use for links.\n\t */\n\tfillStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n\t/**\n\t * Type of outline to use for links.\n\t */\n\tstrokeStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n}\n\nexport interface IFlowLinkPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A base class for a flow link.\n */\nexport abstract class FlowLink extends Graphics {\n\n\tpublic series: Flow | undefined;\n\n\tdeclare public _settings: IFlowLinkSettings;\n\tdeclare public _privateSettings: IFlowLinkPrivate;\n\n\tpublic static className: string = \"FlowLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([FlowLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IFlowDataItem> | undefined;\n\n\tpublic _fillGradient: LinearGradient | undefined;\n\tpublic _strokeGradient: LinearGradient | undefined;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"fillStyle\")) {\n\t\t\tconst series = this.series;\n\t\t\tconst dataItem = this.dataItem as DataItem<IFlowDataItem>;\n\t\t\tif (series && dataItem) {\n\t\t\t\tseries._updateLinkColor(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic abstract getPoint(location: number): IOrientationPoint;\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\t\tlet position = 0.5;\n\t\tif (tooltipY instanceof Percent) {\n\t\t\tposition = tooltipY.value;\n\t\t}\n\n\t\treturn this.getPoint(position);\n\t}\n}\n"]}