{"version":3,"file":"AxisRendererRadial.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/radar/AxisRendererRadial.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RadarChart } from \"./RadarChart\";\nimport type { Grid } from \"../xy/axes/Grid\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { Graphics } from \"../../core/render/Graphics\";\nimport type { AxisTick } from \"../xy/axes/AxisTick\";\nimport type { AxisBullet } from \"../xy/axes/AxisBullet\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"../xy/axes/AxisRenderer\";\nimport { Percent, p100 } from \"../../core/util/Percent\";\nimport { AxisLabelRadial } from \"../xy/axes/AxisLabelRadial\";\nimport { arc } from \"d3-shape\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Template } from \"../../core/util/Template\";\n\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface IAxisRendererRadialSettings extends IAxisRendererSettings {\n\n\t/**\n\t * Outer radius of the axis.\n\t *\n\t * If set in percent, it will be relative to chart's own `radius`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/radar-chart/radar-axes/#Axis_radii_and_angles} for more info\n\t */\n\tradius?: number | Percent;\n\n\t/**\n\t * Inner radius of the axis.\n\t *\n\t * If set in percent, it will be relative to chart's own `innerRadius`.\n\t *\n\t * If value is negative, inner radius will be calculated from the outer edge.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/radar-chart/radar-axes/#Axis_radii_and_angles} for more info\n\t */\n\tinnerRadius?: number | Percent;\n\n\t/**\n\t * Series start angle.\n\t *\n\t * If not set, will use chart's `startAngle.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/radar-chart/radar-axes/#Axis_radii_and_angles} for more info\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * Series end angle.\n\t *\n\t * If not set, will use chart's `endAngle.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/radar-chart/radar-axes/#Axis_radii_and_angles} for more info\n\t */\n\tendAngle?: number;\n\n\n\t/**\n\t * @todo am: needs description\n\t */\n\taxisAngle?: number;\n\n}\n\nexport interface IAxisRendererRadialPrivate extends IAxisRendererPrivate {\n\tradius?: number;\n\tinnerRadius?: number;\n\tstartAngle?: number;\n\tendAngle?: number;\n}\n\n/**\n * Renderer for radial axes.\n */\nexport class AxisRendererRadial extends AxisRenderer {\n\n\t/**\n\t * Chart this renderer is for.\n\t */\n\tdeclare public chart: RadarChart | undefined;\n\n\tpublic static className: string = \"AxisRendererRadial\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererRadial.className]);\n\n\tdeclare public _settings: IAxisRendererRadialSettings;\n\tdeclare public _privateSettings: IAxisRendererRadialPrivate;\n\n\tprotected _fillGenerator = arc();\n\n\t/**\n\t * A [[TemplateList]] with all the labels attached to the axis.\n\t *\n\t * `labels.template` can be used to configure appearance of the labels.\n\t *\n\t * @default new ListTemplate<AxisLabelRadial>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabelRadial> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabelRadial._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"radial\"]);\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"letter\", \"Y\");\n\t\tthis.setRaw(\"position\", \"absolute\");\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"radius\") || this.isDirty(\"innerRadius\") || this.isDirty(\"startAngle\") || this.isDirty(\"endAngle\")) {\n\t\t\tthis.updateLayout();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLayout() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst radius = chart.getPrivate(\"radius\", 0);\n\n\t\t\tlet r = $utils.relativeToValue(this.get(\"radius\", p100), radius);\n\t\t\tlet ir = $utils.relativeToValue(this.get(\"innerRadius\", chart.getPrivate(\"innerRadius\", 0)), radius) * chart.getPrivate(\"irModifyer\", 1);\n\n\t\t\tif (ir < 0) {\n\t\t\t\tir = r + ir;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"radius\", r);\n\t\t\tthis.setPrivate(\"innerRadius\", ir);\n\t\t\tlet startAngle = this.get(\"startAngle\", chart.get(\"startAngle\", -90));\n\t\t\tlet endAngle = this.get(\"endAngle\", chart.get(\"endAngle\", 270));\n\n\t\t\tthis.setPrivate(\"startAngle\", startAngle);\n\t\t\tthis.setPrivate(\"endAngle\", endAngle);\n\n\t\t\tconst axisAngle = this.get(\"axisAngle\", 0);\n\n\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(ir * $math.cos(axisAngle), ir * $math.sin(axisAngle));\n\t\t\t\tdisplay.lineTo(r * $math.cos(axisAngle), r * $math.sin(axisAngle));\n\t\t\t});\n\n\t\t\tthis.axis.markDirtySize();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlet radius = this.positionToCoordinate(position) + this.getPrivate(\"innerRadius\", 0);\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\n\t\t\tif ($type.isNumber(radius)) {\n\t\t\t\tgrid.set(\"draw\", (display) => {\n\t\t\t\t\tlet startAngle = this.getPrivate(\"startAngle\", 0) * $math.RADIANS;\n\t\t\t\t\tlet endAngle = this.getPrivate(\"endAngle\", 0) * $math.RADIANS;\n\t\t\t\t\tdisplay.arc(0, 0, Math.max(0, radius), Math.min(startAngle, endAngle), Math.max(startAngle, endAngle));\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t// do not delete\n\tprotected _handleOpposite() { }\n\n\t/**\n\t * Converts relative position to X/Y point.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\tconst innerRadius = this.getPrivate(\"innerRadius\", 0);\n\t\tconst radius = this.positionToCoordinate(position) + innerRadius;\n\t\tconst axisAngle = this.get(\"axisAngle\", 0);\n\t\treturn { x: radius * $math.cos(axisAngle), y: radius * $math.sin(axisAngle) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabelRadial, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tconst point = this.positionToPoint(position);\n\n\t\t\tlet radius = Math.hypot(point.x, point.y);\n\n\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\tlabel.setPrivate(\"innerRadius\", radius);\n\t\t\tlabel.set(\"labelAngle\", this.get(\"axisAngle\"));\n\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\ty0 = Math.max(0, y0);\n\t\t\ty1 = Math.max(0, y1);\n\t\t\tthis._fillGenerator.context(display as any);\n\t\t\tlet startAngle = (this.getPrivate(\"startAngle\", 0) + 90) * $math.RADIANS;\n\t\t\tlet endAngle = (this.getPrivate(\"endAngle\", 0) + 90) * $math.RADIANS;\n\n\t\t\tif (endAngle < startAngle) {\n\t\t\t\t[startAngle, endAngle] = [endAngle, startAngle];\n\t\t\t}\n\n\t\t\tthis._fillGenerator({ innerRadius: y0, outerRadius: y1, startAngle: startAngle, endAngle: endAngle });\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tconst point = this.positionToPoint(position);\n\n\t\t\ttick.set(\"x\", point.x);\n\t\t\ttick.set(\"y\", point.y);\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\");\n\n\t\t\tif (inside) {\n\t\t\t\tlength *= -1\n\t\t\t}\n\n\t\t\tconst axisAngle = this.get(\"axisAngle\", 0) + 90;\n\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length * $math.cos(axisAngle), length * $math.sin(axisAngle));\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tconst point = this.positionToPoint(position);\n\n\t\t\t\tsprite.setAll({ x: point.x, y: point.y });\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tconst innerRadius = this.getPrivate(\"innerRadius\", 0);\n\n\t\t\tlet y0 = this.positionToCoordinate(position) + innerRadius;\n\t\t\tlet y1 = this.positionToCoordinate(endPosition) + innerRadius;\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\t/**\n\t * Returns axis length in pixels.\n\t *\n\t * @return Length\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.getPrivate(\"radius\", 0) - this.getPrivate(\"innerRadius\", 0);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) {\n\n\t}\n\n\t/**\n\t * Converts relative position to pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Pixels\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\tposition = Math.min(this._end, position);\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\tposition = Math.max(this._start, position);\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tlet radius = this.getPrivate(\"innerRadius\", 0) + this.positionToCoordinate(position);\n\t\tconst angle = this.get(\"axisAngle\", 0);\n\t\t//return tooltip.set(\"pointTo\", this.axis._display.toGlobal({ x: radius * $math.cos(angle), y: radius * $math.sin(angle) }));\n\t\tthis._positionTooltip(tooltip, { x: radius * $math.cos(angle), y: radius * $math.sin(angle) });\n\t}\n}\n"]}