import { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from "./ColumnSeries";
import type { DataItem } from "../../../core/render/Component";
import { Candlestick } from "./Candlestick";
import { ListTemplate } from "../../../core/util/List";
export interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {
    lowValueX?: number;
    lowValueXWorking?: number;
    lowValueXChange?: number;
    lowValueXChangePercent?: number;
    lowValueXChangeSelection?: number;
    lowValueXChangeSelectionPercent?: number;
    lowValueXChangePrevious?: number;
    lowValueXChangePreviousPercent?: number;
    lowValueXWorkingOpen?: number;
    lowValueXWorkingClose?: number;
    highValueY?: number;
    highValueYWorking?: number;
    highValueYChange?: number;
    highValueYChangePercent?: number;
    highValueYChangeSelection?: number;
    highValueYChangeSelectionPercent?: number;
    highValueYChangePrevious?: number;
    highValueYChangePreviousPercent?: number;
    highValueYWorkingOpen?: number;
    highValueYWorkingClose?: number;
}
export interface ICandlestickSeriesSettings extends IColumnSeriesSettings {
    /**
     * Input data field for X low value.
     *
     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info
     */
    lowValueXField?: string;
    /**
     * Input data field for Y low value.
     *
     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info
     */
    lowValueYField?: string;
    /**
     * Input data field for X high value.
     *
     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info
     */
    highValueXField?: string;
    /**
     * Input data field for Y high value.
     *
     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info
     */
    highValueYField?: string;
    /**
     * Display data field for X low value.
     */
    lowValueXShow?: "lowValueXWorking" | "lowValueXChange" | "lowValueXChangePercent" | "lowValueXChangeSelection" | "lowValueXChangeSelectionPercent" | "lowValueXChangePrevious" | "lowValueXChangePreviousPercent";
    /**
     * Display data field for Y low value.
     */
    lowValueYShow?: "lowValueYWorking" | "lowValueYChange" | "lowValueYChangePercent" | "lowValueYChangeSelection" | "lowValueYChangeSelectionPercent" | "lowValueYChangePrevious" | "lowValueYChangePreviousPercent";
    /**
     * Indicates what aggregate value to use for collective data item, when
     * aggregating X low values from several data items.
     */
    lowValueXGrouped?: "open" | "close" | "low" | "high" | "average" | "sum" | "extreme";
    /**
     * Indicates what aggregate value to use for collective data item, when
     * aggregating Y low values from several data items.
     */
    lowValueYGrouped?: "open" | "close" | "low" | "high" | "average" | "sum" | "extreme";
    /**
     * Display data field for X high value.
     */
    highValueXShow?: "highValueXWorking" | "highValueXChange" | "highValueXChangePercent" | "highValueXChangeSelection" | "highValueXChangeSelectionPercent" | "highValueXChangePrevious" | "highValueXChangePreviousPercent";
    /**
     * Display data field for Y low value.
     */
    highValueYShow?: "highValueYWorking" | "highValueYChange" | "highValueYChangePercent" | "highValueYChangeSelection" | "highValueYChangeSelectionPercent" | "highValueYChangePrevious" | "highValueYChangePreviousPercent";
    /**
     * Indicates what aggregate value to use for collective data item, when
     * aggregating X high values from several data items.
     */
    highValueXGrouped?: "open" | "close" | "high" | "high" | "average" | "sum" | "extreme";
    /**
     * Indicates what aggregate value to use for collective data item, when
     * aggregating X high values from several data items.
     */
    highValueYGrouped?: "open" | "close" | "high" | "high" | "average" | "sum" | "extreme";
    /**
     * Horizontal location of the low data point relative to its cell.
     *
     * `0` - beginning, `0.5` - middle, `1` - end.
     *
     * @default 0.5
     */
    lowLocationX?: number;
    /**
     * Vertical location of the low data point relative to its cell.
     *
     * `0` - beginning, `0.5` - middle, `1` - end.
     *
     * @default 0.5
     */
    lowLocationY?: number;
    /**
     * Horizontal location of the high data point relative to its cell.
     *
     * `0` - beginning, `0.5` - middle, `1` - end.
     *
     * @default 0.5
     */
    highLocationX?: number;
    /**
     * Vertical location of the high data point relative to its cell.
     *
     * `0` - beginning, `0.5` - middle, `1` - end.
     *
     * @default 0.5
     */
    highLocationY?: number;
}
export interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {
    lowValueXAverage?: number;
    lowValueXCount?: number;
    lowValueXSum?: number;
    lowValueXAbsoluteSum?: number;
    lowValueXLow?: number;
    lowValueXHigh?: number;
    lowValueXlow?: number;
    lowValueXClose?: number;
    lowValueYAverage?: number;
    lowValueYCount?: number;
    lowValueYSum?: number;
    lowValueYAbsoluteSum?: number;
    lowValueYLow?: number;
    lowValueYHigh?: number;
    lowValueYlow?: number;
    lowValueYClose?: number;
    lowValueXAverageSelection?: number;
    lowValueXCountSelection?: number;
    lowValueXSumSelection?: number;
    lowValueXAbsoluteSumSelection?: number;
    lowValueXLowSelection?: number;
    lowValueXHighSelection?: number;
    lowValueXlowSelection?: number;
    lowValueXCloseSelection?: number;
    lowValueYAverageSelection?: number;
    lowValueYCountSelection?: number;
    lowValueYSumSelection?: number;
    lowValueYAbsoluteSumSelection?: number;
    lowValueYLowSelection?: number;
    lowValueYHighSelection?: number;
    lowValueYlowSelection?: number;
    lowValueYCloseSelection?: number;
    highValueXAverage?: number;
    highValueXCount?: number;
    highValueXSum?: number;
    highValueXAbsoluteSum?: number;
    highValueXLow?: number;
    highValueXHigh?: number;
    highValueXhigh?: number;
    highValueXClose?: number;
    highValueYAverage?: number;
    highValueYCount?: number;
    highValueYSum?: number;
    highValueYAbsoluteSum?: number;
    highValueYLow?: number;
    highValueYHigh?: number;
    highValueYhigh?: number;
    highValueYClose?: number;
    highValueXAverageSelection?: number;
    highValueXCountSelection?: number;
    highValueXSumSelection?: number;
    highValueXAbsoluteSumSelection?: number;
    highValueXLowSelection?: number;
    highValueXHighSelection?: number;
    highValueXhighSelection?: number;
    highValueXCloseSelection?: number;
    highValueYAverageSelection?: number;
    highValueYCountSelection?: number;
    highValueYSumSelection?: number;
    highValueYAbsoluteSumSelection?: number;
    highValueYLowSelection?: number;
    highValueYHighSelection?: number;
    highValueYhighSelection?: number;
    highValueYCloseSelection?: number;
}
export interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {
    columns: ListTemplate<Candlestick>;
}
/**
 * Candlestick series.
 *
 * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info
 * @important
 */
export declare class CandlestickSeries extends ColumnSeries {
    _settings: ICandlestickSeriesSettings;
    _privateSettings: ICandlestickSeriesPrivate;
    _dataItemSettings: ICandlestickSeriesDataItem;
    _axisRangeType: ICandlestickSeriesAxisRange;
    static className: string;
    static classNames: Array<string>;
    protected _afterNew(): void;
    /**
     * @ignore
     */
    makeColumn(dataItem: DataItem<this["_dataItemSettings"]>, listTemplate: ListTemplate<Candlestick>): Candlestick;
    /**
     * A list of candles in the series.
     *
     * `columns.template` can be used to configure candles.
     *
     * @default new ListTemplate<Candlestick>
     */
    readonly columns: ListTemplate<Candlestick>;
    protected _updateGraphics(dataItem: DataItem<this["_dataItemSettings"]>, previousDataItem: DataItem<this["_dataItemSettings"]>): void;
    protected _updateCandleGraphics(dataItem: DataItem<this["_dataItemSettings"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: "horizontal" | "vertical"): void;
    protected _processAxisRange(axisRange: this["_axisRangeType"]): void;
}
//# sourceMappingURL=CandlestickSeries.d.ts.map