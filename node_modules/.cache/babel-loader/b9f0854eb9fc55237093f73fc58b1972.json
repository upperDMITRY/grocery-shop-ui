{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/productDetails/ProductSubtotalPrice.jsx\";\nimport { Box, Typography } from '@mui/material';\nimport { numberWithCommas } from '../../helpers/numberWithCommas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductSubtotalPrice = ({\n  price,\n  quantity,\n  sizes,\n  activeSize\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      marginTop: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        fontWeight: 700,\n        minWidth: 140\n      },\n      children: \"Subtotal price:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        fontWeight: 700,\n        minWidth: 140,\n        color: 'common.black'\n      },\n      children: `$${numberWithCommas(Math.round(price * quantity * sizes[activeSize] * 100) / 100)}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProductSubtotalPrice;\nexport default ProductSubtotalPrice;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSubtotalPrice\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/productDetails/ProductSubtotalPrice.jsx"],"names":["Box","Typography","numberWithCommas","ProductSubtotalPrice","price","quantity","sizes","activeSize","display","flexWrap","alignItems","marginTop","fontWeight","minWidth","color","Math","round"],"mappings":";AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,eAAhC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KAA4C;AACvE,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,OAAO,EAAE,MADP;AAEFC,MAAAA,QAAQ,EAAE,MAFR;AAGFC,MAAAA,UAAU,EAAE,QAHV;AAIFC,MAAAA,SAAS,EAAE;AAJT,KADN;AAAA,4BAQE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAE;AAAEC,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAWE,QAAC,UAAD;AACE,MAAA,EAAE,EAAE;AAAED,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,QAAQ,EAAE,GAA7B;AAAkCC,QAAAA,KAAK,EAAE;AAAzC,OADN;AAAA,gBAGI,IAAGZ,gBAAgB,CACnBa,IAAI,CAACC,KAAL,CAAWZ,KAAK,GAAGC,QAAR,GAAmBC,KAAK,CAACC,UAAD,CAAxB,GAAuC,GAAlD,IAAyD,GADtC,CAEnB;AALJ;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtBD;;KAAMJ,oB;AAwBN,eAAeA,oBAAf","sourcesContent":["import { Box, Typography } from '@mui/material';\nimport { numberWithCommas } from '../../helpers/numberWithCommas';\n\nconst ProductSubtotalPrice = ({ price, quantity, sizes, activeSize }) => {\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        marginTop: 2,\n      }}\n    >\n      <Typography sx={{ fontWeight: 700, minWidth: 140 }}>\n        Subtotal price:\n      </Typography>\n      <Typography\n        sx={{ fontWeight: 700, minWidth: 140, color: 'common.black' }}\n      >\n        {`$${numberWithCommas(\n          Math.round(price * quantity * sizes[activeSize] * 100) / 100\n        )}`}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default ProductSubtotalPrice;\n"]},"metadata":{},"sourceType":"module"}