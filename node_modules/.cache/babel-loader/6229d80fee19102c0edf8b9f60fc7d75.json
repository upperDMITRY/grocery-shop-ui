{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series } from \"../../../core/render/Series\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n/**\r\n * @ignore\r\n */\nfunction min(left, right) {\n  if (left == null) {\n    return right;\n  } else if (right == null) {\n    return left;\n  } else if (right < left) {\n    return right;\n  } else {\n    return left;\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction max(left, right) {\n  if (left == null) {\n    return right;\n  } else if (right == null) {\n    return left;\n  } else if (right > left) {\n    return right;\n  } else {\n    return left;\n  }\n}\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\nvar XYSeries = /** @class */function (_super) {\n  __extends(XYSeries, _super);\n  function XYSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_xField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_yField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_xOpenField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_yOpenField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_xLowField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_xHighField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_yLowField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_yHighField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_axesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_stackDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_selectionProcessed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_dataSets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_mainContainerMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    /**\r\n     * A [[Container]] that us used to put series' elements in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"mainContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A list of axis ranges that affect the series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     */\n    Object.defineProperty(_this, \"axisRanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    Object.defineProperty(_this, \"_skipped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_couldStackTo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_reallyStackedTo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_stackedSeries\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_aLocationX0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_aLocationX1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_aLocationY0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_aLocationY1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_showBullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"valueXFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"valueX\", \"openValueX\"]\n    });\n    Object.defineProperty(_this, \"valueYFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"valueY\", \"openValueY\"]\n    });\n    Object.defineProperty(_this, \"_valueXFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_valueYFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // used for full min/max\n    Object.defineProperty(_this, \"_valueXShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_valueYShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // used for selection (uses working)\n    Object.defineProperty(_this, \"__valueXShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"__valueYShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_emptyDataItem\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new DataItem(_this, undefined, {})\n    });\n    Object.defineProperty(_this, \"_dataSetId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  Object.defineProperty(XYSeries.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n      this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\");\n      this._setRawDefault(\"vcx\", 1);\n      this._setRawDefault(\"vcy\", 1);\n      // this can't go to themes, as data might be parsed before theme\n      this._setRawDefault(\"valueXShow\", \"valueXWorking\");\n      this._setRawDefault(\"valueYShow\", \"valueYWorking\");\n      this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n      this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n      _super.prototype._afterNew.call(this);\n      this._settings.xAxis.series.push(this);\n      this._settings.yAxis.series.push(this);\n      this.set(\"maskContent\", true);\n      this._disposers.push(this.axisRanges.events.onAll(function (change) {\n        if (change.type === \"clear\") {\n          _this.axisRanges.each(function (axisRange) {\n            _this._removeAxisRange(axisRange);\n          });\n        } else if (change.type === \"push\") {\n          _this._processAxisRange(change.newValue);\n        } else if (change.type === \"setIndex\") {\n          _this._processAxisRange(change.newValue);\n        } else if (change.type === \"insertIndex\") {\n          _this._processAxisRange(change.newValue);\n        } else if (change.type === \"removeIndex\") {\n          _this._removeAxisRange(change.oldValue);\n        } else {\n          throw new Error(\"Unknown IStreamEvent type\");\n        }\n      }));\n      if (!this.get(\"baseAxis\")) {\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n        if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\n          this.set(\"baseAxis\", yAxis);\n        } else {\n          this.set(\"baseAxis\", xAxis);\n        }\n      }\n      this.states.create(\"hidden\", {\n        opacity: 1,\n        visible: false\n      });\n      this._makeFieldNames();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_processAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisRange) {\n      var container = Container.new(this._root, {});\n      axisRange.container = container;\n      this.children.push(container);\n      axisRange.series = this;\n      var axisDataItem = axisRange.axisDataItem;\n      axisDataItem.setRaw(\"isRange\", true);\n      var axis = axisDataItem.component;\n      if (axis) {\n        axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n        var axisFill = axisDataItem.get(\"axisFill\");\n        var bullet = axisDataItem.get(\"bullet\");\n        if (bullet) {\n          var sprite = bullet.get(\"sprite\");\n          if (sprite) {\n            sprite.setPrivate(\"visible\", false);\n          }\n        }\n        if (axisFill) {\n          this.children.push(axisFill);\n          container.set(\"mask\", axisFill);\n        }\n        axis._seriesAxisRanges.push(axisDataItem);\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_removeAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisRange) {\n      var container = axisRange.container;\n      if (container) {\n        container.dispose();\n      }\n      axisRange.axisDataItem.dispose();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_updateFields\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._updateFields.call(this);\n      this._valueXFields = [];\n      this._valueYFields = [];\n      this._valueXShowFields = [];\n      this._valueYShowFields = [];\n      this.__valueXShowFields = [];\n      this.__valueYShowFields = [];\n      if (this.valueXFields) {\n        $array.each(this.valueXFields, function (key) {\n          var field = _this.get(key + \"Field\");\n          if (field) {\n            _this._valueXFields.push(key);\n            var field_1 = _this.get(key + \"Show\");\n            _this.__valueXShowFields.push(field_1);\n            if (field_1.indexOf(\"Working\") != -1) {\n              _this._valueXShowFields.push(field_1.split(\"Working\")[0]);\n            } else {\n              _this._valueYShowFields.push(field_1);\n            }\n          }\n        });\n      }\n      if (this.valueYFields) {\n        $array.each(this.valueYFields, function (key) {\n          var field = _this.get(key + \"Field\");\n          if (field) {\n            _this._valueYFields.push(key);\n            var field_2 = _this.get(key + \"Show\");\n            _this.__valueYShowFields.push(field_2);\n            if (field_2.indexOf(\"Working\") != -1) {\n              _this._valueYShowFields.push(field_2.split(\"Working\")[0]);\n            } else {\n              _this._valueYShowFields.push(field_2);\n            }\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._dispose.call(this);\n      $array.removeFirst(this.get(\"xAxis\").series, this);\n      $array.removeFirst(this.get(\"yAxis\").series, this);\n    }\n  });\n  // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n  Object.defineProperty(XYSeries.prototype, \"_min\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var newValue = min(this.getPrivate(key), value);\n      this.setPrivate(key, newValue);\n    }\n  });\n  // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n  Object.defineProperty(XYSeries.prototype, \"_max\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var newValue = max(this.getPrivate(key), value);\n      this.setPrivate(key, newValue);\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_shouldMakeBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\n        return true;\n      }\n      return false;\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_makeFieldNames\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var xName = xAxis.getPrivate(\"name\");\n      var xCapName = $utils.capitalizeFirst(xName);\n      var yName = yAxis.getPrivate(\"name\");\n      var yCapName = $utils.capitalizeFirst(yName);\n      var xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\n      var yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\n      var open = \"open\";\n      var low = \"low\";\n      var high = \"high\";\n      var show = \"Show\";\n      if (xAxis.className === \"ValueAxis\") {\n        this._xField = this.get(xName + xLetter + show);\n        this._xOpenField = this.get(open + xCapName + xLetter + show);\n        this._xLowField = this.get(low + xCapName + xLetter + show);\n        this._xHighField = this.get(high + xCapName + xLetter + show);\n      } else {\n        this._xField = xName + xLetter;\n        this._xOpenField = open + xCapName + xLetter;\n        this._xLowField = low + xCapName + xLetter;\n        this._xHighField = high + xCapName + xLetter;\n      }\n      if (yAxis.className === \"ValueAxis\") {\n        this._yField = this.get(yName + yLetter + show);\n        this._yOpenField = this.get(open + yCapName + yLetter + show);\n        this._yLowField = this.get(low + yCapName + yLetter + show);\n        this._yHighField = this.get(high + yCapName + yLetter + show);\n      } else {\n        this._yField = yName + yLetter;\n        this._yOpenField = open + yCapName + yLetter;\n        this._yLowField = low + yCapName + yLetter;\n        this._yHighField = high + yCapName + yLetter;\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_fixVC\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var baseAxis = this.get(\"baseAxis\");\n      var hiddenState = this.states.lookup(\"hidden\");\n      var sequencedInterpolation = this.get(\"sequencedInterpolation\");\n      if (hiddenState) {\n        var value = 0;\n        if (sequencedInterpolation) {\n          value = 0.999999999999; // makes animate, good for stacked\n        }\n\n        if (xAxis === baseAxis) {\n          hiddenState.set(\"vcy\", value);\n        } else if (yAxis === baseAxis) {\n          hiddenState.set(\"vcx\", value);\n        } else {\n          hiddenState.set(\"vcy\", value);\n          hiddenState.set(\"vcx\", value);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_handleMaskBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.isDirty(\"maskBullets\")) {\n        this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._prepareChildren.call(this);\n      this.set(\"width\", this.get(\"xAxis\").width());\n      this.set(\"height\", this.get(\"yAxis\").height());\n      this._handleMaskBullets();\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var baseAxis = this.get(\"baseAxis\");\n      if (this.isDirty(\"baseAxis\")) {\n        this._fixVC();\n      }\n      if (xAxis === baseAxis) {\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\n        this.bulletsContainer.set(\"y\", this.y());\n      } else if (yAxis === baseAxis) {\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\n        this.bulletsContainer.set(\"x\", this.x());\n      }\n      var stacked = this.get(\"stacked\");\n      if (this.isDirty(\"stacked\")) {\n        if (stacked) {\n          if (this._valuesDirty && !this._dataProcessed) {} else {\n            this._stack();\n          }\n        } else {\n          this._unstack();\n        }\n      }\n      if (this._valuesDirty && !this._dataProcessed) {\n        this._dataProcessed = true;\n        if (stacked) {\n          this._stack();\n        }\n        $array.each(this.dataItems, function (dataItem) {\n          $array.each(_this._valueXShowFields, function (key) {\n            var value = dataItem.get(key);\n            if (value != null) {\n              if (stacked) {\n                value += _this.getStackedXValue(dataItem, key);\n              }\n              _this._min(\"minX\", value);\n              _this._max(\"maxX\", value);\n            }\n          });\n          $array.each(_this._valueYShowFields, function (key) {\n            var value = dataItem.get(key);\n            if (value != null) {\n              if (stacked) {\n                value += _this.getStackedYValue(dataItem, key);\n              }\n              _this._min(\"minY\", value);\n              _this._max(\"maxY\", value);\n            }\n          });\n          xAxis.processSeriesDataItem(dataItem, _this._valueXFields);\n          yAxis.processSeriesDataItem(dataItem, _this._valueYFields);\n        });\n        if (!this.get(\"ignoreMinMax\")) {\n          if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n            xAxis.markDirtyExtremes();\n          }\n          if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n            yAxis.markDirtyExtremes();\n          }\n        }\n        this._markStakedDirtyStack();\n        //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n        this.updateLegendValue(undefined);\n      }\n      if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n        this._markStakedDirtyStack();\n      }\n      if (!this._dataGrouped) {\n        xAxis._groupSeriesData(this);\n        yAxis._groupSeriesData(this);\n        this._dataGrouped = true;\n      }\n      if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n        var startIndex = this.getPrivate(\"startIndex\", 0);\n        var endIndex = this.getPrivate(\"endIndex\", this.dataItems.length);\n        var minBulletDistance = this.get(\"minBulletDistance\", 0);\n        if (minBulletDistance > 0 && baseAxis) {\n          if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n            this._showBullets = true;\n          } else {\n            this._showBullets = false;\n          }\n        }\n        if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n          this._selectionProcessed = true;\n          var vcx = this.get(\"vcx\", 1);\n          var vcy = this.get(\"vcy\", 1);\n          var stacked_1 = this.get(\"stacked\", false);\n          if (baseAxis === xAxis) {\n            yAxis._calculateTotals();\n            this.setPrivateRaw(\"selectionMinY\", undefined);\n            this.setPrivateRaw(\"selectionMaxY\", undefined);\n            for (var i = startIndex; i < endIndex; i++) {\n              this.processYSelectionDataItem(this.dataItems[i], vcy, stacked_1);\n            }\n          } else if (baseAxis === yAxis) {\n            xAxis._calculateTotals();\n            this.setPrivateRaw(\"selectionMinX\", undefined);\n            this.setPrivateRaw(\"selectionMaxX\", undefined);\n            for (var i = startIndex; i < endIndex; i++) {\n              this.processXSelectionDataItem(this.dataItems[i], vcx, stacked_1);\n            }\n          }\n          if (baseAxis === xAxis) {\n            if (this.get(\"valueYShow\") !== \"valueYWorking\") {\n              this.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n              this.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n              yAxis.markDirtyExtremes();\n            }\n          } else if (baseAxis === yAxis) {\n            if (this.get(\"valueXShow\") !== \"valueXWorking\") {\n              this.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n              this.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n              xAxis.markDirtyExtremes();\n            }\n          }\n          if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n            xAxis.markDirtySelectionExtremes();\n          }\n          if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n            yAxis.markDirtySelectionExtremes();\n          }\n          // this.updateLegendValue(undefined); flickers while panning\n        }\n      }\n    }\n  });\n\n  Object.defineProperty(XYSeries.prototype, \"_makeRangeMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      if (this.axisRanges.length > 0) {\n        if (!this._mainContainerMask) {\n          var mainContainerMask_1 = this.children.push(Graphics.new(this._root, {}));\n          this._mainContainerMask = mainContainerMask_1;\n          mainContainerMask_1.set(\"draw\", function (display) {\n            var parent = _this.parent;\n            if (parent) {\n              var w = _this._root.container.width();\n              var h = _this._root.container.height();\n              display.moveTo(-w, -h);\n              display.lineTo(-w, h * 2);\n              display.lineTo(w * 2, h * 2);\n              display.lineTo(w * 2, -h);\n              display.lineTo(-w, -h);\n              _this.axisRanges.each(function (axisRange) {\n                var fill = axisRange.axisDataItem.get(\"axisFill\");\n                if (parent) {\n                  if (fill) {\n                    var draw = fill.get(\"draw\");\n                    if (draw) {\n                      draw(mainContainerMask_1._display, mainContainerMask_1);\n                    }\n                  }\n                }\n              });\n            }\n            _this.mainContainer._display.mask = mainContainerMask_1._display;\n          });\n        }\n        this._mainContainerMask.markDirty();\n        this._mainContainerMask._markDirtyKey(\"fill\");\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateChildren.call(this);\n      // save for performance\n      this._x = this.x();\n      this._y = this.y();\n      this._makeRangeMask();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_maskBaseDraw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      var mainContainerMask = this._mainContainerMask;\n      mainContainerMask.set(\"draw\", function (display) {\n        var parent = _this.parent;\n        if (parent) {\n          var w = parent.width();\n          var h = parent.height();\n          display.drawRect(0, 0, w, h);\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_stack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var chart = this.chart;\n      if (chart) {\n        var seriesIndex = chart.series.indexOf(this);\n        this._couldStackTo = [];\n        if (seriesIndex > 0) {\n          var series = void 0;\n          for (var i = seriesIndex - 1; i >= 0; i--) {\n            series = chart.series.getIndex(i);\n            if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n              this._couldStackTo.push(series);\n            }\n          }\n        }\n        this._stackDataItems();\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_unstack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      $object.each(this._reallyStackedTo, function (_key, value) {\n        delete value._stackedSeries[_this.uid];\n      });\n      this._reallyStackedTo = {};\n      $array.each(this.dataItems, function (dataItem) {\n        dataItem.setRaw(\"stackToItemY\", undefined);\n        dataItem.setRaw(\"stackToItemX\", undefined);\n      });\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_stackDataItems\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      // this works only with the same number of data @todo: search by date/category?\n      var baseAxis = this.get(\"baseAxis\");\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var field;\n      var stackToItemKey;\n      if (baseAxis === xAxis) {\n        field = \"valueY\";\n        stackToItemKey = \"stackToItemY\";\n      } else if (baseAxis === yAxis) {\n        field = \"valueX\";\n        stackToItemKey = \"stackToItemX\";\n      }\n      var len = this._couldStackTo.length;\n      var index = 0;\n      var stackToNegative = this.get(\"stackToNegative\");\n      this._reallyStackedTo = {};\n      $array.each(this.dataItems, function (dataItem) {\n        for (var s = 0; s < len; s++) {\n          var stackToSeries = _this._couldStackTo[s];\n          var stackToItem = stackToSeries.dataItems[index];\n          var value = dataItem.get(field);\n          var stackValue = stackToItem.get(field);\n          if (stackToItem) {\n            if (stackToNegative) {\n              if ($type.isNumber(value)) {\n                if ($type.isNumber(stackValue)) {\n                  if (value >= 0 && stackValue >= 0) {\n                    dataItem.setRaw(stackToItemKey, stackToItem);\n                    _this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                    stackToSeries._stackedSeries[_this.uid] = _this;\n                    break;\n                  }\n                  if (value < 0 && stackValue < 0) {\n                    dataItem.setRaw(stackToItemKey, stackToItem);\n                    _this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                    stackToSeries._stackedSeries[_this.uid] = _this;\n                    break;\n                  }\n                }\n              } else {\n                break;\n              }\n            } else {\n              if ($type.isNumber(value) && $type.isNumber(stackValue)) {\n                dataItem.setRaw(stackToItemKey, stackToItem);\n                _this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                stackToSeries._stackedSeries[_this.uid] = _this;\n                break;\n              }\n            }\n          }\n        }\n        index++;\n      });\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"processXSelectionDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, vcx, stacked) {\n      var _this = this;\n      $array.each(this.__valueXShowFields, function (key) {\n        var value = dataItem.get(key);\n        if (value != null) {\n          if (stacked) {\n            value += _this.getStackedXValueWorking(dataItem, key);\n          }\n          _this._min(\"selectionMinX\", value);\n          _this._max(\"selectionMaxX\", value * vcx);\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"processYSelectionDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, vcy, stacked) {\n      var _this = this;\n      $array.each(this.__valueYShowFields, function (key) {\n        var value = dataItem.get(key);\n        if (value != null) {\n          if (stacked) {\n            value += _this.getStackedYValueWorking(dataItem, key);\n          }\n          _this._min(\"selectionMinY\", value);\n          _this._max(\"selectionMaxY\", value * vcy);\n        }\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"getStackedYValueWorking\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, key) {\n      var stackToItem = dataItem.get(\"stackToItemY\");\n      if (stackToItem) {\n        var stackedToSeries = stackToItem.component;\n        return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n      }\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"getStackedXValueWorking\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, key) {\n      var stackToItem = dataItem.get(\"stackToItemX\");\n      if (stackToItem) {\n        var stackedToSeries = stackToItem.component;\n        return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n      }\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"getStackedYValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, key) {\n      var stackToItem = dataItem.get(\"stackToItemY\");\n      if (stackToItem) {\n        return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\n      }\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"getStackedXValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, key) {\n      var stackToItem = dataItem.get(\"stackToItemX\");\n      if (stackToItem) {\n        return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\n      }\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"createLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {\n      this.updateLegendMarker();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_markDirtyAxes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._axesDirty = true;\n      this.markDirty();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_markDataSetDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._afterDataChange();\n      this._valuesDirty = true;\n      this._dataProcessed = false;\n      this._aggregatesCalculated = false;\n      this.markDirty();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._clearDirty.call(this);\n      this._axesDirty = false;\n      this._selectionProcessed = false;\n      this._stackDirty = false;\n      this._dataProcessed = false;\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_positionBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet) {\n      var sprite = bullet.get(\"sprite\");\n      if (sprite) {\n        var dataItem = sprite.dataItem;\n        var locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n        var locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n        var positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n        var positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\n        var point = this.getPoint(positionX, positionY);\n        var left = dataItem.get(\"left\", point.x);\n        var right = dataItem.get(\"right\", point.x);\n        var top_1 = dataItem.get(\"top\", point.y);\n        var bottom = dataItem.get(\"bottom\", point.y);\n        if (this._shouldShowBullet(positionX, positionY)) {\n          if (!bullet.getPrivate(\"hidden\")) {\n            sprite.setPrivate(\"visible\", true);\n          } else {\n            sprite.setPrivate(\"visible\", false);\n          }\n          var w = right - left;\n          var h = bottom - top_1;\n          if (sprite.isType(\"Label\")) {\n            sprite.set(\"maxWidth\", Math.abs(w));\n            sprite.set(\"maxHeight\", Math.abs(h));\n          }\n          var x = left + w * locationX;\n          var y = bottom - h * locationY;\n          sprite.set(\"x\", x);\n          sprite.set(\"y\", y);\n        } else {\n          sprite.setPrivate(\"visible\", false);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_shouldShowBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_positionX, _positionY) {\n      return this._showBullets;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"setDataSet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      if (this._dataSets[id]) {\n        this._handleDataSetChange();\n        this._dataItems = this._dataSets[id];\n        this._markDataSetDirty();\n        this._dataSetId = id;\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_handleDataSetChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.bullets.length > 0) {\n        $array.each(this._dataItems, function (dataItem) {\n          var bullets = dataItem.bullets;\n          if (bullets) {\n            $array.each(bullets, function (bullet) {\n              var sprite = bullet.get(\"sprite\");\n              if (sprite) {\n                sprite.setPrivate(\"visible\", false);\n              }\n            });\n          }\n        });\n      }\n    }\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param   duration  Duration of animation in milliseconds\r\n   * @return            Animation promise\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"show\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises;\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this._fixVC();\n              promises = [];\n              promises.push(_super.prototype.show.call(this, duration).then(function () {\n                _this._isShowing = false;\n                var xAxis = _this.get(\"xAxis\");\n                var yAxis = _this.get(\"yAxis\");\n                var baseAxis = _this.get(\"baseAxis\");\n                if (yAxis !== baseAxis) {\n                  yAxis.markDirtySelectionExtremes();\n                }\n                if (xAxis !== baseAxis) {\n                  xAxis.markDirtySelectionExtremes();\n                }\n              }));\n              promises.push(this.bulletsContainer.show(duration));\n              promises.push(this._sequencedShowHide(true, duration));\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param   duration  Duration of animation in milliseconds\r\n   * @return            Animation promise\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"hide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises;\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this._fixVC();\n              promises = [];\n              promises.push(_super.prototype.hide.call(this, duration).then(function () {\n                _this._isHiding = false;\n              }));\n              promises.push(this.bulletsContainer.hide(duration));\n              promises.push(this._sequencedShowHide(false, duration));\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, easing;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n              if (!$type.isNumber(duration)) {\n                duration = this.get(\"stateAnimationDuration\", 0);\n              }\n              easing = this.get(\"stateAnimationEasing\");\n              $array.each(this._valueFields, function (key) {\n                promises.push(dataItem.animate({\n                  key: key + \"Working\",\n                  to: dataItem.get(key),\n                  duration: duration,\n                  easing: easing\n                }).waitForStop());\n              });\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, hiddenState, easing, xAxis, yAxis, baseAxis, stacked, min_1, baseValue_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              hiddenState = this.states.create(\"hidden\", {});\n              if (!$type.isNumber(duration)) {\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n              }\n              easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n              xAxis = this.get(\"xAxis\");\n              yAxis = this.get(\"yAxis\");\n              baseAxis = this.get(\"baseAxis\");\n              stacked = this.get(\"stacked\");\n              if (baseAxis === xAxis || !baseAxis) {\n                $array.each(this._valueYFields, function (key) {\n                  var min = yAxis.getPrivate(\"min\");\n                  var baseValue = yAxis.baseValue();\n                  if ($type.isNumber(min) && min > baseValue) {\n                    baseValue = min;\n                  }\n                  if (stacked) {\n                    baseValue = 0;\n                  }\n                  promises.push(dataItem.animate({\n                    key: key + \"Working\",\n                    to: baseValue,\n                    duration: duration,\n                    easing: easing\n                  }).waitForStop());\n                });\n              }\n              if (baseAxis === yAxis || !baseAxis) {\n                min_1 = xAxis.getPrivate(\"min\");\n                baseValue_1 = xAxis.baseValue();\n                if ($type.isNumber(min_1) && min_1 > baseValue_1) {\n                  baseValue_1 = min_1;\n                }\n                if (stacked) {\n                  baseValue_1 = 0;\n                }\n                $array.each(this._valueXFields, function (key) {\n                  promises.push(dataItem.animate({\n                    key: key + \"Working\",\n                    to: baseValue_1,\n                    duration: duration,\n                    easing: easing\n                  }).waitForStop());\n                });\n              }\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n\n  Object.defineProperty(XYSeries.prototype, \"_markDirtyStack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._stackDirty = true;\n      this.markDirty();\n      this._markStakedDirtyStack();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_markStakedDirtyStack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var stackedSeries = this._stackedSeries;\n      if (stackedSeries) {\n        $object.each(stackedSeries, function (_key, value) {\n          value._markDirtyStack();\n        });\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_afterChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterChanged.call(this);\n      if (this._skipped) {\n        this._markDirtyAxes();\n        this._skipped = false;\n      }\n    }\n  });\n  /**\r\n   * Shows a tooltip for specific data item.\r\n   *\r\n   * @param  dataItem  Data item\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"showDataItemTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      this.updateLegendMarker(dataItem);\n      this.updateLegendValue(dataItem);\n      if (this.get(\"tooltip\")) {\n        if (!this.isHidden()) {\n          var tooltip = this.get(\"tooltip\");\n          if (tooltip) {\n            tooltip._setDataItem(dataItem);\n            if (dataItem) {\n              var locationX = this.get(\"locationX\", 0);\n              var locationY = this.get(\"locationY\", 1);\n              var itemLocationX = dataItem.get(\"locationX\", locationX);\n              var itemLocationY = dataItem.get(\"locationY\", locationY);\n              var xAxis = this.get(\"xAxis\");\n              var yAxis = this.get(\"yAxis\");\n              var vcx = this.get(\"vcx\", 1);\n              var vcy = this.get(\"vcy\", 1);\n              var xPos = xAxis.getDataItemPositionX(dataItem, this._xField, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n              var yPos = yAxis.getDataItemPositionY(dataItem, this._yField, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n              var point = this.getPoint(xPos, yPos);\n              var show_1 = true;\n              $array.each(this._valueFields, function (field) {\n                if (dataItem.get(field) == null) {\n                  show_1 = false;\n                }\n              });\n              if (show_1) {\n                var chart = this.chart;\n                if (chart && chart.inPlot(point)) {\n                  tooltip.label.text.markDirtyText();\n                  tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n                  tooltip.set(\"pointTo\", this._display.toGlobal({\n                    x: point.x,\n                    y: point.y\n                  }));\n                } else {\n                  tooltip._setDataItem(undefined);\n                }\n              } else {\n                tooltip._setDataItem(undefined);\n              }\n            }\n          }\n        } else {\n          this.hideTooltip();\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_getTooltipTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n        var bullets = dataItem.bullets;\n        if (bullets && bullets.length > 0) {\n          var bullet = bullets[0];\n          var sprite = bullet.get(\"sprite\");\n          if (sprite) {\n            return sprite;\n          }\n        }\n      }\n      return this;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"updateLegendValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var legendDataItem = this.get(\"legendDataItem\");\n      if (legendDataItem) {\n        var label = legendDataItem.get(\"label\");\n        if (label) {\n          var txt = \"\";\n          if (dataItem) {\n            label._setDataItem(dataItem);\n            txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n          } else {\n            label._setDataItem(this._emptyDataItem);\n            txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n          }\n          label.set(\"text\", txt);\n        }\n        var valueLabel = legendDataItem.get(\"valueLabel\");\n        if (valueLabel) {\n          var txt = \"\";\n          if (dataItem) {\n            valueLabel._setDataItem(dataItem);\n            txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n          } else {\n            valueLabel._setDataItem(this._emptyDataItem);\n            txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n          }\n          valueLabel.set(\"text\", txt);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_getItemReaderLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var text = \"X: {\" + this._xField;\n      if (this.get(\"xAxis\").isType(\"DateAxis\")) {\n        text += \".formatDate()\";\n      }\n      text += \"}; Y: {\" + this._yField;\n      if (this.get(\"yAxis\").isType(\"DateAxis\")) {\n        text += \".formatDate()\";\n      }\n      text += \"}\";\n      return text;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"getPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (positionX, positionY) {\n      var x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n      var y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n      return {\n        x: x,\n        y: y\n      };\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_shouldInclude\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_position) {\n      return true;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"handleCursorHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.hideTooltip();\n      this.updateLegendValue(undefined);\n      this.updateLegendMarker(undefined);\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_afterDataChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterDataChange.call(this);\n      // this causes unneeded animation on live demo and it shouldn't be needed\n      //this.setPrivate(\"startIndex\", 0);\n      //this.setPrivate(\"endIndex\", this.dataItems.length);\n      this.resetExtremes();\n    }\n  });\n  // todo description\n  Object.defineProperty(XYSeries.prototype, \"resetExtremes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.setPrivate(\"selectionMinX\", undefined);\n      this.setPrivate(\"selectionMaxX\", undefined);\n      this.setPrivate(\"selectionMinY\", undefined);\n      this.setPrivate(\"selectionMaxY\", undefined);\n      this.setPrivate(\"minX\", undefined);\n      this.setPrivate(\"minY\", undefined);\n      this.setPrivate(\"maxX\", undefined);\n      this.setPrivate(\"maxY\", undefined);\n    }\n  });\n  /**\r\n   * Creates and returns an axis range object.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n   * @param   axisDataItem  Axis data item\r\n   * @return                Axis range\r\n   */\n  Object.defineProperty(XYSeries.prototype, \"createAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisDataItem) {\n      return this.axisRanges.push({\n        axisDataItem: axisDataItem\n      });\n    }\n  });\n  Object.defineProperty(XYSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"XYSeries\"\n  });\n  Object.defineProperty(XYSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Series.classNames.concat([XYSeries.className])\n  });\n  return XYSeries;\n}(Series);\nexport { XYSeries };","map":{"version":3,"names":["DataItem","Series","$array","$utils","List","$type","$object","Container","Graphics","min","left","right","max","XYSeries","_super","__extends","_this","apply","arguments","Object","defineProperty","children","push","new","_root","undefined","value","fields","valueFields","_setRawDefault","prototype","_afterNew","call","_settings","xAxis","series","yAxis","set","_disposers","axisRanges","events","onAll","change","type","each","axisRange","_removeAxisRange","_processAxisRange","newValue","oldValue","Error","get","isType","states","create","opacity","visible","_makeFieldNames","container","axisDataItem","setRaw","axis","component","axisFill","bullet","sprite","setPrivate","_seriesAxisRanges","dispose","_updateFields","_valueXFields","_valueYFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","key","field","field_1","indexOf","split","valueYFields","field_2","_dispose","removeFirst","getPrivate","dataItem","_xField","_yField","xName","xCapName","capitalizeFirst","yName","yCapName","xLetter","yLetter","open","low","high","show","className","_xOpenField","_xLowField","_xHighField","_yOpenField","_yLowField","_yHighField","baseAxis","hiddenState","lookup","sequencedInterpolation","isDirty","bulletsContainer","_prepareChildren","width","height","_handleMaskBullets","_fixVC","y","relativeToValue","parent","x","stacked","_valuesDirty","_dataProcessed","_stack","_unstack","dataItems","getStackedXValue","_min","_max","getStackedYValue","processSeriesDataItem","isPrivateDirty","markDirtyExtremes","_markStakedDirtyStack","updateLegendValue","_dataGrouped","_groupSeriesData","_stackDirty","startIndex","endIndex","length","minBulletDistance","axisLength","_showBullets","_psi","_pei","_selectionProcessed","vcx","vcy","stacked_1","_calculateTotals","setPrivateRaw","i","processYSelectionDataItem","processXSelectionDataItem","markDirtySelectionExtremes","_mainContainerMask","mainContainerMask_1","display","w","h","moveTo","lineTo","fill","draw","_display","mainContainer","mask","markDirty","_markDirtyKey","_updateChildren","_x","_y","_makeRangeMask","mainContainerMask","drawRect","chart","seriesIndex","_couldStackTo","getIndex","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","uid","stackToItemKey","len","index","stackToNegative","s","stackToSeries","stackToItem","stackValue","isNumber","getStackedXValueWorking","getStackedYValueWorking","stackedToSeries","_dataItem","updateLegendMarker","_axesDirty","_afterDataChange","_aggregatesCalculated","_clearDirty","locationX","locationY","positionX","getDataItemPositionX","positionY","getDataItemPositionY","point","getPoint","top_1","bottom","_shouldShowBullet","Math","abs","_positionX","_positionY","id","_dataSets","_handleDataSetChange","_dataItems","_markDataSetDirty","_dataSetId","bullets","duration","promises","then","_isShowing","_sequencedShowHide","Promise","all","_a","sent","hide","_isHiding","showDataItem","easing","_valueFields","animate","to","waitForStop","hideDataItem","baseValue","min_1","baseValue_1","stackedSeries","_markDirtyStack","_afterChanged","_skipped","_markDirtyAxes","isHidden","tooltip","_setDataItem","itemLocationX","itemLocationY","xPos","_aLocationX0","_aLocationX1","yPos","_aLocationY0","_aLocationY1","show_1","inPlot","label","text","markDirtyText","_getTooltipTarget","toGlobal","hideTooltip","legendDataItem","txt","_emptyDataItem","valueLabel","positionToCoordinate","_position","resetExtremes","classNames","concat"],"sources":["../../../../../../src/.internal/charts/xy/series/XYSeries.ts"],"sourcesContent":["import { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate } from \"../../../core/render/Series\";\nimport type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t * \n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tprotected _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x:number = 0;\n\tprotected _y:number = 0;\t\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?:string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (axisFill) {\n\t\t\t\tthis.children.push(axisFill);\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem)\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t\taxisRange.axisDataItem.dispose();\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif ((this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty)) {\n\n\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\t\t\tlet endIndex = this.getPrivate(\"endIndex\", this.dataItems.length);\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tif (!this._mainContainerMask) {\n\t\t\t\tconst mainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\n\t\t\t\tmainContainerMask!.set(\"draw\", (display) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(mainContainerMask._display, mainContainerMask);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._mainContainerMask.markDirty();\n\t\t\tthis._mainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _maskBaseDraw() {\n\t\tconst mainContainerMask = this._mainContainerMask!;\n\t\tmainContainerMask.set(\"draw\", (display) => {\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tconst w = parent.width();\n\t\t\t\tconst h = parent.height();\n\t\t\t\tdisplay.drawRect(0, 0, w, h);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\t\t\t\tlet stackValue = stackToItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tvalue._markDirtyStack();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._xField, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._yField, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\t\n\t\t// this causes unneeded animation on live demo and it shouldn't be needed\n\t\t//this.setPrivate(\"startIndex\", 0);\n\t\t//this.setPrivate(\"endIndex\", this.dataItems.length);\n\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}