{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Container } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\"; //import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $object from \"../../core/util/Object\";\n/**\r\n * Creates a chart cursor for an [[XYChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\r\n * @important\r\n */\n\nvar XYCursor =\n/** @class */\nfunction (_super) {\n  __extends(XYCursor, _super);\n\n  function XYCursor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n     *\r\n     * @default Grid.new()\r\n     */\n\n\n    Object.defineProperty(_this, \"lineX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Grid.new(_this._root, {\n        themeTags: [\"x\"]\n      }))\n    });\n    /**\r\n     * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\r\n     *\r\n     * @default Grid.new()\r\n     */\n\n    Object.defineProperty(_this, \"lineY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Grid.new(_this._root, {\n        themeTags: [\"y\"]\n      }))\n    });\n    /**\r\n     * An element that represents current selection.\r\n     *\r\n     * @default Graphics.new()\r\n     */\n\n    Object.defineProperty(_this, \"selection\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Graphics.new(_this._root, {\n        themeTags: [\"selection\", \"cursor\"],\n        layer: 20\n      }))\n    });\n    Object.defineProperty(_this, \"_movePoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_lastPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        x: 0,\n        y: 0\n      }\n    });\n    Object.defineProperty(_this, \"_tooltipX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_tooltipY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * A chart cursor is attached to.\r\n     */\n\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(XYCursor.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\n      _super.prototype._afterNew.call(this);\n\n      this.setAll({\n        \"width\": p100,\n        height: p100,\n        isMeasured: true,\n        position: \"absolute\"\n      });\n      this.states.create(\"hidden\", {\n        visible: true,\n        opacity: 0\n      });\n\n      this._drawLines();\n\n      this.setPrivateRaw(\"visible\", false);\n\n      this._disposers.push(this.setTimeout(function () {\n        _this.setPrivate(\"visible\", true);\n      }, 500));\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      if (this.isDirty(\"xAxis\")) {\n        this._tooltipX = false;\n        var xAxis = this.get(\"xAxis\");\n\n        if (xAxis) {\n          var tooltip_1 = xAxis.get(\"tooltip\");\n\n          if (tooltip_1) {\n            this._tooltipX = true;\n            tooltip_1.on(\"pointTo\", function () {\n              _this._updateXLine(tooltip_1);\n            });\n          }\n        }\n      }\n\n      if (this.isDirty(\"yAxis\")) {\n        this._tooltipY = false;\n        var yAxis = this.get(\"yAxis\");\n\n        if (yAxis) {\n          var tooltip_2 = yAxis.get(\"tooltip\");\n\n          if (tooltip_2) {\n            this._tooltipY = true;\n            tooltip_2.on(\"pointTo\", function () {\n              _this._updateYLine(tooltip_2);\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateChildren.call(this);\n\n      if (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n        this._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n        this.handleMove();\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateXLine\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip) {\n      this.lineX.animate({\n        key: \"x\",\n        to: this._display.toLocal(tooltip.get(\"pointTo\", {\n          x: 0,\n          y: 0\n        })).x,\n        duration: tooltip.get(\"animationDuration\", 0),\n        easing: tooltip.get(\"animationEasing\")\n      });\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateYLine\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip) {\n      this.lineY.animate({\n        key: \"y\",\n        to: this._display.toLocal(tooltip.get(\"pointTo\", {\n          x: 0,\n          y: 0\n        })).y,\n        duration: tooltip.get(\"animationDuration\", 0),\n        easing: tooltip.get(\"animationEasing\")\n      });\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_drawLines\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this.lineX.set(\"draw\", function (display) {\n        display.moveTo(0, 0);\n        display.lineTo(0, _this.height());\n      });\n      this.lineY.set(\"draw\", function (display) {\n        display.moveTo(0, 0);\n        display.lineTo(_this.width(), 0);\n      });\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_setChart\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (chart) {\n      var _this = this;\n\n      this.chart = chart;\n      var plotContainer = chart.plotContainer;\n      this.events.on(\"boundschanged\", function () {\n        _this._disposers.push(_this.setTimeout(function () {\n          if (_this.get(\"alwaysShow\")) {\n            _this._movePoint = _this.toGlobal(_this._getPoint(_this.get(\"positionX\", 0), _this.get(\"positionY\", 0)));\n\n            _this.handleMove();\n          }\n        }, 50));\n      }); //this._display.interactive = true;\n\n      if ($utils.supports(\"touchevents\")) {\n        this._disposers.push(plotContainer.events.on(\"click\", function (event) {\n          if ($utils.isTouchEvent(event.originalEvent)) {\n            _this._handleMove(event.originalEvent);\n          }\n        }));\n      }\n\n      this._disposers.push(plotContainer.events.on(\"pointerdown\", function (event) {\n        _this._handleCursorDown(event.originalEvent);\n      }));\n\n      this._disposers.push(plotContainer.events.on(\"globalpointerup\", function (event) {\n        _this._handleCursorUp(event.originalEvent);\n      }));\n\n      this._disposers.push(plotContainer.events.on(\"globalpointermove\", function (event) {\n        if ($object.keys(plotContainer._downPoints).length == 0 && !event.native) {\n          // Ignore mouse movement if it originates on outside element and\n          // we're not dragging.\n          return;\n        }\n\n        _this._handleMove(event.originalEvent);\n      }));\n\n      var parent = this.parent;\n\n      if (parent) {\n        parent.children.moveValue(this.selection);\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_inPlot\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      var chart = this.chart;\n\n      if (chart) {\n        return chart.inPlot(point);\n      }\n\n      return false;\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleCursorDown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      // TODO: handle multitouch\n      var rootPoint = this._root.documentPointToRoot({\n        x: event.clientX,\n        y: event.clientY\n      });\n\n      var local = this._display.toLocal(rootPoint);\n\n      var chart = this.chart;\n      this.selection.set(\"draw\", function () {});\n\n      if (chart && this._inPlot(local)) {\n        this._downPoint = local;\n\n        if (this.get(\"behavior\") != \"none\") {\n          this.selection.show();\n          var type = \"selectstarted\";\n\n          if (this.events.isEnabled(type)) {\n            this.events.dispatch(type, {\n              type: type,\n              target: this\n            });\n          }\n        }\n\n        var positionX = this._getPosition(local).x;\n\n        var positionY = this._getPosition(local).y;\n\n        this.setPrivate(\"downPositionX\", positionX);\n        this.setPrivate(\"downPositionY\", positionY);\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleCursorUp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_event) {\n      // TODO: handle multitouch\n      if (this._downPoint) {\n        var behavior = this.get(\"behavior\", \"none\");\n\n        if (behavior != \"none\") {\n          if (behavior.charAt(0) === \"z\") {\n            this.selection.hide();\n          }\n\n          var userPositionX = this.get(\"positionX\");\n          var positionX = this.getPrivate(\"positionX\", 0);\n\n          if ($type.isNumber(userPositionX)) {\n            positionX = userPositionX;\n          }\n\n          var userPositionY = this.get(\"positionY\");\n          var positionY = this.getPrivate(\"positionY\", 0);\n\n          if ($type.isNumber(userPositionY)) {\n            positionY = userPositionY;\n          }\n\n          var dispatch = false;\n\n          if (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n            if (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n              dispatch = true;\n            }\n          }\n\n          if (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n            if (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n              dispatch = true;\n            }\n          }\n\n          if (dispatch) {\n            var type = \"selectended\";\n\n            if (this.events.isEnabled(type)) {\n              this.events.dispatch(type, {\n                type: type,\n                target: this\n              });\n            }\n          }\n        }\n      }\n\n      this._downPoint = undefined;\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_handleMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      if (this.getPrivate(\"visible\")) {\n        // TODO: handle multitouch\n        var rootPoint = this._root.documentPointToRoot({\n          x: event.clientX,\n          y: event.clientY\n        });\n\n        var lastPoint = this._lastPoint;\n\n        if (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n          return;\n        }\n\n        this._lastPoint = rootPoint;\n        this.handleMove({\n          x: rootPoint.x,\n          y: rootPoint.y\n        });\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_getPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return {\n        x: point.x / this.width(),\n        y: point.y / this.height()\n      };\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYCursor.prototype, \"handleMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point, skipEvent) {\n      if (!point) {\n        point = this._movePoint;\n      }\n\n      var alwaysShow = this.get(\"alwaysShow\");\n\n      if (!point) {\n        this.hide(0);\n        return;\n      }\n\n      this._movePoint = point;\n\n      var local = this._display.toLocal(point);\n\n      var chart = this.chart;\n\n      if (chart && this._inPlot(local)) {\n        chart._movePoint = point;\n\n        if (this.isHidden()) {\n          this.show();\n          var behavior = this.get(\"behavior\", \"\");\n\n          if (behavior.charAt(0) == \"z\") {\n            this.selection.set(\"draw\", function () {});\n          }\n        }\n\n        var x = local.x;\n        var y = local.y;\n\n        var xyPos = this._getPosition(local);\n\n        this.setPrivate(\"point\", local);\n        var snapToSeries_1 = this.get(\"snapToSeries\");\n        var userPositionX = this.get(\"positionX\");\n        var positionX_1 = xyPos.x;\n\n        if ($type.isNumber(userPositionX)) {\n          positionX_1 = userPositionX;\n        }\n\n        var userPositionY = this.get(\"positionY\");\n        var positionY_1 = xyPos.y;\n\n        if ($type.isNumber(userPositionY)) {\n          positionY_1 = userPositionY;\n        }\n\n        this.setPrivate(\"positionX\", positionX_1);\n        this.setPrivate(\"positionY\", positionY_1);\n\n        var xy = this._getPoint(positionX_1, positionY_1);\n\n        x = xy.x;\n        y = xy.y;\n        chart.xAxes.each(function (axis) {\n          axis._handleCursorPosition(positionX_1, snapToSeries_1);\n\n          if (alwaysShow) {\n            axis.handleCursorShow();\n          }\n        });\n        chart.yAxes.each(function (axis) {\n          axis._handleCursorPosition(positionY_1, snapToSeries_1);\n\n          if (alwaysShow) {\n            axis.handleCursorShow();\n          }\n        });\n\n        if (!skipEvent) {\n          chart._handleCursorPosition();\n\n          var type = \"cursormoved\";\n\n          if (this.events.isEnabled(type)) {\n            this.events.dispatch(type, {\n              type: type,\n              target: this\n            });\n          }\n        }\n\n        this._updateLines(x, y);\n\n        chart.arrangeTooltips();\n      } else if (!this._downPoint) {\n        if (!alwaysShow) {\n          this.hide(0);\n        }\n      }\n\n      if (this._downPoint && this.get(\"behavior\") != \"none\") {\n        this._updateSelection(local);\n      }\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_getPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (positionX, positionY) {\n      return {\n        x: this.width() * positionX,\n        y: this.height() * positionY\n      };\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateLines\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y) {\n      if (!this._tooltipX) {\n        this.lineX.set(\"x\", x);\n      }\n\n      if (!this._tooltipY) {\n        this.lineY.set(\"y\", y);\n      }\n\n      this._drawLines();\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_updateSelection\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      var _this = this;\n\n      var selection = this.selection;\n      var behavior = this.get(\"behavior\");\n      var w = this.width();\n      var h = this.height();\n\n      if (point.x < 0) {\n        point.x = 0;\n      }\n\n      if (point.x > w) {\n        point.x = w;\n      }\n\n      if (point.y < 0) {\n        point.y = 0;\n      }\n\n      if (point.y > h) {\n        point.y = h;\n      }\n\n      selection.set(\"draw\", function (display) {\n        var downPoint = _this._downPoint;\n\n        if (downPoint) {\n          if (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n            display.moveTo(downPoint.x, downPoint.y);\n            display.lineTo(downPoint.x, point.y);\n            display.lineTo(point.x, point.y);\n            display.lineTo(point.x, downPoint.y);\n            display.lineTo(downPoint.x, downPoint.y);\n          } else if (behavior === \"zoomX\" || behavior === \"selectX\") {\n            display.moveTo(downPoint.x, 0);\n            display.lineTo(downPoint.x, h);\n            display.lineTo(point.x, h);\n            display.lineTo(point.x, 0);\n            display.lineTo(downPoint.x, 0);\n          } else if (behavior === \"zoomY\" || behavior === \"selectY\") {\n            display.moveTo(0, downPoint.y);\n            display.lineTo(w, downPoint.y);\n            display.lineTo(w, point.y);\n            display.lineTo(0, point.y);\n            display.lineTo(0, downPoint.y);\n          }\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_onHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.isHidden()) {\n        var chart = this.chart;\n\n        if (chart) {\n          chart.xAxes.each(function (axis) {\n            axis.handleCursorHide();\n          });\n          chart.yAxes.each(function (axis) {\n            axis.handleCursorHide();\n          });\n          chart.series.each(function (series) {\n            series.handleCursorHide();\n          });\n        }\n      }\n\n      _super.prototype._onHide.call(this);\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_onShow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this.isHidden()) {\n        var chart = this.chart;\n\n        if (chart) {\n          chart.xAxes.each(function (axis) {\n            axis.handleCursorShow();\n          });\n          chart.yAxes.each(function (axis) {\n            axis.handleCursorShow();\n          });\n        }\n      }\n\n      _super.prototype._onShow.call(this);\n    }\n  });\n  Object.defineProperty(XYCursor.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._dispose.call(this);\n\n      this.selection.dispose();\n    }\n  });\n  Object.defineProperty(XYCursor, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"XYCursor\"\n  });\n  Object.defineProperty(XYCursor, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([XYCursor.className])\n  });\n  return XYCursor;\n}(Container);\n\nexport { XYCursor };","map":{"version":3,"sources":["../../../../../src/.internal/charts/xy/XYCursor.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t * \n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\";\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\ttarget: XYCursor;\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\ttarget: XYCursor;\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 20\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500))\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\tthis.handleMove();\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tthis.lineX.animate({ key: \"x\", to: this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tthis.lineY.animate({ key: \"y\", to: this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tif (this.get(\"alwaysShow\")) {\n\t\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\t\tthis.handleMove();\n\t\t\t\t}\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event.originalEvent);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native) {\n\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t// we're not dragging.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis._handleMove(event.originalEvent);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(_event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\t\tlet positionX = this.getPrivate(\"positionX\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\t\tpositionX = userPositionX;\n\t\t\t\t}\n\n\t\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\t\tlet positionY = this.getPrivate(\"positionY\", 0);\n\n\t\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\t\tpositionY = userPositionY;\n\t\t\t\t}\n\n\t\t\t\tlet dispatch = false;\n\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionX - this.getPrivate(\"downPositionX\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\tif (Math.abs(positionY - this.getPrivate(\"downPositionY\", 0)) > 0.003) {\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dispatch) {\n\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: IPointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = this._root.documentPointToRoot({ x: event.clientX, y: event.clientY });\n\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y });\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tconst snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}