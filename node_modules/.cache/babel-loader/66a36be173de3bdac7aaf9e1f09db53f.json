{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  isAuth: false,\n  email: localStorage.getItem('email') || '',\n  token: localStorage.getItem('token') || '',\n  loading: false,\n  error: '',\n  visitorId: ''\n};\nexport const auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setIsAuth: (state, action) => {\n      const {\n        email,\n        token,\n        isAuth\n      } = action.payload;\n      state.email = email;\n      localStorage.setItem('email', email);\n      state.token = token;\n      localStorage.setItem('token', token);\n      state.isAuth = isAuth;\n    },\n    logOut: (state, action) => {\n      state.email = '';\n      localStorage.removeItem('email');\n      state.token = '';\n      localStorage.removeItem('token');\n      state.isAuth = false;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    setVisitorId: (state, action) => {\n      state.visitorId = action.payload;\n    }\n  }\n});\nexport const {\n  setIsAuth,\n  setLoading,\n  setError,\n  logOut,\n  setVisitorId\n} = auth.actions;\nexport default auth.reducer;","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/redux/slices/authSlice.js"],"names":["createSlice","initialState","isAuth","email","localStorage","getItem","token","loading","error","visitorId","auth","name","reducers","setIsAuth","state","action","payload","setItem","logOut","removeItem","setLoading","setError","setVisitorId","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,KADkB;AAE1BC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAFd;AAG1BC,EAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAHd;AAI1BE,EAAAA,OAAO,EAAE,KAJiB;AAK1BC,EAAAA,KAAK,EAAE,EALmB;AAM1BC,EAAAA,SAAS,EAAE;AANe,CAArB;AASP,OAAO,MAAMC,IAAI,GAAGV,WAAW,CAAC;AAC9BW,EAAAA,IAAI,EAAE,MADwB;AAE9BV,EAAAA,YAF8B;AAG9BW,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5B,YAAM;AAAEZ,QAAAA,KAAF;AAASG,QAAAA,KAAT;AAAgBJ,QAAAA;AAAhB,UAA2Ba,MAAM,CAACC,OAAxC;AAEAF,MAAAA,KAAK,CAACX,KAAN,GAAcA,KAAd;AACAC,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8Bd,KAA9B;AAEAW,MAAAA,KAAK,CAACR,KAAN,GAAcA,KAAd;AACAF,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BX,KAA9B;AAEAQ,MAAAA,KAAK,CAACZ,MAAN,GAAeA,MAAf;AACD,KAXO;AAYRgB,IAAAA,MAAM,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACzBD,MAAAA,KAAK,CAACX,KAAN,GAAc,EAAd;AACAC,MAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AAEAL,MAAAA,KAAK,CAACR,KAAN,GAAc,EAAd;AACAF,MAAAA,YAAY,CAACe,UAAb,CAAwB,OAAxB;AAEAL,MAAAA,KAAK,CAACZ,MAAN,GAAe,KAAf;AACD,KApBO;AAqBRkB,IAAAA,UAAU,EAAE,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACP,OAAN,GAAgBQ,MAAM,CAACC,OAAvB;AACD,KAvBO;AAwBRK,IAAAA,QAAQ,EAAE,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACN,KAAN,GAAcO,MAAM,CAACC,OAArB;AACD,KA1BO;AA2BRM,IAAAA,YAAY,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,MAAAA,KAAK,CAACL,SAAN,GAAkBM,MAAM,CAACC,OAAzB;AACD;AA7BO;AAHoB,CAAD,CAAxB;AAoCP,OAAO,MAAM;AAAEH,EAAAA,SAAF;AAAaO,EAAAA,UAAb;AAAyBC,EAAAA,QAAzB;AAAmCH,EAAAA,MAAnC;AAA2CI,EAAAA;AAA3C,IACXZ,IAAI,CAACa,OADA;AAGP,eAAeb,IAAI,CAACc,OAApB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const initialState = {\n  isAuth: false,\n  email: localStorage.getItem('email') || '',\n  token: localStorage.getItem('token') || '',\n  loading: false,\n  error: '',\n  visitorId: '',\n};\n\nexport const auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setIsAuth: (state, action) => {\n      const { email, token, isAuth } = action.payload;\n\n      state.email = email;\n      localStorage.setItem('email', email);\n\n      state.token = token;\n      localStorage.setItem('token', token);\n\n      state.isAuth = isAuth;\n    },\n    logOut: (state, action) => {\n      state.email = '';\n      localStorage.removeItem('email');\n\n      state.token = '';\n      localStorage.removeItem('token');\n\n      state.isAuth = false;\n    },\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    setVisitorId: (state, action) => {\n      state.visitorId = action.payload;\n    },\n  },\n});\n\nexport const { setIsAuth, setLoading, setError, logOut, setVisitorId } =\n  auth.actions;\n\nexport default auth.reducer;\n"]},"metadata":{},"sourceType":"module"}