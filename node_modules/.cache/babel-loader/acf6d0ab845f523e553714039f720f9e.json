{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useQuery } from 'react-query';\nexport const useUser = (email, token) => {\n  _s();\n\n  return useQuery(['user', email, token], getUser, {\n    retry: 0,\n    staleTime: 60 * 1000 * 5,\n    cacheTime: 0\n  });\n};\n\n_s(useUser, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nconst getUser = async context => {\n  const [, email, token] = context.queryKey;\n\n  try {\n    const res = await axios({\n      method: 'get',\n      url: `/api/admin/users?email=${email}`,\n      headers: {\n        Authorization: `${token}`\n      }\n    });\n\n    if (res.status >= 200 && res.status < 300) {\n      return res.data;\n    }\n  } catch (err) {\n    if (axios.isAxiosError(err)) {\n      if (err && err.response) {\n        throw Error(err.response.data.message);\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/hooks/useUser.js"],"names":["axios","useQuery","useUser","email","token","getUser","retry","staleTime","cacheTime","context","queryKey","res","method","url","headers","Authorization","status","data","err","isAxiosError","response","Error","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,KAAR;AAAA;;AAAA,SACrBH,QAAQ,CAAC,CAAC,MAAD,EAASE,KAAT,EAAgBC,KAAhB,CAAD,EAAyBC,OAAzB,EAAkC;AACxCC,IAAAA,KAAK,EAAE,CADiC;AAExCC,IAAAA,SAAS,EAAE,KAAK,IAAL,GAAY,CAFiB;AAGxCC,IAAAA,SAAS,EAAE;AAH6B,GAAlC,CADa;AAAA,CAAhB;;GAAMN,O;UACXD,Q;;;AAMF,MAAMI,OAAO,GAAG,MAAOI,OAAP,IAAmB;AACjC,QAAM,GAAGN,KAAH,EAAUC,KAAV,IAAmBK,OAAO,CAACC,QAAjC;;AACA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC;AACtBY,MAAAA,MAAM,EAAE,KADc;AAEtBC,MAAAA,GAAG,EAAG,0BAAyBV,KAAM,EAFf;AAGtBW,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,GAAEX,KAAM;AADjB;AAHa,KAAD,CAAvB;;AAOA,QAAIO,GAAG,CAACK,MAAJ,IAAc,GAAd,IAAqBL,GAAG,CAACK,MAAJ,GAAa,GAAtC,EAA2C;AACzC,aAAOL,GAAG,CAACM,IAAX;AACD;AACF,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZ,QAAIlB,KAAK,CAACmB,YAAN,CAAmBD,GAAnB,CAAJ,EAA6B;AAC3B,UAAIA,GAAG,IAAIA,GAAG,CAACE,QAAf,EAAyB;AACvB,cAAMC,KAAK,CAACH,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBK,OAAnB,CAAX;AACD;AACF;AACF;AACF,CApBD","sourcesContent":["import axios from 'axios';\nimport { useQuery } from 'react-query';\n\nexport const useUser = (email, token) =>\n  useQuery(['user', email, token], getUser, {\n    retry: 0,\n    staleTime: 60 * 1000 * 5,\n    cacheTime: 0,\n  });\n\nconst getUser = async (context) => {\n  const [, email, token] = context.queryKey;\n  try {\n    const res = await axios({\n      method: 'get',\n      url: `/api/admin/users?email=${email}`,\n      headers: {\n        Authorization: `${token}`,\n      },\n    });\n    if (res.status >= 200 && res.status < 300) {\n      return res.data;\n    }\n  } catch (err) {\n    if (axios.isAxiosError(err)) {\n      if (err && err.response) {\n        throw Error(err.response.data.message);\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}