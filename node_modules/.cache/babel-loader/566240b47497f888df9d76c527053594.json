{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { LineSeries } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n/**\r\n * Smoothed line series suitable for vertical plots.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\r\n */\n\nvar SmoothedYLineSeries =\n/** @class */\nfunction (_super) {\n  __extends(SmoothedYLineSeries, _super);\n\n  function SmoothedYLineSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(SmoothedYLineSeries.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)));\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  Object.defineProperty(SmoothedYLineSeries.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      if (this.isDirty(\"tension\")) {\n        this.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)));\n        this._valuesDirty = true;\n      }\n\n      _super.prototype._updateChildren.call(this);\n    }\n  });\n  Object.defineProperty(SmoothedYLineSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"SmoothedYLineSeries\"\n  });\n  Object.defineProperty(SmoothedYLineSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: LineSeries.classNames.concat([SmoothedYLineSeries.className])\n  });\n  return SmoothedYLineSeries;\n}(LineSeries);\n\nexport { SmoothedYLineSeries };","map":{"version":3,"sources":["../../../../../../src/.internal/charts/xy/series/SmoothedYLineSeries.ts"],"names":[],"mappings":";AAAA,SAAS,UAAT,QAAyF,cAAzF;AACA,SAAS,qBAAT,QAAsC,uCAAtC;AAqBA;;;;AAIG;;AACH,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;;AAAzC,WAAA,mBAAA,GAAA;;AAqBC;;;;;;WAbA,iBAAA;AACC,WAAK,WAAL,CAAiB,cAAjB,EAAiC,qBAAqB,CAAC,KAAK,GAAL,CAAS,SAAT,EAAoB,GAApB,CAAD,CAAtD;;AACA,MAAA,MAAA,CAAA,SAAA,CAAM,SAAN,CAAe,IAAf,CAAe,IAAf;AACA;;;;;;WAED,iBAAA;AACC,UAAI,KAAK,OAAL,CAAa,SAAb,CAAJ,EAA6B;AAC5B,aAAK,GAAL,CAAS,cAAT,EAAyB,qBAAqB,CAAC,KAAK,GAAL,CAAS,SAAT,EAAoB,GAApB,CAAD,CAA9C;AACA,aAAK,YAAL,GAAoB,IAApB;AACA;;AAED,MAAA,MAAA,CAAA,SAAA,CAAM,eAAN,CAAqB,IAArB,CAAqB,IAArB;AACA;;AAnBD,EAAA,MAAA,CAAA,cAAA,CAAA,mBAAA,EAAA,WAAA,EAAA;oBAAA;sBAAA;kBAAA;WAAkC;AAAlC,GAAA;AACA,EAAA,MAAA,CAAA,cAAA,CAAA,mBAAA,EAAA,YAAA,EAAA;oBAAA;sBAAA;kBAAA;WAA0C,UAAU,CAAC,UAAX,CAAsB,MAAtB,CAA6B,CAAC,mBAAmB,CAAC,SAArB,CAA7B;AAA1C,GAAA;AAmBD,SAAA,mBAAA;AAAC,CArBD,CAAyC,UAAzC,CAAA;;SAAa,mB","sourcesContent":["import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}