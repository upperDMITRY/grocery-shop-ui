{"ast":null,"code":"/**\r\n * Modified from Pixi:\r\n *\r\n * The MIT License\r\n *\r\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n * THE SOFTWARE.\r\n */\n/**\r\n * @ignore\r\n */\nvar Matrix = /** @class */function () {\n  function Matrix(a, b, c, d, tx, ty) {\n    if (a === void 0) {\n      a = 1;\n    }\n    if (b === void 0) {\n      b = 0;\n    }\n    if (c === void 0) {\n      c = 0;\n    }\n    if (d === void 0) {\n      d = 1;\n    }\n    if (tx === void 0) {\n      tx = 0;\n    }\n    if (ty === void 0) {\n      ty = 0;\n    }\n    Object.defineProperty(this, \"a\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"b\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"c\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"d\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"tx\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.d = d;\n    this.tx = tx;\n    this.ty = ty;\n  }\n  /**\r\n   * Sets the matrix based on all the available properties\r\n   */\n  Object.defineProperty(Matrix.prototype, \"setTransform\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y, pivotX, pivotY, rotation, scale) {\n      if (scale === void 0) {\n        scale = 1;\n      }\n      this.a = Math.cos(rotation) * scale;\n      this.b = Math.sin(rotation) * scale;\n      this.c = -Math.sin(rotation) * scale;\n      this.d = Math.cos(rotation) * scale;\n      this.tx = x - (pivotX * this.a + pivotY * this.c);\n      this.ty = y - (pivotX * this.b + pivotY * this.d);\n    }\n  });\n  /**\r\n   * Get a new position with the current transformation applied.\r\n   * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\r\n   */\n  Object.defineProperty(Matrix.prototype, \"apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (origin) {\n      return {\n        x: this.a * origin.x + this.c * origin.y + this.tx,\n        y: this.b * origin.x + this.d * origin.y + this.ty\n      };\n    }\n  });\n  /**\r\n   * Get a new position with the inverse of the current transformation applied.\r\n   * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\r\n   */\n  Object.defineProperty(Matrix.prototype, \"applyInverse\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (origin) {\n      var id = 1 / (this.a * this.d + this.c * -this.b);\n      return {\n        x: this.d * id * origin.x + -this.c * id * origin.y + (this.ty * this.c - this.tx * this.d) * id,\n        y: this.a * id * origin.y + -this.b * id * origin.x + (-this.ty * this.a + this.tx * this.b) * id\n      };\n    }\n  });\n  /**\r\n   * Appends the given Matrix to this Matrix.\r\n   */\n  Object.defineProperty(Matrix.prototype, \"append\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (matrix) {\n      var a1 = this.a;\n      var b1 = this.b;\n      var c1 = this.c;\n      var d1 = this.d;\n      this.a = matrix.a * a1 + matrix.b * c1;\n      this.b = matrix.a * b1 + matrix.b * d1;\n      this.c = matrix.c * a1 + matrix.d * c1;\n      this.d = matrix.c * b1 + matrix.d * d1;\n      this.tx = matrix.tx * a1 + matrix.ty * c1 + this.tx;\n      this.ty = matrix.tx * b1 + matrix.ty * d1 + this.ty;\n    }\n  });\n  /**\r\n   * Prepends the given Matrix to this Matrix.\r\n   */\n  Object.defineProperty(Matrix.prototype, \"prepend\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (matrix) {\n      var tx1 = this.tx;\n      if (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n        var a1 = this.a;\n        var c1 = this.c;\n        this.a = a1 * matrix.a + this.b * matrix.c;\n        this.b = a1 * matrix.b + this.b * matrix.d;\n        this.c = c1 * matrix.a + this.d * matrix.c;\n        this.d = c1 * matrix.b + this.d * matrix.d;\n      }\n      this.tx = tx1 * matrix.a + this.ty * matrix.c + matrix.tx;\n      this.ty = tx1 * matrix.b + this.ty * matrix.d + matrix.ty;\n    }\n  });\n  /**\r\n   * Copies the other matrix's properties into this matrix\r\n   */\n  Object.defineProperty(Matrix.prototype, \"copyFrom\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (matrix) {\n      this.a = matrix.a;\n      this.b = matrix.b;\n      this.c = matrix.c;\n      this.d = matrix.d;\n      this.tx = matrix.tx;\n      this.ty = matrix.ty;\n    }\n  });\n  return Matrix;\n}();\nexport { Matrix };","map":{"version":3,"names":["Matrix","a","b","c","d","tx","ty","Object","defineProperty","value","x","y","pivotX","pivotY","rotation","scale","Math","cos","sin","origin","id","matrix","a1","b1","c1","d1","tx1"],"sources":["../../../../../src/.internal/core/util/Matrix.ts"],"sourcesContent":["/**\n * Modified from Pixi:\n *\n * The MIT License\n *\n * Copyright (c) 2013-2017 Mathew Groves, Chad Engler\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport type { IPoint } from \"./IPoint\";\n\n/**\n * @ignore\n */\nexport class Matrix {\n\tpublic a: number;\n\tpublic b: number;\n\tpublic c: number;\n\tpublic d: number;\n\tpublic tx: number;\n\tpublic ty: number;\n\n\tconstructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n\n\t/**\n\t * Sets the matrix based on all the available properties\n\t */\n\tsetTransform(x: number, y: number, pivotX: number, pivotY: number, rotation: number, scale: number = 1): void {\n\t\tthis.a = Math.cos(rotation) * scale;\n\t\tthis.b = Math.sin(rotation) * scale;\n\t\tthis.c = -Math.sin(rotation) * scale;\n\t\tthis.d = Math.cos(rotation) * scale;\n\t\tthis.tx = x - ((pivotX * this.a) + (pivotY * this.c));\n\t\tthis.ty = y - ((pivotX * this.b) + (pivotY * this.d));\n\t}\n\n\t/**\n\t * Get a new position with the current transformation applied.\n\t * Can be used to go from a child's coordinate space to the world coordinate space. (e.g. rendering)\n\t */\n\tapply(origin: IPoint): IPoint {\n\t\treturn {\n\t\t\tx: (this.a * origin.x) + (this.c * origin.y) + this.tx,\n\t\t\ty: (this.b * origin.x) + (this.d * origin.y) + this.ty\n\t\t};\n\t}\n\n\t/**\n\t * Get a new position with the inverse of the current transformation applied.\n\t * Can be used to go from the world coordinate space to a child's coordinate space. (e.g. input)\n\t */\n\tapplyInverse(origin: IPoint): IPoint {\n\t\tconst id = 1 / ((this.a * this.d) + (this.c * -this.b));\n\n\t\treturn {\n\t\t\tx: (this.d * id * origin.x) + (-this.c * id * origin.y) + (((this.ty * this.c) - (this.tx * this.d)) * id),\n\t\t\ty: (this.a * id * origin.y) + (-this.b * id * origin.x) + (((-this.ty * this.a) + (this.tx * this.b)) * id)\n\t\t};\n\t}\n\n\t/**\n\t * Appends the given Matrix to this Matrix.\n\t */\n\tappend(matrix: Matrix): void {\n\t\tconst a1 = this.a;\n\t\tconst b1 = this.b;\n\t\tconst c1 = this.c;\n\t\tconst d1 = this.d;\n\t\tthis.a = (matrix.a * a1) + (matrix.b * c1);\n\t\tthis.b = (matrix.a * b1) + (matrix.b * d1);\n\t\tthis.c = (matrix.c * a1) + (matrix.d * c1);\n\t\tthis.d = (matrix.c * b1) + (matrix.d * d1);\n\t\tthis.tx = (matrix.tx * a1) + (matrix.ty * c1) + this.tx;\n\t\tthis.ty = (matrix.tx * b1) + (matrix.ty * d1) + this.ty;\n\t}\n\n\t/**\n\t * Prepends the given Matrix to this Matrix.\n\t */\n\tprepend(matrix: Matrix): void {\n\t\tconst tx1 = this.tx;\n\t\tif (matrix.a !== 1 || matrix.b !== 0 || matrix.c !== 0 || matrix.d !== 1) {\n\t\t\tconst a1 = this.a;\n\t\t\tconst c1 = this.c;\n\t\t\tthis.a = (a1 * matrix.a) + (this.b * matrix.c);\n\t\t\tthis.b = (a1 * matrix.b) + (this.b * matrix.d);\n\t\t\tthis.c = (c1 * matrix.a) + (this.d * matrix.c);\n\t\t\tthis.d = (c1 * matrix.b) + (this.d * matrix.d);\n\t\t}\n\t\tthis.tx = (tx1 * matrix.a) + (this.ty * matrix.c) + matrix.tx;\n\t\tthis.ty = (tx1 * matrix.b) + (this.ty * matrix.d) + matrix.ty;\n\t}\n\n\t/**\n\t * Copies the other matrix's properties into this matrix\n\t */\n\tcopyFrom(matrix: Matrix): void {\n\t\tthis.a = matrix.a;\n\t\tthis.b = matrix.b;\n\t\tthis.c = matrix.c;\n\t\tthis.d = matrix.d;\n\t\tthis.tx = matrix.tx;\n\t\tthis.ty = matrix.ty;\n\t}\n}\n\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;;AAGA,IAAAA,MAAA;EAQC,SAAAA,OAAYC,CAAK,EAAEC,CAAK,EAAEC,CAAK,EAAEC,CAAK,EAAEC,EAAM,EAAEC,EAAM;IAA1C,IAAAL,CAAA;MAAAA,CAAA,IAAK;IAAA;IAAE,IAAAC,CAAA;MAAAA,CAAA,IAAK;IAAA;IAAE,IAAAC,CAAA;MAAAA,CAAA,IAAK;IAAA;IAAE,IAAAC,CAAA;MAAAA,CAAA,IAAK;IAAA;IAAE,IAAAC,EAAA;MAAAA,EAAA,IAAM;IAAA;IAAE,IAAAC,EAAA;MAAAA,EAAA,IAAM;IAAA;IAPtDC,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IAGC,IAAI,CAACP,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,EAAE,GAAGA,EAAE;EACb;EAEA;;;;;;;WAGA,SAAAG,CAAaC,CAAS,EAAEC,CAAS,EAAEC,MAAc,EAAEC,MAAc,EAAEC,QAAgB,EAAEC,KAAiB;MAAjB,IAAAA,KAAA;QAAAA,KAAA,IAAiB;MAAA;MACrG,IAAI,CAACd,CAAC,GAAGe,IAAI,CAACC,GAAG,CAACH,QAAQ,CAAC,GAAGC,KAAK;MACnC,IAAI,CAACb,CAAC,GAAGc,IAAI,CAACE,GAAG,CAACJ,QAAQ,CAAC,GAAGC,KAAK;MACnC,IAAI,CAACZ,CAAC,GAAG,CAACa,IAAI,CAACE,GAAG,CAACJ,QAAQ,CAAC,GAAGC,KAAK;MACpC,IAAI,CAACX,CAAC,GAAGY,IAAI,CAACC,GAAG,CAACH,QAAQ,CAAC,GAAGC,KAAK;MACnC,IAAI,CAACV,EAAE,GAAGK,CAAC,IAAKE,MAAM,GAAG,IAAI,CAACX,CAAC,GAAKY,MAAM,GAAG,IAAI,CAACV,CAAE,CAAC;MACrD,IAAI,CAACG,EAAE,GAAGK,CAAC,IAAKC,MAAM,GAAG,IAAI,CAACV,CAAC,GAAKW,MAAM,GAAG,IAAI,CAACT,CAAE,CAAC;IACtD;;EAEA;;;;;;;;WAIA,SAAAK,CAAMU,MAAc;MACnB,OAAO;QACNT,CAAC,EAAG,IAAI,CAACT,CAAC,GAAGkB,MAAM,CAACT,CAAC,GAAK,IAAI,CAACP,CAAC,GAAGgB,MAAM,CAACR,CAAE,GAAG,IAAI,CAACN,EAAE;QACtDM,CAAC,EAAG,IAAI,CAACT,CAAC,GAAGiB,MAAM,CAACT,CAAC,GAAK,IAAI,CAACN,CAAC,GAAGe,MAAM,CAACR,CAAE,GAAG,IAAI,CAACL;OACpD;IACF;;EAEA;;;;;;;;WAIA,SAAAG,CAAaU,MAAc;MAC1B,IAAMC,EAAE,GAAG,CAAC,IAAK,IAAI,CAACnB,CAAC,GAAG,IAAI,CAACG,CAAC,GAAK,IAAI,CAACD,CAAC,GAAG,CAAC,IAAI,CAACD,CAAE,CAAC;MAEvD,OAAO;QACNQ,CAAC,EAAG,IAAI,CAACN,CAAC,GAAGgB,EAAE,GAAGD,MAAM,CAACT,CAAC,GAAK,CAAC,IAAI,CAACP,CAAC,GAAGiB,EAAE,GAAGD,MAAM,CAACR,CAAE,GAAI,CAAE,IAAI,CAACL,EAAE,GAAG,IAAI,CAACH,CAAC,GAAK,IAAI,CAACE,EAAE,GAAG,IAAI,CAACD,CAAE,IAAIgB,EAAG;QAC1GT,CAAC,EAAG,IAAI,CAACV,CAAC,GAAGmB,EAAE,GAAGD,MAAM,CAACR,CAAC,GAAK,CAAC,IAAI,CAACT,CAAC,GAAGkB,EAAE,GAAGD,MAAM,CAACT,CAAE,GAAI,CAAE,CAAC,IAAI,CAACJ,EAAE,GAAG,IAAI,CAACL,CAAC,GAAK,IAAI,CAACI,EAAE,GAAG,IAAI,CAACH,CAAE,IAAIkB;OACxG;IACF;;EAEA;;;;;;;WAGA,SAAAX,CAAOY,MAAc;MACpB,IAAMC,EAAE,GAAG,IAAI,CAACrB,CAAC;MACjB,IAAMsB,EAAE,GAAG,IAAI,CAACrB,CAAC;MACjB,IAAMsB,EAAE,GAAG,IAAI,CAACrB,CAAC;MACjB,IAAMsB,EAAE,GAAG,IAAI,CAACrB,CAAC;MACjB,IAAI,CAACH,CAAC,GAAIoB,MAAM,CAACpB,CAAC,GAAGqB,EAAE,GAAKD,MAAM,CAACnB,CAAC,GAAGsB,EAAG;MAC1C,IAAI,CAACtB,CAAC,GAAImB,MAAM,CAACpB,CAAC,GAAGsB,EAAE,GAAKF,MAAM,CAACnB,CAAC,GAAGuB,EAAG;MAC1C,IAAI,CAACtB,CAAC,GAAIkB,MAAM,CAAClB,CAAC,GAAGmB,EAAE,GAAKD,MAAM,CAACjB,CAAC,GAAGoB,EAAG;MAC1C,IAAI,CAACpB,CAAC,GAAIiB,MAAM,CAAClB,CAAC,GAAGoB,EAAE,GAAKF,MAAM,CAACjB,CAAC,GAAGqB,EAAG;MAC1C,IAAI,CAACpB,EAAE,GAAIgB,MAAM,CAAChB,EAAE,GAAGiB,EAAE,GAAKD,MAAM,CAACf,EAAE,GAAGkB,EAAG,GAAG,IAAI,CAACnB,EAAE;MACvD,IAAI,CAACC,EAAE,GAAIe,MAAM,CAAChB,EAAE,GAAGkB,EAAE,GAAKF,MAAM,CAACf,EAAE,GAAGmB,EAAG,GAAG,IAAI,CAACnB,EAAE;IACxD;;EAEA;;;;;;;WAGA,SAAAG,CAAQY,MAAc;MACrB,IAAMK,GAAG,GAAG,IAAI,CAACrB,EAAE;MACnB,IAAIgB,MAAM,CAACpB,CAAC,KAAK,CAAC,IAAIoB,MAAM,CAACnB,CAAC,KAAK,CAAC,IAAImB,MAAM,CAAClB,CAAC,KAAK,CAAC,IAAIkB,MAAM,CAACjB,CAAC,KAAK,CAAC,EAAE;QACzE,IAAMkB,EAAE,GAAG,IAAI,CAACrB,CAAC;QACjB,IAAMuB,EAAE,GAAG,IAAI,CAACrB,CAAC;QACjB,IAAI,CAACF,CAAC,GAAIqB,EAAE,GAAGD,MAAM,CAACpB,CAAC,GAAK,IAAI,CAACC,CAAC,GAAGmB,MAAM,CAAClB,CAAE;QAC9C,IAAI,CAACD,CAAC,GAAIoB,EAAE,GAAGD,MAAM,CAACnB,CAAC,GAAK,IAAI,CAACA,CAAC,GAAGmB,MAAM,CAACjB,CAAE;QAC9C,IAAI,CAACD,CAAC,GAAIqB,EAAE,GAAGH,MAAM,CAACpB,CAAC,GAAK,IAAI,CAACG,CAAC,GAAGiB,MAAM,CAAClB,CAAE;QAC9C,IAAI,CAACC,CAAC,GAAIoB,EAAE,GAAGH,MAAM,CAACnB,CAAC,GAAK,IAAI,CAACE,CAAC,GAAGiB,MAAM,CAACjB,CAAE;;MAE/C,IAAI,CAACC,EAAE,GAAIqB,GAAG,GAAGL,MAAM,CAACpB,CAAC,GAAK,IAAI,CAACK,EAAE,GAAGe,MAAM,CAAClB,CAAE,GAAGkB,MAAM,CAAChB,EAAE;MAC7D,IAAI,CAACC,EAAE,GAAIoB,GAAG,GAAGL,MAAM,CAACnB,CAAC,GAAK,IAAI,CAACI,EAAE,GAAGe,MAAM,CAACjB,CAAE,GAAGiB,MAAM,CAACf,EAAE;IAC9D;;EAEA;;;;;;;WAGA,SAAAG,CAASY,MAAc;MACtB,IAAI,CAACpB,CAAC,GAAGoB,MAAM,CAACpB,CAAC;MACjB,IAAI,CAACC,CAAC,GAAGmB,MAAM,CAACnB,CAAC;MACjB,IAAI,CAACC,CAAC,GAAGkB,MAAM,CAAClB,CAAC;MACjB,IAAI,CAACC,CAAC,GAAGiB,MAAM,CAACjB,CAAC;MACjB,IAAI,CAACC,EAAE,GAAGgB,MAAM,CAAChB,EAAE;MACnB,IAAI,CAACC,EAAE,GAAGe,MAAM,CAACf,EAAE;IACpB;;EACD,OAAAN,MAAC;AAAD,CAAC,CAjGD"},"metadata":{},"sourceType":"module"}