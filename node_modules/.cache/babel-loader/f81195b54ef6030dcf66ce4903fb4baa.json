{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/Name.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { OutlinedInput, FormControl, InputLabel } from '@mui/material';\nimport { setName } from '../../../../redux/slices/adminProducts';\nimport { forwardRef, memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Name = /*#__PURE__*/memo(_c2 = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const name = useSelector(state => state.adminProducts.name);\n  const disabledSaveButton = useSelector(state => state.adminProducts.disabledSaveButton);\n\n  const handleNameChange = e => {\n    if (name.length < 256) {\n      dispatch(setName(e.target.value.slice(0, 255)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      shrink: true,\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n      ref: ref,\n      autoFocus: true,\n      notched: true,\n      placeholder: disabledSaveButton ? 'Enter product name' : null,\n      label: \"Name\",\n      value: name,\n      onChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}, \"PsH8lAwFqdqlQqccQmyXS8pz3FM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n})));\n_c3 = Name;\nexport default Name;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Name$memo$forwardRef\");\n$RefreshReg$(_c2, \"Name$memo\");\n$RefreshReg$(_c3, \"Name\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/Name.jsx"],"names":["useSelector","useDispatch","OutlinedInput","FormControl","InputLabel","setName","forwardRef","memo","Name","props","ref","dispatch","name","state","adminProducts","disabledSaveButton","handleNameChange","e","length","target","value","slice"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,OAAT,QAAwB,wCAAxB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,OAAjC;;AAEA,MAAMC,IAAI,gBAAGD,IAAI,oBACfD,UAAU,SAAC,CAACG,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AACzB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA,QAAMW,IAAI,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBF,IAAhC,CAAxB;AAEA,QAAMG,kBAAkB,GAAGf,WAAW,CACnCa,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,kBADK,CAAtC;;AAIA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,QAAIL,IAAI,CAACM,MAAL,GAAc,GAAlB,EAAuB;AACrBP,MAAAA,QAAQ,CAACN,OAAO,CAACY,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,CAArB,EAAwB,GAAxB,CAAD,CAAR,CAAR;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,GAAG,EAAEX,GADP;AAEE,MAAA,SAAS,MAFX;AAGE,MAAA,OAAO,MAHT;AAIE,MAAA,WAAW,EAAEK,kBAAkB,GAAG,oBAAH,GAA0B,IAJ3D;AAKE,MAAA,KAAK,EAAC,MALR;AAME,MAAA,KAAK,EAAEH,IANT;AAOE,MAAA,QAAQ,EAAEI;AAPZ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7BS;AAAA,UACSf,WADT,EAGKD,WAHL,EAKmBA,WALnB;AAAA,GADK,CAAjB;MAAMQ,I;AAiCN,eAAeA,IAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { OutlinedInput, FormControl, InputLabel } from '@mui/material';\nimport { setName } from '../../../../redux/slices/adminProducts';\nimport { forwardRef, memo } from 'react';\n\nconst Name = memo(\n  forwardRef((props, ref) => {\n    const dispatch = useDispatch();\n\n    const name = useSelector((state) => state.adminProducts.name);\n\n    const disabledSaveButton = useSelector(\n      (state) => state.adminProducts.disabledSaveButton\n    );\n\n    const handleNameChange = (e) => {\n      if (name.length < 256) {\n        dispatch(setName(e.target.value.slice(0, 255)));\n      }\n    };\n\n    return (\n      <FormControl fullWidth>\n        <InputLabel shrink>Name</InputLabel>\n        <OutlinedInput\n          ref={ref}\n          autoFocus\n          notched\n          placeholder={disabledSaveButton ? 'Enter product name' : null}\n          label=\"Name\"\n          value={name}\n          onChange={handleNameChange}\n        />\n      </FormControl>\n    );\n  })\n);\n\nexport default Name;\n"]},"metadata":{},"sourceType":"module"}