{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Entity } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher } from \"../util/EventDispatcher\";\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\"; //import { populateString } from \"../util/PopulateString\";\n\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\n\nvar SpriteEventDispatcher =\n/** @class */\nfunction (_super) {\n  __extends(SpriteEventDispatcher, _super);\n\n  function SpriteEventDispatcher(sprite) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"_sprite\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_rendererDisposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_dispatchParents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    _this._sprite = sprite;\n    return _this;\n  }\n\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"_makePointerEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(key, event) {\n      return {\n        type: key,\n        originalEvent: event.event,\n        point: event.point,\n        simulated: event.simulated,\n        native: event.native,\n        target: this._sprite\n      };\n    }\n  });\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"_onRenderer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(key, dispatch) {\n      var _this = this; // TODO: is this OK? it'd be good not to require to set this on each individual element\n\n\n      this._sprite.set(\"interactive\", true);\n\n      this._sprite._display.interactive = true;\n      var events = this._rendererDisposers[key];\n\n      if (events === undefined) {\n        var disposer_1 = this._sprite._display.on(key, function (e) {\n          dispatch.call(_this, e);\n        });\n\n        events = this._rendererDisposers[key] = new CounterDisposer(function () {\n          delete _this._rendererDisposers[key];\n          disposer_1.dispose();\n        });\n      }\n\n      return events.increment();\n    }\n  });\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"_on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(once, type, callback, context, shouldClone, dispatch) {\n      var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);\n\n      var rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\n\n      if (rendererEvent !== undefined) {\n        info.disposer = new MultiDisposer([info.disposer, this._onRenderer(type, rendererEvent)]);\n      }\n\n      return info;\n    }\n  });\n  /**\r\n   * Will stop any bubbling up of the event to element's parents.\r\n   *\r\n   * Should be called in an event handler, e.g.:\r\n   *\r\n   * ```TypeScript\r\n   * element.events.on(\"pointerdown\", function(ev) {\r\n   *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n   *   // ...\r\n   *   ev.target.events.stopParentDispatch();\r\n   * });\r\n   * ```\r\n   * ```JavaScript\r\n   * element.events.on(\"pointerdown\", function(ev) {\r\n   *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n   *   // ...\r\n   *   ev.target.events.stopParentDispatch();\r\n   * });\r\n   * ```\r\n   */\n\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"stopParentDispatch\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this._dispatchParents = false;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"dispatchParents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(type, event) {\n      var old = this._dispatchParents;\n      this._dispatchParents = true;\n\n      try {\n        this.dispatch(type, event);\n\n        if (this._dispatchParents && this._sprite.parent) {\n          this._sprite.parent.events.dispatchParents(type, event);\n        }\n      } finally {\n        this._dispatchParents = old;\n      }\n    }\n  });\n  Object.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: {\n      \"click\": function click(event) {\n        if (this.isEnabled(\"click\") && !this._sprite.isDragging() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n          this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n        }\n      },\n      \"rightclick\": function rightclick(event) {\n        if (this.isEnabled(\"rightclick\")) {\n          this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n        }\n      },\n      \"middleclick\": function middleclick(event) {\n        if (this.isEnabled(\"middleclick\")) {\n          this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n        }\n      },\n      \"dblclick\": function dblclick(event) {\n        this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n      },\n      \"pointerover\": function pointerover(event) {\n        if (this.isEnabled(\"pointerover\")) {\n          this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n        }\n      },\n      \"pointerout\": function pointerout(event) {\n        if (this.isEnabled(\"pointerout\")) {\n          this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n        }\n      },\n      \"pointerdown\": function pointerdown(event) {\n        this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n      },\n      \"pointerup\": function pointerup(event) {\n        if (this.isEnabled(\"pointerup\")) {\n          this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n        }\n      },\n      \"globalpointerup\": function globalpointerup(event) {\n        if (this.isEnabled(\"globalpointerup\")) {\n          this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n        }\n      },\n      \"globalpointermove\": function globalpointermove(event) {\n        if (this.isEnabled(\"globalpointermove\")) {\n          this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n        }\n      },\n      \"wheel\": function wheel(event) {\n        if (this.isEnabled(\"wheel\")) {\n          this.dispatch(\"wheel\", {\n            type: \"wheel\",\n            target: this._sprite,\n            originalEvent: event.event,\n            point: event.point\n          });\n        }\n      }\n    }\n  });\n  return SpriteEventDispatcher;\n}(EventDispatcher);\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\n\n\nvar Sprite =\n/** @class */\nfunction (_super) {\n  __extends(Sprite, _super);\n\n  function Sprite() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_adjustedLocalBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    });\n    Object.defineProperty(_this, \"_localBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    });\n    Object.defineProperty(_this, \"_parent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_dataItem\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_templateField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_sizeDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    }); // Will be true only when dragging\n\n    Object.defineProperty(_this, \"_isDragging\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    }); // The event when the dragging starts\n\n    Object.defineProperty(_this, \"_dragEvent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // The position when dragging starts\n\n    Object.defineProperty(_this, \"_dragPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_isHidden\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_isShowing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_isHiding\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_isDown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_downPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_downPoints\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_toggleDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_dragDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_tooltipDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_hoverDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_focusDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_tooltipMoveDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_tooltipPointerDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_statesHandled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Sprite.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this.setPrivateRaw(\"visible\", true);\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_markDirtyKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(key) {\n      _super.prototype._markDirtyKey.call(this, key);\n\n      if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n        this.markDirtyBounds();\n\n        this._addPercentagePositionChildren();\n\n        this.markDirtyPosition();\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_markDirtyPrivateKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(key) {\n      _super.prototype._markDirtyPrivateKey.call(this, key);\n\n      if (key == \"x\" || key == \"y\") {\n        this.markDirtyPosition();\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_removeTemplateField\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      if (this._templateField) {\n        this._templateField._removeObjectTemplate(this);\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_createEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return new SpriteEventDispatcher(this);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_processTemplateField\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var template;\n      var field = this.get(\"templateField\");\n\n      if (field) {\n        var dataItem = this.dataItem;\n\n        if (dataItem) {\n          var context = dataItem.dataContext;\n\n          if (context) {\n            template = context[field];\n\n            if (!(template instanceof Template) && template) {\n              template = Template.new(template);\n            }\n          }\n        }\n      }\n\n      if (this._templateField !== template) {\n        this._removeTemplateField();\n\n        this._templateField = template;\n\n        if (template) {\n          template._setObjectTemplate(this);\n        }\n\n        this._applyTemplates();\n      }\n    }\n  }); // TODO change this to run before the element is added to the parent, so that way\n  //      it doesn't need to apply the themes twice\n\n  Object.defineProperty(Sprite.prototype, \"_setDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(dataItem) {\n      var oldDataItem = this._dataItem;\n      this._dataItem = dataItem;\n\n      this._processTemplateField();\n\n      var eventType = \"dataitemchanged\";\n\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this,\n          oldDataItem: oldDataItem,\n          newDataItem: dataItem\n        });\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"dataItem\", {\n    /**\r\n     * @return DataItem\r\n     */\n    get: function get() {\n      if (this._dataItem) {\n        return this._dataItem;\n      } else {\n        var parent_1 = this._parent;\n\n        while (parent_1) {\n          if (parent_1._dataItem) {\n            return parent_1._dataItem;\n          } else {\n            parent_1 = parent_1._parent;\n          }\n        }\n      }\n    },\n\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\n    set: function set(value) {\n      this._setDataItem(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"_addPercentageSizeChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var parent = this.parent;\n\n      if (parent) {\n        if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n          $array.pushOne(parent._percentageSizeChildren, this);\n        } else {\n          $array.removeFirst(parent._percentageSizeChildren, this);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_addPercentagePositionChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var parent = this.parent;\n\n      if (parent) {\n        if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n          $array.pushOne(parent._percentagePositionChildren, this);\n        } else {\n          $array.removeFirst(parent._percentagePositionChildren, this);\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"markDirtyPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this._root._addDirtyPosition(this);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"updatePivotPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var bounds = this._localBounds;\n\n      if (bounds) {\n        var centerX = this.get(\"centerX\");\n\n        if (centerX != null) {\n          this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\n        }\n\n        var centerY = this.get(\"centerY\");\n\n        if (centerY != null) {\n          this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var _this = this;\n\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isDirty(\"tooltip\")) {\n        var previous = this._prevSettings.tooltip;\n\n        if (previous) {\n          previous.dispose();\n        }\n      }\n\n      if (this.isDirty(\"layer\")) {\n        this._display.setLayer(this.get(\"layer\"));\n\n        this.markDirtyLayer();\n      }\n\n      if (this.isDirty(\"tooltipPosition\")) {\n        var tooltipMoveDp = this._tooltipMoveDp;\n\n        if (tooltipMoveDp) {\n          tooltipMoveDp.dispose();\n          this._tooltipMoveDp = undefined;\n        }\n\n        var tooltipPointerDp = this._tooltipPointerDp;\n\n        if (tooltipPointerDp) {\n          tooltipPointerDp.dispose();\n          this._tooltipPointerDp = undefined;\n        }\n\n        if (this.get(\"tooltipPosition\") == \"pointer\") {\n          this._tooltipPointerDp = new MultiDisposer([this.events.on(\"pointerover\", function () {\n            _this._tooltipMoveDp = _this.events.on(\"globalpointermove\", function (e) {\n              _this.showTooltip(e.point);\n            });\n          }), this.events.on(\"pointerout\", function () {\n            var tooltipMoveDp = _this._tooltipMoveDp;\n\n            if (tooltipMoveDp) {\n              tooltipMoveDp.dispose();\n              _this._tooltipMoveDp = undefined;\n            }\n          })]);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleStates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      if (!this._statesHandled) {\n        if (this.isDirty(\"active\")) {\n          if (this.get(\"active\")) {\n            this.states.applyAnimate(\"active\");\n            this.set(\"ariaChecked\", true);\n          } else {\n            if (!this.isHidden()) {\n              this.states.applyAnimate(\"default\");\n            }\n\n            this.set(\"ariaChecked\", false);\n          }\n\n          this.markDirtyAccessibility();\n        }\n\n        if (this.isDirty(\"disabled\")) {\n          if (this.get(\"disabled\")) {\n            this.states.applyAnimate(\"disabled\");\n            this.set(\"ariaChecked\", false);\n          } else {\n            if (!this.isHidden()) {\n              this.states.applyAnimate(\"default\");\n            }\n\n            this.set(\"ariaChecked\", true);\n          }\n\n          this.markDirtyAccessibility();\n        }\n\n        this._statesHandled = true;\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var _this = this;\n\n      _super.prototype._changed.call(this);\n\n      var display = this._display;\n      var events = this.events;\n\n      if (this.isDirty(\"draggable\")) {\n        var draggable = this.get(\"draggable\");\n\n        if (draggable) {\n          this.set(\"interactive\", true);\n          this._dragDp = new MultiDisposer([events.on(\"pointerdown\", function (ev) {\n            _this.dragStart(ev);\n          }), events.on(\"globalpointermove\", function (ev) {\n            _this.dragMove(ev);\n          }), events.on(\"globalpointerup\", function (ev) {\n            _this.dragStop(ev);\n          })]);\n        } else {\n          if (this._dragDp) {\n            this._dragDp.dispose();\n\n            this._dragDp = undefined;\n          }\n        }\n      }\n\n      if (this.isDirty(\"tooltipText\")) {\n        var tooltipText = this.get(\"tooltipText\");\n\n        if (tooltipText) {\n          this._tooltipDp = new MultiDisposer([events.on(\"pointerover\", function () {\n            _this.showTooltip();\n          }), events.on(\"pointerout\", function () {\n            _this.hideTooltip();\n          })]);\n        } else {\n          if (this._tooltipDp) {\n            this._tooltipDp.dispose();\n\n            this._tooltipDp = undefined;\n          }\n        }\n      }\n\n      if (this.isDirty(\"toggleKey\")) {\n        var toggleKey_1 = this.get(\"toggleKey\");\n\n        if (toggleKey_1 && toggleKey_1 != \"none\") {\n          this._toggleDp = events.on(\"click\", function () {\n            if (!_this._isDragging) {\n              _this.set(toggleKey_1, !_this.get(toggleKey_1));\n            }\n          });\n        } else {\n          if (this._toggleDp) {\n            this._toggleDp.dispose();\n\n            this._toggleDp = undefined;\n          }\n        }\n      }\n\n      this._handleStates();\n\n      if (this.isDirty(\"opacity\")) {\n        display.alpha = Math.max(0, this.get(\"opacity\", 1));\n      }\n\n      if (this.isDirty(\"rotation\")) {\n        this.markDirtyBounds();\n        display.angle = this.get(\"rotation\", 0);\n      }\n\n      if (this.isDirty(\"scale\")) {\n        this.markDirtyBounds();\n        display.scale = this.get(\"scale\", 0);\n      }\n\n      if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n        this.markDirtyBounds();\n        this.updatePivotPoint();\n      }\n\n      if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n          display.visible = false;\n        } else {\n          display.visible = true;\n        }\n\n        this.markDirtyBounds();\n\n        if (this.get(\"focusable\")) {\n          this.markDirtyAccessibility();\n        }\n      }\n\n      if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n        this.markDirtyBounds();\n\n        this._addPercentageSizeChildren();\n\n        var parent_2 = this.parent;\n\n        if (parent_2) {\n          if (this.isDirty(\"width\") && this.get(\"width\") instanceof Percent || this.isDirty(\"height\") && this.get(\"height\") instanceof Percent) {\n            parent_2.markDirty();\n            parent_2._prevWidth = 0;\n          }\n        }\n\n        this._sizeDirty = true;\n      }\n\n      if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n        this.markDirtyBounds();\n        this._sizeDirty = true;\n      }\n\n      if (this._sizeDirty) {\n        this._updateSize();\n      }\n\n      if (this.isDirty(\"wheelable\")) {\n        var wheelable = this.get(\"wheelable\");\n\n        if (wheelable) {\n          this.set(\"interactive\", true);\n        }\n\n        display.wheelable = wheelable ? true : false;\n      } // Accessibility\n\n\n      if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n        if (this.get(\"focusable\")) {\n          this._root._registerTabindexOrder(this);\n        } else {\n          this._root._unregisterTabindexOrder(this);\n        }\n      }\n\n      if (this.isDirty(\"filter\")) {\n        //this.markDirtyBounds();\n        display.filter = this.get(\"filter\");\n      }\n\n      if (this.isDirty(\"cursorOverStyle\")) {\n        display.cursorOverStyle = this.get(\"cursorOverStyle\");\n      }\n\n      if (this.isDirty(\"hoverOnFocus\")) {\n        if (this.get(\"hoverOnFocus\")) {\n          this._focusDp = new MultiDisposer([events.on(\"focus\", function () {\n            // TODO: proper hover, not just tooltip\n            _this.showTooltip();\n          }), events.on(\"blur\", function () {\n            // TODO: proper hover, not just tooltip\n            _this.hideTooltip();\n          })]);\n        } else {\n          if (this._focusDp) {\n            this._focusDp.dispose();\n\n            this._focusDp = undefined;\n          }\n        }\n      }\n\n      if (this.isDirty(\"focusable\")) {\n        if (this.get(\"focusable\")) {\n          this._root._registerTabindexOrder(this);\n        } else {\n          this._root._unregisterTabindexOrder(this);\n        }\n\n        this.markDirtyAccessibility();\n      }\n\n      if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\")) {\n        // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n        // @todo make sure ariaLabel gets populated in Root\n        this.markDirtyAccessibility();\n      }\n\n      if (this.isDirty(\"exportable\")) {\n        display.exportable = this.get(\"exportable\");\n      }\n\n      if (this.isDirty(\"interactive\")) {\n        var events_1 = this.events;\n\n        if (this.get(\"interactive\")) {\n          this._hoverDp = new MultiDisposer([events_1.on(\"click\", function (ev) {\n            if ($utils.isTouchEvent(ev.originalEvent)) {\n              if (!_this.getPrivate(\"touchHovering\")) {\n                _this.setTimeout(function () {\n                  _this._handleOver();\n\n                  if (_this.get(\"tooltipText\")) {\n                    _this.showTooltip();\n                  }\n\n                  _this.setPrivateRaw(\"touchHovering\", true);\n                }, 10);\n              }\n            }\n          }), events_1.on(\"globalpointerup\", function (ev) {\n            if ($utils.isTouchEvent(ev.originalEvent)) {\n              if (_this.getPrivate(\"touchHovering\")) {\n                _this._handleOut();\n\n                if (_this.get(\"tooltipText\")) {\n                  _this.hideTooltip();\n                }\n              }\n\n              _this.setPrivateRaw(\"touchHovering\", false);\n            }\n\n            if (_this._isDown) {\n              _this._handleUp(ev);\n            } //this._isDown = false;\n\n          }), events_1.on(\"pointerover\", function () {\n            _this._handleOver();\n          }), events_1.on(\"pointerout\", function () {\n            _this._handleOut();\n          }), events_1.on(\"pointerdown\", function (e) {\n            _this._handleDown(e);\n          })]);\n        } else {\n          if (this._hoverDp) {\n            this._hoverDp.dispose();\n\n            this._hoverDp = undefined;\n          }\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"dragStart\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(e) {\n      this._dragEvent = e;\n      this.events.stopParentDispatch();\n    }\n  });\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"dragStop\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(e) {\n      this._dragEvent = undefined;\n      this._dragPoint = undefined;\n      this.events.stopParentDispatch();\n\n      if (this._isDragging) {\n        this._isDragging = false;\n        var type = \"dragstop\";\n\n        if (this.events.isEnabled(type)) {\n          this.events.dispatch(type, {\n            type: type,\n            target: this,\n            originalEvent: e.originalEvent,\n            point: e.point,\n            simulated: e.simulated\n          });\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleOver\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      if (!this.isHidden()) {\n        if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n          this.states.applyAnimate(\"hoverActive\");\n        } else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n          this.states.applyAnimate(\"hoverDisabled\");\n        } else {\n          this.states.applyAnimate(\"hover\");\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleOut\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      if (!this.isHidden()) {\n        if (this.get(\"active\") && this.states.lookup(\"active\")) {\n          this.states.applyAnimate(\"active\");\n        } else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n          this.states.applyAnimate(\"disabled\");\n        } else {\n          if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n            this.states.applyAnimate(\"default\");\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleUp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(e) {\n      if (!this.isHidden()) {\n        if (this.get(\"active\") && this.states.lookup(\"active\")) {\n          this.states.applyAnimate(\"active\");\n        } else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n          this.states.applyAnimate(\"disabled\");\n        } else if (this.states.lookup(\"down\")) {\n          if (this.isHover()) {\n            this.states.applyAnimate(\"hover\");\n          } else {\n            this.states.applyAnimate(\"default\");\n          }\n        } // @todo remove this once migrated to _downPoints\n\n\n        this._downPoint = undefined;\n        var pointerId = $utils.getPointerId(e.originalEvent);\n        delete this._downPoints[pointerId];\n\n        if ($object.keys(this._downPoints).length == 0) {\n          this._isDown = false;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_hasMoved\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(e) {\n      // @todo remove this once migrated to _downPoints\n      // if (this._downPoint) {\n      // \tconst x = Math.abs(this._downPoint.x - e.point.x);\n      // \tconst y = Math.abs(this._downPoint.y - e.point.y);\n      // \treturn (x > 5) || (y > 5);\n      // }\n      var pointerId = $utils.getPointerId(e.originalEvent);\n      var downPoint = this._downPoints[pointerId];\n\n      if (downPoint) {\n        var x = Math.abs(downPoint.x - e.point.x);\n        var y = Math.abs(downPoint.y - e.point.y);\n        return x > 5 || y > 5;\n      }\n\n      return false;\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleDown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(e) {\n      if (!this.isHidden() && !this.get(\"disabled\")) {\n        if (this.states.lookup(\"down\")) {\n          this.states.applyAnimate(\"down\");\n        }\n\n        this._downPoint = {\n          x: e.point.x,\n          y: e.point.y\n        }; // @todo remove this once migrated to _downPoints\n\n        this._isDown = true;\n        var pointerId = $utils.getPointerId(e.originalEvent);\n        this._downPoints[pointerId] = {\n          x: e.point.x,\n          y: e.point.y\n        };\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"dragMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(e) {\n      var dragEvent = this._dragEvent;\n\n      if (dragEvent) {\n        var x = e.point.x - dragEvent.point.x;\n        var y = e.point.y - dragEvent.point.y;\n        var events = this.events;\n\n        if (dragEvent.simulated && !this._isDragging) {\n          this._isDragging = true;\n          this._dragEvent = e;\n          this._dragPoint = {\n            x: this.x(),\n            y: this.y()\n          };\n          var type = \"dragstart\";\n\n          if (events.isEnabled(type)) {\n            events.dispatch(type, {\n              type: type,\n              target: this,\n              originalEvent: e.originalEvent,\n              point: e.point,\n              simulated: e.simulated\n            });\n          }\n        }\n\n        if (this._isDragging) {\n          var dragPoint = this._dragPoint;\n          this.set(\"x\", dragPoint.x + x);\n          this.set(\"y\", dragPoint.y + y);\n          var type = \"dragged\";\n\n          if (events.isEnabled(type)) {\n            events.dispatch(type, {\n              type: type,\n              target: this,\n              originalEvent: e.originalEvent,\n              point: e.point,\n              simulated: e.simulated\n            });\n          }\n        } else {\n          if (Math.hypot(x, y) > 5) {\n            this._isDragging = true;\n            this._dragEvent = e;\n            this._dragPoint = {\n              x: this.x(),\n              y: this.y()\n            };\n            var type = \"dragstart\";\n\n            if (events.isEnabled(type)) {\n              events.dispatch(type, {\n                type: type,\n                target: this,\n                originalEvent: e.originalEvent,\n                point: e.point,\n                simulated: e.simulated\n              });\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {}\n  });\n  Object.defineProperty(Sprite.prototype, \"_getBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this._localBounds = this._display.getLocalBounds();\n    }\n  });\n  /**\r\n   * Returns depth (how deep in the hierachy of the content tree) of this\r\n   * element.\r\n   *\r\n   * @return Depth\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"depth\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var self = this.parent;\n      var depth = 0;\n\n      while (true) {\n        if (self) {\n          ++depth;\n          self = self.parent;\n        } else {\n          return depth;\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"markDirtySize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this._sizeDirty = true;\n      this.markDirty();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"markDirtyBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var display = this._display;\n\n      if (this.get(\"isMeasured\")) {\n        this._root._addDirtyBounds(this);\n\n        display.isMeasured = true;\n        display.invalidateBounds();\n        var parent_3 = this.parent;\n\n        if (parent_3 && this.get(\"position\") != \"absolute\") {\n          if (parent_3.get(\"width\") == null || parent_3.get(\"height\") == null || parent_3.get(\"layout\")) {\n            parent_3.markDirtyBounds();\n          }\n        }\n\n        if (this.get(\"focusable\") && this.isFocus()) {\n          this.markDirtyAccessibility();\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"markDirtyAccessibility\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      //if (this._root.focused(this)) {\n      this._root._invalidateAccessibility(this); //}\n\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"markDirtyLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n      this._display.markDirtyLayer(true);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"markDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      _super.prototype.markDirty.call(this);\n\n      this.markDirtyLayer();\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_updateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var oldBounds = this._adjustedLocalBounds;\n      var newBounds; // if display.visible == false, it still returns bounds\n\n      if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n        newBounds = {\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0\n        };\n        this._localBounds = newBounds;\n        this._adjustedLocalBounds = newBounds;\n      } else {\n        this._getBounds();\n\n        this._fixMinBounds(this._localBounds);\n\n        this.updatePivotPoint();\n        this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n        newBounds = this._adjustedLocalBounds;\n      }\n\n      if (!oldBounds || oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom) {\n        var eventType = \"boundschanged\";\n\n        if (this.events.isEnabled(eventType)) {\n          this.events.dispatch(eventType, {\n            type: eventType,\n            target: this\n          });\n        }\n\n        if (this.parent) {\n          this.parent.markDirty();\n          this.parent.markDirtyBounds();\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_fixMinBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(bounds) {\n      var minWidth = this.get(\"minWidth\");\n      var minHeight = this.get(\"minHeight\");\n\n      if ($type.isNumber(minWidth)) {\n        if (bounds.right - bounds.left < minWidth) {\n          bounds.right = bounds.left + minWidth;\n        }\n      }\n\n      if ($type.isNumber(minHeight)) {\n        if (bounds.bottom - bounds.top < minHeight) {\n          bounds.bottom = bounds.top + minHeight;\n        }\n      }\n\n      var privateWidth = this.getPrivate(\"width\");\n      var privateHeight = this.getPrivate(\"height\");\n\n      if ($type.isNumber(privateWidth)) {\n        bounds.right = bounds.left + privateWidth;\n      }\n\n      if ($type.isNumber(privateHeight)) {\n        bounds.bottom = bounds.top + privateHeight;\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_removeParent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(parent) {\n      if (parent) {\n        parent.children.removeValue(this);\n        $array.removeFirst(parent._percentageSizeChildren, this);\n        $array.removeFirst(parent._percentagePositionChildren, this);\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      _super.prototype._clearDirty.call(this);\n\n      this._sizeDirty = false;\n      this._statesHandled = false;\n    }\n  });\n  /**\r\n   * Simulate hover over element.\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"hover\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this.showTooltip();\n\n      this._handleOver();\n    }\n  });\n  /**\r\n   * Simulate unhover over element.\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"unhover\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this.hideTooltip();\n\n      this._handleOut();\n    }\n  });\n  /**\r\n   * Shows element's [[Tooltip]].\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"showTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(point) {\n      var tooltip = this.getTooltip();\n      var tooltipText = this.get(\"tooltipText\");\n\n      if (tooltipText && tooltip) {\n        var tooltipPosition = this.get(\"tooltipPosition\");\n        var tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n\n        if (tooltipPosition == \"fixed\" || !point) {\n          point = this._display.toGlobal(tooltipTarget._getTooltipPoint());\n        }\n\n        tooltip.set(\"pointTo\", point);\n        tooltip.set(\"tooltipTarget\", tooltipTarget);\n\n        if (!tooltip.get(\"x\")) {\n          tooltip.set(\"x\", point.x);\n        }\n\n        if (!tooltip.get(\"y\")) {\n          tooltip.set(\"y\", point.y);\n        }\n\n        tooltip.label.set(\"text\", tooltipText);\n        var dataItem = this.dataItem;\n\n        if (dataItem) {\n          tooltip.label._setDataItem(dataItem);\n        }\n\n        tooltip.label.text.markDirtyText();\n        var promise = tooltip.show();\n        this.setPrivateRaw(\"showingTooltip\", true);\n        return promise;\n      }\n    }\n  });\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"hideTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var tooltip = this.getTooltip();\n\n      if (tooltip) {\n        var promise = tooltip.hide();\n        this.setPrivateRaw(\"showingTooltip\", false);\n        return promise;\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_getTooltipPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var bounds = this._localBounds;\n\n      if (bounds) {\n        var x = 0;\n        var y = 0;\n\n        if (!this.get(\"isMeasured\")) {\n          x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n          y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n        } else {\n          x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n          y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n        }\n\n        return {\n          x: x,\n          y: y\n        };\n      }\n\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n  });\n  /**\r\n   * Returns [[Tooltip]] used for this element.\r\n   *\r\n   * @return Tooltip\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"getTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var tooltip = this.get(\"tooltip\");\n\n      if (!tooltip) {\n        var parent_4 = this.parent;\n\n        if (parent_4) {\n          return parent_4.getTooltip();\n        }\n      } else {\n        return tooltip;\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_updatePosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var parent = this.parent;\n      var dx = this.get(\"dx\", 0);\n      var dy = this.get(\"dy\", 0);\n      var x = this.get(\"x\");\n\n      var _x = this.getPrivate(\"x\");\n\n      var xx = 0;\n      var yy = 0;\n      var position = this.get(\"position\");\n\n      if (x instanceof Percent) {\n        if (parent) {\n          x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n        } else {\n          x = 0;\n        }\n      }\n\n      if ($type.isNumber(x)) {\n        xx = x + dx;\n      } else {\n        if (_x != null) {\n          xx = _x;\n        } else if (parent) {\n          if (position == \"relative\") {\n            xx = parent.get(\"paddingLeft\", 0) + dx;\n          }\n        }\n      }\n\n      var y = this.get(\"y\");\n\n      var _y = this.getPrivate(\"y\");\n\n      if (y instanceof Percent) {\n        if (parent) {\n          y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n        } else {\n          y = 0;\n        }\n      }\n\n      if ($type.isNumber(y)) {\n        yy = y + dy;\n      } else {\n        if (_y != null) {\n          yy = _y;\n        } else if (parent) {\n          if (position == \"relative\") {\n            yy = parent.get(\"paddingTop\", 0) + dy;\n          }\n        }\n      }\n\n      var display = this._display;\n\n      if (display.x != xx || display.y != yy) {\n        display.invalidateBounds();\n        display.x = xx;\n        display.y = yy;\n        var eventType = \"positionchanged\";\n\n        if (this.events.isEnabled(eventType)) {\n          this.events.dispatch(eventType, {\n            type: eventType,\n            target: this\n          });\n        }\n      } // Update tooltip position together with the Sprite\n\n\n      if (this.getPrivate(\"showingTooltip\")) {\n        this.showTooltip();\n      }\n    }\n  });\n  /**\r\n   * Returns element's actual X position in pixels.\r\n   *\r\n   * @return X (px)\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"x\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var x = this.get(\"x\");\n\n      var _x = this.getPrivate(\"x\");\n\n      var parent = this.parent;\n\n      if (parent) {\n        if (x instanceof Percent) {\n          return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n        } else {\n          if (!$type.isNumber(x)) {\n            if (_x != null) {\n              return _x;\n            } else {\n              return parent.get(\"paddingLeft\", this._display.x);\n            }\n          } else {\n            return x;\n          }\n        }\n      }\n\n      return this._display.x;\n    }\n  });\n  /**\r\n   * Returns element's actual Y position in pixels.\r\n   *\r\n   * @return Y (px)\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"y\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var _y = this.getPrivate(\"y\");\n\n      if (_y != null) {\n        return _y;\n      }\n\n      var y = this.get(\"y\");\n      var parent = this.parent;\n\n      if (parent) {\n        if (y instanceof Percent) {\n          return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n        } else {\n          if (!$type.isNumber(y)) {\n            if (_y != null) {\n              return _y;\n            } else {\n              return parent.get(\"paddingTop\", this._display.y);\n            }\n          } else {\n            return y;\n          }\n        }\n      }\n\n      return this._display.y;\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      _super.prototype._dispose.call(this);\n\n      this._display.dispose();\n\n      this._removeTemplateField();\n\n      this._removeParent(this.parent);\n\n      var tooltip = this.get(\"tooltip\");\n\n      if (tooltip) {\n        tooltip.dispose();\n      }\n\n      this.markDirty();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"adjustedLocalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this._fixMinBounds(this._adjustedLocalBounds);\n\n      return this._adjustedLocalBounds;\n    }\n  });\n  /**\r\n   * Returns local coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"localBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this._localBounds;\n    }\n  });\n  /**\r\n   * Returns adjusted local coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"bounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var bounds = this._adjustedLocalBounds;\n      var x = this.x();\n      var y = this.y();\n      return {\n        left: bounds.left + x,\n        right: bounds.right + x,\n        top: bounds.top + y,\n        bottom: bounds.bottom + y\n      };\n    }\n  });\n  /**\r\n   * Returns global coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"globalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var bounds = this.localBounds();\n      var display = this._display;\n      var p0 = display.toGlobal({\n        x: bounds.left,\n        y: bounds.top\n      });\n      var p1 = display.toGlobal({\n        x: bounds.right,\n        y: bounds.top\n      });\n      var p2 = display.toGlobal({\n        x: bounds.right,\n        y: bounds.bottom\n      });\n      var p3 = display.toGlobal({\n        x: bounds.left,\n        y: bounds.bottom\n      });\n      return {\n        left: Math.min(p0.x, p1.x, p2.x, p3.x),\n        top: Math.min(p0.y, p1.y, p2.y, p3.y),\n        right: Math.max(p0.x, p1.x, p2.x, p3.x),\n        bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n      };\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_onShow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(_duration) {}\n  });\n  Object.defineProperty(Sprite.prototype, \"_onHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(_duration) {}\n  });\n  /**\r\n   * Plays initial reveal animation regardless if element is currently hidden\r\n   * or visible.\r\n   *\r\n   * @param   duration  Duration of the animation in milliseconds\r\n   * @param   delay     Delay showing of the element by X milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"appear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(duration, delay) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , this.hide(0)];\n\n            case 1:\n              _a.sent();\n\n              if (delay) {\n                return [2\n                /*return*/\n                , new Promise(function (success, _error) {\n                  _this.setTimeout(function () {\n                    success(_this.show(duration));\n                  }, delay);\n                })];\n              } else {\n                return [2\n                /*return*/\n                , this.show(duration)];\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Shows currently hidden element and returns a `Promise` which completes\r\n   * when all showing animations are finished.\r\n   *\r\n   * ```TypeScript\r\n   * series.show().then(function(ev) {\r\n   *   console.log(\"Series is now fully visible\");\r\n   * })\r\n   * ```\r\n   * ```JavaScript\r\n   * series.show().then(function(ev) {\r\n   *   console.log(\"Series is now fully visible\");\r\n   * })\r\n   * ```\r\n   *\r\n   * @return Promise\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"show\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var animations;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!!this._isShowing) return [3\n              /*break*/\n              , 2];\n              this._isHidden = false;\n              this._isShowing = true;\n              this._isHiding = false;\n\n              if (this.states.lookup(\"default\").get(\"visible\")) {\n                this.set(\"visible\", true);\n              }\n\n              this._onShow(duration);\n\n              animations = this.states.applyAnimate(\"default\", duration);\n              return [4\n              /*yield*/\n              , waitForAnimations(animations)];\n\n            case 1:\n              _a.sent();\n\n              this._isShowing = false;\n              _a.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides the element and returns a `Promise` which completes when all hiding\r\n   * animations are finished.\r\n   *\r\n   * ```TypeScript\r\n   * series.hide().then(function(ev) {\r\n   *   console.log(\"Series finished hiding\");\r\n   * })\r\n   * ```\r\n   * ```JavaScript\r\n   * series.hide().then(function(ev) {\r\n   *   console.log(\"Series finished hiding\");\r\n   * })\r\n   * ```\r\n   *\r\n   * @return Promise\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"hide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var state, animations;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(!this._isHiding && !this._isHidden)) return [3\n              /*break*/\n              , 2];\n              this._isHiding = true;\n              this._isShowing = false;\n              state = this.states.lookup(\"hidden\");\n\n              if (!state) {\n                state = this.states.create(\"hidden\", {\n                  \"opacity\": 0,\n                  \"visible\": false\n                });\n              }\n\n              this._isHidden = true;\n\n              this._onHide(duration);\n\n              animations = this.states.applyAnimate(\"hidden\", duration);\n              return [4\n              /*yield*/\n              , waitForAnimations(animations)];\n\n            case 1:\n              _a.sent();\n\n              this._isHiding = false;\n              _a.label = 2;\n\n            case 2:\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently hidden.\r\n   *\r\n   * @return Is hidden?\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"isHidden\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this._isHidden;\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently animating to a default state.\r\n   *\r\n   * @return Is showing?\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"isShowing\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this._isShowing;\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently animating to a hidden state.\r\n   *\r\n   * @return Is hiding?\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"isHiding\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this._isHiding;\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently hovered by a pointer.\r\n   *\r\n   * @return Is hovered?\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"isHover\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this._display.hovering();\n    }\n  });\n  /**\r\n   * Returns `true` if this element does currently have focus.\r\n   *\r\n   * @return Is focused?\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"isFocus\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this._root.focused(this);\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently being dragged.\r\n   *\r\n   * @return Is dragged?\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"isDragging\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this._isDragging;\n    }\n  });\n  /**\r\n   * Returns width of this element in pixels.\r\n   *\r\n   * @return Width (px)\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"width\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var width = this.get(\"width\");\n      var maxWidth = this.get(\"maxWidth\");\n      var minWidth = this.get(\"minWidth\");\n      var privateWidth = this.getPrivate(\"width\");\n      var w = 0;\n\n      if ($type.isNumber(privateWidth)) {\n        w = privateWidth;\n      } else {\n        if (width == null) {\n          if (this._adjustedLocalBounds) {\n            w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n          }\n        } else {\n          if (width instanceof Percent) {\n            var parent_5 = this.parent;\n\n            if (parent_5) {\n              w = parent_5.innerWidth() * width.value;\n            } else {\n              w = this._root.width() * width.value;\n            }\n          } else if ($type.isNumber(width)) {\n            w = width;\n          }\n        }\n      }\n\n      if ($type.isNumber(minWidth)) {\n        w = Math.max(minWidth, w);\n      }\n\n      if ($type.isNumber(maxWidth)) {\n        w = Math.min(maxWidth, w);\n      }\n\n      return w;\n    }\n  });\n  /**\r\n   * Returns maximum allowed width of this element in pixels.\r\n   *\r\n   * @return Maximum width (px)\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"maxWidth\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var maxWidth = this.get(\"maxWidth\");\n\n      if ($type.isNumber(maxWidth)) {\n        return maxWidth;\n      } else {\n        var width = this.get(\"width\");\n\n        if ($type.isNumber(width)) {\n          return width;\n        }\n      }\n\n      var parent = this.parent;\n\n      if (parent) {\n        return parent.innerWidth();\n      }\n\n      return this._root.width();\n    }\n  });\n  /**\r\n   * Returns maximum allowed height of this element in pixels.\r\n   *\r\n   * @return Maximum height (px)\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"maxHeight\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var maxHeight = this.get(\"maxHeight\");\n\n      if ($type.isNumber(maxHeight)) {\n        return maxHeight;\n      } else {\n        var height = this.get(\"height\");\n\n        if ($type.isNumber(height)) {\n          return height;\n        }\n      }\n\n      var parent = this.parent;\n\n      if (parent) {\n        return parent.innerHeight();\n      }\n\n      return this._root.height();\n    }\n  });\n  /**\r\n   * Returns height of this element in pixels.\r\n   *\r\n   * @return Height (px)\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"height\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var height = this.get(\"height\");\n      var maxHeight = this.get(\"maxHeight\");\n      var minHeight = this.get(\"minHeight\");\n      var privateHeight = this.getPrivate(\"height\");\n      var h = 0;\n\n      if ($type.isNumber(privateHeight)) {\n        h = privateHeight;\n      } else {\n        if (height == null) {\n          if (this._adjustedLocalBounds) {\n            h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n          }\n        } else {\n          if (height instanceof Percent) {\n            var parent_6 = this.parent;\n\n            if (parent_6) {\n              h = parent_6.innerHeight() * height.value;\n            } else {\n              h = this._root.height() * height.value;\n            }\n          } else if ($type.isNumber(height)) {\n            h = height;\n          }\n        }\n      }\n\n      if ($type.isNumber(minHeight)) {\n        h = Math.max(minHeight, h);\n      }\n\n      if ($type.isNumber(maxHeight)) {\n        h = Math.min(maxHeight, h);\n      }\n\n      return h;\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_findStaticTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(f) {\n      // templateField overrides template\n      if (this._templateField && f(this._templateField)) {\n        return this._templateField;\n      }\n\n      return _super.prototype._findStaticTemplate.call(this, f);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_walkParents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(f) {\n      if (this._parent) {\n        this._walkParent(f);\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_walkParent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(f) {\n      if (this._parent) {\n        this._parent._walkParent(f);\n      }\n\n      f(this);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"parent\", {\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\n    get: function get() {\n      return this._parent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"_setParent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(parent, updateChildren) {\n      if (updateChildren === void 0) {\n        updateChildren = false;\n      }\n\n      var prevParent = this._parent;\n\n      if (parent !== prevParent) {\n        this.markDirtyBounds();\n        parent.markDirty();\n        this._parent = parent;\n\n        if (updateChildren) {\n          this._removeParent(prevParent);\n\n          if (parent) {\n            this._addPercentageSizeChildren();\n\n            this._addPercentagePositionChildren();\n          }\n        }\n\n        this.markDirtyPosition();\n\n        this._applyThemes();\n      }\n    }\n  });\n  /**\r\n   * Returns an instance of [[NumberFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return NumberFormatter instace\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"getNumberFormatter\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this.get(\"numberFormatter\", this._root.numberFormatter);\n    }\n  });\n  /**\r\n   * Returns an instance of [[DateFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return DateFormatter instace\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"getDateFormatter\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this.get(\"dateFormatter\", this._root.dateFormatter);\n    }\n  });\n  /**\r\n   * Returns an instance of [[DurationFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return DurationFormatter instace\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"getDurationFormatter\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      return this.get(\"durationFormatter\", this._root.durationFormatter);\n    }\n  });\n  /**\r\n   * Converts X/Y coordinate within this element to a global coordinate.\r\n   *\r\n   * @param  point  Local coordinate\r\n   * @return        Global coordinate\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"toGlobal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(point) {\n      return this._display.toGlobal(point);\n    }\n  });\n  /**\r\n   * Converts global X/Y coordinate to a coordinate within this element.\r\n   *\r\n   * @param  point  Global coordinate\r\n   * @return        Local coordinate\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"toLocal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(point) {\n      return this._display.toLocal(point);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_getDownPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var id = this._getDownPointId();\n\n      if (id) {\n        return this._downPoints[id];\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_getDownPointId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      if (this._downPoints) {\n        return $object.keysOrdered(this._downPoints, function (a, b) {\n          if (a > b) {\n            return 1;\n          }\n\n          if (a < b) {\n            return -1;\n          }\n\n          return 0;\n        })[0];\n      }\n    }\n  });\n  /**\r\n   * Moves sprite to the end of the parent's children array.\r\n   *\r\n   * Depending on `layout` setting of the parten container, it may effect the\r\n   * positioning or overlapping order of the elements.\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"toFront\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var parent = this.parent;\n\n      if (parent) {\n        parent.children.moveValue(this, parent.children.length - 1);\n      }\n    }\n  });\n  /**\r\n   * Moves sprite to the beginning of the parent's children array.\r\n   *\r\n   * Depending on `layout` setting of the parten container, it may effect the\r\n   * positioning or overlapping order of the elements.\r\n   */\n\n  Object.defineProperty(Sprite.prototype, \"toBack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var parent = this.parent;\n\n      if (parent) {\n        parent.children.moveValue(this, 0);\n      }\n    }\n  });\n  Object.defineProperty(Sprite, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Sprite\"\n  });\n  Object.defineProperty(Sprite, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Entity.classNames.concat([Sprite.className])\n  });\n  return Sprite;\n}(Entity);\n\nexport { Sprite };","map":{"version":3,"sources":["../../../../../src/.internal/core/render/Sprite.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IDisplayObject, IRendererEvents, IRendererEvent, IPointerEvent } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Container } from \"./Container\";\nimport type { IAccessibilitySettings } from \"../util/Accessibility\";\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Tooltip } from \"./Tooltip\";\nimport type { Graphics } from \"./Graphics\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { ListTemplate } from \"../util/List\";\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher, Events, EventListener } from \"../util/EventDispatcher\";\nimport { IDisposer, MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\n\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\";\n//import { populateString } from \"../util/PopulateString\";\n\n\n/**\n * An [[EventDispatcher]] for [[Sprite]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n */\nclass SpriteEventDispatcher<Target, E extends Events<Target, ISpriteEvents>> extends EventDispatcher<E> {\n\tprotected static RENDERER_EVENTS: { [K in keyof IRendererEvents]?: <E extends Events<Sprite, ISpriteEvents>>(this: SpriteEventDispatcher<Sprite, E>, event: IRendererEvents[K]) => void } = {\n\t\t\"click\": function(event) {\n\t\t\tif (this.isEnabled(\"click\") && !this._sprite.isDragging() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n\t\t\t\tthis.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"rightclick\": function(event) {\n\t\t\tif (this.isEnabled(\"rightclick\")) {\n\t\t\t\tthis.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"middleclick\": function(event) {\n\t\t\tif (this.isEnabled(\"middleclick\")) {\n\t\t\t\tthis.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"dblclick\": function(event) {\n\t\t\tthis.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n\t\t},\n\n\t\t\"pointerover\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerover\")) {\n\t\t\t\tthis.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerout\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerout\")) {\n\t\t\t\tthis.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerdown\": function(event) {\n\t\t\tthis.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n\t\t},\n\n\t\t\"pointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerup\")) {\n\t\t\t\tthis.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointerup\")) {\n\t\t\t\tthis.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointermove\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointermove\")) {\n\t\t\t\tthis.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"wheel\": function(event) {\n\t\t\tif (this.isEnabled(\"wheel\")) {\n\t\t\t\tthis.dispatch(\"wheel\", {\n\t\t\t\t\ttype: \"wheel\",\n\t\t\t\t\ttarget: this._sprite,\n\t\t\t\t\toriginalEvent: event.event,\n\t\t\t\t\tpoint: event.point,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n\n\tprotected _sprite: Sprite;\n\n\tprotected _rendererDisposers: { [K in keyof IRendererEvents]?: CounterDisposer } = {};\n\n\tprotected _dispatchParents: boolean = true;\n\n\tconstructor(sprite: Sprite) {\n\t\tsuper();\n\t\tthis._sprite = sprite;\n\t}\n\n\tprotected _makePointerEvent<K extends keyof E>(key: K, event: IRendererEvent<IPointerEvent>): ISpritePointerEvent & { type: K } {\n\t\treturn {\n\t\t\ttype: key,\n\t\t\toriginalEvent: event.event,\n\t\t\tpoint: event.point,\n\t\t\tsimulated: event.simulated,\n\t\t\tnative: event.native,\n\t\t\ttarget: this._sprite\n\t\t};\n\t}\n\n\tprotected _onRenderer<Key extends keyof IRendererEvents>(key: Key, dispatch: (this: this, event: IRendererEvents[Key]) => void): IDisposer {\n\t\t// TODO: is this OK? it'd be good not to require to set this on each individual element\n\t\tthis._sprite.set(\"interactive\", true);\n\t\tthis._sprite._display.interactive = true;\n\n\t\tlet events = this._rendererDisposers[key];\n\n\t\tif (events === undefined) {\n\t\t\tconst disposer = this._sprite._display.on(key, (e) => {\n\t\t\t\tdispatch.call(this, e);\n\t\t\t});\n\n\t\t\tevents = this._rendererDisposers[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._rendererDisposers[key];\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn events.increment();\n\t}\n\n\tprotected _on<C, Key extends keyof E>(once: boolean, type: Key | null, callback: any, context: C, shouldClone: boolean, dispatch: (type: Key, event: E[Key]) => void): EventListener {\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\n\n\t\tconst rendererEvent = (SpriteEventDispatcher.RENDERER_EVENTS as any)[type];\n\t\tif (rendererEvent !== undefined) {\n\t\t\tinfo.disposer = new MultiDisposer([\n\t\t\t\tinfo.disposer,\n\t\t\t\tthis._onRenderer(type as any, rendererEvent),\n\t\t\t]);\n\t\t}\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Will stop any bubbling up of the event to element's parents.\n\t *\n\t * Should be called in an event handler, e.g.:\n\t *\n\t * ```TypeScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t * ```JavaScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t */\n\tpublic stopParentDispatch() {\n\t\tthis._dispatchParents = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dispatchParents<Key extends keyof E>(type: Key, event: E[Key]): void {\n\t\tconst old = this._dispatchParents;\n\n\t\tthis._dispatchParents = true;\n\n\t\ttry {\n\t\t\tthis.dispatch(type, event);\n\n\t\t\tif (this._dispatchParents && this._sprite.parent) {\n\t\t\t\tthis._sprite.parent.events.dispatchParents(type as any, event);\n\t\t\t}\n\n\t\t} finally {\n\t\t\tthis._dispatchParents = old;\n\t\t}\n\t}\n}\n\n\nexport interface ISpriteSettings extends IEntitySettings, IAccessibilitySettings {\n\n\t/**\n\t * X position relative to parent.\n\t */\n\tx?: number | Percent | null;\n\n\t/**\n\t * Y position relative to parent.\n\t */\n\ty?: number | Percent | null;\n\n\t/**\n\t * Element's absolute width in pixels (numeric value) or relative width to\n\t * parent ([[Percent]]);\n\t */\n\twidth?: number | Percent | null;\n\n\t/**\n\t * Element's absolute height in pixels (numeric value) or relative height to\n\t * parent ([[Percent]]);\n\t */\n\theight?: number | Percent | null;\n\n\t/**\n\t * Maximum allowed width in pixels.\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * Maximum allowed height in pixels.\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * Minimum allowed width in pixels.\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * Minimum allowed height in pixels.\n\t */\n\tminHeight?: number | null;\n\n\t/**\n\t * Opacity. 0 - fully transparent; 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Rotation in degrees.\n\t */\n\trotation?: number;\n\n\t/**\n\t * Scale.\n\t *\n\t * Setting to a value less than 1 will shrink object.\n\t */\n\tscale?: number;\n\n\t/**\n\t * X coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterX?: number | Percent;\n\n\t/**\n\t * Y coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterY?: number | Percent;\n\n\t/**\n\t * Left margin in pixels.\n\t */\n\tmarginLeft?: number;\n\n\t/**\n\t * Right margin in pixels.\n\t */\n\tmarginRight?: number;\n\n\t/**\n\t * Top margin in pixels.\n\t */\n\tmarginTop?: number;\n\n\t/**\n\t * Bottom margin in pixels.\n\t */\n\tmarginBottom?: number;\n\n\t/**\n\t * Is element visible?\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Positioning of the element.\n\t *\n\t * `\"absolute\"` means element will not participate in parent layout scheme,\n\t * and will be positioned solely accoridng its `x` and `y` settings.\n\t */\n\tposition?: \"absolute\" | \"relative\";\n\n\t/**\n\t * Horizontal shift in pixels. Can be negative to shift leftward.\n\t */\n\tdx?: number;\n\n\t/**\n\t * Vertical shift in pixels. Can be negative to shift upward.\n\t */\n\tdy?: number;\n\n\t/**\n\t * Should this element accept user interaction events?\n\t */\n\tinteractive?: boolean;\n\n\t/**\n\t * Text to show in a tooltip when hovered.\n\t */\n\ttooltipText?: string;\n\n\t/**\n\t * Tooltip pointer X coordinate relative to the element itself.\n\t */\n\ttooltipX?: number | Percent;\n\n\t/**\n\t * Tooltip pointer Y coordinate relative to the element itself.\n\t */\n\ttooltipY?: number | Percent;\n\n\t/**\n\t * [[Tooltip]] instance.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * Tooltip position.\n\t */\n\ttooltipPosition?: \"fixed\" | \"pointer\";\n\n\t/**\n\t * If set to `false` element will not be measured and cannot participate in\n\t * layout schemes.\n\t */\n\tisMeasured?: boolean;\n\n\t/**\n\t * Allows binding element's settings to data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/template-fields/} for more info\n\t */\n\ttemplateField?: string;\n\n\t/**\n\t * If set to `true`, user will be able to drag this element. It will also\n\t * disable default drag events over the area of this element.\n\t */\n\tdraggable?: boolean;\n\n\t/**\n\t * If set to `true`, mouse wheel events will be triggered over the element. It\n\t * will also disable page scrolling using mouse wheel when pointer is over\n\t * the element.\n\t */\n\twheelable?: boolean;\n\n\t/**\n\t * An instance of [[NumberFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tnumberFormatter?: NumberFormatter | undefined;\n\n\t/**\n\t * An instance of [[DateFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdateFormatter?: DateFormatter | undefined;\n\n\t/**\n\t * An instance of [[DurationFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdurationFormatter?: DurationFormatter | undefined;\n\n\t/**\n\t * If set, element will toggle specified boolean setting between `true` and\n\t * `false` when clicked/touched.\n\t */\n\ttoggleKey?: \"disabled\" | \"active\" | \"none\" | undefined;\n\n\t/**\n\t * Indicates if element is currently active.\n\t */\n\tactive?: boolean;\n\n\t/**\n\t * Indicates if element is disabled.\n\t */\n\tdisabled?: boolean;\n\n\t/**\n\t * An SVG filter to apply to the element.\n\t *\n\t * IMPORTANT: SVG filters are not supported in some browsers, e.g. Safari.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter} for more info\n\t * @ignore todo: figure out if we still need this\n\t */\n\tfilter?: string;\n\n\t/**\n\t * A named mouse cursor style to show when hovering this element.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor} for more info\n\t */\n\tcursorOverStyle?: string;\n\n\t/**\n\t * If set to `false` this element will not appear in exported snapshots of\n\t * the chart.\n\t */\n\texportable?: boolean;\n\n\t/**\n\t * Numeric layer to put element in.\n\t *\n\t * Elements with higher number will appear in front of the ones with lower\n\t * numer.\n\t *\n\t * If not set, will inherit layer from its ascendants.\n\t */\n\tlayer?: number;\n\n\t/**\n\t * If set to `true` the element will be hidden regardless of `visible` or\n\t * even if `show()` is called.\n\t */\n\tforceHidden?: boolean;\n\n}\n\nexport interface ISpritePrivate extends IEntityPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ty?: number;\n\n\t/**\n\t * @ignore\n\t */\n\twidth?: number;\n\n\t/**\n\t * @ignore\n\t */\n\theight?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Is element currently showing a tooltip?\n\t */\n\tshowingTooltip?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\ttouchHovering?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfocusElement?: HTMLDivElement;\n\n\t/**\n\t * An element tooltip should inherit its colors from.\n\t */\n\ttooltipTarget?: Graphics;\n\n\t/**\n\t * @ignore\n\t */\n\tlist?: ListTemplate<Sprite>;\n\n}\n\n/**\n * An interface defining event objects that originate from pinter interactions.\n */\nexport interface ISpritePointerEvent {\n\n\t/**\n\t * Original event object that caused the interaction, e.g. [[MouseEvent]].\n\t */\n\toriginalEvent: IPointerEvent;\n\n\t/**\n\t * A point where event originated.\n\t */\n\tpoint: IPoint;\n\n\t/**\n\t * Is it a simulated event, e.g. if the event was generated by code rather\n\t * then actual user interaction.\n\t */\n\tsimulated: boolean;\n\n\t/**\n\t * Whether event originated in chart's container or its children.\n\t */\n\tnative?: boolean;\n\n\t/**\n\t * The element on which the event occurred.\n\t */\n\ttarget: Sprite;\n\n}\n\nexport interface ISpriteEvents extends IEntityEvents {\n\n\t/**\n\t * Invoked when element's data item changes.\n\t */\n\tdataitemchanged: {\n\t\toldDataItem: DataItem<IComponentDataItem> | undefined,\n\t\tnewDataItem: DataItem<IComponentDataItem> | undefined\n\t};\n\n\t/**\n\t * Invoked when element's position (X/Y) changes.\n\t */\n\tpositionchanged: {};\n\n\t/**\n\t * Invoked when element's bounds change due to any manipulation to it.\n\t */\n\tboundschanged: {};\n\n\t/**\n\t * Invoked when element dragging starts.\n\t */\n\tdragstart: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element dragging stops.\n\t */\n\tdragstop: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element ois being dragged.\n\t */\n\tdragged: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked or tapped.\n\t */\n\tclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked width the right mouse button.\n\t */\n\trightclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked with the middle mouse button.\n\t */\n\tmiddleclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is doubleclicked or tapped twice quickly.\n\t */\n\tdblclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves over the element.\n\t */\n\tpointerover: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves outside the element.\n\t */\n\tpointerout: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is pressed or touch starts over the element.\n\t */\n\tpointerdown: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops over the element.\n\t */\n\tpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops in the window, even\n\t * outside of the element or even chart area.\n\t */\n\tglobalpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer is moving anywhere in the window, even outside of the\n\t * element or even chart area.\n\t */\n\tglobalpointermove: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when mouse wheel is spinned while pointer is over the element.\n\t */\n\twheel: {\n\t\toriginalEvent: WheelEvent;\n\t\tpoint: IPoint;\n\t};\n\n\t/**\n\t * Invoked when element gains focus.\n\t */\n\tfocus: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n\t/**\n\t * Invoked when element loses focus.\n\t */\n\tblur: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n}\n\n/**\n * A base class for all visual elements.\n *\n * @important\n */\nexport abstract class Sprite extends Entity {\n\tdeclare public _settings: ISpriteSettings;\n\tdeclare public _privateSettings: ISpritePrivate;\n\tdeclare public _events: ISpriteEvents;\n\n\tdeclare public events: SpriteEventDispatcher<this, Events<this, this[\"_events\"]>>;\n\n\tpublic abstract _display: IDisplayObject;\n\n\tprotected _adjustedLocalBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _localBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tpublic static className: string = \"Sprite\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Sprite.className]);\n\n\tpublic _parent: Container | undefined;\n\tprotected _dataItem: DataItem<IComponentDataItem> | undefined;\n\n\tprotected _templateField: Template<this> | undefined;\n\n\tprotected _sizeDirty: boolean = false;\n\n\t// Will be true only when dragging\n\tprotected _isDragging: boolean = false;\n\n\t// The event when the dragging starts\n\tprotected _dragEvent: ISpritePointerEvent | undefined;\n\n\t// The position when dragging starts\n\tprotected _dragPoint: IPoint | undefined;\n\n\tprotected _isHidden: boolean = false;\n\n\tprotected _isShowing: boolean = false;\n\n\tprotected _isHiding: boolean = false;\n\n\tprotected _isDown: boolean = false;\n\tprotected _downPoint: IPoint | undefined;\n\n\tpublic _downPoints: { [index: number]: IPoint } = {};\n\n\tpublic _toggleDp: IDisposer | undefined;\n\n\tprotected _dragDp: MultiDisposer | undefined;\n\n\tprotected _tooltipDp: MultiDisposer | undefined;\n\n\tprotected _hoverDp: MultiDisposer | undefined;\n\n\tprotected _focusDp: MultiDisposer | undefined;\n\n\tprotected _tooltipMoveDp: IDisposer | undefined;\n\n\tprotected _tooltipPointerDp: MultiDisposer | undefined;\n\n\tprotected _statesHandled: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis.setPrivateRaw(\"visible\", true);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tsuper._markDirtyKey(key);\n\t\tif (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentagePositionChildren();\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tsuper._markDirtyPrivateKey(key);\n\t\tif (key == \"x\" || key == \"y\") {\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tprotected _removeTemplateField(): void {\n\t\tif (this._templateField) {\n\t\t\tthis._templateField._removeObjectTemplate(this);\n\t\t}\n\t}\n\n\tprotected _createEvents(): SpriteEventDispatcher<this, Events<this, this[\"_events\"]>> {\n\t\treturn new SpriteEventDispatcher(this);\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tlet template;\n\n\t\tconst field = this.get(\"templateField\");\n\n\t\tif (field) {\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\tconst context = dataItem.dataContext;\n\t\t\t\tif (context) {\n\t\t\t\t\ttemplate = (context as any)[field];\n\n\t\t\t\t\tif (!(template instanceof Template) && template) {\n\t\t\t\t\t\ttemplate = Template.new(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._templateField !== template) {\n\t\t\tthis._removeTemplateField();\n\n\t\t\tthis._templateField = template;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\t// TODO change this to run before the element is added to the parent, so that way\n\t//      it doesn't need to apply the themes twice\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst oldDataItem = this._dataItem\n\t\tthis._dataItem = dataItem;\n\t\tthis._processTemplateField();\n\t\tconst eventType = \"dataitemchanged\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, {\n\t\t\t\ttype: eventType,\n\t\t\t\ttarget: this,\n\t\t\t\toldDataItem: oldDataItem,\n\t\t\t\tnewDataItem: dataItem\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * A [[DataItem]] used for this element.\n\t *\n\t * NOTE: data item is being assigned automatically in most cases where it\n\t * matters. Use this accessor to set data item only if you know what you're\n\t * doing.\n\t * \n\t * @param  value  Data item\n\t */\n\tpublic set dataItem(value: DataItem<IComponentDataItem> | undefined) {\n\t\tthis._setDataItem(value);\n\t}\n\n\t/**\n\t * @return DataItem\n\t */\n\tpublic get dataItem(): DataItem<IComponentDataItem> | undefined {\n\t\tif (this._dataItem) {\n\t\t\treturn this._dataItem;\n\n\t\t} else {\n\t\t\tlet parent = this._parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tif (parent._dataItem) {\n\t\t\t\t\treturn parent._dataItem;\n\n\t\t\t\t} else {\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentageSizeChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentageSizeChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentagePositionChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentagePositionChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyPosition() {\n\t\tthis._root._addDirtyPosition(this);\n\t}\n\n\tprotected updatePivotPoint() {\n\t\tconst bounds = this._localBounds;\n\t\tif (bounds) {\n\t\t\tconst centerX = this.get(\"centerX\");\n\t\t\tif (centerX != null) {\n\t\t\t\tthis._display.pivot.x = bounds.left + $utils.relativeToValue(centerX!, bounds.right - bounds.left);\n\t\t\t}\n\n\t\t\tconst centerY = this.get(\"centerY\");\n\t\t\tif (centerY != null) {\n\t\t\t\tthis._display.pivot.y = bounds.top + $utils.relativeToValue(centerY!, bounds.bottom - bounds.top);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst previous = this._prevSettings.tooltip;\n\t\t\tif (previous) {\n\t\t\t\tprevious.dispose();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"layer\")) {\n\t\t\tthis._display.setLayer(this.get(\"layer\"));\n\t\t\tthis.markDirtyLayer();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipPosition\")) {\n\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\tif (tooltipMoveDp) {\n\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t}\n\n\t\t\tconst tooltipPointerDp = this._tooltipPointerDp;\n\t\t\tif (tooltipPointerDp) {\n\t\t\t\ttooltipPointerDp.dispose();\n\t\t\t\tthis._tooltipPointerDp = undefined;\n\t\t\t}\n\n\t\t\tif (this.get(\"tooltipPosition\") == \"pointer\") {\n\t\t\t\tthis._tooltipPointerDp = new MultiDisposer([\n\t\t\t\t\tthis.events.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\n\t\t\t\t\t\t\tthis.showTooltip(e.point);\n\t\t\t\t\t\t})\n\t\t\t\t\t}),\n\n\t\t\t\t\tthis.events.on(\"pointerout\", () => {\n\t\t\t\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\t\t\t\tif (tooltipMoveDp) {\n\t\t\t\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t})])\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleStates() {\n\t\tif (!this._statesHandled) {\n\t\t\tif (this.isDirty(\"active\")) {\n\t\t\t\tif (this.get(\"active\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"disabled\")) {\n\t\t\t\tif (this.get(\"disabled\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t\tthis._statesHandled = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst display = this._display;\n\t\tconst events = this.events;\n\n\t\tif (this.isDirty(\"draggable\")) {\n\t\t\tconst draggable = this.get(\"draggable\");\n\t\t\tif (draggable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\n\t\t\t\tthis._dragDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"pointerdown\", (ev) => {\n\t\t\t\t\t\tthis.dragStart(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointermove\", (ev) => {\n\t\t\t\t\t\tthis.dragMove(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tthis.dragStop(ev);\n\t\t\t\t\t})])\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._dragDp) {\n\t\t\t\t\tthis._dragDp.dispose();\n\t\t\t\t\tthis._dragDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipText\")) {\n\t\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\t\tif (tooltipText) {\n\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis.showTooltip()\n\t\t\t\t\t}),\n\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\tthis.hideTooltip()\n\t\t\t\t\t})])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._tooltipDp) {\n\t\t\t\t\tthis._tooltipDp.dispose();\n\t\t\t\t\tthis._tooltipDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tlet toggleKey = this.get(\"toggleKey\") as any;\n\t\t\tif (toggleKey && toggleKey != \"none\") {\n\t\t\t\tthis._toggleDp = events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tthis.set(toggleKey, !this.get(toggleKey));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._toggleDp) {\n\t\t\t\t\tthis._toggleDp.dispose();\n\t\t\t\t\tthis._toggleDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleStates();\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tdisplay.alpha = Math.max(0, this.get(\"opacity\", 1));\n\t\t}\n\n\t\tif (this.isDirty(\"rotation\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.angle = this.get(\"rotation\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"scale\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.scale = this.get(\"scale\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.updatePivotPoint();\n\t\t}\n\n\t\tif (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n\t\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\t\tdisplay.visible = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.visible = true;\n\t\t\t}\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentageSizeChildren();\n\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tif ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\n\t\t\t\t\tparent.markDirty();\n\t\t\t\t\tparent._prevWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._updateSize();\n\t\t}\n\n\t\tif (this.isDirty(\"wheelable\")) {\n\t\t\tconst wheelable = this.get(\"wheelable\");\n\t\t\tif (wheelable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\t\t\t}\n\t\t\tdisplay.wheelable = wheelable ? true : false;\n\t\t}\n\n\t\t// Accessibility\n\t\tif (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"filter\")) {\n\t\t\t//this.markDirtyBounds();\n\t\t\tdisplay.filter = this.get(\"filter\");\n\t\t}\n\n\t\tif (this.isDirty(\"cursorOverStyle\")) {\n\t\t\tdisplay.cursorOverStyle = this.get(\"cursorOverStyle\");\n\t\t}\n\n\t\tif (this.isDirty(\"hoverOnFocus\")) {\n\t\t\tif (this.get(\"hoverOnFocus\")) {\n\t\t\t\tthis._focusDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"focus\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"blur\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t})])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._focusDp) {\n\t\t\t\t\tthis._focusDp.dispose();\n\t\t\t\t\tthis._focusDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"focusable\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\")) {\n\t\t\t// display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n\t\t\t// @todo make sure ariaLabel gets populated in Root\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"exportable\")) {\n\t\t\tdisplay.exportable = this.get(\"exportable\");\n\t\t}\n\n\t\tif (this.isDirty(\"interactive\")) {\n\t\t\tconst events = this.events;\n\t\t\tif (this.get(\"interactive\")) {\n\t\t\t\tthis._hoverDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"click\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (!this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\")) {\n\t\t\t\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", true);\n\t\t\t\t\t\t\t\t}, 10)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\")) {\n\t\t\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._isDown) {\n\t\t\t\t\t\t\tthis._handleUp(ev);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//this._isDown = false;\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerdown\", (e) => {\n\t\t\t\t\t\tthis._handleDown(e);\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._hoverDp) {\n\t\t\t\t\tthis._hoverDp.dispose();\n\t\t\t\t\tthis._hoverDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStart(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = e;\n\t\tthis.events.stopParentDispatch();\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStop(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = undefined;\n\t\tthis._dragPoint = undefined;\n\t\tthis.events.stopParentDispatch();\n\n\t\tif (this._isDragging) {\n\t\t\tthis._isDragging = false;\n\n\t\t\tconst type = \"dragstop\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, {\n\t\t\t\t\ttype: type,\n\t\t\t\t\ttarget: this,\n\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\tpoint: e.point,\n\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOver() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverActive\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverDisabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOut() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleUp(e: ISpritePointerEvent) {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse if (this.states.lookup(\"down\")) {\n\t\t\t\tif (this.isHover()) {\n\t\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._downPoint = undefined;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tdelete this._downPoints[pointerId];\n\n\t\t\tif ($object.keys(this._downPoints).length == 0) {\n\t\t\t\tthis._isDown = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _hasMoved(e: ISpritePointerEvent): boolean {\n\t\t// @todo remove this once migrated to _downPoints\n\t\t// if (this._downPoint) {\n\t\t// \tconst x = Math.abs(this._downPoint.x - e.point.x);\n\t\t// \tconst y = Math.abs(this._downPoint.y - e.point.y);\n\t\t// \treturn (x > 5) || (y > 5);\n\t\t// }\n\n\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\tconst downPoint = this._downPoints[pointerId];\n\t\tif (downPoint) {\n\t\t\tconst x = Math.abs(downPoint.x - e.point.x);\n\t\t\tconst y = Math.abs(downPoint.y - e.point.y);\n\t\t\treturn (x > 5) || (y > 5);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprotected _handleDown(e: ISpritePointerEvent) {\n\t\tif (!this.isHidden() && !this.get(\"disabled\")) {\n\t\t\tif (this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t\tthis._downPoint = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._isDown = true;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tthis._downPoints[pointerId] = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragMove(e: ISpritePointerEvent) {\n\t\tlet dragEvent = this._dragEvent;\n\n\t\tif (dragEvent) {\n\t\t\tconst x = e.point.x - dragEvent.point.x;\n\t\t\tconst y = e.point.y - dragEvent.point.y;\n\n\t\t\tconst events = this.events;\n\n\t\t\tif (dragEvent.simulated && !this._isDragging) {\n\t\t\t\tthis._isDragging = true;\n\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\tthis._dragPoint = {\n\t\t\t\t\tx: this.x(),\n\t\t\t\t\ty: this.y()\n\t\t\t\t};\n\n\t\t\t\tconst type = \"dragstart\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._isDragging) {\n\t\t\t\tlet dragPoint = this._dragPoint!;\n\n\t\t\t\tthis.set(\"x\", dragPoint.x + x);\n\t\t\t\tthis.set(\"y\", dragPoint.y + y);\n\n\t\t\t\tconst type = \"dragged\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif (Math.hypot(x, y) > 5) {\n\t\t\t\t\tthis._isDragging = true;\n\t\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\t\tthis._dragPoint = {\n\t\t\t\t\t\tx: this.x(),\n\t\t\t\t\t\ty: this.y()\n\t\t\t\t\t};\n\n\t\t\t\t\tconst type = \"dragstart\";\n\t\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\t\tsimulated: e.simulated\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\n\t}\n\n\tprotected _getBounds() {\n\t\tthis._localBounds = this._display.getLocalBounds();\n\t}\n\n\t/**\n\t * Returns depth (how deep in the hierachy of the content tree) of this\n\t * element.\n\t *\n\t * @return Depth\n\t */\n\tpublic depth(): number {\n\t\tlet self: Container | undefined = this.parent;\n\t\tlet depth = 0;\n\n\t\twhile (true) {\n\t\t\tif (self) {\n\t\t\t\t++depth;\n\t\t\t\tself = self.parent;\n\n\t\t\t} else {\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySize(): void {\n\t\tthis._sizeDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyBounds(): void {\n\t\tconst display = this._display;\n\t\tif (this.get(\"isMeasured\")) {\n\t\t\tthis._root._addDirtyBounds(this);\n\t\t\tdisplay.isMeasured = true;\n\t\t\tdisplay.invalidateBounds();\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent && this.get(\"position\") != \"absolute\") {\n\t\t\t\tif (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\n\t\t\t\t\tparent.markDirtyBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.get(\"focusable\") && this.isFocus()) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyAccessibility(): void {\n\t\t//if (this._root.focused(this)) {\n\t\tthis._root._invalidateAccessibility(this);\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyLayer() {\n\t\t//this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n\t\tthis._display.markDirtyLayer(true);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tsuper.markDirty();\n\t\tthis.markDirtyLayer();\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst oldBounds = this._adjustedLocalBounds;\n\n\t\tlet newBounds: IBounds;\n\n\t\t// if display.visible == false, it still returns bounds\n\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\tnewBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t};\n\t\t\tthis._localBounds = newBounds;\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tthis._getBounds();\n\t\t\tthis._fixMinBounds(this._localBounds);\n\t\t\tthis.updatePivotPoint();\n\t\t\tthis._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n\t\t\tnewBounds = this._adjustedLocalBounds!;\n\t\t}\n\n\t\tif (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\n\t\t\tconst eventType = \"boundschanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent.markDirty();\n\t\t\t\tthis.parent.markDirtyBounds();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _fixMinBounds(bounds: IBounds) {\n\t\tlet minWidth = this.get(\"minWidth\");\n\t\tlet minHeight = this.get(\"minHeight\");\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tif (bounds.right - bounds.left < minWidth) {\n\t\t\t\tbounds.right = bounds.left + minWidth;\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\tif (bounds.bottom - bounds.top < minHeight) {\n\t\t\t\tbounds.bottom = bounds.top + minHeight;\n\t\t\t}\n\t\t}\n\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tbounds.right = bounds.left + privateWidth;\n\t\t}\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\tbounds.bottom = bounds.top + privateHeight;\n\t\t}\n\t}\n\n\tprotected _removeParent(parent: Container | undefined) {\n\t\tif (parent) {\n\t\t\tparent.children.removeValue(this);\n\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._statesHandled = false;\n\t}\n\n\t/**\n\t * Simulate hover over element.\n\t */\n\tpublic hover() {\n\t\tthis.showTooltip();\n\t\tthis._handleOver();\n\t}\n\n\t/**\n\t * Simulate unhover over element.\n\t */\n\tpublic unhover(): void {\n\t\tthis.hideTooltip();\n\t\tthis._handleOut();\n\t}\n\n\t/**\n\t * Shows element's [[Tooltip]].\n\t */\n\tpublic showTooltip(point?: IPoint): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tconst tooltipText = this.get(\"tooltipText\");\n\n\t\tif (tooltipText && tooltip) {\n\t\t\tconst tooltipPosition = this.get(\"tooltipPosition\");\n\t\t\tconst tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n\n\t\t\tif (tooltipPosition == \"fixed\" || !point) {\n\t\t\t\tpoint = this._display.toGlobal(tooltipTarget._getTooltipPoint());\n\t\t\t}\n\n\t\t\ttooltip.set(\"pointTo\", point);\n\t\t\ttooltip.set(\"tooltipTarget\", tooltipTarget);\n\n\t\t\tif (!tooltip.get(\"x\")) {\n\t\t\t\ttooltip.set(\"x\", point.x);\n\t\t\t}\n\t\t\tif (!tooltip.get(\"y\")) {\n\t\t\t\ttooltip.set(\"y\", point.y);\n\t\t\t}\n\n\t\t\ttooltip.label.set(\"text\", tooltipText);\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\ttooltip.label._setDataItem(dataItem);\n\t\t\t}\n\t\t\ttooltip.label.text.markDirtyText();\n\t\t\tconst promise = tooltip.show();\n\t\t\tthis.setPrivateRaw(\"showingTooltip\", true);\n\t\t\treturn promise;\n\t\t}\n\t}\n\n\n\t/**\n\t * Hides element's [[Tooltip]].\n\t */\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip) {\n\t\t\tconst promise = tooltip.hide();\n\t\t\tthis.setPrivateRaw(\"showingTooltip\", false);\n\t\t\treturn promise;\n\t\t}\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst bounds = this._localBounds!;\n\t\tif (bounds) {\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tif (!this.get(\"isMeasured\")) {\n\t\t\t\tx = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n\t\t\t\ty = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n\t\t\t\ty = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n\t\t\t}\n\n\t\t\treturn { x, y };\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\t/**\n\t * Returns [[Tooltip]] used for this element.\n\t *\n\t * @return Tooltip\n\t */\n\tpublic getTooltip(): Tooltip | undefined {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (!tooltip) {\n\t\t\tlet parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\treturn parent.getTooltip();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn tooltip;\n\t\t}\n\t}\n\n\tpublic _updatePosition() {\n\n\t\tconst parent = this.parent;\n\n\t\tlet dx = this.get(\"dx\", 0);\n\t\tlet dy = this.get(\"dy\", 0);\n\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tlet xx = 0;\n\t\tlet yy = 0;\n\n\t\tconst position = this.get(\"position\");\n\n\t\tif (x instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\tx = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(x)) {\n\t\t\txx = x + dx;\n\t\t}\n\t\telse {\n\t\t\tif (_x != null) {\n\t\t\t\txx = _x;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\txx = parent.get(\"paddingLeft\", 0) + dx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tlet y = this.get(\"y\");\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (y instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\ty = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(y)) {\n\t\t\tyy = y + dy;\n\t\t}\n\t\telse {\n\t\t\tif (_y != null) {\n\t\t\t\tyy = _y;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\tyy = parent.get(\"paddingTop\", 0) + dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst display = this._display;\n\n\t\tif (display.x != xx || display.y != yy) {\n\t\t\tdisplay.invalidateBounds();\n\t\t\tdisplay.x = xx;\n\t\t\tdisplay.y = yy;\n\n\t\t\tconst eventType = \"positionchanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t}\n\n\t\t// Update tooltip position together with the Sprite\n\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\tthis.showTooltip();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns element's actual X position in pixels.\n\t *\n\t * @return X (px)\n\t */\n\tpublic x(): number {\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (x instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(x)) {\n\t\t\t\t\tif (_x != null) {\n\t\t\t\t\t\treturn _x;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingLeft\", this._display.x)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.x;\n\t}\n\n\t/**\n\t * Returns element's actual Y position in pixels.\n\t *\n\t * @return Y (px)\n\t */\n\tpublic y(): number {\n\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (_y != null) {\n\t\t\treturn _y;\n\t\t}\n\n\t\tlet y = this.get(\"y\");\n\t\tconst parent = this.parent;\n\n\t\tif (parent) {\n\t\t\tif (y instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(y)) {\n\t\t\t\t\tif (_y != null) {\n\t\t\t\t\t\treturn _y;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingTop\", this._display.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.y;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis._display.dispose();\n\t\tthis._removeTemplateField();\n\t\tthis._removeParent(this.parent);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.dispose();\n\t\t}\n\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic adjustedLocalBounds(): IBounds {\n\t\tthis._fixMinBounds(this._adjustedLocalBounds);\n\t\treturn this._adjustedLocalBounds;\n\t}\n\n\t/**\n\t * Returns local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic localBounds(): IBounds {\n\t\treturn this._localBounds;\n\t}\n\n\t/**\n\t * Returns adjusted local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic bounds(): IBounds {\n\t\tconst bounds = this._adjustedLocalBounds;\n\t\tconst x = this.x();\n\t\tconst y = this.y();\n\t\treturn { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\n\t}\n\n\t/**\n\t * Returns global coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic globalBounds(): IBounds {\n\t\tconst bounds = this.localBounds();\n\t\tconst display = this._display;\n\n\t\tconst p0 = display.toGlobal({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = display.toGlobal({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = display.toGlobal({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = display.toGlobal({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\tprotected _onShow(_duration?: number) {\n\n\t}\n\n\tprotected _onHide(_duration?: number) {\n\n\t}\n\n\t/**\n\t * Plays initial reveal animation regardless if element is currently hidden\n\t * or visible.\n\t *\n\t * @param   duration  Duration of the animation in milliseconds\n\t * @param   delay     Delay showing of the element by X milliseconds\n\t * @return            Promise\n\t */\n\tpublic async appear(duration?: number, delay?: number): Promise<void> {\n\t\tawait this.hide(0);\n\t\tif (delay) {\n\t\t\treturn new Promise<void>((success, _error) => {\n\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\tsuccess(this.show(duration));\n\t\t\t\t}, delay);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\treturn this.show(duration);\n\t\t}\n\t}\n\n\t/**\n\t * Shows currently hidden element and returns a `Promise` which completes\n\t * when all showing animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tif (!this._isShowing) {\n\t\t\tthis._isHidden = false;\n\t\t\tthis._isShowing = true;\n\t\t\tthis._isHiding = false;\n\n\t\t\tif (this.states.lookup(\"default\")!.get(\"visible\")) {\n\t\t\t\tthis.set(\"visible\", true);\n\t\t\t}\n\t\t\tthis._onShow(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"default\", duration);\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isShowing = false;\n\t\t}\n\t}\n\n\t/**\n\t * Hides the element and returns a `Promise` which completes when all hiding\n\t * animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tif (!this._isHiding && !this._isHidden) {\n\t\t\tthis._isHiding = true;\n\t\t\tthis._isShowing = false;\n\t\t\tlet state = this.states.lookup(\"hidden\");\n\t\t\tif (!state) {\n\t\t\t\tstate = this.states.create(\"hidden\", {\n\t\t\t\t\t\"opacity\": 0,\n\t\t\t\t\t\"visible\": false\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._isHidden = true;\n\t\t\tthis._onHide(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"hidden\", duration);\n\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isHiding = false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hidden.\n\t *\n\t * @return Is hidden?\n\t */\n\tpublic isHidden(): boolean {\n\t\treturn this._isHidden;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a default state.\n\t *\n\t * @return Is showing?\n\t */\n\tpublic isShowing(): boolean {\n\t\treturn this._isShowing;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a hidden state.\n\t *\n\t * @return Is hiding?\n\t */\n\tpublic isHiding(): boolean {\n\t\treturn this._isHiding;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hovered by a pointer.\n\t *\n\t * @return Is hovered?\n\t */\n\tpublic isHover(): boolean {\n\t\treturn this._display.hovering();\n\t}\n\n\t/**\n\t * Returns `true` if this element does currently have focus.\n\t *\n\t * @return Is focused?\n\t */\n\tpublic isFocus(): boolean {\n\t\treturn this._root.focused(this);\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently being dragged.\n\t *\n\t * @return Is dragged?\n\t */\n\tpublic isDragging(): boolean {\n\t\treturn this._isDragging;\n\t}\n\n\t/**\n\t * Returns width of this element in pixels.\n\t *\n\t * @return Width (px)\n\t */\n\tpublic width(): number {\n\t\tlet width = this.get(\"width\");\n\t\tlet maxWidth = this.get(\"maxWidth\");\n\t\tlet minWidth = this.get(\"minWidth\");\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet w = 0;\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tw = privateWidth;\n\t\t}\n\t\telse {\n\t\t\tif (width == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\tw = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tw = parent.innerWidth() * width.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tw = this._root.width() * width.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(width)) {\n\t\t\t\t\tw = width;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tw = Math.max(minWidth, w);\n\t\t}\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\tw = Math.min(maxWidth, w);\n\t\t}\n\n\t\treturn w;\n\t}\n\n\t/**\n\t * Returns maximum allowed width of this element in pixels.\n\t *\n\t * @return Maximum width (px)\n\t */\n\tpublic maxWidth(): number {\n\t\tlet maxWidth = this.get(\"maxWidth\");\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\treturn maxWidth;\n\t\t}\n\t\telse {\n\t\t\tlet width = this.get(\"width\")\n\t\t\tif ($type.isNumber(width)) {\n\t\t\t\treturn width;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerWidth();\n\t\t}\n\t\treturn this._root.width();\n\t}\n\n\t/**\n\t * Returns maximum allowed height of this element in pixels.\n\t *\n\t * @return Maximum height (px)\n\t */\n\tpublic maxHeight(): number {\n\t\tlet maxHeight = this.get(\"maxHeight\");\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\treturn maxHeight;\n\t\t}\n\t\telse {\n\t\t\tlet height = this.get(\"height\")\n\t\t\tif ($type.isNumber(height)) {\n\t\t\t\treturn height;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerHeight();\n\t\t}\n\t\treturn this._root.height();\n\t}\n\n\t/**\n\t * Returns height of this element in pixels.\n\t *\n\t * @return Height (px)\n\t */\n\tpublic height(): number {\n\t\tlet height = this.get(\"height\");\n\t\tlet maxHeight = this.get(\"maxHeight\");\n\t\tlet minHeight = this.get(\"minHeight\");\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\t\tlet h = 0;\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\th = privateHeight;\n\t\t}\n\t\telse {\n\t\t\tif (height == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\th = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\th = parent.innerHeight() * height.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\th = this._root.height() * height.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(height)) {\n\t\t\t\t\th = height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\th = Math.max(minHeight, h);\n\t\t}\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\th = Math.min(maxHeight, h);\n\t\t}\n\n\t\treturn h;\n\t}\n\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\t// templateField overrides template\n\t\tif (this._templateField && f(this._templateField)) {\n\t\t\treturn this._templateField;\n\t\t}\n\n\t\treturn super._findStaticTemplate(f);\n\t}\n\n\tprotected _walkParents(f: (parent: Entity) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._walkParent(f);\n\t\t}\n\t}\n\n\tprotected _walkParent(f: (parent: Entity) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._parent._walkParent(f);\n\t\t}\n\n\t\tf(this);\n\t}\n\n\t/**\n\t * Parent [[Container]] of this element.\n\t *\n\t * @return Parent container\n\t */\n\tpublic get parent(): Container | undefined {\n\t\treturn this._parent;\n\t}\n\n\tpublic _setParent(parent: Container, updateChildren: boolean = false) {\n\t\tconst prevParent = this._parent;\n\t\tif (parent !== prevParent) {\n\t\t\tthis.markDirtyBounds();\n\n\t\t\tparent.markDirty();\n\n\t\t\tthis._parent = parent;\n\n\t\t\tif (updateChildren) {\n\t\t\t\tthis._removeParent(prevParent);\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tthis._addPercentageSizeChildren();\n\t\t\t\t\tthis._addPercentagePositionChildren();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis._applyThemes();\n\t\t}\n\t}\n\n\t/**\n\t * Returns an instance of [[NumberFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return NumberFormatter instace\n\t */\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\treturn this.get(\"numberFormatter\", this._root.numberFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DateFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DateFormatter instace\n\t */\n\tpublic getDateFormatter(): DateFormatter {\n\t\treturn this.get(\"dateFormatter\", this._root.dateFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DurationFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DurationFormatter instace\n\t */\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\treturn this.get(\"durationFormatter\", this._root.durationFormatter);\n\t}\n\n\t/**\n\t * Converts X/Y coordinate within this element to a global coordinate.\n\t *\n\t * @param  point  Local coordinate\n\t * @return        Global coordinate\n\t * @ignore\n\t */\n\tpublic toGlobal(point: IPoint): IPoint {\n\t\treturn this._display.toGlobal(point);\n\t}\n\n\t/**\n\t * Converts global X/Y coordinate to a coordinate within this element.\n\t *\n\t * @param  point  Global coordinate\n\t * @return        Local coordinate\n\t * @ignore\n\t */\n\tpublic toLocal(point: IPoint): IPoint {\n\t\treturn this._display.toLocal(point);\n\t}\n\n\tpublic _getDownPoint(): IPoint | undefined {\n\t\tconst id = this._getDownPointId();\n\t\tif (id) {\n\t\t\treturn this._downPoints[id];\n\t\t}\n\n\t}\n\n\tpublic _getDownPointId(): number | undefined {\n\t\tif (this._downPoints) {\n\t\t\treturn $object.keysOrdered(this._downPoints, (a, b) => {\n\t\t\t\tif (a > b) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a < b) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t})[0];\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the end of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toFront() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, parent.children.length - 1);\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the beginning of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toBack() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, 0);\n\t\t}\n\t}\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}