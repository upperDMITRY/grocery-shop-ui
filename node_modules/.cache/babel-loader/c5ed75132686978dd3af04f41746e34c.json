{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/common/AuthErrorAlert.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText } from '@mui/material';\nimport { setError } from '../../redux/slices/authSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginErrorAlert = () => {\n  _s();\n\n  const error = useSelector(state => state.auth.error);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(!!error);\n  useEffect(() => setOpen(!!error), [error]);\n\n  const handleClose = () => {\n    setOpen(false);\n    dispatch(setError(null));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-describedby\": \"alert-dialog-description\",\n    children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n        id: \"alert-dialog-description\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClose,\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginErrorAlert, \"3ypM7uMR5jbLvl4T2ERTBfWvVY4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LoginErrorAlert;\nexport default LoginErrorAlert;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginErrorAlert\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/common/AuthErrorAlert.jsx"],"names":["useState","useEffect","Button","Dialog","DialogActions","DialogContent","DialogContentText","setError","useSelector","useDispatch","LoginErrorAlert","error","state","auth","dispatch","open","setOpen","handleClose"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,iBALF,QAMO,eANP;AAOA,SAASC,QAAT,QAAyB,8BAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,KAAK,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,KAAvB,CAAzB;AACA,QAAMG,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,CAAC,CAACW,KAAH,CAAhC;AAEAV,EAAAA,SAAS,CAAC,MAAMe,OAAO,CAAC,CAAC,CAACL,KAAH,CAAd,EAAyB,CAACA,KAAD,CAAzB,CAAT;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxBD,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAF,IAAAA,QAAQ,CAACP,QAAQ,CAAC,IAAD,CAAT,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEQ,IADR;AAEE,IAAA,OAAO,EAAEE,WAFX;AAGE,wBAAiB,0BAHnB;AAAA,4BAKE,QAAC,aAAD;AAAA,6BACE,QAAC,iBAAD;AAAmB,QAAA,EAAE,EAAC,0BAAtB;AAAA,kBACGN;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAUE,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEM,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7BD;;GAAMP,e;UACUF,W,EACGC,W;;;KAFbC,e;AA+BN,eAAeA,eAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from '@mui/material';\nimport { setError } from '../../redux/slices/authSlice';\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst LoginErrorAlert = () => {\n  const error = useSelector((state) => state.auth.error);\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(!!error);\n\n  useEffect(() => setOpen(!!error), [error]);\n\n  const handleClose = () => {\n    setOpen(false);\n    dispatch(setError(null));\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {error}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>OK</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default LoginErrorAlert;\n"]},"metadata":{},"sourceType":"module"}