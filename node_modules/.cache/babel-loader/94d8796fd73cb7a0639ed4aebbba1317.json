{"ast":null,"code":"/** @ignore */ /** */\nimport { __extends } from \"tslib\";\nimport { BlendMode } from \"./Renderer\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\nimport { Throttler } from \"../../util/Throttler\";\nimport { Disposer, CounterDisposer } from \"../../util/Disposer\";\nimport { TextFormatter } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n/**\r\n * @ignore\r\n */\nfunction checkArgs(name, actual, expected) {\n  if (actual !== expected) {\n    throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction checkMinArgs(name, actual, expected) {\n  if (actual < expected) {\n    throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction checkEvenArgs(name, actual, expected) {\n  checkMinArgs(name, actual, expected);\n  if (actual % expected !== 0) {\n    throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n  }\n}\n/**\r\n * @ignore\r\n */\nfunction assertBinary(value) {\n  if (value === 0 || value === 1) {\n    return value;\n  } else {\n    throw new Error(\"Flag must be 0 or 1\");\n  }\n}\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n// function distributeIdBAK(id: number): number {\n// \tif (id === 1) {\n// \t\treturn 0x000001;\n// \t} else {\n// \t\t// Finds the closest power of 2\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\n// \t\t// Translates the id into an odd fraction index\n// \t\tconst index = ((base - id) * 2) + 1;\n// \t\t// TODO is Math.round correct ?\n// \t\treturn Math.round(0xffffff * (index / base));\n// \t}\n// }\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\nfunction distributeId(id) {\n  var rgb = [0, 0, 0];\n  for (var i = 0; i < 24; i++) {\n    rgb[i % 3] <<= 1;\n    rgb[i % 3] |= id & 0x01;\n    id >>= 1;\n  }\n  return (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\n}\n/**\r\n * @ignore\r\n */\nfunction eachTargets(hitTarget, f) {\n  for (;;) {\n    if (hitTarget.interactive) {\n      if (!f(hitTarget)) {\n        break;\n      }\n    }\n    if (hitTarget._parent) {\n      hitTarget = hitTarget._parent;\n    } else {\n      break;\n    }\n  }\n}\n// TODO feature detection for mouse/touch/pointer\n/**\r\n * @ignore\r\n */\nfunction onPointerEvent(element, name, f) {\n  return $utils.addEventListener(element, $utils.getRendererEvent(name), function (event) {\n    if (event.touches) {\n      $array.each(event.touches, function (touch) {\n        f(touch);\n      });\n    } else {\n      f(event);\n    }\n  });\n}\n/**\r\n * @ignore\r\n */\nfunction isTainted(image) {\n  var canvas = document.createElement(\"canvas\");\n  canvas.width = 1;\n  canvas.height = 1;\n  var context = canvas.getContext(\"2d\");\n  context.drawImage(image, 0, 0, 1, 1);\n  try {\n    context.getImageData(0, 0, 1, 1);\n    return false;\n  } catch (err) {\n    console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n    return true;\n  }\n}\n/**\r\n * @ignore\r\n */\nvar CanvasPivot = /** @class */function () {\n  function CanvasPivot() {\n    Object.defineProperty(this, \"_x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n  }\n  Object.defineProperty(CanvasPivot.prototype, \"x\", {\n    get: function () {\n      return this._x;\n    },\n    set: function (value) {\n      this._x = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CanvasPivot.prototype, \"y\", {\n    get: function () {\n      return this._y;\n    },\n    set: function (value) {\n      this._y = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CanvasPivot;\n}();\nexport { CanvasPivot };\n/**\r\n * @ignore\r\n */\nvar CanvasDisplayObject = /** @class */function (_super) {\n  __extends(CanvasDisplayObject, _super);\n  function CanvasDisplayObject(renderer) {\n    var _this = _super.call(this, function () {\n      _this._renderer._removeObject(_this);\n    }) || this;\n    Object.defineProperty(_this, \"_layer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"mask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(_this, \"visible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"exportable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"interactive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"wheelable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"isMeasured\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"buttonMode\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"alpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"compoundAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"angle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"scale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"pivot\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new CanvasPivot()\n    });\n    Object.defineProperty(_this, \"filter\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"cursorOverStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_replacedCursorStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_localMatrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    Object.defineProperty(_this, \"_matrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    // TODO can this be replaced with _localMatrix ?\n    Object.defineProperty(_this, \"_uMatrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    Object.defineProperty(_this, \"_renderer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_parent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_localBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_bounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_colorId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    _this._renderer = renderer;\n    return _this;\n  }\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getCanvas\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.getLayer().view;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var self = this;\n      for (;;) {\n        if (self._layer) {\n          return self._layer;\n        } else if (self._parent) {\n          self = self._parent;\n        } else {\n          return this._renderer.defaultLayer;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"setLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (order, visible) {\n      if (visible === void 0) {\n        visible = true;\n      }\n      if (order == null) {\n        this._layer = undefined;\n      } else {\n        this._layer = this._renderer.getLayer(order, visible);\n        this._layer.visible = visible;\n        if (this._parent) {\n          this._parent.registerChildLayer(this._layer);\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"markDirtyLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.getLayer().dirty = true;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.invalidateBounds();\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"invalidateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._localBounds = undefined;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bounds) {}\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_getColorId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this._colorId === undefined) {\n        this._colorId = this._renderer.paintId(this);\n      }\n      return this._colorId;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_isInteractive\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.interactive || this._renderer._forceInteractive > 0;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_isInteractiveMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._isInteractive();\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"contains\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child) {\n      for (;;) {\n        if (child === this) {\n          return true;\n        } else if (child._parent) {\n          child = child._parent;\n        } else {\n          return false;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"toGlobal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this._matrix.apply(point);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"toLocal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this._matrix.applyInverse(point);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getLocalMatrix\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n      return this._uMatrix;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getLocalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._localBounds) {\n        var bn = 10000000;\n        this._localBounds = {\n          left: bn,\n          top: bn,\n          right: -bn,\n          bottom: -bn\n        };\n        this._addBounds(this._localBounds);\n      }\n      return this._localBounds;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getAdjustedBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      this._setMatrix();\n      var matrix = this.getLocalMatrix();\n      var p0 = matrix.apply({\n        x: bounds.left,\n        y: bounds.top\n      });\n      var p1 = matrix.apply({\n        x: bounds.right,\n        y: bounds.top\n      });\n      var p2 = matrix.apply({\n        x: bounds.right,\n        y: bounds.bottom\n      });\n      var p3 = matrix.apply({\n        x: bounds.left,\n        y: bounds.bottom\n      });\n      return {\n        left: Math.min(p0.x, p1.x, p2.x, p3.x),\n        top: Math.min(p0.y, p1.y, p2.y, p3.y),\n        right: Math.max(p0.x, p1.x, p2.x, p3.x),\n        bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n      };\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback, context) {\n      if (this.interactive) {\n        return this._renderer._addEvent(this, key, callback, context);\n      } else {\n        return new Disposer(function () {});\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_setMatrix\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      // TODO only calculate this if it has actually changed\n      this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y,\n      // Converts degrees to radians\n      this.angle * Math.PI / 180, this.scale);\n      this._matrix.copyFrom(this._localMatrix);\n      if (this._parent) {\n        // TODO only calculate this if it has actually changed\n        this._matrix.prepend(this._parent._matrix);\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_transform\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, resolution) {\n      var m = this._matrix;\n      context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, m.tx * resolution, m.ty * resolution);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var _this = this;\n      if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n        this._setMatrix();\n        var resolution_1 = this._renderer.resolution;\n        var layers = this._renderer.layers;\n        var ghostContext = this._renderer._ghostContext;\n        var mask_1 = this.mask;\n        if (mask_1) {\n          mask_1._setMatrix();\n        }\n        $array.each(layers, function (layer) {\n          if (layer) {\n            layer.context.save();\n            // We must apply the mask before we transform the element\n            if (mask_1) {\n              mask_1._transform(layer.context, layer.scale || resolution_1);\n              mask_1._runPath(layer.context);\n              layer.context.clip();\n            }\n            layer.context.globalAlpha = _this.compoundAlpha * _this.alpha;\n            _this._transform(layer.context, layer.scale || resolution_1);\n            if (_this.filter) {\n              layer.context.filter = _this.filter;\n            }\n          }\n        });\n        ghostContext.save();\n        // We must apply the mask before we transform the element\n        if (mask_1 && this._isInteractiveMask()) {\n          mask_1._transform(ghostContext, resolution_1);\n          mask_1._runPath(ghostContext);\n          ghostContext.clip();\n        }\n        this._transform(ghostContext, resolution_1);\n        this._render(parentLayer);\n        ghostContext.restore();\n        $array.each(layers, function (layer) {\n          if (layer) {\n            layer.context.restore();\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      if (this.exportable === false) {\n        var layer = this._layer || parentLayer;\n        layer.tainted = true;\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"hovering\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._renderer._hovering.has(this);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"dragging\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      return this._renderer._dragging.some(function (x) {\n        return x.value === _this;\n      });\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.getLayer().dirty = true;\n    }\n  });\n  return CanvasDisplayObject;\n}(Disposer);\nexport { CanvasDisplayObject };\n/**\r\n * @ignore\r\n */\nvar CanvasContainer = /** @class */function (_super) {\n  __extends(CanvasContainer, _super);\n  function CanvasContainer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"interactiveChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_childLayers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_children\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    return _this;\n  }\n  Object.defineProperty(CanvasContainer.prototype, \"_isInteractiveMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.interactiveChildren || _super.prototype._isInteractiveMask.call(this);\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"addChild\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child) {\n      child._parent = this;\n      this._children.push(child);\n      if (child._layer) {\n        this.registerChildLayer(child._layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"addChildAt\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child, index) {\n      child._parent = this;\n      this._children.splice(index, 0, child);\n      if (child._layer) {\n        this.registerChildLayer(child._layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"removeChild\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child) {\n      child._parent = undefined;\n      $array.removeFirst(this._children, child);\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var _this = this;\n      _super.prototype._render.call(this, parentLayer);\n      var renderer = this._renderer;\n      if (this.interactive && this.interactiveChildren) {\n        ++renderer._forceInteractive;\n      }\n      var layer = this._layer || parentLayer;\n      $array.each(this._children, function (child) {\n        child.compoundAlpha = _this.compoundAlpha * _this.alpha;\n        child.render(layer);\n      });\n      if (this.interactive && this.interactiveChildren) {\n        --renderer._forceInteractive;\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"registerChildLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      if (!this._childLayers) {\n        this._childLayers = [];\n      }\n      $array.pushOne(this._childLayers, layer);\n      if (this._parent) {\n        this._parent.registerChildLayer(layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"markDirtyLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (deep) {\n      if (deep === void 0) {\n        deep = false;\n      }\n      _super.prototype.markDirtyLayer.call(this);\n      if (deep && this._childLayers) {\n        $array.each(this._childLayers, function (layer) {\n          return layer.dirty = true;\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.dispose.call(this);\n      if (this._childLayers) {\n        $array.each(this._childLayers, function (layer) {\n          layer.dirty = true;\n        });\n      }\n    }\n  });\n  return CanvasContainer;\n}(CanvasDisplayObject);\nexport { CanvasContainer };\n/**\r\n * @ignore\r\n */\nfunction setPoint(bounds, point) {\n  bounds.left = Math.min(bounds.left, point.x);\n  bounds.top = Math.min(bounds.top, point.y);\n  bounds.right = Math.max(bounds.right, point.x);\n  bounds.bottom = Math.max(bounds.bottom, point.y);\n}\n/**\r\n * @ignore\r\n */\nvar Op = /** @class */function () {\n  function Op() {}\n  Object.defineProperty(Op.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_context, _forceColor) {}\n  });\n  Object.defineProperty(Op.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_context) {}\n  });\n  Object.defineProperty(Op.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bounds) {}\n  });\n  return Op;\n}();\n/**\r\n * @ignore\r\n */\nvar BeginFill = /** @class */function (_super) {\n  __extends(BeginFill, _super);\n  function BeginFill(color) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    return _this;\n  }\n  Object.defineProperty(BeginFill.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, forceColor) {\n      if (forceColor !== undefined) {\n        context.fillStyle = forceColor;\n      } else {\n        context.fillStyle = this.color;\n      }\n    }\n  });\n  return BeginFill;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar EndFill = /** @class */function (_super) {\n  __extends(EndFill, _super);\n  function EndFill(clearShadow) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"clearShadow\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: clearShadow\n    });\n    return _this;\n  }\n  Object.defineProperty(EndFill.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.fill();\n      if (this.clearShadow) {\n        context.shadowColor = \"\";\n        context.shadowBlur = 0;\n        context.shadowOffsetX = 0;\n        context.shadowOffsetY = 0;\n      }\n    }\n  });\n  return EndFill;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar EndStroke = /** @class */function (_super) {\n  __extends(EndStroke, _super);\n  function EndStroke() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(EndStroke.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.stroke();\n    }\n  });\n  return EndStroke;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar LineStyle = /** @class */function (_super) {\n  __extends(LineStyle, _super);\n  function LineStyle(width, color) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(_this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    return _this;\n  }\n  Object.defineProperty(LineStyle.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, forceColor) {\n      if (forceColor !== undefined) {\n        context.strokeStyle = forceColor;\n      } else {\n        context.strokeStyle = this.color;\n      }\n      context.lineWidth = this.width;\n    }\n  });\n  return LineStyle;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar LineDash = /** @class */function (_super) {\n  __extends(LineDash, _super);\n  function LineDash(dash) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"dash\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: dash\n    });\n    return _this;\n  }\n  Object.defineProperty(LineDash.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.setLineDash(this.dash);\n    }\n  });\n  return LineDash;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar LineDashOffset = /** @class */function (_super) {\n  __extends(LineDashOffset, _super);\n  function LineDashOffset(dashOffset) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"dashOffset\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: dashOffset\n    });\n    return _this;\n  }\n  Object.defineProperty(LineDashOffset.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.lineDashOffset = this.dashOffset;\n    }\n  });\n  return LineDashOffset;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar DrawRect = /** @class */function (_super) {\n  __extends(DrawRect, _super);\n  function DrawRect(x, y, width, height) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(_this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: height\n    });\n    return _this;\n  }\n  Object.defineProperty(DrawRect.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.rect(this.x, this.y, this.width, this.height);\n    }\n  });\n  Object.defineProperty(DrawRect.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var l = this.x;\n      var t = this.y;\n      var r = l + this.width;\n      var b = t + this.height;\n      setPoint(bounds, {\n        x: l,\n        y: t\n      });\n      setPoint(bounds, {\n        x: r,\n        y: t\n      });\n      setPoint(bounds, {\n        x: l,\n        y: b\n      });\n      setPoint(bounds, {\n        x: r,\n        y: b\n      });\n    }\n  });\n  return DrawRect;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar DrawCircle = /** @class */function (_super) {\n  __extends(DrawCircle, _super);\n  function DrawCircle(x, y, radius) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    return _this;\n  }\n  Object.defineProperty(DrawCircle.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.moveTo(this.x + this.radius, this.y);\n      context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    }\n  });\n  // TODO handle skewing and rotation\n  Object.defineProperty(DrawCircle.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x - this.radius,\n        y: this.y - this.radius\n      });\n      setPoint(bounds, {\n        x: this.x + this.radius,\n        y: this.y + this.radius\n      });\n    }\n  });\n  return DrawCircle;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar Arc = /** @class */function (_super) {\n  __extends(Arc, _super);\n  function Arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"cx\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cx\n    });\n    Object.defineProperty(_this, \"cy\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cy\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    Object.defineProperty(_this, \"startAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: startAngle\n    });\n    Object.defineProperty(_this, \"endAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: endAngle\n    });\n    Object.defineProperty(_this, \"anticlockwise\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: anticlockwise\n    });\n    return _this;\n  }\n  Object.defineProperty(Arc.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.radius > 0) {\n        context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n      }\n    }\n  });\n  Object.defineProperty(Arc.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n      setPoint(bounds, {\n        x: arcBounds.left,\n        y: arcBounds.top\n      });\n      setPoint(bounds, {\n        x: arcBounds.right,\n        y: arcBounds.bottom\n      });\n    }\n  });\n  return Arc;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar ArcTo = /** @class */function (_super) {\n  __extends(ArcTo, _super);\n  function ArcTo(x1, y1, x2, y2, radius) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x1\n    });\n    Object.defineProperty(_this, \"y1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y1\n    });\n    Object.defineProperty(_this, \"x2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x2\n    });\n    Object.defineProperty(_this, \"y2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y2\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    return _this;\n  }\n  Object.defineProperty(ArcTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.radius > 0) {\n        context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n      }\n    }\n  });\n  // TODO: add points\n  Object.defineProperty(ArcTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bounds) {\n      /*\r\n      // not finished\r\n      https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n            if (prevPoint) {\r\n          let x1 = prevPoint.x;\r\n          let y1 = prevPoint.y;\r\n          let x2 = this.x2;\r\n          let y2 = this.y2;\r\n          let r = this.radius;\r\n                let xa = (x2 - x1) / 2;\r\n          let ya = (y2 - y1) / 2;\r\n                let x0 = x1 + xa;\r\n          let y0 = y1 + ya;\r\n                let a = Math.hypot(xa, ya);\r\n          let b = Math.sqrt(r * r - a * a);\r\n                let cx = x0 + b * ya / a;\r\n          let cy = y0 - b * xa / a;\r\n                console.log(cx, cy);\r\n      }*/\n    }\n  });\n  return ArcTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar LineTo = /** @class */function (_super) {\n  __extends(LineTo, _super);\n  function LineTo(x, y) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    return _this;\n  }\n  Object.defineProperty(LineTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.lineTo(this.x, this.y);\n    }\n  });\n  Object.defineProperty(LineTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x,\n        y: this.y\n      });\n    }\n  });\n  return LineTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar MoveTo = /** @class */function (_super) {\n  __extends(MoveTo, _super);\n  function MoveTo(x, y) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    return _this;\n  }\n  Object.defineProperty(MoveTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.moveTo(this.x, this.y);\n    }\n  });\n  Object.defineProperty(MoveTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x,\n        y: this.y\n      });\n    }\n  });\n  return MoveTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar ClosePath = /** @class */function (_super) {\n  __extends(ClosePath, _super);\n  function ClosePath() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(ClosePath.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.closePath();\n    }\n  });\n  return ClosePath;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar BezierCurveTo = /** @class */function (_super) {\n  __extends(BezierCurveTo, _super);\n  function BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"cpX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX\n    });\n    Object.defineProperty(_this, \"cpY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY\n    });\n    Object.defineProperty(_this, \"cpX2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX2\n    });\n    Object.defineProperty(_this, \"cpY2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY2\n    });\n    Object.defineProperty(_this, \"toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toX\n    });\n    Object.defineProperty(_this, \"toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toY\n    });\n    return _this;\n  }\n  Object.defineProperty(BezierCurveTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n    }\n  });\n  // TODO: OK?\n  Object.defineProperty(BezierCurveTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.cpX,\n        y: this.cpY\n      });\n      setPoint(bounds, {\n        x: this.cpX2,\n        y: this.cpY2\n      });\n      setPoint(bounds, {\n        x: this.toX,\n        y: this.toY\n      });\n    }\n  });\n  return BezierCurveTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar QuadraticCurveTo = /** @class */function (_super) {\n  __extends(QuadraticCurveTo, _super);\n  function QuadraticCurveTo(cpX, cpY, toX, toY) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"cpX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX\n    });\n    Object.defineProperty(_this, \"cpY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY\n    });\n    Object.defineProperty(_this, \"toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toX\n    });\n    Object.defineProperty(_this, \"toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toY\n    });\n    return _this;\n  }\n  Object.defineProperty(QuadraticCurveTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n    }\n  });\n  // TODO: OK?\n  Object.defineProperty(QuadraticCurveTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.cpX,\n        y: this.cpY\n      });\n      setPoint(bounds, {\n        x: this.toX,\n        y: this.toY\n      });\n    }\n  });\n  return QuadraticCurveTo;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar Shadow = /** @class */function (_super) {\n  __extends(Shadow, _super);\n  function Shadow(color, blur, offsetX, offsetY, opacity) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    Object.defineProperty(_this, \"blur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: blur\n    });\n    Object.defineProperty(_this, \"offsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: offsetX\n    });\n    Object.defineProperty(_this, \"offsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: offsetY\n    });\n    Object.defineProperty(_this, \"opacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: opacity\n    });\n    return _this;\n  }\n  Object.defineProperty(Shadow.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      if (this.opacity) {\n        context.fillStyle = this.color;\n      }\n      context.shadowColor = this.color;\n      if (this.blur) {\n        context.shadowBlur = this.blur;\n      }\n      if (this.offsetX) {\n        context.shadowOffsetX = this.offsetX;\n      }\n      if (this.offsetY) {\n        context.shadowOffsetY = this.offsetY;\n      }\n    }\n  });\n  return Shadow;\n}(Op);\n/**\r\n * @ignore\r\n */\nvar CanvasGraphics = /** @class */function (_super) {\n  __extends(CanvasGraphics, _super);\n  function CanvasGraphics() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_operations\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"blendMode\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: BlendMode.NORMAL\n    });\n    Object.defineProperty(_this, \"_hasShadows\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_fillAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_strokeAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  Object.defineProperty(CanvasGraphics.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.clear.call(this);\n      this._operations.length = 0;\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_pushOp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (op) {\n      this._operations.push(op);\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"beginFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (color, alpha) {\n      if (alpha === void 0) {\n        alpha = 1;\n      }\n      this._fillAlpha = alpha;\n      if (color) {\n        if (color instanceof Color) {\n          this._pushOp(new BeginFill(color.toCSS(alpha)));\n        } else {\n          this.isMeasured = true;\n          this._pushOp(new BeginFill(color));\n        }\n      } else {\n        this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"endFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._pushOp(new EndFill(this._hasShadows));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"endStroke\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._pushOp(new EndStroke());\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"lineStyle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (width, color, alpha) {\n      if (width === void 0) {\n        width = 0;\n      }\n      if (alpha === void 0) {\n        alpha = 1;\n      }\n      this._strokeAlpha = alpha;\n      if (color) {\n        if (color instanceof Color) {\n          this._pushOp(new LineStyle(width, color.toCSS(alpha)));\n        } else {\n          this._pushOp(new LineStyle(width, color));\n        }\n      } else {\n        this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\"));\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"setLineDash\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dash) {\n      this._pushOp(new LineDash(dash ? dash : []));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"setLineDashOffset\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dashOffset) {\n      this._pushOp(new LineDashOffset(dashOffset || 0));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"drawRect\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y, width, height) {\n      this._pushOp(new DrawRect(x, y, width, height));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"drawCircle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y, radius) {\n      this._pushOp(new DrawCircle(x, y, radius));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"arc\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cx, cy, radius, startAngle, endAngle, anticlockwise) {\n      if (anticlockwise === void 0) {\n        anticlockwise = false;\n      }\n      this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"arcTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x1, y1, x2, y2, radius) {\n      this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"lineTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y) {\n      this._pushOp(new LineTo(x, y));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"moveTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y) {\n      this._pushOp(new MoveTo(x, y));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"bezierCurveTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cpX, cpY, cpX2, cpY2, toX, toY) {\n      this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"quadraticCurveTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cpX, cpY, toX, toY) {\n      this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"closePath\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._pushOp(new ClosePath());\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"shadow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (color, blur, offsetX, offsetY, opacity) {\n      this._hasShadows = true;\n      this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n    }\n  });\n  // https://svgwg.org/svg2-draft/paths.html#DProperty\n  // TODO better error checking\n  Object.defineProperty(CanvasGraphics.prototype, \"svgPath\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (path) {\n      var _this = this;\n      var x = 0;\n      var y = 0;\n      var cpx = null;\n      var cpy = null;\n      var qcpx = null;\n      var qcpy = null;\n      var SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n      var ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n      var match;\n      while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n        var name_1 = match[1];\n        var rest = match[2];\n        var args = [];\n        while ((match = ARGS_REGEXP.exec(rest)) !== null) {\n          args.push(+match[1]);\n        }\n        // Reset control point\n        if (name_1 !== \"S\" && name_1 !== \"s\" && name_1 !== \"C\" && name_1 !== \"c\") {\n          cpx = null;\n          cpy = null;\n        }\n        // Reset control point\n        if (name_1 !== \"Q\" && name_1 !== \"q\" && name_1 !== \"T\" && name_1 !== \"t\") {\n          qcpx = null;\n          qcpy = null;\n        }\n        switch (name_1) {\n          case \"M\":\n            checkEvenArgs(name_1, args.length, 2);\n            x = args[0];\n            y = args[1];\n            this.moveTo(x, y);\n            for (var i = 2; i < args.length; i += 2) {\n              x = args[i];\n              y = args[i + 1];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"m\":\n            checkEvenArgs(name_1, args.length, 2);\n            x += args[0];\n            y += args[1];\n            this.moveTo(x, y);\n            for (var i = 2; i < args.length; i += 2) {\n              x += args[i];\n              y += args[i + 1];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"L\":\n            checkEvenArgs(name_1, args.length, 2);\n            for (var i = 0; i < args.length; i += 2) {\n              x = args[i];\n              y = args[i + 1];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"l\":\n            checkEvenArgs(name_1, args.length, 2);\n            for (var i = 0; i < args.length; i += 2) {\n              x += args[i];\n              y += args[i + 1];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"H\":\n            checkMinArgs(name_1, args.length, 1);\n            for (var i = 0; i < args.length; ++i) {\n              x = args[i];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"h\":\n            checkMinArgs(name_1, args.length, 1);\n            for (var i = 0; i < args.length; ++i) {\n              x += args[i];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"V\":\n            checkMinArgs(name_1, args.length, 1);\n            for (var i = 0; i < args.length; ++i) {\n              y = args[i];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"v\":\n            checkMinArgs(name_1, args.length, 1);\n            for (var i = 0; i < args.length; ++i) {\n              y += args[i];\n              this.lineTo(x, y);\n            }\n            break;\n          case \"C\":\n            checkEvenArgs(name_1, args.length, 6);\n            for (var i = 0; i < args.length; i += 6) {\n              var x1 = args[i];\n              var y1 = args[i + 1];\n              cpx = args[i + 2];\n              cpy = args[i + 3];\n              x = args[i + 4];\n              y = args[i + 5];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n            break;\n          case \"c\":\n            checkEvenArgs(name_1, args.length, 6);\n            for (var i = 0; i < args.length; i += 6) {\n              var x1 = args[i] + x;\n              var y1 = args[i + 1] + y;\n              cpx = args[i + 2] + x;\n              cpy = args[i + 3] + y;\n              x += args[i + 4];\n              y += args[i + 5];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n            break;\n          case \"S\":\n            checkEvenArgs(name_1, args.length, 4);\n            if (cpx === null || cpy === null) {\n              cpx = x;\n              cpy = y;\n            }\n            for (var i = 0; i < args.length; i += 4) {\n              var x1 = 2 * x - cpx;\n              var y1 = 2 * y - cpy;\n              cpx = args[i];\n              cpy = args[i + 1];\n              x = args[i + 2];\n              y = args[i + 3];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n            break;\n          case \"s\":\n            checkEvenArgs(name_1, args.length, 4);\n            if (cpx === null || cpy === null) {\n              cpx = x;\n              cpy = y;\n            }\n            for (var i = 0; i < args.length; i += 4) {\n              var x1 = 2 * x - cpx;\n              var y1 = 2 * y - cpy;\n              cpx = args[i] + x;\n              cpy = args[i + 1] + y;\n              x += args[i + 2];\n              y += args[i + 3];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n            break;\n          case \"Q\":\n            checkEvenArgs(name_1, args.length, 4);\n            for (var i = 0; i < args.length; i += 4) {\n              qcpx = args[i];\n              qcpy = args[i + 1];\n              x = args[i + 2];\n              y = args[i + 3];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n            break;\n          case \"q\":\n            checkEvenArgs(name_1, args.length, 4);\n            for (var i = 0; i < args.length; i += 4) {\n              qcpx = args[i] + x;\n              qcpy = args[i + 1] + y;\n              x += args[i + 2];\n              y += args[i + 3];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n            break;\n          case \"T\":\n            checkEvenArgs(name_1, args.length, 2);\n            if (qcpx === null || qcpy === null) {\n              qcpx = x;\n              qcpy = y;\n            }\n            for (var i = 0; i < args.length; i += 2) {\n              qcpx = 2 * x - qcpx;\n              qcpy = 2 * y - qcpy;\n              x = args[i];\n              y = args[i + 1];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n            break;\n          case \"t\":\n            checkEvenArgs(name_1, args.length, 2);\n            if (qcpx === null || qcpy === null) {\n              qcpx = x;\n              qcpy = y;\n            }\n            for (var i = 0; i < args.length; i += 2) {\n              qcpx = 2 * x - qcpx;\n              qcpy = 2 * y - qcpy;\n              x += args[i];\n              y += args[i + 1];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n            break;\n          case \"A\":\n          case \"a\":\n            var relative = name_1 === \"a\";\n            checkEvenArgs(name_1, args.length, 7);\n            for (var i = 0; i < args.length; i += 7) {\n              var cx = args[i + 5];\n              var cy = args[i + 6];\n              if (relative) {\n                cx += x;\n                cy += y;\n              }\n              var bs = arcToBezier({\n                px: x,\n                py: y,\n                rx: args[i],\n                ry: args[i + 1],\n                xAxisRotation: args[i + 2],\n                largeArcFlag: assertBinary(args[i + 3]),\n                sweepFlag: assertBinary(args[i + 4]),\n                cx: cx,\n                cy: cy\n              });\n              $array.each(bs, function (b) {\n                _this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n                x = b.x;\n                y = b.y;\n              });\n            }\n            break;\n          case \"Z\":\n          case \"z\":\n            checkArgs(name_1, args.length, 0);\n            this.closePath();\n            break;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_runPath\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.beginPath();\n      $array.each(this._operations, function (op) {\n        op.path(context);\n      });\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      _super.prototype._render.call(this, parentLayer);\n      var layer = this._layer || parentLayer;\n      var layerDirty = layer.dirty;\n      var interactive = this._isInteractive();\n      // if (this.targetLayer) {\n      // \tconsole.log(this._operations, layer)\n      // }\n      if (layerDirty || interactive) {\n        var context_1 = layer.context;\n        var ghostContext_1 = this._renderer._ghostContext;\n        if (layerDirty) {\n          context_1.globalCompositeOperation = this.blendMode;\n          context_1.beginPath();\n        }\n        var color_1;\n        if (interactive) {\n          ghostContext_1.beginPath();\n          color_1 = this._getColorId();\n        }\n        $array.each(this._operations, function (op) {\n          if (layerDirty) {\n            op.path(context_1);\n            op.colorize(context_1, undefined);\n          }\n          if (interactive) {\n            op.path(ghostContext_1);\n            op.colorize(ghostContext_1, color_1);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"renderDetached\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.visible) {\n        this._setMatrix();\n        context.save();\n        // We must apply the mask before we transform the element\n        var mask = this.mask;\n        if (mask) {\n          mask._setMatrix();\n          mask._transform(context, 1);\n          mask._runPath(context);\n          context.clip();\n        }\n        // TODO handle compoundAlpha somehow ?\n        context.globalAlpha = this.compoundAlpha * this.alpha;\n        this._transform(context, 1);\n        if (this.filter) {\n          context.filter = this.filter;\n        }\n        context.globalCompositeOperation = this.blendMode;\n        context.beginPath();\n        $array.each(this._operations, function (op) {\n          op.path(context);\n          op.colorize(context, undefined);\n        });\n        context.restore();\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      if (this.visible && this.isMeasured) {\n        $array.each(this._operations, function (op) {\n          op.addBounds(bounds);\n        });\n      }\n    }\n  });\n  return CanvasGraphics;\n}(CanvasDisplayObject);\nexport { CanvasGraphics };\n/**\r\n * @ignore\r\n */\nvar CanvasText = /** @class */function (_super) {\n  __extends(CanvasText, _super);\n  function CanvasText(renderer, text, style) {\n    var _this = _super.call(this, renderer) || this;\n    Object.defineProperty(_this, \"text\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"style\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"resolution\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_textInfo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_textVisible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_originalScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    _this.text = text;\n    _this.style = style;\n    return _this;\n  }\n  Object.defineProperty(CanvasText.prototype, \"invalidateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.invalidateBounds.call(this);\n      this._textInfo = undefined;\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_shared\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.style.textAlign) {\n        context.textAlign = this.style.textAlign;\n      }\n      if (this.style.direction) {\n        context.direction = this.style.direction;\n      }\n      if (this.style.textBaseline) {\n        context.textBaseline = this.style.textBaseline;\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_prerender\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer, ignoreGhost, ignoreFontWeight) {\n      if (ignoreGhost === void 0) {\n        ignoreGhost = false;\n      }\n      if (ignoreFontWeight === void 0) {\n        ignoreFontWeight = false;\n      }\n      _super.prototype._render.call(this, layer);\n      var context = layer.context;\n      var ghostContext = this._renderer._ghostContext;\n      // Font style\n      var style = this.style;\n      var fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n      context.font = fontStyle;\n      if (this._isInteractive() && !ignoreGhost) {\n        ghostContext.font = fontStyle;\n      }\n      // Other parameters\n      if (style.fill) {\n        if (style.fill instanceof Color) {\n          context.fillStyle = style.fill.toCSS();\n        } else {\n          context.fillStyle = style.fill;\n        }\n      }\n      if (style.shadowColor) {\n        layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n      }\n      if (style.shadowBlur) {\n        layer.context.shadowBlur = style.shadowBlur;\n      }\n      if (style.shadowOffsetX) {\n        layer.context.shadowOffsetX = style.shadowOffsetX;\n      }\n      if (style.shadowOffsetY) {\n        layer.context.shadowOffsetY = style.shadowOffsetY;\n      }\n      this._shared(context);\n      if (this._isInteractive() && !ignoreGhost) {\n        ghostContext.fillStyle = this._getColorId();\n        this._shared(ghostContext);\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_getFontStyle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (style2, ignoreFontWeight) {\n      if (ignoreFontWeight === void 0) {\n        ignoreFontWeight = false;\n      }\n      // Process defaults\n      var style = this.style;\n      var fontStyle = [];\n      if (style2 && style2.fontVariant) {\n        fontStyle.push(style2.fontVariant);\n      } else if (style.fontVariant) {\n        fontStyle.push(style.fontVariant);\n      }\n      if (!ignoreFontWeight) {\n        if (style2 && style2.fontWeight) {\n          fontStyle.push(style2.fontWeight);\n        } else if (style.fontWeight) {\n          fontStyle.push(style.fontWeight);\n        }\n      }\n      if (style2 && style2.fontStyle) {\n        fontStyle.push(style2.fontStyle);\n      } else if (style.fontStyle) {\n        fontStyle.push(style.fontStyle);\n      }\n      if (style2 && style2.fontSize) {\n        if ($type.isNumber(style2.fontSize)) {\n          style2.fontSize = style2.fontSize + \"px\";\n        }\n        fontStyle.push(style2.fontSize);\n      } else if (style.fontSize) {\n        if ($type.isNumber(style.fontSize)) {\n          style.fontSize = style.fontSize + \"px\";\n        }\n        fontStyle.push(style.fontSize);\n      }\n      if (style2 && style2.fontFamily) {\n        fontStyle.push(style2.fontFamily);\n      } else if (style.fontFamily) {\n        fontStyle.push(style.fontFamily);\n      } else if (fontStyle.length) {\n        fontStyle.push(\"Arial\");\n      }\n      return fontStyle.join(\" \");\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var _this = this;\n      var layer = this._layer || parentLayer;\n      // We need measurements in order to properly position text for alignment\n      if (!this._textInfo) {\n        this._measure(layer);\n      }\n      if (this._textVisible) {\n        var interactive_1 = this._isInteractive();\n        var context_2 = layer.context;\n        var layerDirty_1 = layer.dirty;\n        var ghostContext_2 = this._renderer._ghostContext;\n        //console.log(\"interactive:\",  interactive, \"layerDirty:\", layerDirty);\n        context_2.save();\n        ghostContext_2.save();\n        this._prerender(layer);\n        // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n        // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n        // Process text info produced by _measure()\n        $array.each(this._textInfo, function (line, _index) {\n          $array.each(line.textChunks, function (chunk, _index) {\n            // Set style\n            if (chunk.style) {\n              context_2.save();\n              ghostContext_2.save();\n              context_2.font = chunk.style;\n              if (_this._isInteractive()) {\n                ghostContext_2.font = chunk.style;\n              }\n            }\n            if (chunk.fill) {\n              context_2.save();\n              context_2.fillStyle = chunk.fill.toCSS();\n              // Color does not affect ghostContext so we not set it\n            }\n            // Draw text\n            if (layerDirty_1) {\n              context_2.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n            }\n            if (interactive_1 && _this.interactive) {\n              // Draw text in ghost canvas ONLY if it is set as interactive\n              // explicitly. This way we avoid hit test anomalies caused by anti\n              // aliasing of text.\n              ghostContext_2.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n            }\n            if (chunk.fill) {\n              context_2.restore();\n              // Color does not affect ghostContext so we not set it\n            }\n            // Reset style\n            if (chunk.style) {\n              context_2.restore();\n              ghostContext_2.restore();\n            }\n          });\n        });\n        context_2.restore();\n        ghostContext_2.restore();\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      if (this.visible && this.isMeasured) {\n        //if (this._textVisible) {\n        var x = this._measure(this.getLayer());\n        setPoint(bounds, {\n          x: x.left,\n          y: x.top\n        });\n        setPoint(bounds, {\n          x: x.right,\n          y: x.bottom\n        });\n        //}\n      }\n    }\n  });\n\n  Object.defineProperty(CanvasText.prototype, \"_measure\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      var _this = this;\n      var context = layer.context;\n      var ghostContext = this._renderer._ghostContext;\n      // Reset text info\n      this._textInfo = [];\n      // Init\n      var oversizedBehavior = this.style.oversizedBehavior;\n      var maxWidth = this.style.maxWidth;\n      var truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n      var wrap = $type.isNumber(maxWidth) && oversizedBehavior == \"wrap\";\n      // Pre-render\n      context.save();\n      ghostContext.save();\n      this._prerender(layer, true, true);\n      // Get default font metrix\n      var refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n      // Split up text into lines\n      var lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n      var styleRestored = true;\n      var minX = 0;\n      var maxX = 0;\n      // Iterate through the lines\n      var offsetY = 0;\n      $array.each(lines, function (line, _index) {\n        // Split up line into format/value chunks\n        var chunks;\n        if (line == \"\") {\n          chunks = [{\n            type: \"value\",\n            text: \"\"\n          }];\n        } else {\n          chunks = TextFormatter.chunk(line, false, _this.style.ignoreFormatting);\n        }\n        var _loop_1 = function () {\n          // Init line object\n          var lineInfo = {\n            offsetY: offsetY,\n            ascent: 0,\n            width: 0,\n            height: 0,\n            left: 0,\n            right: 0,\n            textChunks: []\n          };\n          // Measure reference text\n          var metrics = _this._measureText(refText, context);\n          var height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n          lineInfo.height = height;\n          lineInfo.ascent = metrics.actualBoundingBoxAscent;\n          var currentStyle;\n          var currentFormat;\n          var currentFill;\n          var currentChunkWidth;\n          var skipFurtherText = false;\n          var firstTextChunk = true;\n          var leftoverChunks = [];\n          //let offsetX = 0;\n          //let chunk;\n          //while(chunk = chunks.shift()) {\n          $array.eachContinue(chunks, function (chunk, index) {\n            // Format chunk\n            if (chunk.type == \"format\") {\n              if (chunk.text == \"[/]\") {\n                if (!styleRestored) {\n                  context.restore();\n                  ghostContext.restore();\n                  styleRestored = true;\n                }\n                currentFill = undefined;\n                currentStyle = undefined;\n                currentChunkWidth = undefined;\n                currentFormat = chunk.text;\n              } else {\n                if (!styleRestored) {\n                  context.restore();\n                  ghostContext.restore();\n                }\n                var format = TextFormatter.getTextStyle(chunk.text);\n                var fontStyle = _this._getFontStyle(format);\n                context.save();\n                ghostContext.save();\n                context.font = fontStyle;\n                currentStyle = fontStyle;\n                currentFormat = chunk.text;\n                if (format.fill) {\n                  currentFill = format.fill;\n                }\n                if (format.width) {\n                  currentChunkWidth = $type.toNumber(format.width);\n                }\n                styleRestored = false;\n                // Measure reference text after change of format\n                var metrics_1 = _this._measureText(refText, context);\n                var height_1 = metrics_1.actualBoundingBoxAscent + metrics_1.actualBoundingBoxDescent;\n                if (height_1 > lineInfo.height) {\n                  lineInfo.height = height_1;\n                }\n                if (metrics_1.actualBoundingBoxAscent > lineInfo.ascent) {\n                  lineInfo.ascent = metrics_1.actualBoundingBoxAscent;\n                }\n              }\n            }\n            // Text chunk\n            else if (chunk.type == \"value\" && !skipFurtherText) {\n              // Measure\n              var metrics_2 = _this._measureText(chunk.text, context);\n              var chunkWidth = metrics_2.actualBoundingBoxLeft + metrics_2.actualBoundingBoxRight;\n              // Check for fit\n              if (truncate) {\n                // Break words?\n                var breakWords = firstTextChunk || _this.style.breakWords || false;\n                // Measure ellipsis and check if it fits\n                var ellipsis = _this.style.ellipsis || \"\";\n                var ellipsisMetrics = _this._measureText(ellipsis, context);\n                var ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n                // Check fit\n                if (lineInfo.width + chunkWidth > maxWidth) {\n                  var excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n                  chunk.text = _this._truncateText(context, chunk.text, excessWidth, breakWords);\n                  chunk.text += ellipsis;\n                  skipFurtherText = true;\n                }\n              } else if (wrap) {\n                // Check fit\n                if (lineInfo.width + chunkWidth > maxWidth) {\n                  var excessWidth = maxWidth - lineInfo.width;\n                  var tmpText = _this._truncateText(context, chunk.text, excessWidth, false, firstTextChunk);\n                  if (tmpText == \"\") {\n                    // Unable to fit a single letter - hide the whole label\n                    _this._textVisible = true;\n                    return false;\n                  }\n                  //skipFurtherText = true;\n                  //Add remaining chunks for the next line\n                  leftoverChunks = chunks.slice(index + 1);\n                  //Add remaining text of current chunk if it was forced-cut\n                  if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n                    leftoverChunks.unshift({\n                      type: \"value\",\n                      text: chunk.text.substr(tmpText.length)\n                    });\n                    if (currentFormat) {\n                      leftoverChunks.unshift({\n                        type: \"format\",\n                        text: currentFormat\n                      });\n                    }\n                  }\n                  // Set current chunk (truncated)\n                  chunk.text = tmpText;\n                  chunks = [];\n                  skipFurtherText = true;\n                }\n              }\n              // Chunk width?\n              var leftBoundMod = 1;\n              var rightBoundMod = 1;\n              if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) {\n                // increase horizontal bounding boxes accordingly\n                var boundsMod = chunkWidth / currentChunkWidth;\n                switch (_this.style.textAlign) {\n                  case \"right\":\n                  case \"end\":\n                    leftBoundMod = boundsMod;\n                    break;\n                  case \"center\":\n                    leftBoundMod = boundsMod;\n                    rightBoundMod = boundsMod;\n                    break;\n                  default:\n                    rightBoundMod = boundsMod;\n                }\n                chunkWidth = currentChunkWidth;\n              }\n              var chunkHeight = metrics_2.actualBoundingBoxAscent + metrics_2.actualBoundingBoxDescent;\n              if (chunkHeight > lineInfo.height) {\n                lineInfo.height = chunkHeight;\n              }\n              if (metrics_2.actualBoundingBoxAscent > lineInfo.ascent) {\n                lineInfo.ascent = metrics_2.actualBoundingBoxAscent;\n              }\n              lineInfo.width += chunkWidth;\n              lineInfo.left += metrics_2.actualBoundingBoxLeft / leftBoundMod;\n              lineInfo.right += metrics_2.actualBoundingBoxRight / rightBoundMod;\n              lineInfo.textChunks.push({\n                style: currentStyle,\n                fill: currentFill,\n                text: chunk.text,\n                width: chunkWidth,\n                height: chunkHeight,\n                left: metrics_2.actualBoundingBoxLeft,\n                right: metrics_2.actualBoundingBoxRight,\n                ascent: metrics_2.actualBoundingBoxAscent,\n                offsetX: 0,\n                offsetY: 0\n              });\n              //offsetX += chunkWidth;\n              firstTextChunk = false;\n            }\n            if (leftoverChunks) {\n              //return false;\n            }\n            return true;\n            //}\n          });\n\n          if (_this.style.lineHeight instanceof Percent) {\n            lineInfo.height *= _this.style.lineHeight.value;\n            lineInfo.ascent *= _this.style.lineHeight.value;\n          } else {\n            lineInfo.height *= _this.style.lineHeight || 1.2;\n            lineInfo.ascent *= _this.style.lineHeight || 1.2;\n          }\n          if (minX < lineInfo.left) {\n            minX = lineInfo.left;\n          }\n          if (maxX < lineInfo.right) {\n            maxX = lineInfo.right;\n          }\n          _this._textInfo.push(lineInfo);\n          //lineInfo.offsetY += lineInfo.ascent;\n          offsetY += lineInfo.height;\n          // Reset chunks so that it can proceed to the next line\n          chunks = leftoverChunks || [];\n        };\n        while (chunks.length > 0) {\n          _loop_1();\n        }\n      });\n      if (!styleRestored) {\n        context.restore();\n        ghostContext.restore();\n      }\n      // Adjust chunk internal offsets\n      $array.each(this._textInfo, function (lineInfo, _index) {\n        var currentChunkOffset = 0;\n        $array.each(lineInfo.textChunks, function (chunk) {\n          chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n          chunk.offsetY += lineInfo.height - lineInfo.height * (_this.style.baselineRatio || 0.19);\n          currentChunkOffset += chunk.width;\n        });\n      });\n      var bounds = {\n        left: -minX,\n        top: 0,\n        right: maxX,\n        bottom: offsetY\n      };\n      // We need to fit?\n      if (oversizedBehavior !== \"none\") {\n        var ratio = this._fitRatio(bounds);\n        if (ratio < 1) {\n          if (oversizedBehavior == \"fit\") {\n            if ($type.isNumber(this.style.minScale) && ratio < this.style.minScale) {\n              this._textVisible = false;\n            } else {\n              if (!this._originalScale || this._originalScale == 1) {\n                this._originalScale = this.scale;\n              }\n              this.scale = ratio;\n              this._textVisible = true;\n            }\n          } else if (oversizedBehavior == \"hide\") {\n            this._textVisible = false;\n          } else {\n            switch (this.style.textAlign) {\n              case \"right\":\n              case \"end\":\n                bounds.left = maxWidth;\n                bounds.right = 0;\n                break;\n              case \"center\":\n                bounds.left = -maxWidth / 2;\n                bounds.right = maxWidth / 2;\n                break;\n              default:\n                bounds.left = 0;\n                bounds.right = maxWidth;\n            }\n            this.scale = this._originalScale || 1;\n            this._originalScale = undefined;\n            this._textVisible = true;\n          }\n        } else {\n          this.scale = this._originalScale || 1;\n          this._originalScale = undefined;\n          this._textVisible = true;\n        }\n      }\n      context.restore();\n      ghostContext.restore();\n      return bounds;\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_fitRatio\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var maxW = this.style.maxWidth;\n      var maxH = this.style.maxHeight;\n      if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n        return 1;\n      }\n      var w = bounds.right - bounds.left;\n      var h = bounds.bottom - bounds.top;\n      return Math.min(maxW / w || 1, maxH / h || 1);\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_truncateText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, text, maxWidth, breakWords, fallbackBreakWords) {\n      if (breakWords === void 0) {\n        breakWords = false;\n      }\n      if (fallbackBreakWords === void 0) {\n        fallbackBreakWords = true;\n      }\n      var width;\n      do {\n        if (breakWords) {\n          text = text.slice(0, -1);\n        } else {\n          var tmp = text.replace(/[^,;:!?\\\\\\/\\.\\s]+[,;:!?\\\\\\/\\.\\s]*$/g, \"\");\n          if (tmp == \"\" && fallbackBreakWords) {\n            breakWords = true;\n          } else {\n            text = tmp;\n          }\n        }\n        var metrics = this._measureText(text, context);\n        width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n      } while (width > maxWidth && text != \"\");\n      return text;\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_measureText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, context) {\n      var metrics = context.measureText(text);\n      var fakeMetrics = {};\n      if (metrics.actualBoundingBoxAscent == null) {\n        var div = document.createElement(\"div\");\n        div.innerText = text;\n        div.style.visibility = \"hidden\";\n        div.style.position = \"absolute\";\n        div.style.top = \"-1000000px;\";\n        div.style.fontFamily = this.style.fontFamily || \"\";\n        div.style.fontSize = this.style.fontSize + \"\";\n        document.body.appendChild(div);\n        var bbox = div.getBoundingClientRect();\n        document.body.removeChild(div);\n        var h = bbox.height;\n        var w_1 = metrics.width;\n        var left = 0;\n        var right = w_1;\n        fakeMetrics = {\n          actualBoundingBoxAscent: h,\n          actualBoundingBoxDescent: 0,\n          actualBoundingBoxLeft: left,\n          actualBoundingBoxRight: right,\n          fontBoundingBoxAscent: h,\n          fontBoundingBoxDescent: 0,\n          width: w_1\n        };\n        //return fake;\n      } else {\n        fakeMetrics = {\n          actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n          actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n          actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n          actualBoundingBoxRight: metrics.actualBoundingBoxRight,\n          fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n          fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n          width: metrics.width\n        };\n      }\n      var w = metrics.width;\n      switch (this.style.textAlign) {\n        case \"right\":\n        case \"end\":\n          fakeMetrics.actualBoundingBoxLeft = w;\n          fakeMetrics.actualBoundingBoxRight = 0;\n          break;\n        case \"center\":\n          fakeMetrics.actualBoundingBoxLeft = w / 2;\n          fakeMetrics.actualBoundingBoxRight = w / 2;\n          break;\n        default:\n          fakeMetrics.actualBoundingBoxLeft = 0;\n          fakeMetrics.actualBoundingBoxRight = w;\n      }\n      return fakeMetrics;\n    }\n  });\n  return CanvasText;\n}(CanvasDisplayObject);\nexport { CanvasText };\n/**\r\n * @ignore\r\n */\nvar CanvasTextStyle = /** @class */function () {\n  function CanvasTextStyle() {\n    //public wordWrapWidth: number = 100;\n    Object.defineProperty(this, \"fill\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textAlign\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontFamily\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontSize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontWeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontVariant\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowColor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowBlur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // leading?: number;\n    // letterSpacing?: number;\n    Object.defineProperty(this, \"lineHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: percent(120)\n    });\n    Object.defineProperty(this, \"baselineRatio\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0.19\n    });\n    // padding?: number;\n    // stroke?: number;\n    // strokeThickness?: number;\n    // trim?: number;\n    // wordWrap?: boolean;\n    Object.defineProperty(this, \"direction\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textBaseline\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"oversizedBehavior\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"none\"\n    });\n    Object.defineProperty(this, \"breakWords\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ellipsis\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"…\"\n    });\n    Object.defineProperty(this, \"maxWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"maxHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"minScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ignoreFormatting\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n  return CanvasTextStyle;\n}();\nexport { CanvasTextStyle };\n/**\r\n * @ignore\r\n */\nvar CanvasRadialText = /** @class */function (_super) {\n  __extends(CanvasRadialText, _super);\n  function CanvasRadialText() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"textType\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"circular\"\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"startAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"inside\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"orientation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"auto\"\n    });\n    Object.defineProperty(_this, \"kerning\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_textReversed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    return _this;\n  }\n  Object.defineProperty(CanvasRadialText.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      switch (this.textType) {\n        case \"circular\":\n          this._renderCircular(parentLayer);\n          break;\n        default:\n          _super.prototype._render.call(this, parentLayer);\n          break;\n      }\n    }\n  });\n  Object.defineProperty(CanvasRadialText.prototype, \"_renderCircular\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var layer = this._layer || parentLayer;\n      this._prerender(layer);\n      var interactive = this._isInteractive();\n      var context = layer.context;\n      var layerDirty = layer.dirty;\n      var ghostContext = this._renderer._ghostContext;\n      // Savepoint\n      context.save();\n      if (interactive) {\n        ghostContext.save();\n      }\n      // Init\n      var radius = this.radius || 0;\n      var startAngle = this.startAngle || 0;\n      var deltaAngle = 0;\n      var orientation = this.orientation;\n      var inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n      var inside = this.inside;\n      var align = this.style.textAlign || \"left\";\n      var kerning = this.kerning || 0;\n      var clockwise = align == \"left\" ? 1 : -1;\n      var shouldReverse = !this._textReversed;\n      // We need measurements in order to properly position text for alignment\n      if (!this._textInfo) {\n        this._measure(layer);\n      }\n      // Check if we need to invert the whole stuff\n      if (inward == \"auto\") {\n        // Calc max angle so we know whether we need to flip it\n        var maxAngle_1 = 0;\n        var midAngle = 0;\n        $array.each(this._textInfo, function (line, _index) {\n          var deltaAngle = startAngle + line.width / (radius - line.height) / 2 * -clockwise;\n          if (deltaAngle > maxAngle_1) {\n            maxAngle_1 = deltaAngle;\n          }\n        });\n        if (align == \"left\") {\n          midAngle = (maxAngle_1 + deltaAngle / 2) * $math.DEGREES;\n        } else if (align == \"right\") {\n          midAngle = (maxAngle_1 - deltaAngle / 2) * $math.DEGREES;\n        } else {\n          midAngle = startAngle * $math.DEGREES;\n        }\n        midAngle = $math.normalizeAngle(midAngle);\n        inward = midAngle >= 270 || midAngle <= 90;\n      }\n      if (inward == true && shouldReverse) {\n        this._textInfo.reverse();\n        this._textReversed = true;\n      }\n      // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n      // \tclockwise *= -1;\n      // }\n      // Process text info produced by _measure()\n      $array.each(this._textInfo, function (line, _index) {\n        var textHeight = line.height;\n        // Adjust radius (for `inside = false`)\n        // Radius adjustment for `inside = false` is below the line calculation\n        if (!inside) {\n          radius += textHeight;\n        }\n        // Reverse letters if we're painting them counter-clockwise\n        if ((clockwise == -1 && inward || clockwise == 1 && !inward) && shouldReverse) {\n          line.textChunks.reverse();\n        }\n        // Init angles\n        var lineStartAngle = startAngle;\n        deltaAngle = 0;\n        // Adjust for center-align\n        if (align == \"center\") {\n          lineStartAngle += line.width / (radius - textHeight) / 2 * -clockwise;\n          deltaAngle = lineStartAngle - startAngle;\n        }\n        // if (inward == \"auto\") {\n        // \tlet midAngle;\n        // \tif (align == \"left\") {\n        // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n        // \t}\n        // \telse if () {\n        // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n        // \t}\n        // \tinward = (midAngle >= 270) || (midAngle <= 90);\n        // }\n        // Rotate letters if they are facing outward\n        lineStartAngle += Math.PI * (inward ? 0 : 1); // Rotate 180 if outward\n        // Savepoint\n        context.save();\n        if (interactive) {\n          ghostContext.save();\n        }\n        // Assume starting angle\n        context.rotate(lineStartAngle);\n        if (interactive) {\n          ghostContext.rotate(lineStartAngle);\n        }\n        var angleShift = 0;\n        $array.each(line.textChunks, function (chunk, _index) {\n          // Draw the letter\n          var char = chunk.text;\n          var charWidth = chunk.width;\n          // Rotate half a letter\n          angleShift = charWidth / 2 / (radius - textHeight) * clockwise;\n          context.rotate(angleShift);\n          if (interactive) {\n            ghostContext.rotate(angleShift);\n          }\n          // Set style\n          if (chunk.style) {\n            context.save();\n            ghostContext.save();\n            context.font = chunk.style;\n            if (interactive) {\n              ghostContext.font = chunk.style;\n            }\n          }\n          if (chunk.fill) {\n            context.save();\n            context.fillStyle = chunk.fill.toCSS();\n            // Color does not affect ghostContext so we not set it\n          }\n          // Center letters\n          context.textBaseline = \"middle\";\n          context.textAlign = \"center\";\n          if (interactive) {\n            ghostContext.textBaseline = \"middle\";\n            ghostContext.textAlign = \"center\";\n          }\n          // Plop the letter\n          if (layerDirty) {\n            context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n          }\n          if (interactive) {\n            ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n          }\n          if (chunk.fill) {\n            context.restore();\n            // Color does not affect ghostContext so we not set it\n          }\n          // Reset style\n          if (chunk.style) {\n            context.restore();\n            ghostContext.restore();\n          }\n          // Rotate half a letter and add spacing\n          angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n          context.rotate(angleShift);\n          if (interactive) {\n            ghostContext.rotate(angleShift);\n          }\n        });\n        // Restore angle\n        context.restore();\n        if (interactive) {\n          ghostContext.restore();\n        }\n        // Adjust radius (for `inside = true`)\n        if (inside) {\n          radius -= textHeight;\n        }\n      });\n      // Restore\n      context.restore();\n      if (interactive) {\n        ghostContext.restore();\n      }\n    }\n  });\n  Object.defineProperty(CanvasRadialText.prototype, \"_measure\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      switch (this.textType) {\n        case \"circular\":\n          return this._measureCircular(layer);\n        default:\n          return _super.prototype._measure.call(this, layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasRadialText.prototype, \"_measureCircular\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      var _this = this;\n      var context = layer.context;\n      var ghostContext = this._renderer._ghostContext;\n      // Reset text info\n      this._textInfo = [];\n      this._textReversed = false;\n      // Pre-render\n      context.save();\n      ghostContext.save();\n      this._prerender(layer, true);\n      // Split up text into lines\n      var lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n      var styleRestored = true;\n      // Iterate through the lines\n      var offsetY = 0;\n      $array.each(lines, function (line, _index) {\n        // Split up line into format/value chunks\n        var chunks = TextFormatter.chunk(line, false, _this.style.ignoreFormatting);\n        // Init line object\n        var lineInfo = {\n          offsetY: offsetY,\n          ascent: 0,\n          width: 0,\n          height: 0,\n          left: 0,\n          right: 0,\n          textChunks: []\n        };\n        var currentStyle;\n        var currentFill;\n        var currentChunkWidth;\n        //while(chunk = chunks.shift()) {\n        $array.each(chunks, function (chunk, _index) {\n          // Format chunk\n          if (chunk.type == \"format\") {\n            if (chunk.text == \"[/]\") {\n              if (!styleRestored) {\n                context.restore();\n                ghostContext.restore();\n                styleRestored = true;\n              }\n              currentFill = undefined;\n              currentStyle = undefined;\n              currentChunkWidth = undefined;\n            } else {\n              var format = TextFormatter.getTextStyle(chunk.text);\n              var fontStyle = _this._getFontStyle(format);\n              context.save();\n              ghostContext.save();\n              context.font = fontStyle;\n              currentStyle = fontStyle;\n              if (format.fill) {\n                currentFill = format.fill;\n              }\n              if (format.width) {\n                currentChunkWidth = $type.toNumber(format.width);\n              }\n              styleRestored = false;\n            }\n          }\n          // Text format\n          else if (chunk.type == \"value\") {\n            // Measure each letter\n            for (var i = 0; i < chunk.text.length; i++) {\n              var char = chunk.text[i];\n              // Measure\n              var metrics = _this._measureText(char, context);\n              var chunkWidth = metrics.width;\n              // Chunk width?\n              if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) {\n                chunkWidth = currentChunkWidth;\n              }\n              var chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n              if (chunkHeight > lineInfo.height) {\n                lineInfo.height = chunkHeight;\n              }\n              if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\n              }\n              lineInfo.width += chunkWidth;\n              lineInfo.left += metrics.actualBoundingBoxLeft;\n              lineInfo.right += metrics.actualBoundingBoxRight;\n              lineInfo.textChunks.push({\n                style: currentStyle,\n                fill: currentFill,\n                text: char,\n                width: chunkWidth,\n                height: chunkHeight + metrics.actualBoundingBoxDescent,\n                left: metrics.actualBoundingBoxLeft,\n                right: metrics.actualBoundingBoxRight,\n                ascent: metrics.actualBoundingBoxAscent,\n                offsetX: 0,\n                offsetY: chunkHeight\n              });\n            }\n          }\n        });\n        if (_this.style.lineHeight instanceof Percent) {\n          lineInfo.height *= _this.style.lineHeight.value;\n        } else {\n          lineInfo.height *= _this.style.lineHeight || 1.2;\n        }\n        _this._textInfo.push(lineInfo);\n        //lineInfo.offsetY += lineInfo.ascent;\n        offsetY += lineInfo.height;\n      });\n      if (!styleRestored) {\n        context.restore();\n        ghostContext.restore();\n      }\n      // Adjust chunk internal offsets\n      $array.each(this._textInfo, function (lineInfo) {\n        $array.each(lineInfo.textChunks, function (chunk) {\n          chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n        });\n      });\n      context.restore();\n      ghostContext.restore();\n      return {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n    }\n  });\n  return CanvasRadialText;\n}(CanvasText);\nexport { CanvasRadialText };\n/**\r\n * @ignore\r\n */\nvar CanvasImage = /** @class */function (_super) {\n  __extends(CanvasImage, _super);\n  function CanvasImage(renderer, image) {\n    var _this = _super.call(this, renderer) || this;\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"image\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"tainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowColor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowBlur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowOffsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowOffsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_imageMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    _this.image = image;\n    return _this;\n  }\n  Object.defineProperty(CanvasImage.prototype, \"getLocalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._localBounds) {\n        var w = 0;\n        var h = 0;\n        if (this.width) {\n          w = this.width;\n        }\n        if (this.height) {\n          h = this.height;\n        }\n        this._localBounds = {\n          left: 0,\n          top: 0,\n          right: w,\n          bottom: h\n        };\n        this._addBounds(this._localBounds);\n      }\n      return this._localBounds;\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      _super.prototype._render.call(this, parentLayer);\n      if (this.image) {\n        var layer = this._layer || parentLayer;\n        if (this.tainted === undefined) {\n          this.tainted = isTainted(this.image);\n          layer.tainted = true;\n        }\n        if (this.tainted && this._renderer._omitTainted) {\n          return;\n        }\n        if (layer.dirty) {\n          if (this.shadowColor) {\n            layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n          }\n          if (this.shadowBlur) {\n            layer.context.shadowBlur = this.shadowBlur;\n          }\n          if (this.shadowOffsetX) {\n            layer.context.shadowOffsetX = this.shadowOffsetX;\n          }\n          if (this.shadowOffsetY) {\n            layer.context.shadowOffsetY = this.shadowOffsetY;\n          }\n          var width = this.width || this.image.naturalWidth;\n          var height = this.height || this.image.naturalHeight;\n          layer.context.drawImage(this.image, 0, 0, width, height);\n        }\n        if (this.interactive && this._isInteractive()) {\n          var mask = this._getMask(this.image);\n          this._renderer._ghostContext.drawImage(mask, 0, 0);\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.clear.call(this);\n      this.image = undefined;\n      this._imageMask = undefined;\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"_getMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (image) {\n      if (this._imageMask === undefined) {\n        var width = this.width || image.naturalWidth;\n        var height = this.height || image.naturalHeight;\n        // We need to create a second canvas because destination-in clears out the entire canvas\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = width;\n        canvas.height = height;\n        var context = canvas.getContext(\"2d\");\n        context.imageSmoothingEnabled = false;\n        context.fillStyle = this._getColorId();\n        context.fillRect(0, 0, width, height);\n        if (!isTainted(image)) {\n          context.globalCompositeOperation = \"destination-in\";\n          context.drawImage(image, 0, 0, width, height);\n        }\n        this._imageMask = canvas;\n      }\n      return this._imageMask;\n    }\n  });\n  return CanvasImage;\n}(CanvasDisplayObject);\nexport { CanvasImage };\n/**\r\n * @ignore\r\n */\nvar CanvasRendererEvent = /** @class */function () {\n  function CanvasRendererEvent(event, point) {\n    Object.defineProperty(this, \"event\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: event\n    });\n    Object.defineProperty(this, \"point\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: point\n    });\n    Object.defineProperty(this, \"id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"simulated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"native\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    if ($utils.supports(\"touchevents\") && event instanceof Touch) {\n      this.id = event.identifier;\n    } else {\n      this.id = null;\n    }\n  }\n  return CanvasRendererEvent;\n}();\nexport { CanvasRendererEvent };\n/**\r\n * @ignore\r\n */\nvar CanvasRenderer = /** @class */function (_super) {\n  __extends(CanvasRenderer, _super);\n  function CanvasRenderer() {\n    var _this = _super.call(this, function () {}) || this;\n    Object.defineProperty(_this, \"view\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"div\")\n    });\n    Object.defineProperty(_this, \"_layerDom\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"div\")\n    });\n    Object.defineProperty(_this, \"layers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_dirtyLayers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"defaultLayer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.getLayer(0)\n    });\n    Object.defineProperty(_this, \"_ghostView\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_ghostContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_patternCanvas\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"canvas\")\n    });\n    Object.defineProperty(_this, \"_patternContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._patternCanvas.getContext(\"2d\")\n    });\n    Object.defineProperty(_this, \"_width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_clientWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_clientHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"resolution\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: window.devicePixelRatio\n    });\n    Object.defineProperty(_this, \"interactionsEnabled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_listeners\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_colorId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_colorMap\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_forceInteractive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_omitTainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // TODO this should store the Id as well\n    Object.defineProperty(_this, \"_hovering\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Set()\n    });\n    Object.defineProperty(_this, \"_dragging\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_mousedown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_lastPointerMoveEvent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_mouseMoveThrottler\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Throttler(function () {\n        _this._dispatchGlobalMousemove(_this._lastPointerMoveEvent);\n      })\n    });\n    _this.view.appendChild(_this._layerDom);\n    // @todo : do the same for ghost\n    _this._ghostView = document.createElement(\"canvas\");\n    _this._ghostContext = _this._ghostView.getContext(\"2d\", {\n      alpha: false\n    });\n    _this._ghostContext.imageSmoothingEnabled = false;\n    // Monitor for possible pixel ratio changes (when page is zoomed)\n    window.addEventListener(\"resize\", function (_ev) {\n      _this.resolution = window.devicePixelRatio;\n    });\n    // We need this in order top prevent default touch gestures when dragging\n    // draggable elements\n    if ($utils.supports(\"touchevents\")) {\n      document.addEventListener(\"touchstart\", function (ev) {\n        if (_this._dragging.length !== 0) {\n          ev.preventDefault();\n        }\n      }, {\n        passive: false\n      });\n    }\n    // Prevent scrolling of the window when hovering on \"wheelable\" object\n    if ($utils.supports(\"wheelevents\")) {\n      _this.view.addEventListener(\"wheel\", function (ev) {\n        var prevent = false;\n        _this._hovering.forEach(function (obj) {\n          if (obj.wheelable) {\n            prevent = true;\n            return false;\n          }\n        });\n        if (prevent) {\n          ev.preventDefault();\n        }\n      }, {\n        passive: false\n      });\n    }\n    return _this;\n  }\n  ;\n  Object.defineProperty(CanvasRenderer.prototype, \"createLinearGradient\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x1, y1, x2, y2) {\n      return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createRadialGradient\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x1, y1, radius1, x2, y2, radius2) {\n      return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createPattern\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (graphics, background, repetition, width, height) {\n      // const patternCanvas = document.createElement(\"canvas\");\n      // const patternContext = patternCanvas.getContext(\"2d\")!;\n      // patternCanvas.width = width;\n      // patternCanvas.height = height;\n      // if (fill) {\n      // \tpatternContext.fillStyle = fill.toCSS();\n      // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n      // }\n      // const layer = {\n      // \tview: patternCanvas,\n      // \tcontext: patternContext,\n      // \tvisible: true,\n      // \torder: 0,\n      // \twidth: width,\n      // \theight: height,\n      // \tdirty: true\n      // };\n      // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n      // // patternContext.stroke();\n      // image.targetLayer = layer;\n      // image.render(layer);\n      //this._layerDom.appendChild(patternCanvas);\n      this._patternCanvas.width = width;\n      this._patternCanvas.height = height;\n      this._patternContext.clearRect(0, 0, width, height);\n      // patternCanvas.style.width = width * this.resolution + \"px\";\n      // patternCanvas.style.height = height * this.resolution + \"px\";\n      background.renderDetached(this._patternContext);\n      graphics.renderDetached(this._patternContext);\n      return this._patternContext.createPattern(this._patternCanvas, repetition);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new CanvasContainer(this);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new CanvasGraphics(this);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, style) {\n      return new CanvasText(this, text, style);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeTextStyle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new CanvasTextStyle();\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeRadialText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, style) {\n      return new CanvasRadialText(this, text, style);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makePicture\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (image) {\n      return new CanvasImage(this, image);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"resize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (width, height) {\n      var _this = this;\n      this._clientWidth = width;\n      this._clientHeight = height;\n      this._width = Math.floor(width * this.resolution);\n      this._height = Math.floor(height * this.resolution);\n      $array.each(this.layers, function (layer) {\n        if (layer) {\n          layer.dirty = true;\n          if (layer.width != null) {\n            layer.view.width = layer.width;\n            layer.view.style.width = layer.width + \"px\";\n          } else {\n            layer.view.width = _this._width;\n            layer.view.style.width = width + \"px\";\n          }\n          if (layer.height != null) {\n            layer.view.height = layer.height;\n            layer.view.style.height = layer.height + \"px\";\n          } else {\n            layer.view.height = _this._height;\n            layer.view.style.height = height + \"px\";\n          }\n        }\n      });\n      // @todo: do the same for ghost canvases\n      this._ghostView.width = this._width;\n      this._ghostView.height = this._height;\n      this._ghostView.style.width = width + \"px\";\n      this._ghostView.style.height = height + \"px\";\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createDetachedLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var view = document.createElement(\"canvas\");\n      var context = view.getContext(\"2d\");\n      var layer = {\n        view: view,\n        context: context,\n        order: 0,\n        visible: true,\n        width: undefined,\n        height: undefined,\n        dirty: true,\n        tainted: false\n      };\n      view.style.position = \"absolute\";\n      view.style.top = \"0px\";\n      view.style.left = \"0px\";\n      return layer;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"getLayerByOrder\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (order) {\n      var layers = this.layers;\n      var length = layers.length;\n      for (var i = 0; i < length; i++) {\n        var layer = layers[i];\n        if (layer.order == order) {\n          return layer;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"getLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (order, visible) {\n      if (visible === void 0) {\n        visible = true;\n      }\n      var layers = this.layers;\n      var existingLayer = this.getLayerByOrder(order);\n      if (existingLayer) {\n        return existingLayer;\n      }\n      var layer = this.createDetachedLayer();\n      layer.order = order;\n      layer.visible = visible;\n      if (layer.visible && this._width) {\n        layer.view.width = this._width;\n        layer.view.style.width = this._clientWidth + \"px\";\n        layer.view.height = this._height;\n        layer.view.style.height = this._clientHeight + \"px\";\n      }\n      layers.push(layer);\n      layers.sort(function (a, b) {\n        if (a.order > b.order) {\n          return 1;\n        } else if (a.order < b.order) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      var length = layers.length;\n      var layerIndex = $array.indexOf(layers, layer);\n      var next;\n      for (var i = layerIndex + 1; i < length; i++) {\n        if (layers[i].visible) {\n          next = layers[i];\n          break;\n        }\n      }\n      if (visible) {\n        if (next === undefined) {\n          this._layerDom.appendChild(layer.view);\n        } else {\n          this._layerDom.insertBefore(layer.view, next.view);\n        }\n      }\n      return layer;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root) {\n      var _this = this;\n      this._dirtyLayers.length = 0;\n      $array.each(this.layers, function (layer) {\n        if (layer) {\n          if (layer.dirty && layer.visible) {\n            _this._dirtyLayers.push(layer);\n            layer.context.save();\n            layer.context.clearRect(0, 0, _this._width, _this._height);\n          }\n        }\n      });\n      this._ghostContext.save();\n      //this._ghostContext.clearRect(0, 0, this._width, this._height);\n      //this._ghostContext.beginPath();\n      this._ghostContext.fillStyle = '#000';\n      this._ghostContext.fillRect(0, 0, this._width, this._height);\n      root.render(this.defaultLayer);\n      this._ghostContext.restore();\n      //setTimeout(() => {\n      $array.each(this._dirtyLayers, function (layer) {\n        layer.context.restore();\n        layer.dirty = false;\n      });\n      //}, 100)\n      if (this._hovering.size && this._lastPointerMoveEvent) {\n        this._mouseMoveThrottler.run();\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"paintId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (obj) {\n      var id = distributeId(++this._colorId);\n      var color = Color.fromHex(id).toCSS();\n      this._colorMap[color] = obj;\n      return color;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_removeObject\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (obj) {\n      if (obj._colorId !== undefined) {\n        delete this._colorMap[obj._colorId];\n      }\n    }\n  });\n  // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n  // \treturn this._colorMap[colorId];\n  // }\n  Object.defineProperty(CanvasRenderer.prototype, \"getEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent, adjustPoint) {\n      if (adjustPoint === void 0) {\n        adjustPoint = true;\n      }\n      var bbox = adjustPoint ? this.view.getBoundingClientRect() : {\n        left: 0,\n        top: 0\n      };\n      return new CanvasRendererEvent(originalEvent, originalEvent.clientX || originalEvent.clientY ? {\n        x: originalEvent.clientX - (originalEvent.clientX ? bbox.left : 0),\n        y: originalEvent.clientY - (originalEvent.clientY ? bbox.top : 0)\n      } : {\n        x: 0,\n        y: 0\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_getHitTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      if (point.x < 0 || point.x > this._width / this.resolution || point.y < 0 || point.y > this._height / this.resolution) {\n        return;\n      } else {\n        var pixel = this._ghostContext.getImageData(\n        // TODO should this round ?\n        Math.round(point.x * this.resolution), Math.round(point.y * this.resolution), 1, 1);\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n          return false;\n        }\n        var colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n        var hit = this._colorMap[colorId];\n        return hit;\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_withEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, f) {\n      var events = this._events[key];\n      if (events !== undefined) {\n        events.dispatching = true;\n        try {\n          f(events);\n        } finally {\n          events.dispatching = false;\n          if (events.cleanup) {\n            events.cleanup = false;\n            $array.keepIf(events.callbacks, function (callback) {\n              return !callback.disposed;\n            });\n            if (events.callbacks.length === 0) {\n              events.disposer.dispose();\n              delete this._events[key];\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchEventAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, event) {\n      if (!this.interactionsEnabled) {\n        return;\n      }\n      this._withEvents(key, function (events) {\n        $array.each(events.callbacks, function (callback) {\n          if (!callback.disposed) {\n            callback.callback.call(callback.context, event);\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, target, event) {\n      if (!this.interactionsEnabled) {\n        return false;\n      }\n      var dispatched = false;\n      this._withEvents(key, function (events) {\n        $array.each(events.callbacks, function (callback) {\n          if (!callback.disposed && callback.object === target) {\n            callback.callback.call(callback.context, event);\n            dispatched = true;\n          }\n        });\n      });\n      return dispatched;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchMousedown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      var button = originalEvent.button;\n      if (button != 0 && button != 2 && button != 1) {\n        // Ignore non-primary mouse buttons\n        return;\n      }\n      var event = this.getEvent(originalEvent);\n      var target = this._getHitTarget(event.point);\n      if (target) {\n        var id_1 = event.id;\n        var dragged_1 = false;\n        eachTargets(target, function (obj) {\n          var info = {\n            id: id_1,\n            value: obj\n          };\n          _this._mousedown.push(info);\n          if (!dragged_1 && _this._dispatchEvent(\"pointerdown\", obj, event)) {\n            // Only dispatch the first element which matches\n            dragged_1 = true;\n            var has = _this._dragging.some(function (x) {\n              return x.value === obj && x.id === id_1;\n            });\n            if (!has) {\n              _this._dragging.push(info);\n            }\n          }\n          return true;\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchGlobalMousemove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      var event = this.getEvent(originalEvent);\n      var target = this._getHitTarget(event.point);\n      event.native = this._isNativeEvent(originalEvent);\n      if (target) {\n        this._hovering.forEach(function (obj) {\n          if (!obj.contains(target)) {\n            _this._hovering.delete(obj);\n            if (obj.cursorOverStyle) {\n              $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\n            }\n            _this._dispatchEvent(\"pointerout\", obj, event);\n          }\n        });\n        if (event.native) {\n          eachTargets(target, function (obj) {\n            if (!_this._hovering.has(obj)) {\n              _this._hovering.add(obj);\n              if (obj.cursorOverStyle) {\n                obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n                $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n              }\n              _this._dispatchEvent(\"pointerover\", obj, event);\n            }\n            return true;\n          });\n        }\n        //} else if (target === false) {\n      } else {\n        this._hovering.forEach(function (obj) {\n          if (obj.cursorOverStyle) {\n            $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\n          }\n          _this._dispatchEvent(\"pointerout\", obj, event);\n        });\n        this._hovering.clear();\n      }\n      this._dispatchEventAll(\"globalpointermove\", event);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_isNativeEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      if (event.target) {\n        return event.target.parentNode === this._layerDom;\n      }\n      return true;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchGlobalMouseup\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var event = this.getEvent(originalEvent);\n      //const target = this._getHitTarget(event.point);\n      this._dispatchEventAll(\"globalpointerup\", event);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDragMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      if (this._dragging.length !== 0) {\n        var event_1 = this.getEvent(originalEvent);\n        var id_2 = event_1.id;\n        this._dragging.forEach(function (obj) {\n          if (obj.id === id_2) {\n            _this._dispatchEvent(\"pointermove\", obj.value, event_1);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDragEnd\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      var button = originalEvent.button;\n      var clickevent;\n      if (button == 0) {\n        clickevent = \"click\";\n      } else if (button == 2) {\n        clickevent = \"rightclick\";\n      } else if (button == 1) {\n        clickevent = \"middleclick\";\n      } else {\n        // Ignore non-primary mouse buttons\n        return;\n      }\n      var event = this.getEvent(originalEvent);\n      var id = event.id;\n      if (this._mousedown.length !== 0) {\n        var target_1 = this._getHitTarget(event.point);\n        if (target_1) {\n          this._mousedown.forEach(function (obj) {\n            if (obj.id === id && obj.value.contains(target_1)) {\n              _this._dispatchEvent(clickevent, obj.value, event);\n            }\n          });\n        }\n        this._mousedown.length = 0;\n      }\n      if (this._dragging.length !== 0) {\n        this._dragging.forEach(function (obj) {\n          if (obj.id === id) {\n            _this._dispatchEvent(\"pointerup\", obj.value, event);\n          }\n        });\n        this._dragging.length = 0;\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDoubleClick\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      var event = this.getEvent(originalEvent);\n      var target = this._getHitTarget(event.point);\n      if (target) {\n        eachTargets(target, function (obj) {\n          if (_this._dispatchEvent(\"dblclick\", obj, event)) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchWheel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n      var event = this.getEvent(originalEvent);\n      this._hovering.forEach(function (obj) {\n        _this._dispatchEvent(\"wheel\", obj, event);\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_makeSharedEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, f) {\n      var _this = this;\n      if (this._listeners[key] === undefined) {\n        var listener_1 = f();\n        this._listeners[key] = new CounterDisposer(function () {\n          delete _this._listeners[key];\n          listener_1.dispose();\n        });\n      }\n      return this._listeners[key].increment();\n    }\n  });\n  // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n  Object.defineProperty(CanvasRenderer.prototype, \"_initEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var _this = this;\n      switch (key) {\n        case \"globalpointermove\":\n        case \"pointerover\":\n        case \"pointerout\":\n          return this._makeSharedEvent(\"pointermove\", function () {\n            //const throttler = new Throttler();\n            // TODO handle throttling properly for multitouch\n            return onPointerEvent(window, \"pointermove\", function (ev) {\n              _this._lastPointerMoveEvent = ev;\n              _this._mouseMoveThrottler.run();\n              //throttler.throttle(() => {\n              //});\n            });\n          });\n\n        case \"globalpointerup\":\n          return this._makeSharedEvent(\"pointerup\", function () {\n            //const throttler = new Throttler();\n            // TODO handle throttling properly for multitouch\n            return onPointerEvent(window, \"pointerup\", function (ev) {\n              //throttler.throttle(() => {\n              _this._dispatchGlobalMouseup(ev);\n              //});\n            });\n          });\n\n        case \"click\":\n        case \"rightclick\":\n        case \"middleclick\":\n        case \"pointerdown\":\n        case \"pointermove\":\n        case \"pointerup\":\n          return this._makeSharedEvent(\"pointerdown\", function () {\n            //const throttler = new Throttler();\n            var mousedown = onPointerEvent(_this.view, \"pointerdown\", function (ev) {\n              _this._dispatchMousedown(ev);\n            });\n            // TODO handle throttling properly for multitouch\n            var mousemove = onPointerEvent(window, \"pointermove\", function (ev) {\n              //throttler.throttle(() => {\n              _this._dispatchDragMove(ev);\n              //});\n            });\n\n            var mouseup = onPointerEvent(window, \"pointerup\", function (ev) {\n              _this._dispatchDragEnd(ev);\n            });\n            return new Disposer(function () {\n              mousedown.dispose();\n              mousemove.dispose();\n              mouseup.dispose();\n            });\n          });\n        case \"dblclick\":\n          return this._makeSharedEvent(\"dblclick\", function () {\n            return onPointerEvent(window, \"dblclick\", function (ev) {\n              _this._dispatchDoubleClick(ev);\n            });\n          });\n        case \"wheel\":\n          return this._makeSharedEvent(\"wheel\", function () {\n            return $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), function (event) {\n              _this._dispatchWheel(event);\n            }, {\n              passive: false\n            });\n          });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_addEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (object, key, callback, context) {\n      var _this = this;\n      var events = this._events[key];\n      if (events === undefined) {\n        events = this._events[key] = {\n          disposer: this._initEvent(key),\n          callbacks: [],\n          dispatching: false,\n          cleanup: false\n        };\n      }\n      var listener = {\n        object: object,\n        context: context,\n        callback: callback,\n        disposed: false\n      };\n      events.callbacks.push(listener);\n      return new Disposer(function () {\n        listener.disposed = true;\n        if (events.dispatching) {\n          events.cleanup = true;\n        } else {\n          $array.removeFirst(events.callbacks, listener);\n          if (events.callbacks.length === 0) {\n            events.disposer.dispose();\n            delete _this._events[key];\n          }\n        }\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"getCanvas\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root, options) {\n      // Make sure everything is rendered\n      this.render(root);\n      if (!options) {\n        options = {};\n      }\n      var scale = this.resolution;\n      // Check if we need to scale\n      if (options.minWidth && options.minWidth > this._width) {\n        var minScale = options.minWidth / this._width;\n        if (minScale > scale) {\n          scale = minScale * this.resolution;\n        }\n      }\n      if (options.minHeight && options.minHeight > this._height) {\n        var minScale = options.minHeight / this._height;\n        if (minScale > scale) {\n          scale = minScale * this.resolution;\n        }\n      }\n      if (options.maxWidth && options.maxWidth < this._width) {\n        var maxScale = options.maxWidth / this._width;\n        if (maxScale < scale) {\n          scale = maxScale * this.resolution;\n        }\n      }\n      if (options.maxHeight && options.maxHeight > this._height) {\n        var maxScale = options.maxHeight / this._height;\n        if (maxScale < scale) {\n          scale = maxScale * this.resolution;\n        }\n      }\n      // Check if we need to compensate for pixel ratio\n      if (options.maintainPixelRatio) {\n        scale /= this.resolution;\n      }\n      // Set up new canvas for export\n      var forceRender = false;\n      var canvasWidth = this._width;\n      var canvasHeight = this._height;\n      var canvas = document.createElement(\"canvas\");\n      if (scale != this.resolution) {\n        forceRender = true;\n        canvasWidth = this._width * scale / this.resolution;\n        canvasHeight = this._height * scale / this.resolution;\n      }\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      // Context\n      var context = canvas.getContext(\"2d\");\n      var width = 0;\n      var height = 0;\n      var needRerender = false;\n      $array.each(this.layers, function (layer) {\n        if (layer && layer.visible) {\n          if (layer.tainted || forceRender) {\n            needRerender = true;\n            layer.exportableView = layer.view;\n            layer.exportableContext = layer.context;\n            layer.view = document.createElement(\"canvas\");\n            layer.view.width = canvasWidth;\n            layer.view.height = canvasHeight;\n            layer.context = layer.view.getContext(\"2d\");\n            layer.dirty = true;\n            layer.scale = scale;\n          }\n        }\n      });\n      if (needRerender) {\n        this._omitTainted = true;\n        this.render(root);\n        this._omitTainted = false;\n      }\n      $array.each(this.layers, function (layer) {\n        if (layer && layer.visible) {\n          // Layer is fine. Just plop it into our target canvas\n          context.drawImage(layer.view, 0, 0);\n          // Restore layer original canvas\n          if (layer.exportableView) {\n            layer.view = layer.exportableView;\n            layer.exportableView = undefined;\n          }\n          if (layer.exportableContext) {\n            layer.context = layer.exportableContext;\n            layer.exportableContext = undefined;\n          }\n          if (width < layer.view.clientWidth) {\n            width = layer.view.clientWidth;\n          }\n          if (height < layer.view.clientHeight) {\n            height = layer.view.clientHeight;\n          }\n          layer.scale = undefined;\n        }\n      });\n      canvas.style.width = width + \"px\";\n      canvas.style.height = height + \"px\";\n      return canvas;\n    }\n  });\n  return CanvasRenderer;\n}(Disposer);\nexport { CanvasRenderer };","map":{"version":3,"names":["BlendMode","Color","Matrix","Percent","percent","Throttler","Disposer","CounterDisposer","TextFormatter","$utils","$array","$type","$math","arcToBezier","checkArgs","name","actual","expected","Error","checkMinArgs","checkEvenArgs","assertBinary","value","distributeId","id","rgb","i","eachTargets","hitTarget","f","interactive","_parent","onPointerEvent","element","addEventListener","getRendererEvent","event","touches","each","touch","isTainted","image","canvas","document","createElement","width","height","context","getContext","drawImage","getImageData","err","console","warn","src","CanvasPivot","Object","defineProperty","prototype","get","_x","set","_y","CanvasDisplayObject","_super","__extends","renderer","_this","call","_renderer","_removeObject","getLayer","view","self","_layer","defaultLayer","order","visible","undefined","registerChildLayer","dirty","invalidateBounds","_localBounds","_bounds","_colorId","paintId","_forceInteractive","_isInteractive","child","point","_matrix","apply","applyInverse","_uMatrix","setTransform","pivot","x","y","angle","Math","PI","scale","bn","left","top","right","bottom","_addBounds","bounds","_setMatrix","matrix","getLocalMatrix","p0","p1","p2","p3","min","max","key","callback","_addEvent","_localMatrix","copyFrom","prepend","resolution","m","a","b","c","d","tx","ty","parentLayer","exportable","_omitTainted","resolution_1","layers","ghostContext","_ghostContext","mask_1","mask","layer","save","_transform","_runPath","clip","globalAlpha","compoundAlpha","alpha","filter","_isInteractiveMask","_render","restore","tainted","_hovering","has","_dragging","some","CanvasContainer","arguments","interactiveChildren","_children","push","index","splice","removeFirst","render","_childLayers","pushOne","deep","markDirtyLayer","dispose","setPoint","Op","_context","_forceColor","BeginFill","color","forceColor","fillStyle","EndFill","clearShadow","fill","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","EndStroke","stroke","LineStyle","strokeStyle","lineWidth","LineDash","dash","setLineDash","LineDashOffset","dashOffset","lineDashOffset","DrawRect","rect","l","t","r","DrawCircle","radius","moveTo","arc","Arc","cx","cy","startAngle","endAngle","anticlockwise","arcBounds","getArcBounds","DEGREES","ArcTo","x1","y1","x2","y2","arcTo","LineTo","lineTo","MoveTo","ClosePath","closePath","BezierCurveTo","cpX","cpY","cpX2","cpY2","toX","toY","bezierCurveTo","QuadraticCurveTo","quadraticCurveTo","Shadow","blur","offsetX","offsetY","opacity","CanvasGraphics","NORMAL","clear","_operations","length","op","_fillAlpha","_pushOp","toCSS","isMeasured","_hasShadows","_strokeAlpha","path","cpx","cpy","qcpx","qcpy","SEGMENTS_REGEXP","ARGS_REGEXP","match","exec","name_1","rest","args","relative","bs","px","py","rx","ry","xAxisRotation","largeArcFlag","sweepFlag","beginPath","layerDirty","context_1","ghostContext_1","globalCompositeOperation","blendMode","color_1","_getColorId","colorize","addBounds","CanvasText","text","style","_textInfo","textAlign","direction","textBaseline","ignoreGhost","ignoreFontWeight","fontStyle","_getFontStyle","font","shadowOpacity","_shared","style2","fontVariant","fontWeight","fontSize","isNumber","fontFamily","join","_measure","_textVisible","interactive_1","context_2","layerDirty_1","ghostContext_2","_prerender","line","_index","textChunks","chunk","fillText","oversizedBehavior","maxWidth","truncate","wrap","refText","lines","toString","replace","split","styleRestored","minX","maxX","chunks","type","ignoreFormatting","lineInfo","ascent","metrics","_measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","currentStyle","currentFormat","currentFill","currentChunkWidth","skipFurtherText","firstTextChunk","leftoverChunks","eachContinue","format","getTextStyle","toNumber","metrics_1","height_1","metrics_2","chunkWidth","actualBoundingBoxLeft","actualBoundingBoxRight","breakWords","ellipsis","ellipsisMetrics","ellipsisWidth","excessWidth","_truncateText","tmpText","slice","trim","unshift","substr","leftBoundMod","rightBoundMod","boundsMod","chunkHeight","lineHeight","currentChunkOffset","baselineRatio","ratio","_fitRatio","minScale","_originalScale","maxW","maxH","maxHeight","w","h","fallbackBreakWords","tmp","measureText","fakeMetrics","div","innerText","visibility","position","body","appendChild","bbox","getBoundingClientRect","removeChild","w_1","fontBoundingBoxAscent","fontBoundingBoxDescent","CanvasTextStyle","CanvasRadialText","textType","_renderCircular","deltaAngle","orientation","inward","inside","align","kerning","clockwise","shouldReverse","_textReversed","maxAngle_1","midAngle","normalizeAngle","reverse","textHeight","lineStartAngle","rotate","angleShift","char","charWidth","_measureCircular","round","CanvasImage","naturalWidth","naturalHeight","_getMask","_imageMask","imageSmoothingEnabled","fillRect","CanvasRendererEvent","supports","Touch","identifier","CanvasRenderer","_patternCanvas","window","devicePixelRatio","Set","_dispatchGlobalMousemove","_lastPointerMoveEvent","_layerDom","_ghostView","_ev","ev","preventDefault","passive","prevent","forEach","obj","wheelable","createLinearGradient","radius1","radius2","createRadialGradient","graphics","background","repetition","_patternContext","clearRect","renderDetached","createPattern","_clientWidth","_clientHeight","_width","floor","_height","existingLayer","getLayerByOrder","createDetachedLayer","sort","layerIndex","indexOf","next","insertBefore","root","_dirtyLayers","size","_mouseMoveThrottler","run","fromHex","_colorMap","originalEvent","adjustPoint","clientX","clientY","pixel","data","colorId","fromRGB","hit","events","_events","dispatching","cleanup","keepIf","callbacks","disposed","disposer","interactionsEnabled","_withEvents","target","dispatched","object","button","getEvent","_getHitTarget","id_1","dragged_1","info","_mousedown","_dispatchEvent","native","_isNativeEvent","contains","delete","cursorOverStyle","setStyle","_replacedCursorStyle","add","getStyle","_dispatchEventAll","parentNode","event_1","id_2","clickevent","target_1","_listeners","listener_1","increment","_makeSharedEvent","_dispatchGlobalMouseup","mousedown","_dispatchMousedown","mousemove","_dispatchDragMove","mouseup","_dispatchDragEnd","_dispatchDoubleClick","_dispatchWheel","_initEvent","listener","options","minWidth","minHeight","maxScale","maintainPixelRatio","forceRender","canvasWidth","canvasHeight","needRerender","exportableView","exportableContext","clientWidth","clientHeight"],"sources":["../../../../../../src/.internal/core/render/backend/CanvasRenderer.ts"],"sourcesContent":["/** @ignore *//** */\n\nimport {\n\tIRenderer, IContainer, IDisplayObject, IGraphics, IRendererEvents,\n\tIText, ITextStyle, IRadialText, IPicture, IRendererEvent, ILayer, ICanvasOptions, BlendMode, IPointerEvent, Id\n} from \"./Renderer\";\nimport type { IBounds } from \"../../util/IBounds\";\nimport type { IPoint } from \"../../util/IPoint\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\nimport { Throttler } from \"../../util/Throttler\";\nimport { Disposer, IDisposer, CounterDisposer } from \"../../util/Disposer\";\nimport { TextFormatter, ITextChunk } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n\n\n/**\n * @ignore\n */\nfunction checkArgs(name: string, actual: number, expected: number) {\n\tif (actual !== expected) {\n\t\tthrow new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkMinArgs(name: string, actual: number, expected: number) {\n\tif (actual < expected) {\n\t\tthrow new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkEvenArgs(name: string, actual: number, expected: number) {\n\tcheckMinArgs(name, actual, expected);\n\n\tif ((actual % expected) !== 0) {\n\t\tthrow new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction assertBinary(value: number): 0 | 1 {\n\tif (value === 0 || value === 1) {\n\t\treturn value;\n\n\t} else {\n\t\tthrow new Error(\"Flag must be 0 or 1\");\n\t}\n}\n\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n// function distributeIdBAK(id: number): number {\n// \tif (id === 1) {\n// \t\treturn 0x000001;\n\n// \t} else {\n// \t\t// Finds the closest power of 2\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\n\n// \t\t// Translates the id into an odd fraction index\n// \t\tconst index = ((base - id) * 2) + 1;\n\n// \t\t// TODO is Math.round correct ?\n// \t\treturn Math.round(0xffffff * (index / base));\n// \t}\n// }\n\n/**\n * Function by smeans:\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\n * @ignore\n */\nfunction distributeId(id: number): number {\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 24; i++) {\n\t\trgb[i % 3] <<= 1;\n\t\trgb[i % 3] |= id & 0x01;\n\t\tid >>= 1;\n\t}\n\treturn (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\n}\n\n/**\n * @ignore\n */\nfunction eachTargets(hitTarget: CanvasDisplayObject, f: (target: CanvasDisplayObject) => boolean): void {\n\tfor (; ;) {\n\t\tif (hitTarget.interactive) {\n\t\t\tif (!f(hitTarget)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (hitTarget._parent) {\n\t\t\thitTarget = hitTarget._parent;\n\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// TODO feature detection for mouse/touch/pointer\n/**\n * @ignore\n */\nfunction onPointerEvent(element: EventTarget, name: string, f: (event: IPointerEvent) => void): IDisposer {\n\treturn $utils.addEventListener(element, $utils.getRendererEvent(name), (event: MouseEvent | TouchEvent) => {\n\t\tif ((<any>event).touches) {\n\t\t\t$array.each((<TouchEvent>event).touches, (touch) => {\n\t\t\t\tf(touch);\n\t\t\t});\n\n\t\t} else {\n\t\t\tf(<MouseEvent>event);\n\t\t}\n\t});\n}\n\n/**\n * @ignore\n */\nfunction isTainted(image: HTMLImageElement): boolean {\n\tconst canvas = document.createElement(\"canvas\");\n\tcanvas.width = 1;\n\tcanvas.height = 1;\n\tconst context = canvas.getContext(\"2d\")!;\n\tcontext.drawImage(image, 0, 0, 1, 1);\n\n\ttry {\n\t\tcontext.getImageData(0, 0, 1, 1);\n\t\treturn false;\n\t}\n\tcatch (err) {\n\t\tconsole.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n\t\treturn true;\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasPivot implements IPoint {\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\tget y(): number {\n\t\treturn this._y;\n\t}\n\n\tset x(value: number) {\n\t\tthis._x = value;\n\t}\n\n\tset y(value: number) {\n\t\tthis._y = value;\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasDisplayObject extends Disposer implements IDisplayObject, IDisposer {\n\tpublic _layer?: CanvasLayer;\n\n\tpublic mask: CanvasGraphics | null = null;\n\tpublic visible: boolean = true;\n\tpublic exportable?: boolean = true;\n\tpublic interactive: boolean = false;\n\tpublic wheelable: boolean = false;\n\tpublic isMeasured: boolean = false;\n\tpublic buttonMode: boolean = false;\n\tpublic alpha: number = 1;\n\tpublic compoundAlpha: number = 1;\n\tpublic angle: number = 0;\n\tpublic scale: number = 1;\n\tpublic x: number = 0;\n\tpublic y: number = 0;\n\tpublic pivot: CanvasPivot = new CanvasPivot();\n\n\tpublic filter?: string;\n\n\tpublic cursorOverStyle?: string;\n\tpublic _replacedCursorStyle?: string;\n\n\tpublic _localMatrix: Matrix = new Matrix();\n\tpublic _matrix: Matrix = new Matrix();\n\t// TODO can this be replaced with _localMatrix ?\n\tprotected _uMatrix: Matrix = new Matrix();\n\n\tprotected _renderer: CanvasRenderer;\n\tpublic _parent: CanvasContainer | undefined;\n\n\tprotected _localBounds: IBounds | undefined;\n\tprotected _bounds: IBounds | undefined;\n\tpublic _colorId: string | undefined;\n\n\tconstructor(renderer: CanvasRenderer) {\n\t\tsuper(() => {\n\t\t\tthis._renderer._removeObject(this);\n\t\t});\n\n\t\tthis._renderer = renderer;\n\t}\n\n\tpublic getCanvas(): HTMLCanvasElement {\n\t\treturn this.getLayer().view;\n\t}\n\n\tpublic getLayer(): CanvasLayer {\n\t\tlet self: CanvasDisplayObject = this;\n\n\t\tfor (; ;) {\n\t\t\tif (self._layer) {\n\t\t\t\treturn self._layer;\n\n\t\t\t} else if (self._parent) {\n\t\t\t\tself = self._parent;\n\n\t\t\t} else {\n\t\t\t\treturn this._renderer.defaultLayer;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setLayer(order: number | undefined, visible: boolean = true): void {\n\t\tif (order == null) {\n\t\t\tthis._layer = undefined;\n\n\t\t} else {\n\t\t\tthis._layer = this._renderer.getLayer(order, visible);\n\t\t\tthis._layer.visible = visible;\n\t\t\tif (this._parent) {\n\t\t\t\tthis._parent.registerChildLayer(this._layer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(): void {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic clear(): void {\n\t\tthis.invalidateBounds();\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tthis._localBounds = undefined;\n\t}\n\n\tpublic _addBounds(_bounds: IBounds): void { }\n\n\tprotected _getColorId(): string {\n\t\tif (this._colorId === undefined) {\n\t\t\tthis._colorId = this._renderer.paintId(this);\n\t\t}\n\n\t\treturn this._colorId;\n\t}\n\n\tprotected _isInteractive(): boolean {\n\t\treturn this.interactive || this._renderer._forceInteractive > 0;\n\t}\n\n\tprotected _isInteractiveMask(): boolean {\n\t\treturn this._isInteractive();\n\t}\n\n\tpublic contains(child: CanvasDisplayObject): boolean {\n\t\tfor (; ;) {\n\t\t\tif (child === this) {\n\t\t\t\treturn true;\n\n\t\t\t} else if (child._parent) {\n\t\t\t\tchild = child._parent;\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\ttoGlobal(point: IPoint): IPoint {\n\t\treturn this._matrix.apply(point);\n\t}\n\n\ttoLocal(point: IPoint): IPoint {\n\t\treturn this._matrix.applyInverse(point);\n\t}\n\n\tpublic getLocalMatrix(): Matrix {\n\t\tthis._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n\t\treturn this._uMatrix;\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\t\t\tconst bn = 10000000;\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: bn,\n\t\t\t\ttop: bn,\n\t\t\t\tright: -bn,\n\t\t\t\tbottom: -bn\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tgetAdjustedBounds(bounds: IBounds): IBounds {\n\t\tthis._setMatrix();\n\n\t\tconst matrix = this.getLocalMatrix();\n\n\t\tconst p0 = matrix.apply({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = matrix.apply({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\ton<C, Key extends keyof IRendererEvents>(key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tif (this.interactive) {\n\t\t\treturn this._renderer._addEvent(this, key, callback, context);\n\n\t\t} else {\n\t\t\treturn new Disposer(() => { });\n\t\t}\n\t}\n\n\tpublic _setMatrix(): void {\n\t\t// TODO only calculate this if it has actually changed\n\t\tthis._localMatrix.setTransform(\n\t\t\tthis.x,\n\t\t\tthis.y,\n\t\t\tthis.pivot.x,\n\t\t\tthis.pivot.y,\n\t\t\t// Converts degrees to radians\n\t\t\tthis.angle * Math.PI / 180,\n\t\t\tthis.scale\n\t\t);\n\n\t\tthis._matrix.copyFrom(this._localMatrix);\n\n\t\tif (this._parent) {\n\t\t\t// TODO only calculate this if it has actually changed\n\t\t\tthis._matrix.prepend(this._parent._matrix);\n\t\t}\n\t}\n\n\tpublic _transform(context: CanvasRenderingContext2D, resolution: number): void {\n\t\tconst m = this._matrix;\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\tm.tx * resolution,\n\t\t\tm.ty * resolution\n\t\t);\n\t}\n\n\tpublic render(parentLayer: CanvasLayer): void {\n\t\tif (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n\t\t\tthis._setMatrix();\n\n\t\t\tconst resolution = this._renderer.resolution;\n\n\t\t\tconst layers = this._renderer.layers;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t}\n\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.context.save();\n\n\t\t\t\t\t// We must apply the mask before we transform the element\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tmask._transform(layer.context, layer.scale || resolution);\n\t\t\t\t\t\tmask._runPath(layer.context);\n\t\t\t\t\t\tlayer.context.clip();\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer.context.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\t\t\tthis._transform(layer.context, layer.scale || resolution);\n\n\t\t\t\t\tif (this.filter) {\n\t\t\t\t\t\tlayer.context.filter = this.filter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tghostContext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tif (mask && this._isInteractiveMask()) {\n\t\t\t\tmask._transform(ghostContext, resolution);\n\t\t\t\tmask._runPath(ghostContext);\n\t\t\t\tghostContext.clip();\n\t\t\t}\n\n\t\t\tthis._transform(ghostContext, resolution);\n\n\t\t\tthis._render(parentLayer);\n\n\t\t\tghostContext.restore();\n\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.context.restore();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tif (this.exportable === false) {\n\t\t\tconst layer = this._layer || parentLayer;\n\t\t\tlayer.tainted = true;\n\t\t}\n\t}\n\n\thovering(): boolean {\n\t\treturn this._renderer._hovering.has(this);\n\t}\n\n\tdragging(): boolean {\n\t\treturn this._renderer._dragging.some((x) => x.value === this);\n\t}\n\n\tpublic dispose() {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasContainer extends CanvasDisplayObject implements IContainer {\n\tpublic interactiveChildren: boolean = true;\n\tprivate _childLayers?: CanvasLayer[];\n\n\tprotected _children: Array<CanvasDisplayObject> = [];\n\n\tprotected _isInteractiveMask(): boolean {\n\t\treturn this.interactiveChildren || super._isInteractiveMask();\n\t}\n\n\taddChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = this;\n\t\tthis._children.push(child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\taddChildAt(child: CanvasDisplayObject, index: number): void {\n\t\tchild._parent = this;\n\t\tthis._children.splice(index, 0, child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\tremoveChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = undefined;\n\t\t$array.removeFirst(this._children, child);\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tconst renderer = this._renderer;\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t++renderer._forceInteractive;\n\t\t}\n\n\t\tconst layer = this._layer || parentLayer;\n\n\t\t$array.each(this._children, (child) => {\n\t\t\tchild.compoundAlpha = this.compoundAlpha * this.alpha;\n\t\t\tchild.render(layer);\n\t\t});\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t--renderer._forceInteractive;\n\t\t}\n\t}\n\n\tregisterChildLayer(layer: CanvasLayer): void {\n\t\tif (!this._childLayers) {\n\t\t\tthis._childLayers = [];\n\t\t}\n\t\t$array.pushOne(this._childLayers, layer);\n\t\tif (this._parent) {\n\t\t\tthis._parent.registerChildLayer(layer);\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(deep: boolean = false): void {\n\t\tsuper.markDirtyLayer();\n\t\tif (deep && this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => layer.dirty = true);\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tsuper.dispose();\n\t\tif (this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => {\n\t\t\t\tlayer.dirty = true;\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction setPoint(bounds: IBounds, point: IPoint): void {\n\tbounds.left = Math.min(bounds.left, point.x);\n\tbounds.top = Math.min(bounds.top, point.y);\n\tbounds.right = Math.max(bounds.right, point.x);\n\tbounds.bottom = Math.max(bounds.bottom, point.y);\n}\n\n/**\n * @ignore\n */\nabstract class Op {\n\tpublic colorize(_context: CanvasRenderingContext2D, _forceColor: string | undefined): void { }\n\n\tpublic path(_context: CanvasRenderingContext2D): void { }\n\n\tpublic addBounds(_bounds: IBounds): void { }\n}\n\n/**\n * @ignore\n */\nclass BeginFill extends Op {\n\tconstructor(public color: string | CanvasGradient | CanvasPattern) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.fillStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndFill extends Op {\n\tconstructor(public clearShadow: boolean) { super(); }\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.fill();\n\t\tif (this.clearShadow) {\n\t\t\tcontext.shadowColor = \"\";\n\t\t\tcontext.shadowBlur = 0;\n\t\t\tcontext.shadowOffsetX = 0;\n\t\t\tcontext.shadowOffsetY = 0;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndStroke extends Op {\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.stroke();\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineStyle extends Op {\n\tconstructor(public width: number, public color: string | CanvasGradient | CanvasPattern) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.strokeStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t}\n\n\t\tcontext.lineWidth = this.width;\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDash extends Op {\n\tconstructor(public dash: number[]) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.setLineDash(this.dash);\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDashOffset extends Op {\n\tconstructor(public dashOffset: number) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.lineDashOffset = this.dashOffset;\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawRect extends Op {\n\tconstructor(public x: number, public y: number, public width: number, public height: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.rect(this.x, this.y, this.width, this.height);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tconst l = this.x;\n\t\tconst t = this.y;\n\t\tconst r = l + this.width;\n\t\tconst b = t + this.height;\n\n\t\tsetPoint(bounds, { x: l, y: t });\n\t\tsetPoint(bounds, { x: r, y: t });\n\t\tsetPoint(bounds, { x: l, y: b });\n\t\tsetPoint(bounds, { x: r, y: b });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawCircle extends Op {\n\tconstructor(public x: number, public y: number, public radius: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x + this.radius, this.y);\n\t\tcontext.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\n\t\tsetPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Arc extends Op {\n\tconstructor(\n\t\tpublic cx: number,\n\t\tpublic cy: number,\n\t\tpublic radius: number,\n\t\tpublic startAngle: number,\n\t\tpublic endAngle: number,\n\t\tpublic anticlockwise: boolean,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n\t\t}\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tlet arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n\t\tsetPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\n\t\tsetPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ArcTo extends Op {\n\tconstructor(\n\t\tpublic x1: number,\n\t\tpublic y1: number,\n\t\tpublic x2: number,\n\t\tpublic y2: number,\n\t\tpublic radius: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n\t\t}\n\t}\n\n\t// TODO: add points\n\tpublic addBounds(_bounds: IBounds): void {\n\t\t/*\n\t\t// not finished\n\t\thttps://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\n\n\t\tif (prevPoint) {\n\t\t\tlet x1 = prevPoint.x;\n\t\t\tlet y1 = prevPoint.y;\n\t\t\tlet x2 = this.x2;\n\t\t\tlet y2 = this.y2;\n\t\t\tlet r = this.radius;\n\n\t\t\tlet xa = (x2 - x1) / 2;\n\t\t\tlet ya = (y2 - y1) / 2;\n\n\t\t\tlet x0 = x1 + xa;\n\t\t\tlet y0 = y1 + ya;\n\n\t\t\tlet a = Math.hypot(xa, ya);\n\t\t\tlet b = Math.sqrt(r * r - a * a);\n\n\t\t\tlet cx = x0 + b * ya / a;\n\t\t\tlet cy = y0 - b * xa / a;\n\n\t\t\tconsole.log(cx, cy);\n\t\t}*/\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.lineTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass MoveTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ClosePath extends Op {\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.closePath();\n\t}\n}\n\n/**\n * @ignore\n */\nclass BezierCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic cpX2: number,\n\t\tpublic cpY2: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.cpX2, y: this.cpY2 });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass QuadraticCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Shadow extends Op {\n\tconstructor(\n\t\tpublic color: string,\n\t\tpublic blur?: number,\n\t\tpublic offsetX?: number,\n\t\tpublic offsetY?: number,\n\t\tpublic opacity?: number\n\t) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tif (this.opacity) {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t\tcontext.shadowColor = this.color;\n\t\tif (this.blur) {\n\t\t\tcontext.shadowBlur = this.blur;\n\t\t}\n\t\tif (this.offsetX) {\n\t\t\tcontext.shadowOffsetX = this.offsetX;\n\t\t}\n\t\tif (this.offsetY) {\n\t\t\tcontext.shadowOffsetY = this.offsetY;\n\t\t}\n\t}\n}\n\n\n/**\n * @ignore\n */\nexport class CanvasGraphics extends CanvasDisplayObject implements IGraphics {\n\tprotected _operations: Array<Op> = [];\n\n\tpublic blendMode: BlendMode = BlendMode.NORMAL;\n\n\tprotected _hasShadows: boolean = false;\n\tprotected _fillAlpha?: number;\n\tprotected _strokeAlpha?: number;\n\n\tclear(): void {\n\t\tsuper.clear();\n\t\tthis._operations.length = 0;\n\t}\n\n\tprotected _pushOp(op: Op): void {\n\t\tthis._operations.push(op);\n\t}\n\n\tbeginFill(color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1): void {\n\t\tthis._fillAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new BeginFill(color.toCSS(alpha)));\n\n\t\t\t} else {\n\t\t\t\tthis.isMeasured = true;\n\t\t\t\tthis._pushOp(new BeginFill(color));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n\t\t}\n\t}\n\n\tendFill(): void {\n\t\tthis._pushOp(new EndFill(this._hasShadows));\n\t}\n\n\tendStroke(): void {\n\t\tthis._pushOp(new EndStroke());\n\t}\n\n\tlineStyle(width: number = 0, color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1): void {\n\t\tthis._strokeAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new LineStyle(width, color.toCSS(alpha)));\n\t\t\t} else {\n\t\t\t\tthis._pushOp(new LineStyle(width, color));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\"));\n\t\t}\n\t}\n\n\tsetLineDash(dash?: number[]): void {\n\t\tthis._pushOp(new LineDash(dash ? dash : []));\n\t}\n\n\tsetLineDashOffset(dashOffset?: number): void {\n\t\tthis._pushOp(new LineDashOffset(dashOffset || 0));\n\t}\n\n\tdrawRect(x: number, y: number, width: number, height: number): void {\n\t\tthis._pushOp(new DrawRect(x, y, width, height));\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number): void {\n\t\tthis._pushOp(new DrawCircle(x, y, radius));\n\t}\n\n\tarc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean = false): void {\n\t\tthis._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\n\t\tthis._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\tlineTo(x: number, y: number): void {\n\t\tthis._pushOp(new LineTo(x, y));\n\t}\n\n\tmoveTo(x: number, y: number): void {\n\t\tthis._pushOp(new MoveTo(x, y));\n\t}\n\n\tbezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n\t}\n\n\tquadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n\t}\n\n\tclosePath(): void {\n\t\tthis._pushOp(new ClosePath());\n\t}\n\n\tshadow(color: Color, blur?: number, offsetX?: number, offsetY?: number, opacity?: number): void {\n\t\tthis._hasShadows = true;\n\t\tthis._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n\t}\n\n\t// https://svgwg.org/svg2-draft/paths.html#DProperty\n\t// TODO better error checking\n\tsvgPath(path: string): void {\n\t\tlet x = 0;\n\t\tlet y = 0;\n\t\tlet cpx: number | null = null;\n\t\tlet cpy: number | null = null;\n\t\tlet qcpx: number | null = null;\n\t\tlet qcpy: number | null = null;\n\n\t\tconst SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n\t\tconst ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n\n\t\tlet match;\n\n\t\twhile ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n\t\t\tconst name = match[1];\n\t\t\tconst rest = match[2];\n\n\t\t\tconst args = [];\n\n\t\t\twhile ((match = ARGS_REGEXP.exec(rest)) !== null) {\n\t\t\t\targs.push(+match[1]);\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\n\t\t\t\tcpx = null;\n\t\t\t\tcpy = null;\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\n\t\t\t\tqcpx = null;\n\t\t\t\tqcpy = null;\n\t\t\t}\n\n\t\t\tswitch (name) {\n\t\t\t\tcase \"M\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx = args[0];\n\t\t\t\t\ty = args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx = args[i];\n\t\t\t\t\t\ty = args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx += args[0];\n\t\t\t\t\ty += args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx += args[i];\n\t\t\t\t\t\ty += args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"L\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx = args[i];\n\t\t\t\t\t\ty = args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"l\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx += args[i];\n\t\t\t\t\t\ty += args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"H\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx = args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"h\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx += args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"V\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty = args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty += args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"C\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = args[i];\n\t\t\t\t\t\tconst y1 = args[i + 1];\n\t\t\t\t\t\tcpx = args[i + 2];\n\t\t\t\t\t\tcpy = args[i + 3];\n\t\t\t\t\t\tx = args[i + 4];\n\t\t\t\t\t\ty = args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = args[i] + x;\n\t\t\t\t\t\tconst y1 = args[i + 1] + y;\n\t\t\t\t\t\tcpx = args[i + 2] + x;\n\t\t\t\t\t\tcpy = args[i + 3] + y;\n\t\t\t\t\t\tx += args[i + 4];\n\t\t\t\t\t\ty += args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"S\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = args[i];\n\t\t\t\t\t\tcpy = args[i + 1];\n\t\t\t\t\t\tx = args[i + 2];\n\t\t\t\t\t\ty = args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = args[i] + x;\n\t\t\t\t\t\tcpy = args[i + 1] + y;\n\t\t\t\t\t\tx += args[i + 2];\n\t\t\t\t\t\ty += args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = args[i];\n\t\t\t\t\t\tqcpy = args[i + 1];\n\t\t\t\t\t\tx = args[i + 2];\n\t\t\t\t\t\ty = args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = args[i] + x;\n\t\t\t\t\t\tqcpy = args[i + 1] + y;\n\t\t\t\t\t\tx += args[i + 2];\n\t\t\t\t\t\ty += args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"T\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx = args[i];\n\t\t\t\t\t\ty = args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"t\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx += args[i];\n\t\t\t\t\t\ty += args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"A\":\n\t\t\t\tcase \"a\":\n\t\t\t\t\tconst relative = (name === \"a\");\n\n\t\t\t\t\tcheckEvenArgs(name, args.length, 7);\n\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 7) {\n\t\t\t\t\t\tlet cx = args[i + 5];\n\t\t\t\t\t\tlet cy = args[i + 6];\n\n\t\t\t\t\t\tif (relative) {\n\t\t\t\t\t\t\tcx += x;\n\t\t\t\t\t\t\tcy += y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst bs = arcToBezier({\n\t\t\t\t\t\t\tpx: x,\n\t\t\t\t\t\t\tpy: y,\n\t\t\t\t\t\t\trx: args[i],\n\t\t\t\t\t\t\try: args[i + 1],\n\t\t\t\t\t\t\txAxisRotation: args[i + 2],\n\t\t\t\t\t\t\tlargeArcFlag: assertBinary(args[i + 3]),\n\t\t\t\t\t\t\tsweepFlag: assertBinary(args[i + 4]),\n\t\t\t\t\t\t\tcx,\n\t\t\t\t\t\t\tcy,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$array.each(bs, (b) => {\n\t\t\t\t\t\t\tthis.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n\t\t\t\t\t\t\tx = b.x;\n\t\t\t\t\t\t\ty = b.y;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Z\":\n\t\t\t\tcase \"z\":\n\t\t\t\t\tcheckArgs(name, args.length, 0);\n\t\t\t\t\tthis.closePath();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _runPath(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\n\t\t$array.each(this._operations, (op) => {\n\t\t\top.path(context);\n\t\t});\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tconst layer = this._layer || parentLayer;\n\n\t\tconst layerDirty = layer.dirty;\n\t\tconst interactive = this._isInteractive();\n\n\t\t// if (this.targetLayer) {\n\t\t// \tconsole.log(this._operations, layer)\n\t\t// }\n\n\t\tif (layerDirty || interactive) {\n\n\t\t\tconst context = layer.context;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tif (layerDirty) {\n\t\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\t\tcontext.beginPath();\n\t\t\t}\n\n\t\t\tlet color: string | undefined;\n\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.beginPath();\n\t\t\t\tcolor = this._getColorId();\n\t\t\t}\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\tif (layerDirty) {\n\t\t\t\t\top.path(context);\n\t\t\t\t\top.colorize(context, undefined);\n\t\t\t\t}\n\n\t\t\t\tif (interactive) {\n\t\t\t\t\top.path(ghostContext);\n\t\t\t\t\top.colorize(ghostContext, color);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic renderDetached(context: CanvasRenderingContext2D): void {\n\t\tif (this.visible) {\n\t\t\tthis._setMatrix();\n\n\t\t\tcontext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t\tmask._transform(context, 1);\n\t\t\t\tmask._runPath(context);\n\t\t\t\tcontext.clip();\n\t\t\t}\n\n\t\t\t// TODO handle compoundAlpha somehow ?\n\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\tthis._transform(context, 1);\n\n\t\t\tif (this.filter) {\n\t\t\t\tcontext.filter = this.filter;\n\t\t\t}\n\n\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\tcontext.beginPath();\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.path(context);\n\t\t\t\top.colorize(context, undefined);\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.addBounds(bounds);\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface ILineChunk {\n\tstyle: string | undefined,\n\tfill: Color | undefined,\n\ttext: string,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\tascent: number,\n\toffsetX: number,\n\toffsetY: number,\n}\n\n/**\n * @ignore\n */\ninterface ILine {\n\toffsetY: number,\n\tascent: number,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\ttextChunks: Array<ILineChunk>,\n}\n\n/**\n * @ignore\n */\nexport class CanvasText extends CanvasDisplayObject implements IText {\n\tpublic text: string;\n\tpublic style: CanvasTextStyle;\n\tpublic resolution: number = 1;\n\n\tprotected _textInfo: Array<ILine> | undefined;\n\tprotected _textVisible: boolean = true;\n\tprotected _originalScale?: number = 1;\n\n\tconstructor(renderer: CanvasRenderer, text: string, style: CanvasTextStyle) {\n\t\tsuper(renderer);\n\t\tthis.text = text;\n\t\tthis.style = style;\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tsuper.invalidateBounds();\n\t\tthis._textInfo = undefined;\n\t}\n\n\tprivate _shared(context: CanvasRenderingContext2D) {\n\t\tif (this.style.textAlign) {\n\t\t\tcontext.textAlign = this.style.textAlign;\n\t\t}\n\n\t\tif (this.style.direction) {\n\t\t\tcontext.direction = this.style.direction;\n\t\t}\n\n\t\tif (this.style.textBaseline) {\n\t\t\tcontext.textBaseline = this.style.textBaseline;\n\t\t}\n\n\t}\n\n\tprotected _prerender(layer: CanvasLayer, ignoreGhost = false, ignoreFontWeight = false): void {\n\t\tsuper._render(layer);\n\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Font style\n\n\t\tconst style = this.style;\n\t\tlet fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n\n\t\tcontext.font = fontStyle;\n\t\tif (this._isInteractive() && !ignoreGhost) {\n\t\t\tghostContext.font = fontStyle;\n\t\t}\n\n\t\t// Other parameters\n\t\tif (style.fill) {\n\t\t\tif (style.fill instanceof Color) {\n\t\t\t\tcontext.fillStyle = style.fill.toCSS();\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = style.fill;\n\t\t\t}\n\t\t}\n\n\t\tif (style.shadowColor) {\n\t\t\tlayer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n\t\t}\n\t\tif (style.shadowBlur) {\n\t\t\tlayer.context.shadowBlur = style.shadowBlur;\n\t\t}\n\t\tif (style.shadowOffsetX) {\n\t\t\tlayer.context.shadowOffsetX = style.shadowOffsetX;\n\t\t}\n\t\tif (style.shadowOffsetY) {\n\t\t\tlayer.context.shadowOffsetY = style.shadowOffsetY;\n\t\t}\n\n\t\tthis._shared(context);\n\n\t\tif (this._isInteractive() && !ignoreGhost) {\n\t\t\tghostContext.fillStyle = this._getColorId();\n\t\t\tthis._shared(ghostContext);\n\t\t}\n\t}\n\n\tprotected _getFontStyle(style2?: ITextStyle, ignoreFontWeight = false): string {\n\n\t\t// Process defaults\n\t\tconst style = this.style;\n\t\tlet fontStyle: string[] = [];\n\n\t\tif (style2 && style2.fontVariant) {\n\t\t\tfontStyle.push(style2.fontVariant);\n\t\t}\n\t\telse if (style.fontVariant) {\n\t\t\tfontStyle.push(style.fontVariant);\n\t\t}\n\n\t\tif (!ignoreFontWeight) {\n\t\t\tif (style2 && style2.fontWeight) {\n\t\t\t\tfontStyle.push(style2.fontWeight);\n\t\t\t}\n\t\t\telse if (style.fontWeight) {\n\t\t\t\tfontStyle.push(style.fontWeight);\n\t\t\t}\n\t\t}\n\n\t\tif (style2 && style2.fontStyle) {\n\t\t\tfontStyle.push(style2.fontStyle);\n\t\t}\n\t\telse if (style.fontStyle) {\n\t\t\tfontStyle.push(style.fontStyle);\n\t\t}\n\n\t\tif (style2 && style2.fontSize) {\n\t\t\tif ($type.isNumber(style2.fontSize)) {\n\t\t\t\tstyle2.fontSize = style2.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style2.fontSize);\n\t\t}\n\t\telse if (style.fontSize) {\n\t\t\tif ($type.isNumber(style.fontSize)) {\n\t\t\t\tstyle.fontSize = style.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style.fontSize);\n\t\t}\n\n\t\tif (style2 && style2.fontFamily) {\n\t\t\tfontStyle.push(style2.fontFamily);\n\t\t}\n\t\telse if (style.fontFamily) {\n\t\t\tfontStyle.push(style.fontFamily);\n\t\t}\n\t\telse if (fontStyle.length) {\n\t\t\tfontStyle.push(\"Arial\");\n\t\t}\n\n\t\treturn fontStyle.join(\" \");\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tconst layer = this._layer || parentLayer;\n\n\t\t// We need measurements in order to properly position text for alignment\n\t\tif (!this._textInfo) {\n\t\t\tthis._measure(layer);\n\t\t}\n\n\t\tif (this._textVisible) {\n\n\t\t\tconst interactive = this._isInteractive();\n\t\t\tconst context = layer.context;\n\t\t\tconst layerDirty = layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\n\t\t\t//console.log(\"interactive:\",  interactive, \"layerDirty:\", layerDirty);\n\n\t\t\tcontext.save();\n\t\t\tghostContext.save();\n\t\t\tthis._prerender(layer);\n\n\t\t\t// const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\t\t// const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n\n\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\tif (this._isInteractive()) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw text\n\t\t\t\t\tif (layerDirty) {\n\t\t\t\t\t\tcontext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (interactive && this.interactive) {\n\t\t\t\t\t\t// Draw text in ghost canvas ONLY if it is set as interactive\n\t\t\t\t\t\t// explicitly. This way we avoid hit test anomalies caused by anti\n\t\t\t\t\t\t// aliasing of text.\n\t\t\t\t\t\tghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t//if (this._textVisible) {\n\t\t\tconst x = this._measure(this.getLayer());\n\t\t\tsetPoint(bounds, { x: x.left, y: x.top });\n\t\t\tsetPoint(bounds, { x: x.right, y: x.bottom });\n\t\t\t//}\n\t\t}\n\t}\n\n\tpublic _measure(layer: CanvasLayer): IBounds {\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Reset text info\n\t\tthis._textInfo = [];\n\n\t\t// Init\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst wrap = $type.isNumber(maxWidth) && oversizedBehavior == \"wrap\";\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(layer, true, true);\n\n\t\t// Get default font metrix\n\t\tconst refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet minX = 0;\n\t\tlet maxX = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks: ITextChunk[];\n\t\t\tif (line == \"\") {\n\t\t\t\tchunks = [{\n\t\t\t\t\ttype: \"value\",\n\t\t\t\t\ttext: \"\"\n\t\t\t\t}];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\t\t\t}\n\n\t\t\twhile (chunks.length > 0) {\n\n\t\t\t\t// Init line object\n\t\t\t\tlet lineInfo: ILine = {\n\t\t\t\t\toffsetY: offsetY,\n\t\t\t\t\tascent: 0,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttextChunks: []\n\t\t\t\t};\n\n\t\t\t\t// Measure reference text\n\t\t\t\tconst metrics = this._measureText(refText, context);\n\n\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\tlineInfo.height = height;\n\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\n\t\t\t\tlet currentStyle: string | undefined;\n\t\t\t\tlet currentFormat: string;\n\t\t\t\tlet currentFill: Color | undefined;\n\t\t\t\tlet currentChunkWidth: number | undefined;\n\t\t\t\tlet skipFurtherText = false;\n\t\t\t\tlet firstTextChunk = true;\n\t\t\t\tlet leftoverChunks: Array<ITextChunk> = [];\n\t\t\t\t//let offsetX = 0;\n\t\t\t\t//let chunk;\n\n\t\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t\t$array.eachContinue(chunks, (chunk, index) => {\n\n\t\t\t\t\t// Format chunk\n\t\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstyleRestored = false;\n\n\t\t\t\t\t\t\t// Measure reference text after change of format\n\t\t\t\t\t\t\tconst metrics = this._measureText(refText, context);\n\t\t\t\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\t\tif (height > lineInfo.height) {\n\t\t\t\t\t\t\t\tlineInfo.height = height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text chunk\n\t\t\t\t\telse if (chunk.type == \"value\" && !skipFurtherText) {\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(chunk.text, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t// Check for fit\n\t\t\t\t\t\tif (truncate) {\n\n\t\t\t\t\t\t\t// Break words?\n\t\t\t\t\t\t\tlet breakWords = firstTextChunk || this.style.breakWords || false;\n\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\t\t\t\t\t\tconst ellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n\t\t\t\t\t\t\t\tchunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\n\t\t\t\t\t\t\t\tchunk.text += ellipsis;\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (wrap) {\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width;\n\t\t\t\t\t\t\t\tconst tmpText = this._truncateText(context, chunk.text, excessWidth, false, firstTextChunk);\n\n\t\t\t\t\t\t\t\tif (tmpText == \"\") {\n\t\t\t\t\t\t\t\t\t// Unable to fit a single letter - hide the whole label\n\t\t\t\t\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//skipFurtherText = true;\n\n\t\t\t\t\t\t\t\t//Add remaining chunks for the next line\n\t\t\t\t\t\t\t\tleftoverChunks = chunks.slice(index + 1);\n\n\t\t\t\t\t\t\t\t//Add remaining text of current chunk if it was forced-cut\n\t\t\t\t\t\t\t\tif ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\ttype: \"value\",\n\t\t\t\t\t\t\t\t\t\ttext: chunk.text.substr(tmpText.length)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (currentFormat) {\n\t\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"format\",\n\t\t\t\t\t\t\t\t\t\t\ttext: currentFormat\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Set current chunk (truncated)\n\t\t\t\t\t\t\t\tchunk.text = tmpText;\n\n\t\t\t\t\t\t\t\tchunks = [];\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tlet leftBoundMod = 1;\n\t\t\t\t\t\tlet rightBoundMod = 1;\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\t// increase horizontal bounding boxes accordingly\n\t\t\t\t\t\t\tconst boundsMod = chunkWidth / currentChunkWidth\n\t\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: chunk.text,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: 0\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//offsetX += chunkWidth;\n\n\t\t\t\t\t\tfirstTextChunk = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (leftoverChunks) {\n\t\t\t\t\t\t//return false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t\t//}\n\t\t\t\t});\n\n\t\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight.value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight || 1.2;\n\t\t\t\t}\n\n\t\t\t\tif (minX < lineInfo.left) {\n\t\t\t\t\tminX = lineInfo.left;\n\t\t\t\t}\n\n\t\t\t\tif (maxX < lineInfo.right) {\n\t\t\t\t\tmaxX = lineInfo.right;\n\t\t\t\t}\n\n\t\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\t\toffsetY += lineInfo.height;\n\n\t\t\t\t// Reset chunks so that it can proceed to the next line\n\t\t\t\tchunks = leftoverChunks || [];\n\t\t\t}\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo, _index: number) => {\n\t\t\tlet currentChunkOffset = 0\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n\t\t\t\tchunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\n\t\t\t\tcurrentChunkOffset += chunk.width;\n\t\t\t});\n\t\t});\n\n\t\tconst bounds = {\n\t\t\tleft: -minX,\n\t\t\ttop: 0,\n\t\t\tright: maxX,\n\t\t\tbottom: offsetY,\n\t\t};\n\n\t\t// We need to fit?\n\t\tif (oversizedBehavior !== \"none\") {\n\t\t\tconst ratio = this._fitRatio(bounds);\n\t\t\tif (ratio < 1) {\n\t\t\t\tif (oversizedBehavior == \"fit\") {\n\t\t\t\t\tif ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\n\t\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!this._originalScale || this._originalScale == 1) {\n\t\t\t\t\t\t\tthis._originalScale = this.scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.scale = ratio;\n\t\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (oversizedBehavior == \"hide\") {\n\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tbounds.left = maxWidth;\n\t\t\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\tbounds.left = -maxWidth / 2;\n\t\t\t\t\t\t\tbounds.right = maxWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\t\t\tbounds.right = maxWidth;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\t\tthis._originalScale = undefined;\n\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\tthis._originalScale = undefined;\n\t\t\t\tthis._textVisible = true;\n\t\t\t}\n\t\t}\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn bounds;\n\t}\n\n\tprotected _fitRatio(bounds: IBounds): number {\n\t\tconst maxW = this.style.maxWidth;\n\t\tconst maxH = this.style.maxHeight;\n\t\tif (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst w = bounds.right - bounds.left;\n\t\tconst h = bounds.bottom - bounds.top;\n\t\treturn Math.min(maxW! / w || 1, maxH! / h || 1);\n\t}\n\n\tprotected _truncateText(context: CanvasRenderingContext2D, text: string, maxWidth: number, breakWords: boolean = false, fallbackBreakWords: boolean = true): string {\n\t\tlet width: number;\n\t\tdo {\n\t\t\tif (breakWords) {\n\t\t\t\ttext = text.slice(0, -1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet tmp = text.replace(/[^,;:!?\\\\\\/\\.\\s]+[,;:!?\\\\\\/\\.\\s]*$/g, \"\");\n\t\t\t\tif (tmp == \"\" && fallbackBreakWords) {\n\t\t\t\t\tbreakWords = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst metrics = this._measureText(text, context);\n\t\t\twidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\t\t} while ((width > maxWidth) && text != \"\");\n\t\treturn text;\n\t}\n\n\tprotected _measureText(text: string, context: CanvasRenderingContext2D): TextMetrics {\n\t\tlet metrics = context.measureText(text);\n\t\tlet fakeMetrics: any = {};\n\t\tif (metrics.actualBoundingBoxAscent == null) {\n\t\t\tconst div = document.createElement(\"div\");\n\t\t\tdiv.innerText = text;\n\t\t\tdiv.style.visibility = \"hidden\";\n\t\t\tdiv.style.position = \"absolute\";\n\t\t\tdiv.style.top = \"-1000000px;\"\n\t\t\tdiv.style.fontFamily = this.style.fontFamily || \"\";\n\t\t\tdiv.style.fontSize = this.style.fontSize + \"\";\n\t\t\tdocument.body.appendChild(div);\n\t\t\tconst bbox = div.getBoundingClientRect();\n\t\t\tdocument.body.removeChild(div);\n\t\t\tconst h = bbox.height;\n\t\t\tconst w = metrics.width;\n\t\t\tlet left = 0;\n\t\t\tlet right = w;\n\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: h,\n\t\t\t\tactualBoundingBoxDescent: 0,\n\t\t\t\tactualBoundingBoxLeft: left,\n\t\t\t\tactualBoundingBoxRight: right,\n\t\t\t\tfontBoundingBoxAscent: h,\n\t\t\t\tfontBoundingBoxDescent: 0,\n\t\t\t\twidth: w\n\t\t\t}\n\t\t\t//return fake;\n\t\t}\n\t\telse {\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tactualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\tactualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n\t\t\t\tactualBoundingBoxRight: metrics.actualBoundingBoxRight,\n\t\t\t\tfontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tfontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\twidth: metrics.width\n\t\t\t}\n\t\t}\n\n\t\tconst w = metrics.width;\n\t\tswitch (this.style.textAlign) {\n\t\t\tcase \"right\":\n\t\t\tcase \"end\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w / 2;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w / 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = 0;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w;\n\t\t}\n\n\t\treturn fakeMetrics;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasTextStyle implements ITextStyle {\n\t//public wordWrapWidth: number = 100;\n\tpublic fill?: Color | CanvasGradient | CanvasPattern;\n\tpublic textAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tpublic fontFamily?: string;\n\tpublic fontSize?: string | number;\n\tpublic fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'\n\tpublic fontStyle?: 'normal' | 'italic' | 'oblique';\n\tpublic fontVariant?: \"normal\" | \"small-caps\";\n\tpublic shadowColor?: Color | null;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tpublic lineHeight?: number | Percent = percent(120);\n\tpublic baselineRatio?: number = 0.19;\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\tpublic direction?: \"ltr\" | \"rtl\";\n\tpublic textBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\tpublic oversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"truncate\" = \"none\";\n\tpublic breakWords?: boolean = false;\n\tpublic ellipsis?: string = \"…\";\n\tpublic maxWidth?: number;\n\tpublic maxHeight?: number;\n\tpublic minScale?: number;\n\tpublic ignoreFormatting?: boolean = false;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRadialText extends CanvasText implements IRadialText {\n\tpublic textType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\" = \"circular\";\n\tpublic radius?: number;\n\tpublic startAngle?: number;\n\tpublic inside?: boolean = false;\n\tpublic orientation?: \"inward\" | \"outward\" | \"auto\" = \"auto\";\n\tpublic kerning?: number = 0;\n\n\tprivate _textReversed: boolean = false;\n\n\tpublic _render(parentLayer: CanvasLayer): void {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\tthis._renderCircular(parentLayer);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._render(parentLayer);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic _renderCircular(parentLayer: CanvasLayer): void {\n\t\tconst layer = this._layer || parentLayer;\n\n\t\tthis._prerender(layer);\n\n\t\tconst interactive = this._isInteractive();\n\t\tconst context = layer.context;\n\t\tconst layerDirty = layer.dirty;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Savepoint\n\t\tcontext.save();\n\t\tif (interactive) {\n\t\t\tghostContext.save();\n\t\t}\n\n\t\t// Init\n\t\tlet radius = (this.radius || 0);\n\t\tlet startAngle = (this.startAngle || 0);\n\t\tlet deltaAngle = 0;\n\t\tlet orientation = this.orientation;\n\t\tlet inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n\t\tconst inside = this.inside;\n\t\tconst align = this.style.textAlign || \"left\";\n\t\tconst kerning = this.kerning || 0;\n\t\tlet clockwise = align == \"left\" ? 1 : -1;\n\t\tconst shouldReverse = !this._textReversed;\n\n\t\t// We need measurements in order to properly position text for alignment\n\t\tif (!this._textInfo) {\n\t\t\tthis._measure(layer);\n\t\t}\n\n\t\t// Check if we need to invert the whole stuff\n\t\tif (inward == \"auto\") {\n\t\t\t// Calc max angle so we know whether we need to flip it\n\t\t\tlet maxAngle = 0;\n\t\t\tlet midAngle = 0;\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\tconst deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\n\t\t\t\tif (deltaAngle > maxAngle) {\n\t\t\t\t\tmaxAngle = deltaAngle;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (align == \"left\") {\n\t\t\t\tmidAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t}\n\t\t\telse if (align == \"right\") {\n\t\t\t\tmidAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmidAngle = startAngle * $math.DEGREES;\n\t\t\t}\n\t\t\tmidAngle = $math.normalizeAngle(midAngle);\n\t\t\tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t}\n\n\t\tif (inward == true && shouldReverse) {\n\t\t\tthis._textInfo!.reverse();\n\t\t\tthis._textReversed = true;\n\t\t}\n\n\t\t// if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n\t\t// \tclockwise *= -1;\n\t\t// }\n\n\t\t// Process text info produced by _measure()\n\t\t$array.each(this._textInfo!, (line, _index) => {\n\n\t\t\tconst textHeight = line.height;\n\n\t\t\t// Adjust radius (for `inside = false`)\n\t\t\t// Radius adjustment for `inside = false` is below the line calculation\n\t\t\tif (!inside) {\n\t\t\t\tradius += textHeight;\n\t\t\t}\n\n\t\t\t// Reverse letters if we're painting them counter-clockwise\n\t\t\tif (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\n\t\t\t\tline.textChunks.reverse();\n\t\t\t}\n\n\t\t\t// Init angles\n\t\t\tlet lineStartAngle = startAngle;\n\t\t\tdeltaAngle = 0;\n\n\t\t\t// Adjust for center-align\n\t\t\tif (align == \"center\") {\n\t\t\t\tlineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\n\t\t\t\tdeltaAngle = lineStartAngle - startAngle;\n\t\t\t}\n\n\t\t\t// if (inward == \"auto\") {\n\t\t\t// \tlet midAngle;\n\t\t\t// \tif (align == \"left\") {\n\t\t\t// \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t// \t}\n\t\t\t// \telse if () {\n\t\t\t// \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t// \t}\n\t\t\t// \tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t// }\n\n\t\t\t// Rotate letters if they are facing outward\n\t\t\tlineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\n\n\t\t\t// Savepoint\n\t\t\tcontext.save();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.save();\n\t\t\t}\n\n\t\t\t// Assume starting angle\n\t\t\tcontext.rotate(lineStartAngle);\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.rotate(lineStartAngle);\n\t\t\t}\n\n\t\t\tlet angleShift = 0;\n\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t// Draw the letter\n\t\t\t\tconst char = chunk.text;\n\t\t\t\tconst charWidth = chunk.width;\n\n\t\t\t\t// Rotate half a letter\n\t\t\t\tangleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\n\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t}\n\n\t\t\t\t// Set style\n\t\t\t\tif (chunk.style) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (chunk.fill) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t}\n\n\t\t\t\t// Center letters\n\t\t\t\tcontext.textBaseline = \"middle\";\n\t\t\t\tcontext.textAlign = \"center\";\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.textBaseline = \"middle\";\n\t\t\t\t\tghostContext.textAlign = \"center\";\n\t\t\t\t}\n\n\t\t\t\t// Plop the letter\n\t\t\t\tif (layerDirty) {\n\t\t\t\t\tcontext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t}\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t}\n\n\t\t\t\tif (chunk.fill) {\n\t\t\t\t\tcontext.restore();\n\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t}\n\n\t\t\t\t// Reset style\n\t\t\t\tif (chunk.style) {\n\t\t\t\t\tcontext.restore();\n\t\t\t\t\tghostContext.restore();\n\t\t\t\t}\n\n\t\t\t\t// Rotate half a letter and add spacing\n\t\t\t\tangleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// Restore angle\n\t\t\tcontext.restore();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.restore();\n\t\t\t}\n\n\t\t\t// Adjust radius (for `inside = true`)\n\t\t\tif (inside) {\n\t\t\t\tradius -= textHeight;\n\t\t\t}\n\n\t\t});\n\n\t\t// Restore\n\t\tcontext.restore();\n\t\tif (interactive) {\n\t\t\tghostContext.restore();\n\t\t}\n\t}\n\n\tpublic _measure(layer: CanvasLayer): IBounds {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\treturn this._measureCircular(layer);\n\t\t\tdefault:\n\t\t\t\treturn super._measure(layer);\n\t\t}\n\t}\n\n\tpublic _measureCircular(layer: CanvasLayer): IBounds {\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Reset text info\n\t\tthis._textInfo = [];\n\t\tthis._textReversed = false;\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(layer, true);\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\n\t\t\t// Init line object\n\t\t\tlet lineInfo: ILine = {\n\t\t\t\toffsetY: offsetY,\n\t\t\t\tascent: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttextChunks: []\n\t\t\t};\n\n\t\t\tlet currentStyle: string | undefined;\n\t\t\tlet currentFill: Color | undefined;\n\t\t\tlet currentChunkWidth: number | undefined;\n\n\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t$array.each(chunks, (chunk, _index) => {\n\n\t\t\t\t// Format chunk\n\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleRestored = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Text format\n\t\t\t\telse if (chunk.type == \"value\") {\n\n\t\t\t\t\t// Measure each letter\n\t\t\t\t\tfor (let i = 0; i < chunk.text.length; i++) {\n\n\t\t\t\t\t\tconst char = chunk.text[i];\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(char, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.width;\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: char,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight + metrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: chunkHeight\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t}\n\n\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\toffsetY += lineInfo.height;\n\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo) => {\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n\t\t\t});\n\t\t});\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t};\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasImage extends CanvasDisplayObject implements IPicture {\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic image: HTMLImageElement | undefined;\n\tpublic tainted?: boolean;\n\n\tpublic shadowColor?: Color;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\n\tprotected _imageMask: HTMLCanvasElement | undefined;\n\n\tconstructor(renderer: CanvasRenderer, image: HTMLImageElement | undefined) {\n\t\tsuper(renderer);\n\t\tthis.image = image;\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\n\t\t\tlet w = 0;\n\t\t\tlet h = 0;\n\n\t\t\tif (this.width) {\n\t\t\t\tw = this.width;\n\t\t\t}\n\t\t\tif (this.height) {\n\t\t\t\th = this.height;\n\t\t\t}\n\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tright: w,\n\t\t\t\tbottom: h\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tif (this.image) {\n\t\t\tconst layer = this._layer || parentLayer;\n\n\t\t\tif (this.tainted === undefined) {\n\t\t\t\tthis.tainted = isTainted(this.image);\n\t\t\t\tlayer.tainted = true;\n\t\t\t}\n\n\t\t\tif (this.tainted && this._renderer._omitTainted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (layer.dirty) {\n\n\t\t\t\tif (this.shadowColor) {\n\t\t\t\t\tlayer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n\t\t\t\t}\n\t\t\t\tif (this.shadowBlur) {\n\t\t\t\t\tlayer.context.shadowBlur = this.shadowBlur;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetX) {\n\t\t\t\t\tlayer.context.shadowOffsetX = this.shadowOffsetX;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetY) {\n\t\t\t\t\tlayer.context.shadowOffsetY = this.shadowOffsetY;\n\t\t\t\t}\n\n\t\t\t\tconst width = this.width || this.image.naturalWidth;\n\t\t\t\tconst height = this.height || this.image.naturalHeight;\n\n\t\t\t\tlayer.context.drawImage(this.image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tif (this.interactive && this._isInteractive()) {\n\t\t\t\tconst mask = this._getMask(this.image);\n\n\t\t\t\tthis._renderer._ghostContext.drawImage(mask, 0, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clear(): void {\n\t\tsuper.clear();\n\t\tthis.image = undefined;\n\t\tthis._imageMask = undefined;\n\t}\n\n\tprotected _getMask(image: HTMLImageElement): HTMLCanvasElement {\n\t\tif (this._imageMask === undefined) {\n\t\t\tconst width = this.width || image.naturalWidth;\n\t\t\tconst height = this.height || image.naturalHeight;\n\n\t\t\t// We need to create a second canvas because destination-in clears out the entire canvas\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\t\tcontext.imageSmoothingEnabled = false;\n\n\t\t\tcontext.fillStyle = this._getColorId();\n\t\t\tcontext.fillRect(0, 0, width, height);\n\n\t\t\tif (!isTainted(image)) {\n\t\t\t\tcontext.globalCompositeOperation = \"destination-in\";\n\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tthis._imageMask = canvas;\n\t\t}\n\n\t\treturn this._imageMask;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasRendererEvent<A> implements IRendererEvent<A> {\n\tpublic id: Id;\n\tpublic simulated: boolean = false;\n\tpublic native: boolean = true;\n\n\tconstructor(public event: A, public point: IPoint) {\n\t\tif ($utils.supports(\"touchevents\") && event instanceof Touch) {\n\t\t\tthis.id = event.identifier;\n\n\t\t} else {\n\t\t\tthis.id = null;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface Event<Key extends keyof IRendererEvents> {\n\tobject: CanvasDisplayObject;\n\tcontext: unknown;\n\tcallback: (event: IRendererEvents[Key]) => void;\n\tdisposed: boolean;\n}\n\n/**\n * @ignore\n */\ninterface Events<Key extends keyof IRendererEvents> {\n\tdisposer: IDisposer;\n\tcallbacks: Array<Event<Key>>;\n\tdispatching: boolean;\n\tcleanup: boolean;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRenderer extends Disposer implements IRenderer, IDisposer {\n\tpublic view: HTMLElement = document.createElement(\"div\");\n\tprotected _layerDom: HTMLElement = document.createElement(\"div\");\n\n\tpublic layers: Array<CanvasLayer> = [];\n\tpublic _dirtyLayers: Array<CanvasLayer> = [];\n\tpublic defaultLayer: CanvasLayer = this.getLayer(0);\n\n\tprotected _ghostView: HTMLCanvasElement;\n\tpublic _ghostContext: CanvasRenderingContext2D;\n\n\tprotected _patternCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\n\tprotected _patternContext: CanvasRenderingContext2D = this._patternCanvas.getContext(\"2d\")!;\n\n\tprotected _width: number = 0;\n\tprotected _height: number = 0;\n\n\tprotected _clientWidth: number = 0;\n\tprotected _clientHeight: number = 0;\n\n\tpublic resolution: number = window.devicePixelRatio;\n\tpublic interactionsEnabled: boolean = true;;\n\n\tprotected _listeners: { [key: string]: CounterDisposer } = {};\n\tprotected _events: { [Key in keyof IRendererEvents]?: Events<Key> } = {};\n\n\tprotected _colorId: number = 0;\n\tprotected _colorMap: { [color: string]: CanvasDisplayObject } = {};\n\n\tpublic _forceInteractive: number = 0;\n\tpublic _omitTainted: boolean = false;\n\n\t// TODO this should store the Id as well\n\tpublic _hovering: Set<CanvasDisplayObject> = new Set();\n\tpublic _dragging: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\tpublic _mousedown: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\n\tprotected _lastPointerMoveEvent!: IPointerEvent;\n\tprotected _mouseMoveThrottler: Throttler = new Throttler(() => {\n\t\tthis._dispatchGlobalMousemove(this._lastPointerMoveEvent);\n\t});\n\n\tconstructor() {\n\t\tsuper(() => {\n\t\t});\n\n\t\tthis.view.appendChild(this._layerDom);\n\n\t\t// @todo : do the same for ghost\n\t\tthis._ghostView = document.createElement(\"canvas\");\n\t\tthis._ghostContext = this._ghostView.getContext(\"2d\", { alpha: false })!;\n\t\tthis._ghostContext.imageSmoothingEnabled = false;\n\n\t\t// Monitor for possible pixel ratio changes (when page is zoomed)\n\t\twindow.addEventListener(\"resize\", (_ev) => {\n\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t});\n\n\t\t// We need this in order top prevent default touch gestures when dragging\n\t\t// draggable elements\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tdocument.addEventListener(\"touchstart\", (ev) => {\n\t\t\t\tif (this._dragging.length !== 0) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}, { passive: false });\n\t\t}\n\n\t\t// Prevent scrolling of the window when hovering on \"wheelable\" object\n\t\tif ($utils.supports(\"wheelevents\")) {\n\t\t\tthis.view.addEventListener(\"wheel\", (ev) => {\n\t\t\t\tlet prevent = false;\n\t\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\t\tif (obj.wheelable) {\n\t\t\t\t\t\tprevent = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (prevent) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}, { passive: false });\n\t\t}\n\n\t}\n\n\tcreateLinearGradient(x1: number, y1: number, x2: number, y2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n\t}\n\n\tcreateRadialGradient(x1: number, y1: number, radius1: number, x2: number, y2: number, radius2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n\t}\n\n\tcreatePattern(graphics: CanvasGraphics, background: CanvasGraphics, repetition: string, width: number, height: number): CanvasPattern {\n\t\t// const patternCanvas = document.createElement(\"canvas\");\n\t\t// const patternContext = patternCanvas.getContext(\"2d\")!;\n\t\t// patternCanvas.width = width;\n\t\t// patternCanvas.height = height;\n\t\t// if (fill) {\n\t\t// \tpatternContext.fillStyle = fill.toCSS();\n\t\t// \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n\t\t// }\n\n\t\t// const layer = {\n\t\t// \tview: patternCanvas,\n\t\t// \tcontext: patternContext,\n\t\t// \tvisible: true,\n\t\t// \torder: 0,\n\t\t// \twidth: width,\n\t\t// \theight: height,\n\t\t// \tdirty: true\n\t\t// };\n\n\t\t// // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n\t\t// // patternContext.stroke();\n\n\t\t// image.targetLayer = layer;\n\t\t// image.render(layer);\n\n\t\t//this._layerDom.appendChild(patternCanvas);\n\n\t\tthis._patternCanvas.width = width;\n\t\tthis._patternCanvas.height = height;\n\n\t\tthis._patternContext.clearRect(0, 0, width, height);\n\n\t\t// patternCanvas.style.width = width * this.resolution + \"px\";\n\t\t// patternCanvas.style.height = height * this.resolution + \"px\";\n\n\t\tbackground.renderDetached(this._patternContext);\n\t\tgraphics.renderDetached(this._patternContext);\n\n\t\treturn this._patternContext.createPattern(this._patternCanvas, repetition)!;\n\t}\n\n\tmakeContainer(): CanvasContainer {\n\t\treturn new CanvasContainer(this);\n\t}\n\n\tmakeGraphics(): CanvasGraphics {\n\t\treturn new CanvasGraphics(this);\n\t}\n\n\tmakeText(text: string, style: CanvasTextStyle): CanvasText {\n\t\treturn new CanvasText(this, text, style);\n\t}\n\n\tmakeTextStyle(): CanvasTextStyle {\n\t\treturn new CanvasTextStyle();\n\t}\n\n\tmakeRadialText(text: string, style: CanvasTextStyle): CanvasRadialText {\n\t\treturn new CanvasRadialText(this, text, style);\n\t}\n\n\tmakePicture(image: HTMLImageElement | undefined): CanvasImage {\n\t\treturn new CanvasImage(this, image);\n\t}\n\n\tresize(width: number, height: number): void {\n\t\tthis._clientWidth = width;\n\t\tthis._clientHeight = height;\n\t\tthis._width = Math.floor(width * this.resolution);\n\t\tthis._height = Math.floor(height * this.resolution);\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tlayer.dirty = true;\n\n\t\t\t\tif (layer.width != null) {\n\t\t\t\t\tlayer.view.width = layer.width;\n\t\t\t\t\tlayer.view.style.width = layer.width + \"px\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlayer.view.width = this._width;\n\t\t\t\t\tlayer.view.style.width = width + \"px\";\n\t\t\t\t}\n\n\t\t\t\tif (layer.height != null) {\n\t\t\t\t\tlayer.view.height = layer.height;\n\t\t\t\t\tlayer.view.style.height = layer.height + \"px\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlayer.view.height = this._height;\n\t\t\t\t\tlayer.view.style.height = height + \"px\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// @todo: do the same for ghost canvases\n\t\tthis._ghostView.width = this._width;\n\t\tthis._ghostView.height = this._height;\n\t\tthis._ghostView.style.width = width + \"px\";\n\t\tthis._ghostView.style.height = height + \"px\";\n\t}\n\n\tcreateDetachedLayer(): CanvasLayer {\n\t\tconst view = document.createElement(\"canvas\");\n\t\tconst context = view.getContext(\"2d\")!;\n\t\tconst layer = {\n\t\t\tview: view,\n\t\t\tcontext: context,\n\t\t\torder: 0,\n\t\t\tvisible: true,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tdirty: true,\n\t\t\ttainted: false\n\t\t};\n\n\t\tview.style.position = \"absolute\";\n\t\tview.style.top = \"0px\";\n\t\tview.style.left = \"0px\";\n\n\t\treturn layer;\n\t}\n\n\tgetLayerByOrder(order: number): CanvasLayer | undefined {\n\t\tconst layers = this.layers;\n\t\tconst length = layers.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst layer = layers[i];\n\t\t\tif (layer.order == order) {\n\t\t\t\treturn layer;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetLayer(order: number, visible: boolean = true): CanvasLayer {\n\t\tconst layers = this.layers;\n\n\t\tlet existingLayer = this.getLayerByOrder(order);\n\t\tif (existingLayer) {\n\t\t\treturn existingLayer;\n\t\t}\n\n\t\tconst layer = this.createDetachedLayer();\n\t\tlayer.order = order;\n\t\tlayer.visible = visible;\n\n\t\tif (layer.visible && this._width) {\n\t\t\tlayer.view.width = this._width;\n\t\t\tlayer.view.style.width = this._clientWidth + \"px\";\n\t\t\tlayer.view.height = this._height;\n\t\t\tlayer.view.style.height = this._clientHeight + \"px\";\n\t\t}\n\n\t\tlayers.push(layer);\n\n\t\tlayers.sort((a, b) => {\n\t\t\tif (a.order > b.order) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (a.order < b.order) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tconst length = layers.length;\n\t\tconst layerIndex = $array.indexOf(layers, layer);\n\t\tlet next;\n\n\t\tfor (let i = layerIndex + 1; i < length; i++) {\n\t\t\tif (layers[i].visible) {\n\t\t\t\tnext = layers[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (visible) {\n\t\t\tif (next === undefined) {\n\t\t\t\tthis._layerDom.appendChild(layer.view);\n\n\t\t\t} else {\n\t\t\t\tthis._layerDom.insertBefore(layer.view, next.view);\n\t\t\t}\n\t\t}\n\n\t\treturn layer;\n\t}\n\n\trender(root: CanvasDisplayObject): void {\n\n\t\tthis._dirtyLayers.length = 0;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\n\t\t\t\tif (layer.dirty && layer.visible) {\n\t\t\t\t\tthis._dirtyLayers.push(layer);\n\n\t\t\t\t\tlayer.context.save();\n\t\t\t\t\tlayer.context.clearRect(0, 0, this._width, this._height);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._ghostContext.save();\n\t\t//this._ghostContext.clearRect(0, 0, this._width, this._height);\n\t\t//this._ghostContext.beginPath();\n\t\tthis._ghostContext.fillStyle = '#000';\n\t\tthis._ghostContext.fillRect(0, 0, this._width, this._height);\n\n\t\troot.render(this.defaultLayer);\n\n\t\tthis._ghostContext.restore();\n\n\t\t//setTimeout(() => {\n\n\t\t$array.each(this._dirtyLayers, (layer) => {\n\t\t\tlayer.context.restore();\n\t\t\tlayer.dirty = false;\n\t\t});\n\t\t//}, 100)\n\n\t\tif (this._hovering.size && this._lastPointerMoveEvent) {\n\t\t\tthis._mouseMoveThrottler.run();\n\t\t}\n\t}\n\n\tpaintId(obj: CanvasDisplayObject): string {\n\t\tconst id = distributeId(++this._colorId);\n\t\tconst color = Color.fromHex(id).toCSS();\n\t\tthis._colorMap[color] = obj;\n\t\treturn color;\n\t}\n\n\t_removeObject(obj: CanvasDisplayObject): void {\n\t\tif (obj._colorId !== undefined) {\n\t\t\tdelete this._colorMap[obj._colorId];\n\t\t}\n\t}\n\n\t// protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n\t// \treturn this._colorMap[colorId];\n\t// }\n\n\tpublic getEvent<A extends IPointerEvent>(originalEvent: A, adjustPoint: boolean = true): CanvasRendererEvent<A> {\n\t\tconst bbox = adjustPoint ? this.view.getBoundingClientRect() : { left: 0, top: 0 };\n\n\t\treturn new CanvasRendererEvent(originalEvent, originalEvent.clientX || originalEvent.clientY ? {\n\t\t\tx: originalEvent.clientX - (originalEvent.clientX ? bbox.left : 0),\n\t\t\ty: originalEvent.clientY - (originalEvent.clientY ? bbox.top : 0),\n\t\t} : {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t});\n\t}\n\n\t_getHitTarget(point: IPoint): CanvasDisplayObject | undefined | false {\n\t\tif (point.x < 0 || point.x > this._width / this.resolution || point.y < 0 || point.y > this._height / this.resolution) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tconst pixel = this._ghostContext.getImageData(\n\t\t\t\t// TODO should this round ?\n\t\t\t\tMath.round(point.x * this.resolution),\n\t\t\t\tMath.round(point.y * this.resolution),\n\t\t\t\t1,\n\t\t\t\t1\n\t\t\t);\n\n\t\t\tif (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n\t\t\tconst hit = this._colorMap[colorId];\n\n\t\t\treturn hit;\n\t\t}\n\t}\n\n\t_withEvents<Key extends keyof IRendererEvents>(key: Key, f: (events: Events<Key>) => void): void {\n\t\tconst events = this._events[key] as Events<Key> | undefined;\n\n\t\tif (events !== undefined) {\n\t\t\tevents.dispatching = true;\n\n\t\t\ttry {\n\t\t\t\tf(events);\n\n\t\t\t} finally {\n\t\t\t\tevents.dispatching = false;\n\n\t\t\t\tif (events.cleanup) {\n\t\t\t\t\tevents.cleanup = false;\n\n\t\t\t\t\t$array.keepIf(events.callbacks, (callback) => {\n\t\t\t\t\t\treturn !callback.disposed;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (events.callbacks.length === 0) {\n\t\t\t\t\t\tevents.disposer.dispose();\n\t\t\t\t\t\tdelete this._events[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_dispatchEventAll<Key extends keyof IRendererEvents>(key: Key, event: IRendererEvents[Key]): void {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_dispatchEvent<Key extends keyof IRendererEvents>(key: Key, target: CanvasDisplayObject, event: IRendererEvents[Key]): boolean {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet dispatched = false;\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed && callback.object === target) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t\tdispatched = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn dispatched;\n\t}\n\n\t_dispatchMousedown(originalEvent: IPointerEvent): void {\n\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tif (button != 0 && button != 2 && button != 1) {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point);\n\n\t\tif (target) {\n\t\t\tconst id = event.id;\n\n\t\t\tlet dragged = false;\n\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tconst info = { id: id, value: obj };\n\n\t\t\t\tthis._mousedown.push(info);\n\n\t\t\t\tif (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\n\t\t\t\t\t// Only dispatch the first element which matches\n\t\t\t\t\tdragged = true;\n\n\t\t\t\t\tconst has = this._dragging.some((x) => {\n\t\t\t\t\t\treturn x.value === obj && x.id === id;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!has) {\n\t\t\t\t\t\tthis._dragging.push(info);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchGlobalMousemove(originalEvent: IPointerEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\n\t\tconst target = this._getHitTarget(event.point);\n\t\tevent.native = this._isNativeEvent(originalEvent);\n\n\t\tif (target) {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (!obj.contains(target)) {\n\t\t\t\t\tthis._hovering.delete(obj);\n\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t\t}\n\t\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (event.native) {\n\t\t\t\teachTargets(target, (obj) => {\n\t\t\t\t\tif (!this._hovering.has(obj)) {\n\t\t\t\t\t\tthis._hovering.add(obj);\n\t\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t\tobj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n\t\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(\"pointerover\", obj, event);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//} else if (target === false) {\n\t\t} else {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t}\n\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t});\n\n\t\t\tthis._hovering.clear();\n\t\t}\n\t\tthis._dispatchEventAll(\"globalpointermove\", event);\n\t}\n\n\t_isNativeEvent(event: IPointerEvent): boolean {\n\t\tif (event.target) {\n\t\t\treturn (<any>event.target).parentNode === this._layerDom;\n\t\t}\n\t\treturn true;\n\t}\n\n\t_dispatchGlobalMouseup(originalEvent: IPointerEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\t//const target = this._getHitTarget(event.point);\n\t\tthis._dispatchEventAll(\"globalpointerup\", event);\n\t}\n\n\t_dispatchDragMove(originalEvent: IPointerEvent): void {\n\t\tif (this._dragging.length !== 0) {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst id = event.id;\n\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointermove\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchDragEnd(originalEvent: IPointerEvent): void {\n\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tlet clickevent: \"click\" | \"rightclick\" | \"middleclick\";\n\t\tif (button == 0) {\n\t\t\tclickevent = \"click\";\n\t\t}\n\t\telse if (button == 2) {\n\t\t\tclickevent = \"rightclick\";\n\t\t}\n\t\telse if (button == 1) {\n\t\t\tclickevent = \"middleclick\";\n\t\t}\n\t\telse {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst id = event.id;\n\n\t\tif (this._mousedown.length !== 0) {\n\t\t\tconst target = this._getHitTarget(event.point);\n\n\t\t\tif (target) {\n\t\t\t\tthis._mousedown.forEach((obj) => {\n\t\t\t\t\tif (obj.id === id && obj.value.contains(target)) {\n\t\t\t\t\t\tthis._dispatchEvent(clickevent, obj.value, event);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._mousedown.length = 0;\n\t\t}\n\n\t\tif (this._dragging.length !== 0) {\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointerup\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._dragging.length = 0;\n\t\t}\n\t}\n\n\t_dispatchDoubleClick(originalEvent: IPointerEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"dblclick\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchWheel(originalEvent: WheelEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tthis._hovering.forEach((obj) => {\n\t\t\tthis._dispatchEvent(\"wheel\", obj, event);\n\t\t});\n\t}\n\n\t_makeSharedEvent(key: string, f: () => IDisposer): IDisposer {\n\t\tif (this._listeners[key] === undefined) {\n\t\t\tconst listener = f();\n\n\t\t\tthis._listeners[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._listeners[key];\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn this._listeners[key].increment();\n\t}\n\n\t// This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n\t_initEvent(key: keyof IRendererEvents): IDisposer | undefined {\n\t\tswitch (key) {\n\t\t\tcase \"globalpointermove\":\n\t\t\tcase \"pointerover\":\n\t\t\tcase \"pointerout\":\n\t\t\t\treturn this._makeSharedEvent(\"pointermove\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\treturn onPointerEvent(window, \"pointermove\", (ev) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = ev;\n\t\t\t\t\t\tthis._mouseMoveThrottler.run();\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"globalpointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerup\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\treturn onPointerEvent(window, \"pointerup\", (ev) => {\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\tthis._dispatchGlobalMouseup(ev);\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"click\":\n\t\t\tcase \"rightclick\":\n\t\t\tcase \"middleclick\":\n\t\t\tcase \"pointerdown\":\n\t\t\tcase \"pointermove\":\n\t\t\tcase \"pointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\tconst mousedown = onPointerEvent(this.view, \"pointerdown\", (ev: IPointerEvent) => {\n\t\t\t\t\t\tthis._dispatchMousedown(ev);\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\tconst mousemove = onPointerEvent(window, \"pointermove\", (ev: IPointerEvent) => {\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\tthis._dispatchDragMove(ev);\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst mouseup = onPointerEvent(window, \"pointerup\", (ev: IPointerEvent) => {\n\t\t\t\t\t\tthis._dispatchDragEnd(ev);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmousedown.dispose();\n\t\t\t\t\t\tmousemove.dispose();\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"dblclick\":\n\t\t\t\treturn this._makeSharedEvent(\"dblclick\", () => {\n\t\t\t\t\treturn onPointerEvent(window, \"dblclick\", (ev) => {\n\t\t\t\t\t\tthis._dispatchDoubleClick(ev);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"wheel\":\n\t\t\t\treturn this._makeSharedEvent(\"wheel\", () => {\n\t\t\t\t\treturn $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), (event: WheelEvent) => {\n\t\t\t\t\t\tthis._dispatchWheel(event);\n\t\t\t\t\t}, { passive: false });\n\t\t\t\t});\n\t\t}\n\t}\n\n\t_addEvent<C, Key extends keyof IRendererEvents>(object: CanvasDisplayObject, key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tlet events: Events<Key> | undefined = this._events[key] as any;\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._events[key] = {\n\t\t\t\tdisposer: this._initEvent(key)!,\n\t\t\t\tcallbacks: [],\n\t\t\t\tdispatching: false,\n\t\t\t\tcleanup: false,\n\t\t\t};\n\t\t}\n\n\t\tconst listener = { object, context, callback, disposed: false };\n\n\t\tevents!.callbacks.push(listener);\n\n\t\treturn new Disposer(() => {\n\t\t\tlistener.disposed = true;\n\n\t\t\tif (events!.dispatching) {\n\t\t\t\tevents!.cleanup = true;\n\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(events!.callbacks, listener);\n\n\t\t\t\tif (events!.callbacks.length === 0) {\n\t\t\t\t\tevents!.disposer.dispose();\n\t\t\t\t\tdelete this._events[key];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getCanvas(root: CanvasDisplayObject, options?: ICanvasOptions): HTMLCanvasElement {\n\n\t\t// Make sure everything is rendered\n\t\tthis.render(root);\n\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tlet scale: number = this.resolution;\n\n\t\t// Check if we need to scale\n\t\tif (options.minWidth && (options.minWidth > this._width)) {\n\t\t\tlet minScale = options.minWidth / this._width;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.minHeight && (options.minHeight > this._height)) {\n\t\t\tlet minScale = options.minHeight / this._height;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxWidth && (options.maxWidth < this._width)) {\n\t\t\tlet maxScale = options.maxWidth / this._width;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxHeight && (options.maxHeight > this._height)) {\n\t\t\tlet maxScale = options.maxHeight / this._height;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\t// Check if we need to compensate for pixel ratio\n\t\tif (options.maintainPixelRatio) {\n\t\t\tscale /= this.resolution;\n\t\t}\n\n\t\t// Set up new canvas for export\n\t\tlet forceRender = false;\n\t\tlet canvasWidth = this._width;\n\t\tlet canvasHeight = this._height;\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tif (scale != this.resolution) {\n\t\t\tforceRender = true;\n\t\t\tcanvasWidth = this._width * scale / this.resolution;\n\t\t\tcanvasHeight = this._height * scale / this.resolution;\n\t\t}\n\n\t\tcanvas.width = canvasWidth;\n\t\tcanvas.height = canvasHeight;\n\n\t\t// Context\n\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet needRerender = false;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\t\t\t\tif (layer.tainted || forceRender) {\n\t\t\t\t\tneedRerender = true;\n\n\t\t\t\t\tlayer.exportableView = layer.view;\n\t\t\t\t\tlayer.exportableContext = layer.context;\n\n\t\t\t\t\tlayer.view = document.createElement(\"canvas\");\n\t\t\t\t\tlayer.view.width = canvasWidth;\n\t\t\t\t\tlayer.view.height = canvasHeight;\n\n\t\t\t\t\tlayer.context = layer.view.getContext(\"2d\")!;\n\n\t\t\t\t\tlayer.dirty = true;\n\t\t\t\t\tlayer.scale = scale;\n\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (needRerender) {\n\t\t\tthis._omitTainted = true;\n\t\t\tthis.render(root);\n\t\t\tthis._omitTainted = false;\n\t\t}\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\n\t\t\t\t// Layer is fine. Just plop it into our target canvas\n\t\t\t\tcontext.drawImage(layer.view, 0, 0);\n\n\t\t\t\t// Restore layer original canvas\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tlayer.view = layer.exportableView;\n\t\t\t\t\tlayer.exportableView = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (layer.exportableContext) {\n\t\t\t\t\tlayer.context = layer.exportableContext;\n\t\t\t\t\tlayer.exportableContext = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (width < layer.view.clientWidth) {\n\t\t\t\t\twidth = layer.view.clientWidth;\n\t\t\t\t}\n\t\t\t\tif (height < layer.view.clientHeight) {\n\t\t\t\t\theight = layer.view.clientHeight;\n\t\t\t\t}\n\n\t\t\t\tlayer.scale = undefined;\n\t\t\t}\n\t\t});\n\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\n\t\treturn canvas;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport interface CanvasLayer extends ILayer {\n\tview: HTMLCanvasElement;\n\tcontext: CanvasRenderingContext2D;\n\ttainted?: boolean;\n\texportableView?: HTMLCanvasElement;\n\texportableContext?: CanvasRenderingContext2D;\n\tscale?: number;\n}\n"],"mappings":"AAAA,eAAc;;AAEd,SAEmFA,SAAS,QACrF,YAAY;AAGnB,SAASC,KAAK,QAAQ,kBAAkB;AACxC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,OAAO,EAAEC,OAAO,QAAQ,oBAAoB;AACrD,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,QAAQ,EAAaC,eAAe,QAAQ,qBAAqB;AAC1E,SAASC,aAAa,QAAoB,0BAA0B;AACpE,OAAO,KAAKC,MAAM,MAAM,kBAAkB;AAC1C,OAAO,KAAKC,MAAM,MAAM,kBAAkB;AAC1C,OAAO,KAAKC,KAAK,MAAM,iBAAiB;AACxC,OAAO,KAAKC,KAAK,MAAM,iBAAiB;AACxC,OAAOC,WAAW,MAAM,yBAAyB;AAGjD;;;AAGA,SAASC,SAASA,CAACC,IAAY,EAAEC,MAAc,EAAEC,QAAgB;EAChE,IAAID,MAAM,KAAKC,QAAQ,EAAE;IACxB,MAAM,IAAIC,KAAK,CAAC,WAAW,GAAGD,QAAQ,GAAG,iBAAiB,GAAGF,IAAI,GAAG,WAAW,GAAGC,MAAM,CAAC;;AAE3F;AAEA;;;AAGA,SAASG,YAAYA,CAACJ,IAAY,EAAEC,MAAc,EAAEC,QAAgB;EACnE,IAAID,MAAM,GAAGC,QAAQ,EAAE;IACtB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,GAAGD,QAAQ,GAAG,iBAAiB,GAAGF,IAAI,GAAG,WAAW,GAAGC,MAAM,CAAC;;AAEpG;AAEA;;;AAGA,SAASI,aAAaA,CAACL,IAAY,EAAEC,MAAc,EAAEC,QAAgB;EACpEE,YAAY,CAACJ,IAAI,EAAEC,MAAM,EAAEC,QAAQ,CAAC;EAEpC,IAAKD,MAAM,GAAGC,QAAQ,KAAM,CAAC,EAAE;IAC9B,MAAM,IAAIC,KAAK,CAAC,gBAAgB,GAAGH,IAAI,GAAG,uBAAuB,GAAGE,QAAQ,CAAC;;AAE/E;AAEA;;;AAGA,SAASI,YAAYA,CAACC,KAAa;EAClC,IAAIA,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,EAAE;IAC/B,OAAOA,KAAK;GAEZ,MAAM;IACN,MAAM,IAAIJ,KAAK,CAAC,qBAAqB,CAAC;;AAExC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;AAKA,SAASK,YAAYA,CAACC,EAAU;EAC/B,IAAMC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;IAC5BD,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IAChBD,GAAG,CAACC,CAAC,GAAG,CAAC,CAAC,IAAIF,EAAE,GAAG,IAAI;IACvBA,EAAE,KAAK,CAAC;;EAET,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAKA,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACrD;AAEA;;;AAGA,SAASE,WAAWA,CAACC,SAA8B,EAAEC,CAA2C;EAC/F,SAAU;IACT,IAAID,SAAS,CAACE,WAAW,EAAE;MAC1B,IAAI,CAACD,CAAC,CAACD,SAAS,CAAC,EAAE;QAClB;;;IAIF,IAAIA,SAAS,CAACG,OAAO,EAAE;MACtBH,SAAS,GAAGA,SAAS,CAACG,OAAO;KAE7B,MAAM;MACN;;;AAGH;AAEA;AACA;;;AAGA,SAASC,cAAcA,CAACC,OAAoB,EAAElB,IAAY,EAAEc,CAAiC;EAC5F,OAAOpB,MAAM,CAACyB,gBAAgB,CAACD,OAAO,EAAExB,MAAM,CAAC0B,gBAAgB,CAACpB,IAAI,CAAC,EAAE,UAACqB,KAA8B;IACrG,IAAUA,KAAM,CAACC,OAAO,EAAE;MACzB3B,MAAM,CAAC4B,IAAI,CAAcF,KAAM,CAACC,OAAO,EAAE,UAACE,KAAK;QAC9CV,CAAC,CAACU,KAAK,CAAC;MACT,CAAC,CAAC;KAEF,MAAM;MACNV,CAAC,CAAaO,KAAK,CAAC;;EAEtB,CAAC,CAAC;AACH;AAEA;;;AAGA,SAASI,SAASA,CAACC,KAAuB;EACzC,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/CF,MAAM,CAACG,KAAK,GAAG,CAAC;EAChBH,MAAM,CAACI,MAAM,GAAG,CAAC;EACjB,IAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAE;EACxCD,OAAO,CAACE,SAAS,CAACR,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAEpC,IAAI;IACHM,OAAO,CAACG,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChC,OAAO,KAAK;GACZ,CACD,OAAOC,GAAG,EAAE;IACXC,OAAO,CAACC,IAAI,CAAC,UAAU,GAAGZ,KAAK,CAACa,GAAG,GAAG,2KAA2K,CAAC;IAClN,OAAO,IAAI;;AAEb;AAEA;;;AAGA,IAAAC,WAAA;EAAA,SAAAA,YAAA;IACCC,MAAA,CAAAC,cAAA;;;;aAAuB;;IACvBD,MAAA,CAAAC,cAAA;;;;aAAuB;;EAiBxB;EAfCD,MAAA,CAAAC,cAAA,CAAIF,WAAA,CAAAG,SAAA,KAAC;SAAL,SAAAC,CAAA;MACC,OAAO,IAAI,CAACC,EAAE;IACf,CAAC;SAMD,SAAAC,CAAMvC,KAAa;MAClB,IAAI,CAACsC,EAAE,GAAGtC,KAAK;IAChB,CAAC;;;;EANDkC,MAAA,CAAAC,cAAA,CAAIF,WAAA,CAAAG,SAAA,KAAC;SAAL,SAAAC,CAAA;MACC,OAAO,IAAI,CAACG,EAAE;IACf,CAAC;SAMD,SAAAD,CAAMvC,KAAa;MAClB,IAAI,CAACwC,EAAE,GAAGxC,KAAK;IAChB,CAAC;;;;EACF,OAAAiC,WAAC;AAAD,CAAC,CAnBD;;AAqBA;;;AAGA,IAAAQ,mBAAA,0BAAAC,MAAA;EAAyCC,SAAA,CAAAF,mBAAA,EAAAC,MAAA;EAmCxC,SAAAD,oBAAYG,QAAwB;IAApC,IAAAC,KAAA,GACCH,MAAA,CAAAI,IAAA,OAAM;MACLD,KAAI,CAACE,SAAS,CAACC,aAAa,CAACH,KAAI,CAAC;IACnC,CAAC,CAAC;IArCHX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAEAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAqC;;IACrCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA0B;;IAC1BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA8B;;IAC9BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA8B;;IAC9BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA4B;;IAC5BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA6B;;IAC7BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA6B;;IAC7BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAuB;;IACvBX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA+B;;IAC/BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAuB;;IACvBX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAuB;;IACvBX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAmB;;IACnBX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAmB;;IACnBX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA4B,IAAIZ,WAAW;;IAE3CC,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAEAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAEAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA8B,IAAIjE,MAAM;;IACxCsD,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAyB,IAAIjE,MAAM;;IACnC;IACAsD,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA6B,IAAIjE,MAAM;;IAEvCsD,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAEAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAOCA,KAAI,CAACE,SAAS,GAAGH,QAAQ;;EAC1B;;;;;WAEA,SAAA5C,CAAA;MACC,OAAO,IAAI,CAACiD,QAAQ,EAAE,CAACC,IAAI;IAC5B;;;;;;WAEA,SAAAlD,CAAA;MACC,IAAImD,IAAI,GAAwB,IAAI;MAEpC,SAAU;QACT,IAAIA,IAAI,CAACC,MAAM,EAAE;UAChB,OAAOD,IAAI,CAACC,MAAM;SAElB,MAAM,IAAID,IAAI,CAAC1C,OAAO,EAAE;UACxB0C,IAAI,GAAGA,IAAI,CAAC1C,OAAO;SAEnB,MAAM;UACN,OAAO,IAAI,CAACsC,SAAS,CAACM,YAAY;;;IAGrC;;;;;;WAEA,SAAArD,CAAgBsD,KAAyB,EAAEC,OAAuB;MAAvB,IAAAA,OAAA;QAAAA,OAAA,OAAuB;MAAA;MACjE,IAAID,KAAK,IAAI,IAAI,EAAE;QAClB,IAAI,CAACF,MAAM,GAAGI,SAAS;OAEvB,MAAM;QACN,IAAI,CAACJ,MAAM,GAAG,IAAI,CAACL,SAAS,CAACE,QAAQ,CAACK,KAAK,EAAEC,OAAO,CAAC;QACrD,IAAI,CAACH,MAAM,CAACG,OAAO,GAAGA,OAAO;QAC7B,IAAI,IAAI,CAAC9C,OAAO,EAAE;UACjB,IAAI,CAACA,OAAO,CAACgD,kBAAkB,CAAC,IAAI,CAACL,MAAM,CAAC;;;IAG/C;;;;;;WAEA,SAAApD,CAAA;MACC,IAAI,CAACiD,QAAQ,EAAE,CAACS,KAAK,GAAG,IAAI;IAC7B;;;;;;WAEA,SAAA1D,CAAA;MACC,IAAI,CAAC2D,gBAAgB,EAAE;IACxB;;;;;;WAEA,SAAA3D,CAAA;MACC,IAAI,CAAC4D,YAAY,GAAGJ,SAAS;IAC9B;;;;;;WAEA,SAAAxD,CAAkB6D,OAAgB,GAAU;;;;;;WAE5C,SAAA7D,CAAA;MACC,IAAI,IAAI,CAAC8D,QAAQ,KAAKN,SAAS,EAAE;QAChC,IAAI,CAACM,QAAQ,GAAG,IAAI,CAACf,SAAS,CAACgB,OAAO,CAAC,IAAI,CAAC;;MAG7C,OAAO,IAAI,CAACD,QAAQ;IACrB;;;;;;WAEA,SAAA9D,CAAA;MACC,OAAO,IAAI,CAACQ,WAAW,IAAI,IAAI,CAACuC,SAAS,CAACiB,iBAAiB,GAAG,CAAC;IAChE;;;;;;WAEA,SAAAhE,CAAA;MACC,OAAO,IAAI,CAACiE,cAAc,EAAE;IAC7B;;;;;;WAEA,SAAAjE,CAAgBkE,KAA0B;MACzC,SAAU;QACT,IAAIA,KAAK,KAAK,IAAI,EAAE;UACnB,OAAO,IAAI;SAEX,MAAM,IAAIA,KAAK,CAACzD,OAAO,EAAE;UACzByD,KAAK,GAAGA,KAAK,CAACzD,OAAO;SAErB,MAAM;UACN,OAAO,KAAK;;;IAGf;;;;;;WAEA,SAAAT,CAASmE,KAAa;MACrB,OAAO,IAAI,CAACC,OAAO,CAACC,KAAK,CAACF,KAAK,CAAC;IACjC;;;;;;WAEA,SAAAnE,CAAQmE,KAAa;MACpB,OAAO,IAAI,CAACC,OAAO,CAACE,YAAY,CAACH,KAAK,CAAC;IACxC;;;;;;WAEA,SAAAnE,CAAA;MACC,IAAI,CAACuE,QAAQ,CAACC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACC,KAAK,CAACC,CAAC,EAAE,IAAI,CAACD,KAAK,CAACE,CAAC,EAAE,IAAI,CAACC,KAAK,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG,EAAE,IAAI,CAACC,KAAK,CAAC;MACpG,OAAO,IAAI,CAACR,QAAQ;IACrB;;;;;;WAEA,SAAAvE,CAAA;MACC,IAAI,CAAC,IAAI,CAAC4D,YAAY,EAAE;QAEvB,IAAMoB,EAAE,GAAG,QAAQ;QACnB,IAAI,CAACpB,YAAY,GAAG;UACnBqB,IAAI,EAAED,EAAE;UACRE,GAAG,EAAEF,EAAE;UACPG,KAAK,EAAE,CAACH,EAAE;UACVI,MAAM,EAAE,CAACJ;SACT;QAED,IAAI,CAACK,UAAU,CAAC,IAAI,CAACzB,YAAY,CAAC;;MAEnC,OAAO,IAAI,CAACA,YAAY;IACzB;;;;;;WAEA,SAAA5D,CAAkBsF,MAAe;MAChC,IAAI,CAACC,UAAU,EAAE;MAEjB,IAAMC,MAAM,GAAG,IAAI,CAACC,cAAc,EAAE;MAEpC,IAAMC,EAAE,GAAGF,MAAM,CAACnB,KAAK,CAAC;QAAEK,CAAC,EAAEY,MAAM,CAACL,IAAI;QAAEN,CAAC,EAAEW,MAAM,CAACJ;MAAG,CAAE,CAAC;MAC1D,IAAMS,EAAE,GAAGH,MAAM,CAACnB,KAAK,CAAC;QAAEK,CAAC,EAAEY,MAAM,CAACH,KAAK;QAAER,CAAC,EAAEW,MAAM,CAACJ;MAAG,CAAE,CAAC;MAC3D,IAAMU,EAAE,GAAGJ,MAAM,CAACnB,KAAK,CAAC;QAAEK,CAAC,EAAEY,MAAM,CAACH,KAAK;QAAER,CAAC,EAAEW,MAAM,CAACF;MAAM,CAAE,CAAC;MAC9D,IAAMS,EAAE,GAAGL,MAAM,CAACnB,KAAK,CAAC;QAAEK,CAAC,EAAEY,MAAM,CAACL,IAAI;QAAEN,CAAC,EAAEW,MAAM,CAACF;MAAM,CAAE,CAAC;MAE7D,OAAO;QACNH,IAAI,EAAEJ,IAAI,CAACiB,GAAG,CAACJ,EAAE,CAAChB,CAAC,EAAEiB,EAAE,CAACjB,CAAC,EAAEkB,EAAE,CAAClB,CAAC,EAAEmB,EAAE,CAACnB,CAAC,CAAC;QACtCQ,GAAG,EAAEL,IAAI,CAACiB,GAAG,CAACJ,EAAE,CAACf,CAAC,EAAEgB,EAAE,CAAChB,CAAC,EAAEiB,EAAE,CAACjB,CAAC,EAAEkB,EAAE,CAAClB,CAAC,CAAC;QACrCQ,KAAK,EAAEN,IAAI,CAACkB,GAAG,CAACL,EAAE,CAAChB,CAAC,EAAEiB,EAAE,CAACjB,CAAC,EAAEkB,EAAE,CAAClB,CAAC,EAAEmB,EAAE,CAACnB,CAAC,CAAC;QACvCU,MAAM,EAAEP,IAAI,CAACkB,GAAG,CAACL,EAAE,CAACf,CAAC,EAAEgB,EAAE,CAAChB,CAAC,EAAEiB,EAAE,CAACjB,CAAC,EAAEkB,EAAE,CAAClB,CAAC;OACvC;IACF;;;;;;WAEA,SAAA3E,CAAyCgG,GAAQ,EAAEC,QAAwD,EAAExE,OAAW;MACvH,IAAI,IAAI,CAACjB,WAAW,EAAE;QACrB,OAAO,IAAI,CAACuC,SAAS,CAACmD,SAAS,CAAC,IAAI,EAAEF,GAAG,EAAEC,QAAQ,EAAExE,OAAO,CAAC;OAE7D,MAAM;QACN,OAAO,IAAIzC,QAAQ,CAAC,aAAQ,CAAC,CAAC;;IAEhC;;;;;;WAEA,SAAAgB,CAAA;MACC;MACA,IAAI,CAACmG,YAAY,CAAC3B,YAAY,CAC7B,IAAI,CAACE,CAAC,EACN,IAAI,CAACC,CAAC,EACN,IAAI,CAACF,KAAK,CAACC,CAAC,EACZ,IAAI,CAACD,KAAK,CAACE,CAAC;MACZ;MACA,IAAI,CAACC,KAAK,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG,EAC1B,IAAI,CAACC,KAAK,CACV;MAED,IAAI,CAACX,OAAO,CAACgC,QAAQ,CAAC,IAAI,CAACD,YAAY,CAAC;MAExC,IAAI,IAAI,CAAC1F,OAAO,EAAE;QACjB;QACA,IAAI,CAAC2D,OAAO,CAACiC,OAAO,CAAC,IAAI,CAAC5F,OAAO,CAAC2D,OAAO,CAAC;;IAE5C;;;;;;WAEA,SAAApE,CAAkByB,OAAiC,EAAE6E,UAAkB;MACtE,IAAMC,CAAC,GAAG,IAAI,CAACnC,OAAO;MACtB3C,OAAO,CAAC+C,YAAY,CACnB+B,CAAC,CAACC,CAAC,GAAGF,UAAU,EAChBC,CAAC,CAACE,CAAC,GAAGH,UAAU,EAChBC,CAAC,CAACG,CAAC,GAAGJ,UAAU,EAChBC,CAAC,CAACI,CAAC,GAAGL,UAAU,EAChBC,CAAC,CAACK,EAAE,GAAGN,UAAU,EACjBC,CAAC,CAACM,EAAE,GAAGP,UAAU,CACjB;IACF;;;;;;WAEA,SAAAtG,CAAc8G,WAAwB;MAAtC,IAAAjE,KAAA;MACC,IAAI,IAAI,CAACU,OAAO,KAAK,IAAI,CAACwD,UAAU,KAAK,KAAK,IAAI,CAAC,IAAI,CAAChE,SAAS,CAACiE,YAAY,CAAC,EAAE;QAChF,IAAI,CAACzB,UAAU,EAAE;QAEjB,IAAM0B,YAAU,GAAG,IAAI,CAAClE,SAAS,CAACuD,UAAU;QAE5C,IAAMY,MAAM,GAAG,IAAI,CAACnE,SAAS,CAACmE,MAAM;QACpC,IAAMC,YAAY,GAAG,IAAI,CAACpE,SAAS,CAACqE,aAAa;QAEjD,IAAMC,MAAI,GAAG,IAAI,CAACC,IAAI;QACtB,IAAID,MAAI,EAAE;UACTA,MAAI,CAAC9B,UAAU,EAAE;;QAGlBnG,MAAM,CAAC4B,IAAI,CAACkG,MAAM,EAAE,UAACK,KAAK;UACzB,IAAIA,KAAK,EAAE;YACVA,KAAK,CAAC9F,OAAO,CAAC+F,IAAI,EAAE;YAEpB;YACA,IAAIH,MAAI,EAAE;cACTA,MAAI,CAACI,UAAU,CAACF,KAAK,CAAC9F,OAAO,EAAE8F,KAAK,CAACxC,KAAK,IAAIkC,YAAU,CAAC;cACzDI,MAAI,CAACK,QAAQ,CAACH,KAAK,CAAC9F,OAAO,CAAC;cAC5B8F,KAAK,CAAC9F,OAAO,CAACkG,IAAI,EAAE;;YAGrBJ,KAAK,CAAC9F,OAAO,CAACmG,WAAW,GAAG/E,KAAI,CAACgF,aAAa,GAAGhF,KAAI,CAACiF,KAAK;YAE3DjF,KAAI,CAAC4E,UAAU,CAACF,KAAK,CAAC9F,OAAO,EAAE8F,KAAK,CAACxC,KAAK,IAAIkC,YAAU,CAAC;YAEzD,IAAIpE,KAAI,CAACkF,MAAM,EAAE;cAChBR,KAAK,CAAC9F,OAAO,CAACsG,MAAM,GAAGlF,KAAI,CAACkF,MAAM;;;QAGrC,CAAC,CAAC;QAEFZ,YAAY,CAACK,IAAI,EAAE;QAEnB;QACA,IAAIH,MAAI,IAAI,IAAI,CAACW,kBAAkB,EAAE,EAAE;UACtCX,MAAI,CAACI,UAAU,CAACN,YAAY,EAAEF,YAAU,CAAC;UACzCI,MAAI,CAACK,QAAQ,CAACP,YAAY,CAAC;UAC3BA,YAAY,CAACQ,IAAI,EAAE;;QAGpB,IAAI,CAACF,UAAU,CAACN,YAAY,EAAEF,YAAU,CAAC;QAEzC,IAAI,CAACgB,OAAO,CAACnB,WAAW,CAAC;QAEzBK,YAAY,CAACe,OAAO,EAAE;QAEtB9I,MAAM,CAAC4B,IAAI,CAACkG,MAAM,EAAE,UAACK,KAAK;UACzB,IAAIA,KAAK,EAAE;YACVA,KAAK,CAAC9F,OAAO,CAACyG,OAAO,EAAE;;QAEzB,CAAC,CAAC;;IAEJ;;;;;;WAEA,SAAAlI,CAAkB8G,WAAwB;MACzC,IAAI,IAAI,CAACC,UAAU,KAAK,KAAK,EAAE;QAC9B,IAAMQ,KAAK,GAAG,IAAI,CAACnE,MAAM,IAAI0D,WAAW;QACxCS,KAAK,CAACY,OAAO,GAAG,IAAI;;IAEtB;;;;;;WAEA,SAAAnI,CAAA;MACC,OAAO,IAAI,CAAC+C,SAAS,CAACqF,SAAS,CAACC,GAAG,CAAC,IAAI,CAAC;IAC1C;;;;;;WAEA,SAAArI,CAAA;MAAA,IAAA6C,KAAA;MACC,OAAO,IAAI,CAACE,SAAS,CAACuF,SAAS,CAACC,IAAI,CAAC,UAAC7D,CAAC;QAAK,OAAAA,CAAC,CAAC1E,KAAK,KAAK6C,KAAI;MAAhB,CAAgB,CAAC;IAC9D;;;;;;WAEA,SAAA7C,CAAA;MACC,IAAI,CAACiD,QAAQ,EAAE,CAACS,KAAK,GAAG,IAAI;IAC7B;;EAED,OAAAjB,mBAAC;AAAD,CAAC,CA7RwCzD,QAAQ;;AA+RjD;;;AAGA,IAAAwJ,eAAA,0BAAA9F,MAAA;EAAqCC,SAAA,CAAA6F,eAAA,EAAA9F,MAAA;EAArC,SAAA8F,gBAAA;IAAA,IAAA3F,KAAA,GAAAH,MAAA,aAAAA,MAAA,CAAA2B,KAAA,OAAAoE,SAAA;IACCvG,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAsC;;IACtCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAEAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAkD;;;EAyEnD;;;;;WAvEC,SAAA7C,CAAA;MACC,OAAO,IAAI,CAAC0I,mBAAmB,IAAIhG,MAAA,CAAAN,SAAA,CAAM4F,kBAAkB,CAAAlF,IAAA,MAAE;IAC9D;;;;;;WAEA,SAAA9C,CAASkE,KAA0B;MAClCA,KAAK,CAACzD,OAAO,GAAG,IAAI;MACpB,IAAI,CAACkI,SAAS,CAACC,IAAI,CAAC1E,KAAK,CAAC;MAC1B,IAAIA,KAAK,CAACd,MAAM,EAAE;QACjB,IAAI,CAACK,kBAAkB,CAACS,KAAK,CAACd,MAAM,CAAC;;IAEvC;;;;;;WAEA,SAAApD,CAAWkE,KAA0B,EAAE2E,KAAa;MACnD3E,KAAK,CAACzD,OAAO,GAAG,IAAI;MACpB,IAAI,CAACkI,SAAS,CAACG,MAAM,CAACD,KAAK,EAAE,CAAC,EAAE3E,KAAK,CAAC;MACtC,IAAIA,KAAK,CAACd,MAAM,EAAE;QACjB,IAAI,CAACK,kBAAkB,CAACS,KAAK,CAACd,MAAM,CAAC;;IAEvC;;;;;;WAEA,SAAApD,CAAYkE,KAA0B;MACrCA,KAAK,CAACzD,OAAO,GAAG+C,SAAS;MACzBpE,MAAM,CAAC2J,WAAW,CAAC,IAAI,CAACJ,SAAS,EAAEzE,KAAK,CAAC;IAC1C;;;;;;WAEA,SAAAlE,CAAkB8G,WAAwB;MAA1C,IAAAjE,KAAA;MACCH,MAAA,CAAAN,SAAA,CAAM6F,OAAO,CAAAnF,IAAA,OAACgE,WAAW,CAAC;MAE1B,IAAMlE,QAAQ,GAAG,IAAI,CAACG,SAAS;MAE/B,IAAI,IAAI,CAACvC,WAAW,IAAI,IAAI,CAACkI,mBAAmB,EAAE;QACjD,EAAE9F,QAAQ,CAACoB,iBAAiB;;MAG7B,IAAMuD,KAAK,GAAG,IAAI,CAACnE,MAAM,IAAI0D,WAAW;MAExC1H,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC2H,SAAS,EAAE,UAACzE,KAAK;QACjCA,KAAK,CAAC2D,aAAa,GAAGhF,KAAI,CAACgF,aAAa,GAAGhF,KAAI,CAACiF,KAAK;QACrD5D,KAAK,CAAC8E,MAAM,CAACzB,KAAK,CAAC;MACpB,CAAC,CAAC;MAEF,IAAI,IAAI,CAAC/G,WAAW,IAAI,IAAI,CAACkI,mBAAmB,EAAE;QACjD,EAAE9F,QAAQ,CAACoB,iBAAiB;;IAE9B;;;;;;WAEA,SAAAhE,CAAmBuH,KAAkB;MACpC,IAAI,CAAC,IAAI,CAAC0B,YAAY,EAAE;QACvB,IAAI,CAACA,YAAY,GAAG,EAAE;;MAEvB7J,MAAM,CAAC8J,OAAO,CAAC,IAAI,CAACD,YAAY,EAAE1B,KAAK,CAAC;MACxC,IAAI,IAAI,CAAC9G,OAAO,EAAE;QACjB,IAAI,CAACA,OAAO,CAACgD,kBAAkB,CAAC8D,KAAK,CAAC;;IAExC;;;;;;WAEA,SAAAvH,CAAsBmJ,IAAqB;MAArB,IAAAA,IAAA;QAAAA,IAAA,QAAqB;MAAA;MAC1CzG,MAAA,CAAAN,SAAA,CAAMgH,cAAc,CAAAtG,IAAA,MAAE;MACtB,IAAIqG,IAAI,IAAI,IAAI,CAACF,YAAY,EAAE;QAC9B7J,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAACiI,YAAY,EAAE,UAAC1B,KAAK;UAAK,OAAAA,KAAK,CAAC7D,KAAK,GAAG,IAAI;QAAlB,CAAkB,CAAC;;IAE/D;;;;;;WAEA,SAAA1D,CAAA;MACC0C,MAAA,CAAAN,SAAA,CAAMiH,OAAO,CAAAvG,IAAA,MAAE;MACf,IAAI,IAAI,CAACmG,YAAY,EAAE;QACtB7J,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAACiI,YAAY,EAAE,UAAC1B,KAAK;UACpCA,KAAK,CAAC7D,KAAK,GAAG,IAAI;QACnB,CAAC,CAAC;;IAEJ;;EACD,OAAA8E,eAAC;AAAD,CAAC,CA7EoC/F,mBAAmB;;AA+ExD;;;AAGA,SAAS6G,QAAQA,CAAChE,MAAe,EAAEnB,KAAa;EAC/CmB,MAAM,CAACL,IAAI,GAAGJ,IAAI,CAACiB,GAAG,CAACR,MAAM,CAACL,IAAI,EAAEd,KAAK,CAACO,CAAC,CAAC;EAC5CY,MAAM,CAACJ,GAAG,GAAGL,IAAI,CAACiB,GAAG,CAACR,MAAM,CAACJ,GAAG,EAAEf,KAAK,CAACQ,CAAC,CAAC;EAC1CW,MAAM,CAACH,KAAK,GAAGN,IAAI,CAACkB,GAAG,CAACT,MAAM,CAACH,KAAK,EAAEhB,KAAK,CAACO,CAAC,CAAC;EAC9CY,MAAM,CAACF,MAAM,GAAGP,IAAI,CAACkB,GAAG,CAACT,MAAM,CAACF,MAAM,EAAEjB,KAAK,CAACQ,CAAC,CAAC;AACjD;AAEA;;;AAGA,IAAA4E,EAAA;EAAA,SAAAA,GAAA,GAMA;;;;;WALC,SAAAvJ,CAAgBwJ,QAAkC,EAAEC,WAA+B,GAAU;;;;;;WAE7F,SAAAzJ,CAAYwJ,QAAkC,GAAU;;;;;;WAExD,SAAAxJ,CAAiB6D,OAAgB,GAAU;;EAC5C,OAAA0F,EAAC;AAAD,CAAC,CAND;AAQA;;;AAGA,IAAAG,SAAA,0BAAAhH,MAAA;EAAwBC,SAAA,CAAA+G,SAAA,EAAAhH,MAAA;EACvB,SAAAgH,UAAmBC,KAA8C;IAAjE,IAAA9G,KAAA,GAAqEH,MAAA,CAAAI,IAAA,MAAO;;;;;aAAzD6G;;;EAA2D;;;;;WAE9E,SAAA3J,CAAgByB,OAAiC,EAAEmI,UAA8B;MAChF,IAAIA,UAAU,KAAKpG,SAAS,EAAE;QAC7B/B,OAAO,CAACoI,SAAS,GAAGD,UAAU;OAE9B,MAAM;QACNnI,OAAO,CAACoI,SAAS,GAAG,IAAI,CAACF,KAAK;;IAEhC;;EACD,OAAAD,SAAC;AAAD,CAAC,CAXuBH,EAAE;AAa1B;;;AAGA,IAAAO,OAAA,0BAAApH,MAAA;EAAsBC,SAAA,CAAAmH,OAAA,EAAApH,MAAA;EACrB,SAAAoH,QAAmBC,WAAoB;IAAvC,IAAAlH,KAAA,GAA2CH,MAAA,CAAAI,IAAA,MAAO;;;;;aAA/BiH;;;EAAiC;;;;;WACpD,SAAA/J,CAAgByB,OAAiC,EAAEgI,WAA+B;MACjFhI,OAAO,CAACuI,IAAI,EAAE;MACd,IAAI,IAAI,CAACD,WAAW,EAAE;QACrBtI,OAAO,CAACwI,WAAW,GAAG,EAAE;QACxBxI,OAAO,CAACyI,UAAU,GAAG,CAAC;QACtBzI,OAAO,CAAC0I,aAAa,GAAG,CAAC;QACzB1I,OAAO,CAAC2I,aAAa,GAAG,CAAC;;IAE3B;;EACD,OAAAN,OAAC;AAAD,CAAC,CAXqBP,EAAE;AAaxB;;;AAGA,IAAAc,SAAA,0BAAA3H,MAAA;EAAwBC,SAAA,CAAA0H,SAAA,EAAA3H,MAAA;EAAxB,SAAA2H,UAAA;;EAIA;;;;;WAHC,SAAArK,CAAgByB,OAAiC,EAAEgI,WAA+B;MACjFhI,OAAO,CAAC6I,MAAM,EAAE;IACjB;;EACD,OAAAD,SAAC;AAAD,CAAC,CAJuBd,EAAE;AAM1B;;;AAGA,IAAAgB,SAAA,0BAAA7H,MAAA;EAAwBC,SAAA,CAAA4H,SAAA,EAAA7H,MAAA;EACvB,SAAA6H,UAAmBhJ,KAAa,EAASoI,KAA8C;IAAvF,IAAA9G,KAAA,GAA2FH,MAAA,CAAAI,IAAA,MAAO;;;;;aAA/EvB;;;;;;aAAsBoI;;;EAA2D;;;;;WAEpG,SAAA3J,CAAgByB,OAAiC,EAAEmI,UAA8B;MAChF,IAAIA,UAAU,KAAKpG,SAAS,EAAE;QAC7B/B,OAAO,CAAC+I,WAAW,GAAGZ,UAAU;OAEhC,MAAM;QACNnI,OAAO,CAAC+I,WAAW,GAAG,IAAI,CAACb,KAAK;;MAGjClI,OAAO,CAACgJ,SAAS,GAAG,IAAI,CAAClJ,KAAK;IAC/B;;EACD,OAAAgJ,SAAC;AAAD,CAAC,CAbuBhB,EAAE;AAe1B;;;AAGA,IAAAmB,QAAA,0BAAAhI,MAAA;EAAuBC,SAAA,CAAA+H,QAAA,EAAAhI,MAAA;EACtB,SAAAgI,SAAmBC,IAAc;IAAjC,IAAA9H,KAAA,GAAqCH,MAAA,CAAAI,IAAA,MAAO;;;;;aAAzB6H;;;EAA2B;;;;;WAE9C,SAAA3K,CAAgByB,OAAiC,EAAEgI,WAA+B;MACjFhI,OAAO,CAACmJ,WAAW,CAAC,IAAI,CAACD,IAAI,CAAC;IAC/B;;EACD,OAAAD,QAAC;AAAD,CAAC,CANsBnB,EAAE;AAQzB;;;AAGA,IAAAsB,cAAA,0BAAAnI,MAAA;EAA6BC,SAAA,CAAAkI,cAAA,EAAAnI,MAAA;EAC5B,SAAAmI,eAAmBC,UAAkB;IAArC,IAAAjI,KAAA,GAAyCH,MAAA,CAAAI,IAAA,MAAO;;;;;aAA7BgI;;;EAA+B;;;;;WAElD,SAAA9K,CAAgByB,OAAiC,EAAEgI,WAA+B;MACjFhI,OAAO,CAACsJ,cAAc,GAAG,IAAI,CAACD,UAAU;IACzC;;EACD,OAAAD,cAAC;AAAD,CAAC,CAN4BtB,EAAE;AAQ/B;;;AAGA,IAAAyB,QAAA,0BAAAtI,MAAA;EAAuBC,SAAA,CAAAqI,QAAA,EAAAtI,MAAA;EACtB,SAAAsI,SAAmBtG,CAAS,EAASC,CAAS,EAASpD,KAAa,EAASC,MAAc;IAA3F,IAAAqB,KAAA,GAA+FH,MAAA,CAAAI,IAAA,MAAO;;;;;aAAnF4B;;;;;;aAAkBC;;;;;;aAAkBpD;;;;;;aAAsBC;;;EAA2B;;;;;WAExG,SAAAxB,CAAYyB,OAAiC;MAC5CA,OAAO,CAACwJ,IAAI,CAAC,IAAI,CAACvG,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACpD,KAAK,EAAE,IAAI,CAACC,MAAM,CAAC;IACtD;;;;;;WAEA,SAAAxB,CAAiBsF,MAAe;MAC/B,IAAM4F,CAAC,GAAG,IAAI,CAACxG,CAAC;MAChB,IAAMyG,CAAC,GAAG,IAAI,CAACxG,CAAC;MAChB,IAAMyG,CAAC,GAAGF,CAAC,GAAG,IAAI,CAAC3J,KAAK;MACxB,IAAMkF,CAAC,GAAG0E,CAAC,GAAG,IAAI,CAAC3J,MAAM;MAEzB8H,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAEwG,CAAC;QAAEvG,CAAC,EAAEwG;MAAC,CAAE,CAAC;MAChC7B,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE0G,CAAC;QAAEzG,CAAC,EAAEwG;MAAC,CAAE,CAAC;MAChC7B,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAEwG,CAAC;QAAEvG,CAAC,EAAE8B;MAAC,CAAE,CAAC;MAChC6C,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE0G,CAAC;QAAEzG,CAAC,EAAE8B;MAAC,CAAE,CAAC;IACjC;;EACD,OAAAuE,QAAC;AAAD,CAAC,CAlBsBzB,EAAE;AAoBzB;;;AAGA,IAAA8B,UAAA,0BAAA3I,MAAA;EAAyBC,SAAA,CAAA0I,UAAA,EAAA3I,MAAA;EACxB,SAAA2I,WAAmB3G,CAAS,EAASC,CAAS,EAAS2G,MAAc;IAArE,IAAAzI,KAAA,GAAyEH,MAAA,CAAAI,IAAA,MAAO;;;;;aAA7D4B;;;;;;aAAkBC;;;;;;aAAkB2G;;;EAA2B;;;;;WAElF,SAAAtL,CAAYyB,OAAiC;MAC5CA,OAAO,CAAC8J,MAAM,CAAC,IAAI,CAAC7G,CAAC,GAAG,IAAI,CAAC4G,MAAM,EAAE,IAAI,CAAC3G,CAAC,CAAC;MAC5ClD,OAAO,CAAC+J,GAAG,CAAC,IAAI,CAAC9G,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAAC2G,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGzG,IAAI,CAACC,EAAE,CAAC;IACzD;;EAEA;;;;;WACA,SAAA9E,CAAiBsF,MAAe;MAC/BgE,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC4G,MAAM;QAAE3G,CAAC,EAAE,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC2G;MAAM,CAAE,CAAC;MACtEhC,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC4G,MAAM;QAAE3G,CAAC,EAAE,IAAI,CAACA,CAAC,GAAG,IAAI,CAAC2G;MAAM,CAAE,CAAC;IACvE;;EACD,OAAAD,UAAC;AAAD,CAAC,CAbwB9B,EAAE;AAe3B;;;AAGA,IAAAkC,GAAA,0BAAA/I,MAAA;EAAkBC,SAAA,CAAA8I,GAAA,EAAA/I,MAAA;EACjB,SAAA+I,IACQC,EAAU,EACVC,EAAU,EACVL,MAAc,EACdM,UAAkB,EAClBC,QAAgB,EAChBC,aAAsB;IAN9B,IAAAjJ,KAAA,GAOIH,MAAA,CAAAI,IAAA,MAAO;;;;;aANH4I;;;;;;aACAC;;;;;;aACAL;;;;;;aACAM;;;;;;aACAC;;;;;;aACAC;;;EACK;;;;;WAEb,SAAA9L,CAAYyB,OAAiC;MAC5C,IAAI,IAAI,CAAC6J,MAAM,GAAG,CAAC,EAAE;QACpB7J,OAAO,CAAC+J,GAAG,CAAC,IAAI,CAACE,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACL,MAAM,EAAE,IAAI,CAACM,UAAU,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,aAAa,CAAC;;IAEhG;;;;;;WAEA,SAAA9L,CAAiBsF,MAAe;MAC/B,IAAIyG,SAAS,GAAGzM,KAAK,CAAC0M,YAAY,CAAC,IAAI,CAACN,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,UAAU,GAAGtM,KAAK,CAAC2M,OAAO,EAAE,IAAI,CAACJ,QAAQ,GAAGvM,KAAK,CAAC2M,OAAO,EAAE,IAAI,CAACX,MAAM,CAAC;MACjIhC,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAEqH,SAAS,CAAC9G,IAAI;QAAEN,CAAC,EAAEoH,SAAS,CAAC7G;MAAG,CAAE,CAAC;MACzDoE,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAEqH,SAAS,CAAC5G,KAAK;QAAER,CAAC,EAAEoH,SAAS,CAAC3G;MAAM,CAAE,CAAC;IAC9D;;EACD,OAAAqG,GAAC;AAAD,CAAC,CArBiBlC,EAAE;AAuBpB;;;AAGA,IAAA2C,KAAA,0BAAAxJ,MAAA;EAAoBC,SAAA,CAAAuJ,KAAA,EAAAxJ,MAAA;EACnB,SAAAwJ,MACQC,EAAU,EACVC,EAAU,EACVC,EAAU,EACVC,EAAU,EACVhB,MAAc;IALtB,IAAAzI,KAAA,GAMIH,MAAA,CAAAI,IAAA,MAAO;;;;;aALHqJ;;;;;;aACAC;;;;;;aACAC;;;;;;aACAC;;;;;;aACAhB;;;EACK;;;;;WAEb,SAAAtL,CAAYyB,OAAiC;MAC5C,IAAI,IAAI,CAAC6J,MAAM,GAAG,CAAC,EAAE;QACpB7J,OAAO,CAAC8K,KAAK,CAAC,IAAI,CAACJ,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAACC,EAAE,EAAE,IAAI,CAAChB,MAAM,CAAC;;IAEhE;;EAEA;;;;;WACA,SAAAtL,CAAiB6D,OAAgB;MAChC;;;;;;;;;;;;;;;;;;;IAAA;;EA0BF,OAAAqI,KAAC;AAAD,CAAC,CA3CmB3C,EAAE;AA6CtB;;;AAGA,IAAAiD,MAAA,0BAAA9J,MAAA;EAAqBC,SAAA,CAAA6J,MAAA,EAAA9J,MAAA;EACpB,SAAA8J,OAAmB9H,CAAS,EAASC,CAAS;IAA9C,IAAA9B,KAAA,GAAkDH,MAAA,CAAAI,IAAA,MAAO;;;;;aAAtC4B;;;;;;aAAkBC;;;EAAsB;;;;;WAE3D,SAAA3E,CAAYyB,OAAiC;MAC5CA,OAAO,CAACgL,MAAM,CAAC,IAAI,CAAC/H,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC;IAC/B;;;;;;WAEA,SAAA3E,CAAiBsF,MAAe;MAC/BgE,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE,IAAI,CAACA,CAAC;QAAEC,CAAC,EAAE,IAAI,CAACA;MAAC,CAAE,CAAC;IAC3C;;EACD,OAAA6H,MAAC;AAAD,CAAC,CAVoBjD,EAAE;AAYvB;;;AAGA,IAAAmD,MAAA,0BAAAhK,MAAA;EAAqBC,SAAA,CAAA+J,MAAA,EAAAhK,MAAA;EACpB,SAAAgK,OAAmBhI,CAAS,EAASC,CAAS;IAA9C,IAAA9B,KAAA,GAAkDH,MAAA,CAAAI,IAAA,MAAO;;;;;aAAtC4B;;;;;;aAAkBC;;;EAAsB;;;;;WAE3D,SAAA3E,CAAYyB,OAAiC;MAC5CA,OAAO,CAAC8J,MAAM,CAAC,IAAI,CAAC7G,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC;IAC/B;;;;;;WAEA,SAAA3E,CAAiBsF,MAAe;MAC/BgE,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE,IAAI,CAACA,CAAC;QAAEC,CAAC,EAAE,IAAI,CAACA;MAAC,CAAE,CAAC;IAC3C;;EACD,OAAA+H,MAAC;AAAD,CAAC,CAVoBnD,EAAE;AAYvB;;;AAGA,IAAAoD,SAAA,0BAAAjK,MAAA;EAAwBC,SAAA,CAAAgK,SAAA,EAAAjK,MAAA;EAAxB,SAAAiK,UAAA;;EAIA;;;;;WAHC,SAAA3M,CAAYyB,OAAiC;MAC5CA,OAAO,CAACmL,SAAS,EAAE;IACpB;;EACD,OAAAD,SAAC;AAAD,CAAC,CAJuBpD,EAAE;AAM1B;;;AAGA,IAAAsD,aAAA,0BAAAnK,MAAA;EAA4BC,SAAA,CAAAkK,aAAA,EAAAnK,MAAA;EAC3B,SAAAmK,cACQC,GAAW,EACXC,GAAW,EACXC,IAAY,EACZC,IAAY,EACZC,GAAW,EACXC,GAAW;IANnB,IAAAtK,KAAA,GAOIH,MAAA,CAAAI,IAAA,MAAO;;;;;aANHgK;;;;;;aACAC;;;;;;aACAC;;;;;;aACAC;;;;;;aACAC;;;;;;aACAC;;;EACK;;;;;WAEb,SAAAnN,CAAYyB,OAAiC;MAC5CA,OAAO,CAAC2L,aAAa,CAAC,IAAI,CAACN,GAAG,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC;IACpF;;EAEA;;;;;WACA,SAAAnN,CAAiBsF,MAAe;MAC/BgE,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE,IAAI,CAACoI,GAAG;QAAEnI,CAAC,EAAE,IAAI,CAACoI;MAAG,CAAE,CAAC;MAC9CzD,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE,IAAI,CAACsI,IAAI;QAAErI,CAAC,EAAE,IAAI,CAACsI;MAAI,CAAE,CAAC;MAChD3D,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE,IAAI,CAACwI,GAAG;QAAEvI,CAAC,EAAE,IAAI,CAACwI;MAAG,CAAE,CAAC;IAC/C;;EACD,OAAAN,aAAC;AAAD,CAAC,CApB2BtD,EAAE;AAsB9B;;;AAGA,IAAA8D,gBAAA,0BAAA3K,MAAA;EAA+BC,SAAA,CAAA0K,gBAAA,EAAA3K,MAAA;EAC9B,SAAA2K,iBACQP,GAAW,EACXC,GAAW,EACXG,GAAW,EACXC,GAAW;IAJnB,IAAAtK,KAAA,GAKIH,MAAA,CAAAI,IAAA,MAAO;;;;;aAJHgK;;;;;;aACAC;;;;;;aACAG;;;;;;aACAC;;;EACK;;;;;WAEb,SAAAnN,CAAYyB,OAAiC;MAC5CA,OAAO,CAAC6L,gBAAgB,CAAC,IAAI,CAACR,GAAG,EAAE,IAAI,CAACC,GAAG,EAAE,IAAI,CAACG,GAAG,EAAE,IAAI,CAACC,GAAG,CAAC;IACjE;;EAEA;;;;;WACA,SAAAnN,CAAiBsF,MAAe;MAC/BgE,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE,IAAI,CAACoI,GAAG;QAAEnI,CAAC,EAAE,IAAI,CAACoI;MAAG,CAAE,CAAC;MAC9CzD,QAAQ,CAAChE,MAAM,EAAE;QAAEZ,CAAC,EAAE,IAAI,CAACwI,GAAG;QAAEvI,CAAC,EAAE,IAAI,CAACwI;MAAG,CAAE,CAAC;IAC/C;;EACD,OAAAE,gBAAC;AAAD,CAAC,CAjB8B9D,EAAE;AAmBjC;;;AAGA,IAAAgE,MAAA,0BAAA7K,MAAA;EAAqBC,SAAA,CAAA4K,MAAA,EAAA7K,MAAA;EACpB,SAAA6K,OACQ5D,KAAa,EACb6D,IAAa,EACbC,OAAgB,EAChBC,OAAgB,EAChBC,OAAgB;IALxB,IAAA9K,KAAA,GAMIH,MAAA,CAAAI,IAAA,MAAO;;;;;aALH6G;;;;;;aACA6D;;;;;;aACAC;;;;;;aACAC;;;;;;aACAC;;;EACK;;;;;WAEb,SAAA3N,CAAgByB,OAAiC,EAAEgI,WAA+B;MACjF,IAAI,IAAI,CAACkE,OAAO,EAAE;QACjBlM,OAAO,CAACoI,SAAS,GAAG,IAAI,CAACF,KAAK;;MAE/BlI,OAAO,CAACwI,WAAW,GAAG,IAAI,CAACN,KAAK;MAChC,IAAI,IAAI,CAAC6D,IAAI,EAAE;QACd/L,OAAO,CAACyI,UAAU,GAAG,IAAI,CAACsD,IAAI;;MAE/B,IAAI,IAAI,CAACC,OAAO,EAAE;QACjBhM,OAAO,CAAC0I,aAAa,GAAG,IAAI,CAACsD,OAAO;;MAErC,IAAI,IAAI,CAACC,OAAO,EAAE;QACjBjM,OAAO,CAAC2I,aAAa,GAAG,IAAI,CAACsD,OAAO;;IAEtC;;EACD,OAAAH,MAAC;AAAD,CAAC,CAxBoBhE,EAAE;AA2BvB;;;AAGA,IAAAqE,cAAA,0BAAAlL,MAAA;EAAoCC,SAAA,CAAAiL,cAAA,EAAAlL,MAAA;EAApC,SAAAkL,eAAA;IAAA,IAAA/K,KAAA,GAAAH,MAAA,aAAAA,MAAA,CAAA2B,KAAA,OAAAoE,SAAA;IACCvG,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAmC;;IAEnCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA8BnE,SAAS,CAACmP;;IAExC3L,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAiC;;IACjCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;;EAscD;;;;;WApcC,SAAA7C,CAAA;MACC0C,MAAA,CAAAN,SAAA,CAAM0L,KAAK,CAAAhL,IAAA,MAAE;MACb,IAAI,CAACiL,WAAW,CAACC,MAAM,GAAG,CAAC;IAC5B;;;;;;WAEA,SAAAhO,CAAkBiO,EAAM;MACvB,IAAI,CAACF,WAAW,CAACnF,IAAI,CAACqF,EAAE,CAAC;IAC1B;;;;;;WAEA,SAAAjO,CAAU2J,KAA8C,EAAE7B,KAAiB;MAAjB,IAAAA,KAAA;QAAAA,KAAA,IAAiB;MAAA;MAC1E,IAAI,CAACoG,UAAU,GAAGpG,KAAK;MACvB,IAAI6B,KAAK,EAAE;QACV,IAAIA,KAAK,YAAYhL,KAAK,EAAE;UAC3B,IAAI,CAACwP,OAAO,CAAC,IAAIzE,SAAS,CAACC,KAAK,CAACyE,KAAK,CAACtG,KAAK,CAAC,CAAC,CAAC;SAE/C,MAAM;UACN,IAAI,CAACuG,UAAU,GAAG,IAAI;UACtB,IAAI,CAACF,OAAO,CAAC,IAAIzE,SAAS,CAACC,KAAK,CAAC,CAAC;;OAEnC,MAAM;QACN,IAAI,CAACwE,OAAO,CAAC,IAAIzE,SAAS,CAAC,gBAAgB,GAAG5B,KAAK,GAAG,GAAG,CAAC,CAAC;;IAE7D;;;;;;WAEA,SAAA9H,CAAA;MACC,IAAI,CAACmO,OAAO,CAAC,IAAIrE,OAAO,CAAC,IAAI,CAACwE,WAAW,CAAC,CAAC;IAC5C;;;;;;WAEA,SAAAtO,CAAA;MACC,IAAI,CAACmO,OAAO,CAAC,IAAI9D,SAAS,EAAE,CAAC;IAC9B;;;;;;WAEA,SAAArK,CAAUuB,KAAiB,EAAEoI,KAA8C,EAAE7B,KAAiB;MAApF,IAAAvG,KAAA;QAAAA,KAAA,IAAiB;MAAA;MAAkD,IAAAuG,KAAA;QAAAA,KAAA,IAAiB;MAAA;MAC7F,IAAI,CAACyG,YAAY,GAAGzG,KAAK;MACzB,IAAI6B,KAAK,EAAE;QACV,IAAIA,KAAK,YAAYhL,KAAK,EAAE;UAC3B,IAAI,CAACwP,OAAO,CAAC,IAAI5D,SAAS,CAAChJ,KAAK,EAAEoI,KAAK,CAACyE,KAAK,CAACtG,KAAK,CAAC,CAAC,CAAC;SACtD,MAAM;UACN,IAAI,CAACqG,OAAO,CAAC,IAAI5D,SAAS,CAAChJ,KAAK,EAAEoI,KAAK,CAAC,CAAC;;OAE1C,MAAM;QACN,IAAI,CAACwE,OAAO,CAAC,IAAI5D,SAAS,CAAChJ,KAAK,EAAE,gBAAgB,GAAGuG,KAAK,GAAG,GAAG,CAAC,CAAC;;IAEpE;;;;;;WAEA,SAAA9H,CAAY2K,IAAe;MAC1B,IAAI,CAACwD,OAAO,CAAC,IAAIzD,QAAQ,CAACC,IAAI,GAAGA,IAAI,GAAG,EAAE,CAAC,CAAC;IAC7C;;;;;;WAEA,SAAA3K,CAAkB8K,UAAmB;MACpC,IAAI,CAACqD,OAAO,CAAC,IAAItD,cAAc,CAACC,UAAU,IAAI,CAAC,CAAC,CAAC;IAClD;;;;;;WAEA,SAAA9K,CAAS0E,CAAS,EAAEC,CAAS,EAAEpD,KAAa,EAAEC,MAAc;MAC3D,IAAI,CAAC2M,OAAO,CAAC,IAAInD,QAAQ,CAACtG,CAAC,EAAEC,CAAC,EAAEpD,KAAK,EAAEC,MAAM,CAAC,CAAC;IAChD;;;;;;WAEA,SAAAxB,CAAW0E,CAAS,EAAEC,CAAS,EAAE2G,MAAc;MAC9C,IAAI,CAAC6C,OAAO,CAAC,IAAI9C,UAAU,CAAC3G,CAAC,EAAEC,CAAC,EAAE2G,MAAM,CAAC,CAAC;IAC3C;;;;;;WAEA,SAAAtL,CAAI0L,EAAU,EAAEC,EAAU,EAAEL,MAAc,EAAEM,UAAkB,EAAEC,QAAgB,EAAEC,aAA8B;MAA9B,IAAAA,aAAA;QAAAA,aAAA,QAA8B;MAAA;MAC/G,IAAI,CAACqC,OAAO,CAAC,IAAI1C,GAAG,CAACC,EAAE,EAAEC,EAAE,EAAEL,MAAM,EAAEM,UAAU,EAAEC,QAAQ,EAAEC,aAAa,CAAC,CAAC;IAC3E;;;;;;WAEA,SAAA9L,CAAMmM,EAAU,EAAEC,EAAU,EAAEC,EAAU,EAAEC,EAAU,EAAEhB,MAAc;MACnE,IAAI,CAAC6C,OAAO,CAAC,IAAIjC,KAAK,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEhB,MAAM,CAAC,CAAC;IAChD;;;;;;WAEA,SAAAtL,CAAO0E,CAAS,EAAEC,CAAS;MAC1B,IAAI,CAACwJ,OAAO,CAAC,IAAI3B,MAAM,CAAC9H,CAAC,EAAEC,CAAC,CAAC,CAAC;IAC/B;;;;;;WAEA,SAAA3E,CAAO0E,CAAS,EAAEC,CAAS;MAC1B,IAAI,CAACwJ,OAAO,CAAC,IAAIzB,MAAM,CAAChI,CAAC,EAAEC,CAAC,CAAC,CAAC;IAC/B;;;;;;WAEA,SAAA3E,CAAc8M,GAAW,EAAEC,GAAW,EAAEC,IAAY,EAAEC,IAAY,EAAEC,GAAW,EAAEC,GAAW;MAC3F,IAAI,CAACgB,OAAO,CAAC,IAAItB,aAAa,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,CAAC,CAAC;IAChE;;;;;;WAEA,SAAAnN,CAAiB8M,GAAW,EAAEC,GAAW,EAAEG,GAAW,EAAEC,GAAW;MAClE,IAAI,CAACgB,OAAO,CAAC,IAAId,gBAAgB,CAACP,GAAG,EAAEC,GAAG,EAAEG,GAAG,EAAEC,GAAG,CAAC,CAAC;IACvD;;;;;;WAEA,SAAAnN,CAAA;MACC,IAAI,CAACmO,OAAO,CAAC,IAAIxB,SAAS,EAAE,CAAC;IAC9B;;;;;;WAEA,SAAA3M,CAAO2J,KAAY,EAAE6D,IAAa,EAAEC,OAAgB,EAAEC,OAAgB,EAAEC,OAAgB;MACvF,IAAI,CAACW,WAAW,GAAG,IAAI;MACvB,IAAI,CAACH,OAAO,CAAC,IAAIZ,MAAM,CAACI,OAAO,GAAGhE,KAAK,CAACyE,KAAK,CAACT,OAAO,CAAC,GAAGhE,KAAK,CAACyE,KAAK,CAAC,IAAI,CAACF,UAAU,IAAI,IAAI,CAACK,YAAY,CAAC,EAAEf,IAAI,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;IACrI;;EAEA;EACA;;;;;WACA,SAAA1N,CAAQwO,IAAY;MAApB,IAAA3L,KAAA;MACC,IAAI6B,CAAC,GAAG,CAAC;MACT,IAAIC,CAAC,GAAG,CAAC;MACT,IAAI8J,GAAG,GAAkB,IAAI;MAC7B,IAAIC,GAAG,GAAkB,IAAI;MAC7B,IAAIC,IAAI,GAAkB,IAAI;MAC9B,IAAIC,IAAI,GAAkB,IAAI;MAE9B,IAAMC,eAAe,GAAG,qDAAqD;MAC7E,IAAMC,WAAW,GAAG,qHAAqH;MAEzI,IAAIC,KAAK;MAET,OAAO,CAACA,KAAK,GAAGF,eAAe,CAACG,IAAI,CAACR,IAAI,CAAC,MAAM,IAAI,EAAE;QACrD,IAAMS,MAAI,GAAGF,KAAK,CAAC,CAAC,CAAC;QACrB,IAAMG,IAAI,GAAGH,KAAK,CAAC,CAAC,CAAC;QAErB,IAAMI,IAAI,GAAG,EAAE;QAEf,OAAO,CAACJ,KAAK,GAAGD,WAAW,CAACE,IAAI,CAACE,IAAI,CAAC,MAAM,IAAI,EAAE;UACjDC,IAAI,CAACvG,IAAI,CAAC,CAACmG,KAAK,CAAC,CAAC,CAAC,CAAC;;QAGrB;QACA,IAAIE,MAAI,KAAK,GAAG,IAAIA,MAAI,KAAK,GAAG,IAAIA,MAAI,KAAK,GAAG,IAAIA,MAAI,KAAK,GAAG,EAAE;UACjER,GAAG,GAAG,IAAI;UACVC,GAAG,GAAG,IAAI;;QAGX;QACA,IAAIO,MAAI,KAAK,GAAG,IAAIA,MAAI,KAAK,GAAG,IAAIA,MAAI,KAAK,GAAG,IAAIA,MAAI,KAAK,GAAG,EAAE;UACjEN,IAAI,GAAG,IAAI;UACXC,IAAI,GAAG,IAAI;;QAGZ,QAAQK,MAAI;UACX,KAAK,GAAG;YACPnP,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnCtJ,CAAC,GAAGyK,IAAI,CAAC,CAAC,CAAC;YACXxK,CAAC,GAAGwK,IAAI,CAAC,CAAC,CAAC;YACX,IAAI,CAAC5D,MAAM,CAAC7G,CAAC,EAAEC,CAAC,CAAC;YAEjB,KAAK,IAAIvE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxCsE,CAAC,GAAGyK,IAAI,CAAC/O,CAAC,CAAC;cACXuE,CAAC,GAAGwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACf,IAAI,CAACqM,MAAM,CAAC/H,CAAC,EAAEC,CAAC,CAAC;;YAElB;UACD,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnCtJ,CAAC,IAAIyK,IAAI,CAAC,CAAC,CAAC;YACZxK,CAAC,IAAIwK,IAAI,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC5D,MAAM,CAAC7G,CAAC,EAAEC,CAAC,CAAC;YAEjB,KAAK,IAAIvE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxCsE,CAAC,IAAIyK,IAAI,CAAC/O,CAAC,CAAC;cACZuE,CAAC,IAAIwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAChB,IAAI,CAACqM,MAAM,CAAC/H,CAAC,EAAEC,CAAC,CAAC;;YAElB;UAED,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxCsE,CAAC,GAAGyK,IAAI,CAAC/O,CAAC,CAAC;cACXuE,CAAC,GAAGwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACf,IAAI,CAACqM,MAAM,CAAC/H,CAAC,EAAEC,CAAC,CAAC;;YAElB;UACD,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxCsE,CAAC,IAAIyK,IAAI,CAAC/O,CAAC,CAAC;cACZuE,CAAC,IAAIwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAChB,IAAI,CAACqM,MAAM,CAAC/H,CAAC,EAAEC,CAAC,CAAC;;YAElB;UAED,KAAK,GAAG;YACP9E,YAAY,CAACoP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YAClC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE,EAAE5N,CAAC,EAAE;cACrCsE,CAAC,GAAGyK,IAAI,CAAC/O,CAAC,CAAC;cACX,IAAI,CAACqM,MAAM,CAAC/H,CAAC,EAAEC,CAAC,CAAC;;YAElB;UACD,KAAK,GAAG;YACP9E,YAAY,CAACoP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YAClC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE,EAAE5N,CAAC,EAAE;cACrCsE,CAAC,IAAIyK,IAAI,CAAC/O,CAAC,CAAC;cACZ,IAAI,CAACqM,MAAM,CAAC/H,CAAC,EAAEC,CAAC,CAAC;;YAElB;UAED,KAAK,GAAG;YACP9E,YAAY,CAACoP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YAClC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE,EAAE5N,CAAC,EAAE;cACrCuE,CAAC,GAAGwK,IAAI,CAAC/O,CAAC,CAAC;cACX,IAAI,CAACqM,MAAM,CAAC/H,CAAC,EAAEC,CAAC,CAAC;;YAElB;UACD,KAAK,GAAG;YACP9E,YAAY,CAACoP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YAClC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE,EAAE5N,CAAC,EAAE;cACrCuE,CAAC,IAAIwK,IAAI,CAAC/O,CAAC,CAAC;cACZ,IAAI,CAACqM,MAAM,CAAC/H,CAAC,EAAEC,CAAC,CAAC;;YAElB;UAED,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxC,IAAM+L,EAAE,GAAGgD,IAAI,CAAC/O,CAAC,CAAC;cAClB,IAAMgM,EAAE,GAAG+C,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACtBqO,GAAG,GAAGU,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACjBsO,GAAG,GAAGS,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACjBsE,CAAC,GAAGyK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACfuE,CAAC,GAAGwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACf,IAAI,CAACgN,aAAa,CAACjB,EAAE,EAAEC,EAAE,EAAEqC,GAAG,EAAEC,GAAG,EAAEhK,CAAC,EAAEC,CAAC,CAAC;;YAE3C;UACD,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxC,IAAM+L,EAAE,GAAGgD,IAAI,CAAC/O,CAAC,CAAC,GAAGsE,CAAC;cACtB,IAAM0H,EAAE,GAAG+C,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC,GAAGuE,CAAC;cAC1B8J,GAAG,GAAGU,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC,GAAGsE,CAAC;cACrBgK,GAAG,GAAGS,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC,GAAGuE,CAAC;cACrBD,CAAC,IAAIyK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAChBuE,CAAC,IAAIwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAChB,IAAI,CAACgN,aAAa,CAACjB,EAAE,EAAEC,EAAE,EAAEqC,GAAG,EAAEC,GAAG,EAAEhK,CAAC,EAAEC,CAAC,CAAC;;YAE3C;UAED,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,IAAIS,GAAG,KAAK,IAAI,IAAIC,GAAG,KAAK,IAAI,EAAE;cACjCD,GAAG,GAAG/J,CAAC;cACPgK,GAAG,GAAG/J,CAAC;;YAER,KAAK,IAAIvE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxC,IAAM+L,EAAE,GAAG,CAAC,GAAGzH,CAAC,GAAG+J,GAAG;cACtB,IAAMrC,EAAE,GAAG,CAAC,GAAGzH,CAAC,GAAG+J,GAAG;cACtBD,GAAG,GAAGU,IAAI,CAAC/O,CAAC,CAAC;cACbsO,GAAG,GAAGS,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACjBsE,CAAC,GAAGyK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACfuE,CAAC,GAAGwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACf,IAAI,CAACgN,aAAa,CAACjB,EAAE,EAAEC,EAAE,EAAEqC,GAAG,EAAEC,GAAG,EAAEhK,CAAC,EAAEC,CAAC,CAAC;;YAE3C;UACD,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,IAAIS,GAAG,KAAK,IAAI,IAAIC,GAAG,KAAK,IAAI,EAAE;cACjCD,GAAG,GAAG/J,CAAC;cACPgK,GAAG,GAAG/J,CAAC;;YAER,KAAK,IAAIvE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxC,IAAM+L,EAAE,GAAG,CAAC,GAAGzH,CAAC,GAAG+J,GAAG;cACtB,IAAMrC,EAAE,GAAG,CAAC,GAAGzH,CAAC,GAAG+J,GAAG;cACtBD,GAAG,GAAGU,IAAI,CAAC/O,CAAC,CAAC,GAAGsE,CAAC;cACjBgK,GAAG,GAAGS,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC,GAAGuE,CAAC;cACrBD,CAAC,IAAIyK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAChBuE,CAAC,IAAIwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAChB,IAAI,CAACgN,aAAa,CAACjB,EAAE,EAAEC,EAAE,EAAEqC,GAAG,EAAEC,GAAG,EAAEhK,CAAC,EAAEC,CAAC,CAAC;;YAE3C;UAED,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxCuO,IAAI,GAAGQ,IAAI,CAAC/O,CAAC,CAAC;cACdwO,IAAI,GAAGO,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAClBsE,CAAC,GAAGyK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACfuE,CAAC,GAAGwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACf,IAAI,CAACkN,gBAAgB,CAACqB,IAAI,EAAEC,IAAI,EAAElK,CAAC,EAAEC,CAAC,CAAC;;YAExC;UACD,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxCuO,IAAI,GAAGQ,IAAI,CAAC/O,CAAC,CAAC,GAAGsE,CAAC;cAClBkK,IAAI,GAAGO,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC,GAAGuE,CAAC;cACtBD,CAAC,IAAIyK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAChBuE,CAAC,IAAIwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAChB,IAAI,CAACkN,gBAAgB,CAACqB,IAAI,EAAEC,IAAI,EAAElK,CAAC,EAAEC,CAAC,CAAC;;YAExC;UAED,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,IAAIW,IAAI,KAAK,IAAI,IAAIC,IAAI,KAAK,IAAI,EAAE;cACnCD,IAAI,GAAGjK,CAAC;cACRkK,IAAI,GAAGjK,CAAC;;YAET,KAAK,IAAIvE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxCuO,IAAI,GAAG,CAAC,GAAGjK,CAAC,GAAGiK,IAAI;cACnBC,IAAI,GAAG,CAAC,GAAGjK,CAAC,GAAGiK,IAAI;cACnBlK,CAAC,GAAGyK,IAAI,CAAC/O,CAAC,CAAC;cACXuE,CAAC,GAAGwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACf,IAAI,CAACkN,gBAAgB,CAACqB,IAAI,EAAEC,IAAI,EAAElK,CAAC,EAAEC,CAAC,CAAC;;YAExC;UACD,KAAK,GAAG;YACP7E,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YACnC,IAAIW,IAAI,KAAK,IAAI,IAAIC,IAAI,KAAK,IAAI,EAAE;cACnCD,IAAI,GAAGjK,CAAC;cACRkK,IAAI,GAAGjK,CAAC;;YAET,KAAK,IAAIvE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxCuO,IAAI,GAAG,CAAC,GAAGjK,CAAC,GAAGiK,IAAI;cACnBC,IAAI,GAAG,CAAC,GAAGjK,CAAC,GAAGiK,IAAI;cACnBlK,CAAC,IAAIyK,IAAI,CAAC/O,CAAC,CAAC;cACZuE,CAAC,IAAIwK,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAChB,IAAI,CAACkN,gBAAgB,CAACqB,IAAI,EAAEC,IAAI,EAAElK,CAAC,EAAEC,CAAC,CAAC;;YAExC;UAED,KAAK,GAAG;UACR,KAAK,GAAG;YACP,IAAMyK,QAAQ,GAAIH,MAAI,KAAK,GAAI;YAE/BnP,aAAa,CAACmP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YAEnC,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+O,IAAI,CAACnB,MAAM,EAAE5N,CAAC,IAAI,CAAC,EAAE;cACxC,IAAIsL,EAAE,GAAGyD,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cACpB,IAAIuL,EAAE,GAAGwD,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;cAEpB,IAAIgP,QAAQ,EAAE;gBACb1D,EAAE,IAAIhH,CAAC;gBACPiH,EAAE,IAAIhH,CAAC;;cAGR,IAAM0K,EAAE,GAAG9P,WAAW,CAAC;gBACtB+P,EAAE,EAAE5K,CAAC;gBACL6K,EAAE,EAAE5K,CAAC;gBACL6K,EAAE,EAAEL,IAAI,CAAC/O,CAAC,CAAC;gBACXqP,EAAE,EAAEN,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;gBACfsP,aAAa,EAAEP,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC;gBAC1BuP,YAAY,EAAE5P,YAAY,CAACoP,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC,CAAC;gBACvCwP,SAAS,EAAE7P,YAAY,CAACoP,IAAI,CAAC/O,CAAC,GAAG,CAAC,CAAC,CAAC;gBACpCsL,EAAE,EAAAA,EAAA;gBACFC,EAAE,EAAAA;eACF,CAAC;cAEFvM,MAAM,CAAC4B,IAAI,CAACqO,EAAE,EAAE,UAAC5I,CAAC;gBACjB5D,KAAI,CAACuK,aAAa,CAAC3G,CAAC,CAAC0F,EAAE,EAAE1F,CAAC,CAAC2F,EAAE,EAAE3F,CAAC,CAAC4F,EAAE,EAAE5F,CAAC,CAAC6F,EAAE,EAAE7F,CAAC,CAAC/B,CAAC,EAAE+B,CAAC,CAAC9B,CAAC,CAAC;gBACpDD,CAAC,GAAG+B,CAAC,CAAC/B,CAAC;gBACPC,CAAC,GAAG8B,CAAC,CAAC9B,CAAC;cACR,CAAC,CAAC;;YAEH;UACD,KAAK,GAAG;UACR,KAAK,GAAG;YACPnF,SAAS,CAACyP,MAAI,EAAEE,IAAI,CAACnB,MAAM,EAAE,CAAC,CAAC;YAC/B,IAAI,CAACpB,SAAS,EAAE;YAChB;;;IAGJ;;;;;;WAGA,SAAA5M,CAAgByB,OAAiC;MAChDA,OAAO,CAACoO,SAAS,EAAE;MAEnBzQ,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC+M,WAAW,EAAE,UAACE,EAAE;QAChCA,EAAE,CAACO,IAAI,CAAC/M,OAAO,CAAC;MACjB,CAAC,CAAC;IACH;;;;;;WAEA,SAAAzB,CAAkB8G,WAAwB;MACzCpE,MAAA,CAAAN,SAAA,CAAM6F,OAAO,CAAAnF,IAAA,OAACgE,WAAW,CAAC;MAE1B,IAAMS,KAAK,GAAG,IAAI,CAACnE,MAAM,IAAI0D,WAAW;MAExC,IAAMgJ,UAAU,GAAGvI,KAAK,CAAC7D,KAAK;MAC9B,IAAMlD,WAAW,GAAG,IAAI,CAACyD,cAAc,EAAE;MAEzC;MACA;MACA;MAEA,IAAI6L,UAAU,IAAItP,WAAW,EAAE;QAE9B,IAAMuP,SAAO,GAAGxI,KAAK,CAAC9F,OAAO;QAC7B,IAAMuO,cAAY,GAAG,IAAI,CAACjN,SAAS,CAACqE,aAAa;QAEjD,IAAI0I,UAAU,EAAE;UACfC,SAAO,CAACE,wBAAwB,GAAG,IAAI,CAACC,SAAS;UAEjDH,SAAO,CAACF,SAAS,EAAE;;QAGpB,IAAIM,OAAyB;QAE7B,IAAI3P,WAAW,EAAE;UAChBwP,cAAY,CAACH,SAAS,EAAE;UACxBM,OAAK,GAAG,IAAI,CAACC,WAAW,EAAE;;QAG3BhR,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC+M,WAAW,EAAE,UAACE,EAAE;UAChC,IAAI6B,UAAU,EAAE;YACf7B,EAAE,CAACO,IAAI,CAACuB,SAAO,CAAC;YAChB9B,EAAE,CAACoC,QAAQ,CAACN,SAAO,EAAEvM,SAAS,CAAC;;UAGhC,IAAIhD,WAAW,EAAE;YAChByN,EAAE,CAACO,IAAI,CAACwB,cAAY,CAAC;YACrB/B,EAAE,CAACoC,QAAQ,CAACL,cAAY,EAAEG,OAAK,CAAC;;QAElC,CAAC,CAAC;;IAEJ;;;;;;WAEA,SAAAnQ,CAAsByB,OAAiC;MACtD,IAAI,IAAI,CAAC8B,OAAO,EAAE;QACjB,IAAI,CAACgC,UAAU,EAAE;QAEjB9D,OAAO,CAAC+F,IAAI,EAAE;QAEd;QACA,IAAMF,IAAI,GAAG,IAAI,CAACA,IAAI;QACtB,IAAIA,IAAI,EAAE;UACTA,IAAI,CAAC/B,UAAU,EAAE;UACjB+B,IAAI,CAACG,UAAU,CAAChG,OAAO,EAAE,CAAC,CAAC;UAC3B6F,IAAI,CAACI,QAAQ,CAACjG,OAAO,CAAC;UACtBA,OAAO,CAACkG,IAAI,EAAE;;QAGf;QACAlG,OAAO,CAACmG,WAAW,GAAG,IAAI,CAACC,aAAa,GAAG,IAAI,CAACC,KAAK;QAErD,IAAI,CAACL,UAAU,CAAChG,OAAO,EAAE,CAAC,CAAC;QAE3B,IAAI,IAAI,CAACsG,MAAM,EAAE;UAChBtG,OAAO,CAACsG,MAAM,GAAG,IAAI,CAACA,MAAM;;QAG7BtG,OAAO,CAACwO,wBAAwB,GAAG,IAAI,CAACC,SAAS;QAEjDzO,OAAO,CAACoO,SAAS,EAAE;QAEnBzQ,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC+M,WAAW,EAAE,UAACE,EAAE;UAChCA,EAAE,CAACO,IAAI,CAAC/M,OAAO,CAAC;UAChBwM,EAAE,CAACoC,QAAQ,CAAC5O,OAAO,EAAE+B,SAAS,CAAC;QAChC,CAAC,CAAC;QAEF/B,OAAO,CAACyG,OAAO,EAAE;;IAEnB;;;;;;WAEA,SAAAlI,CAAkBsF,MAAe;MAChC,IAAI,IAAI,CAAC/B,OAAO,IAAI,IAAI,CAAC8K,UAAU,EAAE;QACpCjP,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC+M,WAAW,EAAE,UAACE,EAAE;UAChCA,EAAE,CAACqC,SAAS,CAAChL,MAAM,CAAC;QACrB,CAAC,CAAC;;IAEJ;;EACD,OAAAsI,cAAC;AAAD,CAAC,CA7cmCnL,mBAAmB;;AA4evD;;;AAGA,IAAA8N,UAAA,0BAAA7N,MAAA;EAAgCC,SAAA,CAAA4N,UAAA,EAAA7N,MAAA;EAS/B,SAAA6N,WAAY3N,QAAwB,EAAE4N,IAAY,EAAEC,KAAsB;IAA1E,IAAA5N,KAAA,GACCH,MAAA,CAAAI,IAAA,OAAMF,QAAQ,CAAC;IAThBV,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA4B;;IAE5BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAkC;;IAClCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAoC;;IAInCA,KAAI,CAAC2N,IAAI,GAAGA,IAAI;IAChB3N,KAAI,CAAC4N,KAAK,GAAGA,KAAK;;EACnB;;;;;WAEA,SAAAzQ,CAAA;MACC0C,MAAA,CAAAN,SAAA,CAAMuB,gBAAgB,CAAAb,IAAA,MAAE;MACxB,IAAI,CAAC4N,SAAS,GAAGlN,SAAS;IAC3B;;;;;;WAEA,SAAAxD,CAAgByB,OAAiC;MAChD,IAAI,IAAI,CAACgP,KAAK,CAACE,SAAS,EAAE;QACzBlP,OAAO,CAACkP,SAAS,GAAG,IAAI,CAACF,KAAK,CAACE,SAAS;;MAGzC,IAAI,IAAI,CAACF,KAAK,CAACG,SAAS,EAAE;QACzBnP,OAAO,CAACmP,SAAS,GAAG,IAAI,CAACH,KAAK,CAACG,SAAS;;MAGzC,IAAI,IAAI,CAACH,KAAK,CAACI,YAAY,EAAE;QAC5BpP,OAAO,CAACoP,YAAY,GAAG,IAAI,CAACJ,KAAK,CAACI,YAAY;;IAGhD;;;;;;WAEA,SAAA7Q,CAAqBuH,KAAkB,EAAEuJ,WAAmB,EAAEC,gBAAwB;MAA7C,IAAAD,WAAA;QAAAA,WAAA,QAAmB;MAAA;MAAE,IAAAC,gBAAA;QAAAA,gBAAA,QAAwB;MAAA;MACrFrO,MAAA,CAAAN,SAAA,CAAM6F,OAAO,CAAAnF,IAAA,OAACyE,KAAK,CAAC;MAEpB,IAAM9F,OAAO,GAAG8F,KAAK,CAAC9F,OAAO;MAC7B,IAAM0F,YAAY,GAAG,IAAI,CAACpE,SAAS,CAACqE,aAAa;MAEjD;MAEA,IAAMqJ,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIO,SAAS,GAAG,IAAI,CAACC,aAAa,CAACzN,SAAS,EAAEuN,gBAAgB,CAAC;MAE/DtP,OAAO,CAACyP,IAAI,GAAGF,SAAS;MACxB,IAAI,IAAI,CAAC/M,cAAc,EAAE,IAAI,CAAC6M,WAAW,EAAE;QAC1C3J,YAAY,CAAC+J,IAAI,GAAGF,SAAS;;MAG9B;MACA,IAAIP,KAAK,CAACzG,IAAI,EAAE;QACf,IAAIyG,KAAK,CAACzG,IAAI,YAAYrL,KAAK,EAAE;UAChC8C,OAAO,CAACoI,SAAS,GAAG4G,KAAK,CAACzG,IAAI,CAACoE,KAAK,EAAE;SACtC,MAAM;UACN3M,OAAO,CAACoI,SAAS,GAAG4G,KAAK,CAACzG,IAAI;;;MAIhC,IAAIyG,KAAK,CAACxG,WAAW,EAAE;QACtB1C,KAAK,CAAC9F,OAAO,CAACwI,WAAW,GAAGwG,KAAK,CAACxG,WAAW,CAACmE,KAAK,CAACqC,KAAK,CAACU,aAAa,IAAI,CAAC,CAAC;;MAE9E,IAAIV,KAAK,CAACvG,UAAU,EAAE;QACrB3C,KAAK,CAAC9F,OAAO,CAACyI,UAAU,GAAGuG,KAAK,CAACvG,UAAU;;MAE5C,IAAIuG,KAAK,CAACtG,aAAa,EAAE;QACxB5C,KAAK,CAAC9F,OAAO,CAAC0I,aAAa,GAAGsG,KAAK,CAACtG,aAAa;;MAElD,IAAIsG,KAAK,CAACrG,aAAa,EAAE;QACxB7C,KAAK,CAAC9F,OAAO,CAAC2I,aAAa,GAAGqG,KAAK,CAACrG,aAAa;;MAGlD,IAAI,CAACgH,OAAO,CAAC3P,OAAO,CAAC;MAErB,IAAI,IAAI,CAACwC,cAAc,EAAE,IAAI,CAAC6M,WAAW,EAAE;QAC1C3J,YAAY,CAAC0C,SAAS,GAAG,IAAI,CAACuG,WAAW,EAAE;QAC3C,IAAI,CAACgB,OAAO,CAACjK,YAAY,CAAC;;IAE5B;;;;;;WAEA,SAAAnH,CAAwBqR,MAAmB,EAAEN,gBAAwB;MAAxB,IAAAA,gBAAA;QAAAA,gBAAA,QAAwB;MAAA;MAEpE;MACA,IAAMN,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIO,SAAS,GAAa,EAAE;MAE5B,IAAIK,MAAM,IAAIA,MAAM,CAACC,WAAW,EAAE;QACjCN,SAAS,CAACpI,IAAI,CAACyI,MAAM,CAACC,WAAW,CAAC;OAClC,MACI,IAAIb,KAAK,CAACa,WAAW,EAAE;QAC3BN,SAAS,CAACpI,IAAI,CAAC6H,KAAK,CAACa,WAAW,CAAC;;MAGlC,IAAI,CAACP,gBAAgB,EAAE;QACtB,IAAIM,MAAM,IAAIA,MAAM,CAACE,UAAU,EAAE;UAChCP,SAAS,CAACpI,IAAI,CAACyI,MAAM,CAACE,UAAU,CAAC;SACjC,MACI,IAAId,KAAK,CAACc,UAAU,EAAE;UAC1BP,SAAS,CAACpI,IAAI,CAAC6H,KAAK,CAACc,UAAU,CAAC;;;MAIlC,IAAIF,MAAM,IAAIA,MAAM,CAACL,SAAS,EAAE;QAC/BA,SAAS,CAACpI,IAAI,CAACyI,MAAM,CAACL,SAAS,CAAC;OAChC,MACI,IAAIP,KAAK,CAACO,SAAS,EAAE;QACzBA,SAAS,CAACpI,IAAI,CAAC6H,KAAK,CAACO,SAAS,CAAC;;MAGhC,IAAIK,MAAM,IAAIA,MAAM,CAACG,QAAQ,EAAE;QAC9B,IAAInS,KAAK,CAACoS,QAAQ,CAACJ,MAAM,CAACG,QAAQ,CAAC,EAAE;UACpCH,MAAM,CAACG,QAAQ,GAAGH,MAAM,CAACG,QAAQ,GAAG,IAAI;;QAEzCR,SAAS,CAACpI,IAAI,CAACyI,MAAM,CAACG,QAAQ,CAAC;OAC/B,MACI,IAAIf,KAAK,CAACe,QAAQ,EAAE;QACxB,IAAInS,KAAK,CAACoS,QAAQ,CAAChB,KAAK,CAACe,QAAQ,CAAC,EAAE;UACnCf,KAAK,CAACe,QAAQ,GAAGf,KAAK,CAACe,QAAQ,GAAG,IAAI;;QAEvCR,SAAS,CAACpI,IAAI,CAAC6H,KAAK,CAACe,QAAQ,CAAC;;MAG/B,IAAIH,MAAM,IAAIA,MAAM,CAACK,UAAU,EAAE;QAChCV,SAAS,CAACpI,IAAI,CAACyI,MAAM,CAACK,UAAU,CAAC;OACjC,MACI,IAAIjB,KAAK,CAACiB,UAAU,EAAE;QAC1BV,SAAS,CAACpI,IAAI,CAAC6H,KAAK,CAACiB,UAAU,CAAC;OAChC,MACI,IAAIV,SAAS,CAAChD,MAAM,EAAE;QAC1BgD,SAAS,CAACpI,IAAI,CAAC,OAAO,CAAC;;MAGxB,OAAOoI,SAAS,CAACW,IAAI,CAAC,GAAG,CAAC;IAC3B;;;;;;WAEA,SAAA3R,CAAkB8G,WAAwB;MAA1C,IAAAjE,KAAA;MACC,IAAM0E,KAAK,GAAG,IAAI,CAACnE,MAAM,IAAI0D,WAAW;MAExC;MACA,IAAI,CAAC,IAAI,CAAC4J,SAAS,EAAE;QACpB,IAAI,CAACkB,QAAQ,CAACrK,KAAK,CAAC;;MAGrB,IAAI,IAAI,CAACsK,YAAY,EAAE;QAEtB,IAAMC,aAAW,GAAG,IAAI,CAAC7N,cAAc,EAAE;QACzC,IAAM8N,SAAO,GAAGxK,KAAK,CAAC9F,OAAO;QAC7B,IAAMuQ,YAAU,GAAGzK,KAAK,CAAC7D,KAAK;QAC9B,IAAMuO,cAAY,GAAG,IAAI,CAAClP,SAAS,CAACqE,aAAa;QAGjD;QAEA2K,SAAO,CAACvK,IAAI,EAAE;QACdyK,cAAY,CAACzK,IAAI,EAAE;QACnB,IAAI,CAAC0K,UAAU,CAAC3K,KAAK,CAAC;QAEtB;QACA;QAIA;QACAnI,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC0P,SAAU,EAAE,UAACyB,IAAI,EAAEC,MAAM;UACzChT,MAAM,CAAC4B,IAAI,CAACmR,IAAI,CAACE,UAAU,EAAE,UAACC,KAAK,EAAEF,MAAM;YAE1C;YACA,IAAIE,KAAK,CAAC7B,KAAK,EAAE;cAChBsB,SAAO,CAACvK,IAAI,EAAE;cACdyK,cAAY,CAACzK,IAAI,EAAE;cAEnBuK,SAAO,CAACb,IAAI,GAAGoB,KAAK,CAAC7B,KAAK;cAC1B,IAAI5N,KAAI,CAACoB,cAAc,EAAE,EAAE;gBAC1BgO,cAAY,CAACf,IAAI,GAAGoB,KAAK,CAAC7B,KAAK;;;YAIjC,IAAI6B,KAAK,CAACtI,IAAI,EAAE;cACf+H,SAAO,CAACvK,IAAI,EAAE;cACduK,SAAO,CAAClI,SAAS,GAAGyI,KAAK,CAACtI,IAAI,CAACoE,KAAK,EAAE;cACtC;;YAGD;YACA,IAAI4D,YAAU,EAAE;cACfD,SAAO,CAACQ,QAAQ,CAACD,KAAK,CAAC9B,IAAI,EAAE8B,KAAK,CAAC7E,OAAO,EAAE0E,IAAI,CAACzE,OAAO,GAAG4E,KAAK,CAAC5E,OAAO,CAAC;;YAG1E,IAAIoE,aAAW,IAAIjP,KAAI,CAACrC,WAAW,EAAE;cACpC;cACA;cACA;cACAyR,cAAY,CAACM,QAAQ,CAACD,KAAK,CAAC9B,IAAI,EAAE8B,KAAK,CAAC7E,OAAO,EAAE0E,IAAI,CAACzE,OAAO,GAAG4E,KAAK,CAAC5E,OAAO,CAAC;;YAG/E,IAAI4E,KAAK,CAACtI,IAAI,EAAE;cACf+H,SAAO,CAAC7J,OAAO,EAAE;cACjB;;YAGD;YACA,IAAIoK,KAAK,CAAC7B,KAAK,EAAE;cAChBsB,SAAO,CAAC7J,OAAO,EAAE;cACjB+J,cAAY,CAAC/J,OAAO,EAAE;;UAGxB,CAAC,CAAC;QACH,CAAC,CAAC;QAEF6J,SAAO,CAAC7J,OAAO,EAAE;QACjB+J,cAAY,CAAC/J,OAAO,EAAE;;IAExB;;;;;;WAEA,SAAAlI,CAAkBsF,MAAe;MAChC,IAAI,IAAI,CAAC/B,OAAO,IAAI,IAAI,CAAC8K,UAAU,EAAE;QACpC;QACA,IAAM3J,CAAC,GAAG,IAAI,CAACkN,QAAQ,CAAC,IAAI,CAAC3O,QAAQ,EAAE,CAAC;QACxCqG,QAAQ,CAAChE,MAAM,EAAE;UAAEZ,CAAC,EAAEA,CAAC,CAACO,IAAI;UAAEN,CAAC,EAAED,CAAC,CAACQ;QAAG,CAAE,CAAC;QACzCoE,QAAQ,CAAChE,MAAM,EAAE;UAAEZ,CAAC,EAAEA,CAAC,CAACS,KAAK;UAAER,CAAC,EAAED,CAAC,CAACU;QAAM,CAAE,CAAC;QAC7C;;IAEF;;;;;;;WAEA,SAAApF,CAAgBuH,KAAkB;MAAlC,IAAA1E,KAAA;MACC,IAAMpB,OAAO,GAAG8F,KAAK,CAAC9F,OAAO;MAC7B,IAAM0F,YAAY,GAAG,IAAI,CAACpE,SAAS,CAACqE,aAAa;MAEjD;MACA,IAAI,CAACsJ,SAAS,GAAG,EAAE;MAEnB;MACA,IAAM8B,iBAAiB,GAAG,IAAI,CAAC/B,KAAK,CAAC+B,iBAAiB;MACtD,IAAMC,QAAQ,GAAG,IAAI,CAAChC,KAAK,CAACgC,QAAS;MAErC,IAAMC,QAAQ,GAAGrT,KAAK,CAACoS,QAAQ,CAACgB,QAAQ,CAAC,IAAID,iBAAiB,IAAI,UAAU;MAC5E,IAAMG,IAAI,GAAGtT,KAAK,CAACoS,QAAQ,CAACgB,QAAQ,CAAC,IAAID,iBAAiB,IAAI,MAAM;MAEpE;MACA/Q,OAAO,CAAC+F,IAAI,EAAE;MACdL,YAAY,CAACK,IAAI,EAAE;MACnB,IAAI,CAAC0K,UAAU,CAAC3K,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC;MAElC;MACA,IAAMqL,OAAO,GAAG,iEAAiE;MAEjF;MACA,IAAMC,KAAK,GAAG,IAAI,CAACrC,IAAI,CAACsC,QAAQ,EAAE,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;MACjE,IAAIC,aAAa,GAAG,IAAI;MACxB,IAAIC,IAAI,GAAG,CAAC;MACZ,IAAIC,IAAI,GAAG,CAAC;MAEZ;MACA,IAAIzF,OAAO,GAAG,CAAC;MACftO,MAAM,CAAC4B,IAAI,CAAC6R,KAAK,EAAE,UAACV,IAAI,EAAEC,MAAM;QAE/B;QACA,IAAIgB,MAAoB;QACxB,IAAIjB,IAAI,IAAI,EAAE,EAAE;UACfiB,MAAM,GAAG,CAAC;YACTC,IAAI,EAAE,OAAO;YACb7C,IAAI,EAAE;WACN,CAAC;SACF,MACI;UACJ4C,MAAM,GAAGlU,aAAa,CAACoT,KAAK,CAACH,IAAI,EAAE,KAAK,EAAEtP,KAAI,CAAC4N,KAAK,CAAC6C,gBAAgB,CAAC;;;UAKtE;UACA,IAAIC,QAAQ,GAAU;YACrB7F,OAAO,EAAEA,OAAO;YAChB8F,MAAM,EAAE,CAAC;YACTjS,KAAK,EAAE,CAAC;YACRC,MAAM,EAAE,CAAC;YACTyD,IAAI,EAAE,CAAC;YACPE,KAAK,EAAE,CAAC;YACRkN,UAAU,EAAE;WACZ;UAED;UACA,IAAMoB,OAAO,GAAG5Q,KAAI,CAAC6Q,YAAY,CAACd,OAAO,EAAEnR,OAAO,CAAC;UAEnD,IAAMD,MAAM,GAAGiS,OAAO,CAACE,uBAAuB,GAAGF,OAAO,CAACG,wBAAwB;UACjFL,QAAQ,CAAC/R,MAAM,GAAGA,MAAM;UACxB+R,QAAQ,CAACC,MAAM,GAAGC,OAAO,CAACE,uBAAuB;UAEjD,IAAIE,YAAgC;UACpC,IAAIC,aAAqB;UACzB,IAAIC,WAA8B;UAClC,IAAIC,iBAAqC;UACzC,IAAIC,eAAe,GAAG,KAAK;UAC3B,IAAIC,cAAc,GAAG,IAAI;UACzB,IAAIC,cAAc,GAAsB,EAAE;UAC1C;UACA;UAEA;UACA/U,MAAM,CAACgV,YAAY,CAAChB,MAAM,EAAE,UAACd,KAAK,EAAEzJ,KAAK;YAExC;YACA,IAAIyJ,KAAK,CAACe,IAAI,IAAI,QAAQ,EAAE;cAC3B,IAAIf,KAAK,CAAC9B,IAAI,IAAI,KAAK,EAAE;gBACxB,IAAI,CAACyC,aAAa,EAAE;kBACnBxR,OAAO,CAACyG,OAAO,EAAE;kBACjBf,YAAY,CAACe,OAAO,EAAE;kBACtB+K,aAAa,GAAG,IAAI;;gBAErBc,WAAW,GAAGvQ,SAAS;gBACvBqQ,YAAY,GAAGrQ,SAAS;gBACxBwQ,iBAAiB,GAAGxQ,SAAS;gBAC7BsQ,aAAa,GAAGxB,KAAK,CAAC9B,IAAI;eAC1B,MACI;gBAEJ,IAAI,CAACyC,aAAa,EAAE;kBACnBxR,OAAO,CAACyG,OAAO,EAAE;kBACjBf,YAAY,CAACe,OAAO,EAAE;;gBAGvB,IAAImM,MAAM,GAAGnV,aAAa,CAACoV,YAAY,CAAChC,KAAK,CAAC9B,IAAI,CAAC;gBACnD,IAAMQ,SAAS,GAAGnO,KAAI,CAACoO,aAAa,CAACoD,MAAM,CAAC;gBAC5C5S,OAAO,CAAC+F,IAAI,EAAE;gBACdL,YAAY,CAACK,IAAI,EAAE;gBACnB/F,OAAO,CAACyP,IAAI,GAAGF,SAAS;gBACxB6C,YAAY,GAAG7C,SAAS;gBACxB8C,aAAa,GAAGxB,KAAK,CAAC9B,IAAI;gBAC1B,IAAI6D,MAAM,CAACrK,IAAI,EAAE;kBAChB+J,WAAW,GAAUM,MAAM,CAACrK,IAAI;;gBAEjC,IAAUqK,MAAO,CAAC9S,KAAK,EAAE;kBACxByS,iBAAiB,GAAG3U,KAAK,CAACkV,QAAQ,CAAOF,MAAO,CAAC9S,KAAK,CAAC;;gBAExD0R,aAAa,GAAG,KAAK;gBAErB;gBACA,IAAMuB,SAAO,GAAG3R,KAAI,CAAC6Q,YAAY,CAACd,OAAO,EAAEnR,OAAO,CAAC;gBACnD,IAAMgT,QAAM,GAAGD,SAAO,CAACb,uBAAuB,GAAGa,SAAO,CAACZ,wBAAwB;gBACjF,IAAIa,QAAM,GAAGlB,QAAQ,CAAC/R,MAAM,EAAE;kBAC7B+R,QAAQ,CAAC/R,MAAM,GAAGiT,QAAM;;gBAEzB,IAAID,SAAO,CAACb,uBAAuB,GAAGJ,QAAQ,CAACC,MAAM,EAAE;kBACtDD,QAAQ,CAACC,MAAM,GAAGgB,SAAO,CAACb,uBAAuB;;;;YAKpD;YAAA,KACK,IAAIrB,KAAK,CAACe,IAAI,IAAI,OAAO,IAAI,CAACY,eAAe,EAAE;cAEnD;cACA,IAAMS,SAAO,GAAG7R,KAAI,CAAC6Q,YAAY,CAACpB,KAAK,CAAC9B,IAAI,EAAE/O,OAAO,CAAC;cACtD,IAAIkT,UAAU,GAAGD,SAAO,CAACE,qBAAqB,GAAGF,SAAO,CAACG,sBAAsB;cAE/E;cACA,IAAInC,QAAQ,EAAE;gBAEb;gBACA,IAAIoC,UAAU,GAAGZ,cAAc,IAAIrR,KAAI,CAAC4N,KAAK,CAACqE,UAAU,IAAI,KAAK;gBAEjE;gBACA,IAAMC,QAAQ,GAAGlS,KAAI,CAAC4N,KAAK,CAACsE,QAAQ,IAAI,EAAE;gBAC1C,IAAMC,eAAe,GAAGnS,KAAI,CAAC6Q,YAAY,CAACqB,QAAQ,EAAEtT,OAAO,CAAC;gBAC5D,IAAMwT,aAAa,GAAGD,eAAe,CAACJ,qBAAqB,GAAGI,eAAe,CAACH,sBAAsB;gBAEpG;gBACA,IAAKtB,QAAQ,CAAChS,KAAK,GAAGoT,UAAU,GAAIlC,QAAQ,EAAE;kBAC7C,IAAMyC,WAAW,GAAGzC,QAAQ,GAAGc,QAAQ,CAAChS,KAAK,GAAG0T,aAAa;kBAC7D3C,KAAK,CAAC9B,IAAI,GAAG3N,KAAI,CAACsS,aAAa,CAAC1T,OAAO,EAAE6Q,KAAK,CAAC9B,IAAI,EAAE0E,WAAW,EAAEJ,UAAU,CAAC;kBAC7ExC,KAAK,CAAC9B,IAAI,IAAIuE,QAAQ;kBACtBd,eAAe,GAAG,IAAI;;eAGvB,MACI,IAAItB,IAAI,EAAE;gBACd;gBACA,IAAKY,QAAQ,CAAChS,KAAK,GAAGoT,UAAU,GAAIlC,QAAQ,EAAE;kBAC7C,IAAMyC,WAAW,GAAGzC,QAAQ,GAAGc,QAAQ,CAAChS,KAAK;kBAC7C,IAAM6T,OAAO,GAAGvS,KAAI,CAACsS,aAAa,CAAC1T,OAAO,EAAE6Q,KAAK,CAAC9B,IAAI,EAAE0E,WAAW,EAAE,KAAK,EAAEhB,cAAc,CAAC;kBAE3F,IAAIkB,OAAO,IAAI,EAAE,EAAE;oBAClB;oBACAvS,KAAI,CAACgP,YAAY,GAAG,IAAI;oBACxB,OAAO,KAAK;;kBAEb;kBAEA;kBACAsC,cAAc,GAAGf,MAAM,CAACiC,KAAK,CAACxM,KAAK,GAAG,CAAC,CAAC;kBAExC;kBACA,IAAI1J,MAAM,CAACmW,IAAI,CAACF,OAAO,CAAC,IAAIjW,MAAM,CAACmW,IAAI,CAAChD,KAAK,CAAC9B,IAAI,CAAC,EAAE;oBACpD2D,cAAc,CAACoB,OAAO,CAAC;sBACtBlC,IAAI,EAAE,OAAO;sBACb7C,IAAI,EAAE8B,KAAK,CAAC9B,IAAI,CAACgF,MAAM,CAACJ,OAAO,CAACpH,MAAM;qBACtC,CAAC;oBACF,IAAI8F,aAAa,EAAE;sBAClBK,cAAc,CAACoB,OAAO,CAAC;wBACtBlC,IAAI,EAAE,QAAQ;wBACd7C,IAAI,EAAEsD;uBACN,CAAC;;;kBAIJ;kBACAxB,KAAK,CAAC9B,IAAI,GAAG4E,OAAO;kBAEpBhC,MAAM,GAAG,EAAE;kBACXa,eAAe,GAAG,IAAI;;;cAKxB;cACA,IAAIwB,YAAY,GAAG,CAAC;cACpB,IAAIC,aAAa,GAAG,CAAC;cACrB,IAAI7B,YAAY,IAAIG,iBAAiB,IAAKA,iBAAiB,GAAGW,UAAW,EAAE;gBAC1E;gBACA,IAAMgB,SAAS,GAAGhB,UAAU,GAAGX,iBAAiB;gBAChD,QAAQnR,KAAI,CAAC4N,KAAK,CAACE,SAAS;kBAC3B,KAAK,OAAO;kBACZ,KAAK,KAAK;oBACT8E,YAAY,GAAGE,SAAS;oBACxB;kBACD,KAAK,QAAQ;oBACZF,YAAY,GAAGE,SAAS;oBACxBD,aAAa,GAAGC,SAAS;oBACzB;kBACD;oBACCD,aAAa,GAAGC,SAAS;;gBAE3BhB,UAAU,GAAGX,iBAAiB;;cAG/B,IAAM4B,WAAW,GAAGlB,SAAO,CAACf,uBAAuB,GAAGe,SAAO,CAACd,wBAAwB;cAGtF,IAAIgC,WAAW,GAAGrC,QAAQ,CAAC/R,MAAM,EAAE;gBAClC+R,QAAQ,CAAC/R,MAAM,GAAGoU,WAAW;;cAE9B,IAAIlB,SAAO,CAACf,uBAAuB,GAAGJ,QAAQ,CAACC,MAAM,EAAE;gBACtDD,QAAQ,CAACC,MAAM,GAAGkB,SAAO,CAACf,uBAAuB;;cAGlDJ,QAAQ,CAAChS,KAAK,IAAIoT,UAAU;cAC5BpB,QAAQ,CAACtO,IAAI,IAAIyP,SAAO,CAACE,qBAAqB,GAAGa,YAAY;cAC7DlC,QAAQ,CAACpO,KAAK,IAAIuP,SAAO,CAACG,sBAAsB,GAAGa,aAAa;cAChEnC,QAAQ,CAAClB,UAAU,CAACzJ,IAAI,CAAC;gBACxB6H,KAAK,EAAEoD,YAAY;gBACnB7J,IAAI,EAAE+J,WAAW;gBACjBvD,IAAI,EAAE8B,KAAK,CAAC9B,IAAI;gBAChBjP,KAAK,EAAEoT,UAAU;gBACjBnT,MAAM,EAAEoU,WAAW;gBACnB3Q,IAAI,EAAEyP,SAAO,CAACE,qBAAqB;gBACnCzP,KAAK,EAAEuP,SAAO,CAACG,sBAAsB;gBACrCrB,MAAM,EAAEkB,SAAO,CAACf,uBAAuB;gBACvClG,OAAO,EAAE,CAAC;gBACVC,OAAO,EAAE;eACT,CAAC;cAEF;cAEAwG,cAAc,GAAG,KAAK;;YAIvB,IAAIC,cAAc,EAAE;cACnB;YAAA;YAGD,OAAO,IAAI;YAEX;UACD,CAAC,CAAC;;UAEF,IAAItR,KAAI,CAAC4N,KAAK,CAACoF,UAAU,YAAYhX,OAAO,EAAE;YAC7C0U,QAAQ,CAAC/R,MAAM,IAAIqB,KAAI,CAAC4N,KAAK,CAACoF,UAAU,CAAC7V,KAAK;YAC9CuT,QAAQ,CAACC,MAAM,IAAI3Q,KAAI,CAAC4N,KAAK,CAACoF,UAAU,CAAC7V,KAAK;WAC9C,MACI;YACJuT,QAAQ,CAAC/R,MAAM,IAAIqB,KAAI,CAAC4N,KAAK,CAACoF,UAAU,IAAI,GAAG;YAC/CtC,QAAQ,CAACC,MAAM,IAAI3Q,KAAI,CAAC4N,KAAK,CAACoF,UAAU,IAAI,GAAG;;UAGhD,IAAI3C,IAAI,GAAGK,QAAQ,CAACtO,IAAI,EAAE;YACzBiO,IAAI,GAAGK,QAAQ,CAACtO,IAAI;;UAGrB,IAAIkO,IAAI,GAAGI,QAAQ,CAACpO,KAAK,EAAE;YAC1BgO,IAAI,GAAGI,QAAQ,CAACpO,KAAK;;UAGtBtC,KAAI,CAAC6N,SAAU,CAAC9H,IAAI,CAAC2K,QAAQ,CAAC;UAE9B;UACA7F,OAAO,IAAI6F,QAAQ,CAAC/R,MAAM;UAE1B;UACA4R,MAAM,GAAGe,cAAc,IAAI,EAAE;;QAvO9B,OAAOf,MAAM,CAACpF,MAAM,GAAG,CAAC;;;MA0OzB,CAAC,CAAC;MAEF,IAAI,CAACiF,aAAa,EAAE;QACnBxR,OAAO,CAACyG,OAAO,EAAE;QACjBf,YAAY,CAACe,OAAO,EAAE;;MAGvB;MACA9I,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC0P,SAAS,EAAE,UAAC6C,QAAQ,EAAEnB,MAAc;QACpD,IAAI0D,kBAAkB,GAAG,CAAC;QAC1B1W,MAAM,CAAC4B,IAAI,CAACuS,QAAQ,CAAClB,UAAU,EAAE,UAACC,KAAK;UACtCA,KAAK,CAAC7E,OAAO,GAAGqI,kBAAkB,GAAGxD,KAAK,CAACrN,IAAI,GAAGsO,QAAQ,CAACtO,IAAI;UAC/DqN,KAAK,CAAC5E,OAAO,IAAI6F,QAAQ,CAAC/R,MAAM,GAAG+R,QAAQ,CAAC/R,MAAM,IAAIqB,KAAI,CAAC4N,KAAK,CAACsF,aAAa,IAAI,IAAI,CAAC;UACvFD,kBAAkB,IAAIxD,KAAK,CAAC/Q,KAAK;QAClC,CAAC,CAAC;MACH,CAAC,CAAC;MAEF,IAAM+D,MAAM,GAAG;QACdL,IAAI,EAAE,CAACiO,IAAI;QACXhO,GAAG,EAAE,CAAC;QACNC,KAAK,EAAEgO,IAAI;QACX/N,MAAM,EAAEsI;OACR;MAED;MACA,IAAI8E,iBAAiB,KAAK,MAAM,EAAE;QACjC,IAAMwD,KAAK,GAAG,IAAI,CAACC,SAAS,CAAC3Q,MAAM,CAAC;QACpC,IAAI0Q,KAAK,GAAG,CAAC,EAAE;UACd,IAAIxD,iBAAiB,IAAI,KAAK,EAAE;YAC/B,IAAInT,KAAK,CAACoS,QAAQ,CAAC,IAAI,CAAChB,KAAK,CAACyF,QAAQ,CAAC,IAAKF,KAAK,GAAG,IAAI,CAACvF,KAAK,CAACyF,QAAS,EAAE;cACzE,IAAI,CAACrE,YAAY,GAAG,KAAK;aACzB,MACI;cACJ,IAAI,CAAC,IAAI,CAACsE,cAAc,IAAI,IAAI,CAACA,cAAc,IAAI,CAAC,EAAE;gBACrD,IAAI,CAACA,cAAc,GAAG,IAAI,CAACpR,KAAK;;cAEjC,IAAI,CAACA,KAAK,GAAGiR,KAAK;cAClB,IAAI,CAACnE,YAAY,GAAG,IAAI;;WAEzB,MACI,IAAIW,iBAAiB,IAAI,MAAM,EAAE;YACrC,IAAI,CAACX,YAAY,GAAG,KAAK;WACzB,MACI;YAEJ,QAAQ,IAAI,CAACpB,KAAK,CAACE,SAAS;cAC3B,KAAK,OAAO;cACZ,KAAK,KAAK;gBACTrL,MAAM,CAACL,IAAI,GAAGwN,QAAQ;gBACtBnN,MAAM,CAACH,KAAK,GAAG,CAAC;gBAChB;cACD,KAAK,QAAQ;gBACZG,MAAM,CAACL,IAAI,GAAG,CAACwN,QAAQ,GAAG,CAAC;gBAC3BnN,MAAM,CAACH,KAAK,GAAGsN,QAAQ,GAAG,CAAC;gBAC3B;cACD;gBACCnN,MAAM,CAACL,IAAI,GAAG,CAAC;gBACfK,MAAM,CAACH,KAAK,GAAGsN,QAAQ;;YAGzB,IAAI,CAAC1N,KAAK,GAAG,IAAI,CAACoR,cAAc,IAAI,CAAC;YACrC,IAAI,CAACA,cAAc,GAAG3S,SAAS;YAC/B,IAAI,CAACqO,YAAY,GAAG,IAAI;;SAEzB,MACI;UACJ,IAAI,CAAC9M,KAAK,GAAG,IAAI,CAACoR,cAAc,IAAI,CAAC;UACrC,IAAI,CAACA,cAAc,GAAG3S,SAAS;UAC/B,IAAI,CAACqO,YAAY,GAAG,IAAI;;;MAI1BpQ,OAAO,CAACyG,OAAO,EAAE;MACjBf,YAAY,CAACe,OAAO,EAAE;MAEtB,OAAO5C,MAAM;IACd;;;;;;WAEA,SAAAtF,CAAoBsF,MAAe;MAClC,IAAM8Q,IAAI,GAAG,IAAI,CAAC3F,KAAK,CAACgC,QAAQ;MAChC,IAAM4D,IAAI,GAAG,IAAI,CAAC5F,KAAK,CAAC6F,SAAS;MACjC,IAAI,CAACjX,KAAK,CAACoS,QAAQ,CAAC2E,IAAI,CAAC,IAAI,CAAC/W,KAAK,CAACoS,QAAQ,CAAC4E,IAAI,CAAC,EAAE;QACnD,OAAO,CAAC;;MAET,IAAME,CAAC,GAAGjR,MAAM,CAACH,KAAK,GAAGG,MAAM,CAACL,IAAI;MACpC,IAAMuR,CAAC,GAAGlR,MAAM,CAACF,MAAM,GAAGE,MAAM,CAACJ,GAAG;MACpC,OAAOL,IAAI,CAACiB,GAAG,CAACsQ,IAAK,GAAGG,CAAC,IAAI,CAAC,EAAEF,IAAK,GAAGG,CAAC,IAAI,CAAC,CAAC;IAChD;;;;;;WAEA,SAAAxW,CAAwByB,OAAiC,EAAE+O,IAAY,EAAEiC,QAAgB,EAAEqC,UAA2B,EAAE2B,kBAAkC;MAA/D,IAAA3B,UAAA;QAAAA,UAAA,QAA2B;MAAA;MAAE,IAAA2B,kBAAA;QAAAA,kBAAA,OAAkC;MAAA;MACzJ,IAAIlV,KAAa;MACjB,GAAG;QACF,IAAIuT,UAAU,EAAE;UACftE,IAAI,GAAGA,IAAI,CAAC6E,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACxB,MACI;UACJ,IAAIqB,GAAG,GAAGlG,IAAI,CAACuC,OAAO,CAAC,qCAAqC,EAAE,EAAE,CAAC;UACjE,IAAI2D,GAAG,IAAI,EAAE,IAAID,kBAAkB,EAAE;YACpC3B,UAAU,GAAG,IAAI;WACjB,MACI;YACJtE,IAAI,GAAGkG,GAAG;;;QAGZ,IAAMjD,OAAO,GAAG,IAAI,CAACC,YAAY,CAAClD,IAAI,EAAE/O,OAAO,CAAC;QAChDF,KAAK,GAAGkS,OAAO,CAACmB,qBAAqB,GAAGnB,OAAO,CAACoB,sBAAsB;OACtE,QAAStT,KAAK,GAAGkR,QAAQ,IAAKjC,IAAI,IAAI,EAAE;MACzC,OAAOA,IAAI;IACZ;;;;;;WAEA,SAAAxQ,CAAuBwQ,IAAY,EAAE/O,OAAiC;MACrE,IAAIgS,OAAO,GAAGhS,OAAO,CAACkV,WAAW,CAACnG,IAAI,CAAC;MACvC,IAAIoG,WAAW,GAAQ,EAAE;MACzB,IAAInD,OAAO,CAACE,uBAAuB,IAAI,IAAI,EAAE;QAC5C,IAAMkD,GAAG,GAAGxV,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;QACzCuV,GAAG,CAACC,SAAS,GAAGtG,IAAI;QACpBqG,GAAG,CAACpG,KAAK,CAACsG,UAAU,GAAG,QAAQ;QAC/BF,GAAG,CAACpG,KAAK,CAACuG,QAAQ,GAAG,UAAU;QAC/BH,GAAG,CAACpG,KAAK,CAACvL,GAAG,GAAG,aAAa;QAC7B2R,GAAG,CAACpG,KAAK,CAACiB,UAAU,GAAG,IAAI,CAACjB,KAAK,CAACiB,UAAU,IAAI,EAAE;QAClDmF,GAAG,CAACpG,KAAK,CAACe,QAAQ,GAAG,IAAI,CAACf,KAAK,CAACe,QAAQ,GAAG,EAAE;QAC7CnQ,QAAQ,CAAC4V,IAAI,CAACC,WAAW,CAACL,GAAG,CAAC;QAC9B,IAAMM,IAAI,GAAGN,GAAG,CAACO,qBAAqB,EAAE;QACxC/V,QAAQ,CAAC4V,IAAI,CAACI,WAAW,CAACR,GAAG,CAAC;QAC9B,IAAML,CAAC,GAAGW,IAAI,CAAC3V,MAAM;QACrB,IAAM8V,GAAC,GAAG7D,OAAO,CAAClS,KAAK;QACvB,IAAI0D,IAAI,GAAG,CAAC;QACZ,IAAIE,KAAK,GAAGmS,GAAC;QAEbV,WAAW,GAAG;UACbjD,uBAAuB,EAAE6C,CAAC;UAC1B5C,wBAAwB,EAAE,CAAC;UAC3BgB,qBAAqB,EAAE3P,IAAI;UAC3B4P,sBAAsB,EAAE1P,KAAK;UAC7BoS,qBAAqB,EAAEf,CAAC;UACxBgB,sBAAsB,EAAE,CAAC;UACzBjW,KAAK,EAAE+V;SACP;QACD;OACA,MACI;QACJV,WAAW,GAAG;UACbjD,uBAAuB,EAAEF,OAAO,CAACE,uBAAuB;UACxDC,wBAAwB,EAAEH,OAAO,CAACG,wBAAwB;UAC1DgB,qBAAqB,EAAEnB,OAAO,CAACmB,qBAAqB;UACpDC,sBAAsB,EAAEpB,OAAO,CAACoB,sBAAsB;UACtD0C,qBAAqB,EAAE9D,OAAO,CAACE,uBAAuB;UACtD6D,sBAAsB,EAAE/D,OAAO,CAACG,wBAAwB;UACxDrS,KAAK,EAAEkS,OAAO,CAAClS;SACf;;MAGF,IAAMgV,CAAC,GAAG9C,OAAO,CAAClS,KAAK;MACvB,QAAQ,IAAI,CAACkP,KAAK,CAACE,SAAS;QAC3B,KAAK,OAAO;QACZ,KAAK,KAAK;UACTiG,WAAW,CAAChC,qBAAqB,GAAG2B,CAAC;UACrCK,WAAW,CAAC/B,sBAAsB,GAAG,CAAC;UACtC;QACD,KAAK,QAAQ;UACZ+B,WAAW,CAAChC,qBAAqB,GAAG2B,CAAC,GAAG,CAAC;UACzCK,WAAW,CAAC/B,sBAAsB,GAAG0B,CAAC,GAAG,CAAC;UAC1C;QACD;UACCK,WAAW,CAAChC,qBAAqB,GAAG,CAAC;UACrCgC,WAAW,CAAC/B,sBAAsB,GAAG0B,CAAC;;MAGxC,OAAOK,WAAW;IACnB;;EAED,OAAArG,UAAC;AAAD,CAAC,CAlqB+B9N,mBAAmB;;AAoqBnD;;;AAGA,IAAAgV,eAAA;EAAA,SAAAA,gBAAA;IACC;IACAvV,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACA;IACA;IACAD,MAAA,CAAAC,cAAA;;;;aAAuCrD,OAAO,CAAC,GAAG;;IAClDoD,MAAA,CAAAC,cAAA;;;;aAAgC;;IAChC;IACA;IACA;IACA;IACA;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;aAA2E;;IAC3ED,MAAA,CAAAC,cAAA;;;;aAA8B;;IAC9BD,MAAA,CAAAC,cAAA;;;;aAA2B;;IAC3BD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;aAAoC;;EACrC;EAAA,OAAAsV,eAAC;AAAD,CAAC,CAhCD;;AAkCA;;;AAGA,IAAAC,gBAAA,0BAAAhV,MAAA;EAAsCC,SAAA,CAAA+U,gBAAA,EAAAhV,MAAA;EAAtC,SAAAgV,iBAAA;IAAA,IAAA7U,KAAA,GAAAH,MAAA,aAAAA,MAAA,CAAA2B,KAAA,OAAAoE,SAAA;IACCvG,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA+E;;IAC/EX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA0B;;IAC1BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAqD;;IACrDX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA0B;;IAE1BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAiC;;;EA8XlC;;;;;WA5XC,SAAA7C,CAAe8G,WAAwB;MACtC,QAAQ,IAAI,CAAC6Q,QAAQ;QACpB,KAAK,UAAU;UACd,IAAI,CAACC,eAAe,CAAC9Q,WAAW,CAAC;UACjC;QACD;UACCpE,MAAA,CAAAN,SAAA,CAAM6F,OAAO,CAAAnF,IAAA,OAACgE,WAAW,CAAC;UAC1B;;IAEH;;;;;;WAEA,SAAA9G,CAAuB8G,WAAwB;MAC9C,IAAMS,KAAK,GAAG,IAAI,CAACnE,MAAM,IAAI0D,WAAW;MAExC,IAAI,CAACoL,UAAU,CAAC3K,KAAK,CAAC;MAEtB,IAAM/G,WAAW,GAAG,IAAI,CAACyD,cAAc,EAAE;MACzC,IAAMxC,OAAO,GAAG8F,KAAK,CAAC9F,OAAO;MAC7B,IAAMqO,UAAU,GAAGvI,KAAK,CAAC7D,KAAK;MAC9B,IAAMyD,YAAY,GAAG,IAAI,CAACpE,SAAS,CAACqE,aAAa;MAEjD;MACA3F,OAAO,CAAC+F,IAAI,EAAE;MACd,IAAIhH,WAAW,EAAE;QAChB2G,YAAY,CAACK,IAAI,EAAE;;MAGpB;MACA,IAAI8D,MAAM,GAAI,IAAI,CAACA,MAAM,IAAI,CAAE;MAC/B,IAAIM,UAAU,GAAI,IAAI,CAACA,UAAU,IAAI,CAAE;MACvC,IAAIiM,UAAU,GAAG,CAAC;MAClB,IAAIC,WAAW,GAAG,IAAI,CAACA,WAAW;MAClC,IAAIC,MAAM,GAAGD,WAAW,IAAI,MAAM,GAAG,MAAM,GAAGA,WAAW,IAAI,QAAQ;MACrE,IAAME,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAMC,KAAK,GAAG,IAAI,CAACxH,KAAK,CAACE,SAAS,IAAI,MAAM;MAC5C,IAAMuH,OAAO,GAAG,IAAI,CAACA,OAAO,IAAI,CAAC;MACjC,IAAIC,SAAS,GAAGF,KAAK,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;MACxC,IAAMG,aAAa,GAAG,CAAC,IAAI,CAACC,aAAa;MAEzC;MACA,IAAI,CAAC,IAAI,CAAC3H,SAAS,EAAE;QACpB,IAAI,CAACkB,QAAQ,CAACrK,KAAK,CAAC;;MAGrB;MACA,IAAIwQ,MAAM,IAAI,MAAM,EAAE;QACrB;QACA,IAAIO,UAAQ,GAAG,CAAC;QAChB,IAAIC,QAAQ,GAAG,CAAC;QAChBnZ,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC0P,SAAU,EAAE,UAACyB,IAAI,EAAEC,MAAM;UACzC,IAAMyF,UAAU,GAAGjM,UAAU,GAAIuG,IAAI,CAAC5Q,KAAK,IAAI+J,MAAM,GAAG6G,IAAI,CAAC3Q,MAAM,CAAC,GAAI,CAAC,GAAG,CAAC2W,SAAS;UACtF,IAAIN,UAAU,GAAGS,UAAQ,EAAE;YAC1BA,UAAQ,GAAGT,UAAU;;QAEvB,CAAC,CAAC;QACF,IAAII,KAAK,IAAI,MAAM,EAAE;UACpBM,QAAQ,GAAG,CAACD,UAAQ,GAAGT,UAAU,GAAG,CAAC,IAAIvY,KAAK,CAAC2M,OAAO;SACtD,MACI,IAAIgM,KAAK,IAAI,OAAO,EAAE;UAC1BM,QAAQ,GAAG,CAACD,UAAQ,GAAGT,UAAU,GAAG,CAAC,IAAIvY,KAAK,CAAC2M,OAAO;SACtD,MACI;UACJsM,QAAQ,GAAG3M,UAAU,GAAGtM,KAAK,CAAC2M,OAAO;;QAEtCsM,QAAQ,GAAGjZ,KAAK,CAACkZ,cAAc,CAACD,QAAQ,CAAC;QACzCR,MAAM,GAAIQ,QAAQ,IAAI,GAAG,IAAMA,QAAQ,IAAI,EAAG;;MAG/C,IAAIR,MAAM,IAAI,IAAI,IAAIK,aAAa,EAAE;QACpC,IAAI,CAAC1H,SAAU,CAAC+H,OAAO,EAAE;QACzB,IAAI,CAACJ,aAAa,GAAG,IAAI;;MAG1B;MACA;MACA;MAEA;MACAjZ,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC0P,SAAU,EAAE,UAACyB,IAAI,EAAEC,MAAM;QAEzC,IAAMsG,UAAU,GAAGvG,IAAI,CAAC3Q,MAAM;QAE9B;QACA;QACA,IAAI,CAACwW,MAAM,EAAE;UACZ1M,MAAM,IAAIoN,UAAU;;QAGrB;QACA,IAAI,CAAEP,SAAS,IAAI,CAAC,CAAC,IAAIJ,MAAM,IAAMI,SAAS,IAAI,CAAC,IAAI,CAACJ,MAAO,KAAKK,aAAa,EAAE;UAClFjG,IAAI,CAACE,UAAU,CAACoG,OAAO,EAAE;;QAG1B;QACA,IAAIE,cAAc,GAAG/M,UAAU;QAC/BiM,UAAU,GAAG,CAAC;QAEd;QACA,IAAII,KAAK,IAAI,QAAQ,EAAE;UACtBU,cAAc,IAAKxG,IAAI,CAAC5Q,KAAK,IAAI+J,MAAM,GAAGoN,UAAU,CAAC,GAAI,CAAC,GAAG,CAACP,SAAS;UACvEN,UAAU,GAAGc,cAAc,GAAG/M,UAAU;;QAGzC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA+M,cAAc,IAAK9T,IAAI,CAACC,EAAE,IAAIiT,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC;QAEhD;QACAtW,OAAO,CAAC+F,IAAI,EAAE;QACd,IAAIhH,WAAW,EAAE;UAChB2G,YAAY,CAACK,IAAI,EAAE;;QAGpB;QACA/F,OAAO,CAACmX,MAAM,CAACD,cAAc,CAAC;QAC9B,IAAInY,WAAW,EAAE;UAChB2G,YAAY,CAACyR,MAAM,CAACD,cAAc,CAAC;;QAGpC,IAAIE,UAAU,GAAG,CAAC;QAClBzZ,MAAM,CAAC4B,IAAI,CAACmR,IAAI,CAACE,UAAU,EAAE,UAACC,KAAK,EAAEF,MAAM;UAE1C;UACA,IAAM0G,IAAI,GAAGxG,KAAK,CAAC9B,IAAI;UACvB,IAAMuI,SAAS,GAAGzG,KAAK,CAAC/Q,KAAK;UAE7B;UACAsX,UAAU,GAAIE,SAAS,GAAG,CAAC,IAAKzN,MAAM,GAAGoN,UAAU,CAAC,GAAGP,SAAS;UAChE1W,OAAO,CAACmX,MAAM,CAACC,UAAU,CAAC;UAC1B,IAAIrY,WAAW,EAAE;YAChB2G,YAAY,CAACyR,MAAM,CAACC,UAAU,CAAC;;UAGhC;UACA,IAAIvG,KAAK,CAAC7B,KAAK,EAAE;YAChBhP,OAAO,CAAC+F,IAAI,EAAE;YACdL,YAAY,CAACK,IAAI,EAAE;YAEnB/F,OAAO,CAACyP,IAAI,GAAGoB,KAAK,CAAC7B,KAAK;YAC1B,IAAIjQ,WAAW,EAAE;cAChB2G,YAAY,CAAC+J,IAAI,GAAGoB,KAAK,CAAC7B,KAAK;;;UAIjC,IAAI6B,KAAK,CAACtI,IAAI,EAAE;YACfvI,OAAO,CAAC+F,IAAI,EAAE;YACd/F,OAAO,CAACoI,SAAS,GAAGyI,KAAK,CAACtI,IAAI,CAACoE,KAAK,EAAE;YACtC;;UAGD;UACA3M,OAAO,CAACoP,YAAY,GAAG,QAAQ;UAC/BpP,OAAO,CAACkP,SAAS,GAAG,QAAQ;UAC5B,IAAInQ,WAAW,EAAE;YAChB2G,YAAY,CAAC0J,YAAY,GAAG,QAAQ;YACpC1J,YAAY,CAACwJ,SAAS,GAAG,QAAQ;;UAGlC;UACA,IAAIb,UAAU,EAAE;YACfrO,OAAO,CAAC8Q,QAAQ,CAACuG,IAAI,EAAE,CAAC,EAAE,CAACf,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAGzM,MAAM,GAAGoN,UAAU,GAAG,CAAC,CAAC,CAAC;;UAE7E,IAAIlY,WAAW,EAAE;YAChB2G,YAAY,CAACoL,QAAQ,CAACuG,IAAI,EAAE,CAAC,EAAE,CAACf,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAGzM,MAAM,GAAGoN,UAAU,GAAG,CAAC,CAAC,CAAC;;UAGlF,IAAIpG,KAAK,CAACtI,IAAI,EAAE;YACfvI,OAAO,CAACyG,OAAO,EAAE;YACjB;;UAGD;UACA,IAAIoK,KAAK,CAAC7B,KAAK,EAAE;YAChBhP,OAAO,CAACyG,OAAO,EAAE;YACjBf,YAAY,CAACe,OAAO,EAAE;;UAGvB;UACA2Q,UAAU,GAAG,CAACE,SAAS,GAAG,CAAC,GAAGb,OAAO,KAAK5M,MAAM,GAAGoN,UAAU,CAAC,GAAGP,SAAS;UAC1E1W,OAAO,CAACmX,MAAM,CAACC,UAAU,CAAC;UAC1B,IAAIrY,WAAW,EAAE;YAChB2G,YAAY,CAACyR,MAAM,CAACC,UAAU,CAAC;;QAGjC,CAAC,CAAC;QAEF;QACApX,OAAO,CAACyG,OAAO,EAAE;QACjB,IAAI1H,WAAW,EAAE;UAChB2G,YAAY,CAACe,OAAO,EAAE;;QAGvB;QACA,IAAI8P,MAAM,EAAE;UACX1M,MAAM,IAAIoN,UAAU;;MAGtB,CAAC,CAAC;MAEF;MACAjX,OAAO,CAACyG,OAAO,EAAE;MACjB,IAAI1H,WAAW,EAAE;QAChB2G,YAAY,CAACe,OAAO,EAAE;;IAExB;;;;;;WAEA,SAAAlI,CAAgBuH,KAAkB;MACjC,QAAQ,IAAI,CAACoQ,QAAQ;QACpB,KAAK,UAAU;UACd,OAAO,IAAI,CAACqB,gBAAgB,CAACzR,KAAK,CAAC;QACpC;UACC,OAAO7E,MAAA,CAAAN,SAAA,CAAMwP,QAAQ,CAAA9O,IAAA,OAACyE,KAAK,CAAC;;IAE/B;;;;;;WAEA,SAAAvH,CAAwBuH,KAAkB;MAA1C,IAAA1E,KAAA;MACC,IAAMpB,OAAO,GAAG8F,KAAK,CAAC9F,OAAO;MAC7B,IAAM0F,YAAY,GAAG,IAAI,CAACpE,SAAS,CAACqE,aAAa;MAEjD;MACA,IAAI,CAACsJ,SAAS,GAAG,EAAE;MACnB,IAAI,CAAC2H,aAAa,GAAG,KAAK;MAE1B;MACA5W,OAAO,CAAC+F,IAAI,EAAE;MACdL,YAAY,CAACK,IAAI,EAAE;MACnB,IAAI,CAAC0K,UAAU,CAAC3K,KAAK,EAAE,IAAI,CAAC;MAE5B;MACA,IAAMsL,KAAK,GAAG,IAAI,CAACrC,IAAI,CAACsC,QAAQ,EAAE,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC;MACjE,IAAIC,aAAa,GAAG,IAAI;MAExB;MACA,IAAIvF,OAAO,GAAG,CAAC;MACftO,MAAM,CAAC4B,IAAI,CAAC6R,KAAK,EAAE,UAACV,IAAI,EAAEC,MAAM;QAE/B;QACA,IAAIgB,MAAM,GAAGlU,aAAa,CAACoT,KAAK,CAACH,IAAI,EAAE,KAAK,EAAEtP,KAAI,CAAC4N,KAAK,CAAC6C,gBAAgB,CAAC;QAE1E;QACA,IAAIC,QAAQ,GAAU;UACrB7F,OAAO,EAAEA,OAAO;UAChB8F,MAAM,EAAE,CAAC;UACTjS,KAAK,EAAE,CAAC;UACRC,MAAM,EAAE,CAAC;UACTyD,IAAI,EAAE,CAAC;UACPE,KAAK,EAAE,CAAC;UACRkN,UAAU,EAAE;SACZ;QAED,IAAIwB,YAAgC;QACpC,IAAIE,WAA8B;QAClC,IAAIC,iBAAqC;QAEzC;QACA5U,MAAM,CAAC4B,IAAI,CAACoS,MAAM,EAAE,UAACd,KAAK,EAAEF,MAAM;UAEjC;UACA,IAAIE,KAAK,CAACe,IAAI,IAAI,QAAQ,EAAE;YAC3B,IAAIf,KAAK,CAAC9B,IAAI,IAAI,KAAK,EAAE;cACxB,IAAI,CAACyC,aAAa,EAAE;gBACnBxR,OAAO,CAACyG,OAAO,EAAE;gBACjBf,YAAY,CAACe,OAAO,EAAE;gBACtB+K,aAAa,GAAG,IAAI;;cAErBc,WAAW,GAAGvQ,SAAS;cACvBqQ,YAAY,GAAGrQ,SAAS;cACxBwQ,iBAAiB,GAAGxQ,SAAS;aAC7B,MACI;cACJ,IAAI6Q,MAAM,GAAGnV,aAAa,CAACoV,YAAY,CAAChC,KAAK,CAAC9B,IAAI,CAAC;cACnD,IAAMQ,SAAS,GAAGnO,KAAI,CAACoO,aAAa,CAACoD,MAAM,CAAC;cAC5C5S,OAAO,CAAC+F,IAAI,EAAE;cACdL,YAAY,CAACK,IAAI,EAAE;cACnB/F,OAAO,CAACyP,IAAI,GAAGF,SAAS;cACxB6C,YAAY,GAAG7C,SAAS;cACxB,IAAIqD,MAAM,CAACrK,IAAI,EAAE;gBAChB+J,WAAW,GAAUM,MAAM,CAACrK,IAAI;;cAEjC,IAAUqK,MAAO,CAAC9S,KAAK,EAAE;gBACxByS,iBAAiB,GAAG3U,KAAK,CAACkV,QAAQ,CAAOF,MAAO,CAAC9S,KAAK,CAAC;;cAExD0R,aAAa,GAAG,KAAK;;;UAIvB;UAAA,KACK,IAAIX,KAAK,CAACe,IAAI,IAAI,OAAO,EAAE;YAE/B;YACA,KAAK,IAAIjT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkS,KAAK,CAAC9B,IAAI,CAACxC,MAAM,EAAE5N,CAAC,EAAE,EAAE;cAE3C,IAAM0Y,IAAI,GAAGxG,KAAK,CAAC9B,IAAI,CAACpQ,CAAC,CAAC;cAE1B;cACA,IAAMqT,OAAO,GAAG5Q,KAAI,CAAC6Q,YAAY,CAACoF,IAAI,EAAErX,OAAO,CAAC;cAChD,IAAIkT,UAAU,GAAGlB,OAAO,CAAClS,KAAK;cAE9B;cACA,IAAIsS,YAAY,IAAIG,iBAAiB,IAAKA,iBAAiB,GAAGW,UAAW,EAAE;gBAC1EA,UAAU,GAAGX,iBAAiB;;cAG/B,IAAM4B,WAAW,GAAGnC,OAAO,CAACE,uBAAuB,GAAGF,OAAO,CAACG,wBAAwB;cACtF,IAAIgC,WAAW,GAAGrC,QAAQ,CAAC/R,MAAM,EAAE;gBAClC+R,QAAQ,CAAC/R,MAAM,GAAGoU,WAAW;;cAE9B,IAAInC,OAAO,CAACE,uBAAuB,GAAGJ,QAAQ,CAACC,MAAM,EAAE;gBACtDD,QAAQ,CAACC,MAAM,GAAGC,OAAO,CAACE,uBAAuB;;cAGlDJ,QAAQ,CAAChS,KAAK,IAAIoT,UAAU;cAC5BpB,QAAQ,CAACtO,IAAI,IAAIwO,OAAO,CAACmB,qBAAqB;cAC9CrB,QAAQ,CAACpO,KAAK,IAAIsO,OAAO,CAACoB,sBAAsB;cAChDtB,QAAQ,CAAClB,UAAU,CAACzJ,IAAI,CAAC;gBACxB6H,KAAK,EAAEoD,YAAY;gBACnB7J,IAAI,EAAE+J,WAAW;gBACjBvD,IAAI,EAAEsI,IAAI;gBACVvX,KAAK,EAAEoT,UAAU;gBACjBnT,MAAM,EAAEoU,WAAW,GAAGnC,OAAO,CAACG,wBAAwB;gBACtD3O,IAAI,EAAEwO,OAAO,CAACmB,qBAAqB;gBACnCzP,KAAK,EAAEsO,OAAO,CAACoB,sBAAsB;gBACrCrB,MAAM,EAAEC,OAAO,CAACE,uBAAuB;gBACvClG,OAAO,EAAE,CAAC;gBACVC,OAAO,EAAEkI;eACT,CAAC;;;QAKL,CAAC,CAAC;QAEF,IAAI/S,KAAI,CAAC4N,KAAK,CAACoF,UAAU,YAAYhX,OAAO,EAAE;UAC7C0U,QAAQ,CAAC/R,MAAM,IAAIqB,KAAI,CAAC4N,KAAK,CAACoF,UAAU,CAAC7V,KAAK;SAC9C,MACI;UACJuT,QAAQ,CAAC/R,MAAM,IAAIqB,KAAI,CAAC4N,KAAK,CAACoF,UAAU,IAAI,GAAG;;QAGhDhT,KAAI,CAAC6N,SAAU,CAAC9H,IAAI,CAAC2K,QAAQ,CAAC;QAE9B;QACA7F,OAAO,IAAI6F,QAAQ,CAAC/R,MAAM;MAG3B,CAAC,CAAC;MAEF,IAAI,CAACyR,aAAa,EAAE;QACnBxR,OAAO,CAACyG,OAAO,EAAE;QACjBf,YAAY,CAACe,OAAO,EAAE;;MAGvB;MACA9I,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAAC0P,SAAS,EAAE,UAAC6C,QAAQ;QACpCnU,MAAM,CAAC4B,IAAI,CAACuS,QAAQ,CAAClB,UAAU,EAAE,UAACC,KAAK;UACtCA,KAAK,CAAC5E,OAAO,IAAI7I,IAAI,CAACoU,KAAK,CAAC,CAAC1F,QAAQ,CAAC/R,MAAM,GAAG8Q,KAAK,CAAC9Q,MAAM,IAAI+R,QAAQ,CAACC,MAAM,GAAGlB,KAAK,CAACkB,MAAM,CAAC,IAAI,CAAC,CAAC;QACrG,CAAC,CAAC;MACH,CAAC,CAAC;MAEF/R,OAAO,CAACyG,OAAO,EAAE;MACjBf,YAAY,CAACe,OAAO,EAAE;MAEtB,OAAO;QACNjD,IAAI,EAAE,CAAC;QACPC,GAAG,EAAE,CAAC;QACNC,KAAK,EAAE,CAAC;QACRC,MAAM,EAAE;OACR;IACF;;EAED,OAAAsS,gBAAC;AAAD,CAAC,CAtYqCnH,UAAU;;AAwYhD;;;AAGA,IAAA2I,WAAA,0BAAAxW,MAAA;EAAiCC,SAAA,CAAAuW,WAAA,EAAAxW,MAAA;EAchC,SAAAwW,YAAYtW,QAAwB,EAAEzB,KAAmC;IAAzE,IAAA0B,KAAA,GACCH,MAAA,CAAAI,IAAA,OAAMF,QAAQ,CAAC;IAdhBV,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAEAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAEAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAICA,KAAI,CAAC1B,KAAK,GAAGA,KAAK;;EACnB;;;;;WAEA,SAAAnB,CAAA;MACC,IAAI,CAAC,IAAI,CAAC4D,YAAY,EAAE;QAGvB,IAAI2S,CAAC,GAAG,CAAC;QACT,IAAIC,CAAC,GAAG,CAAC;QAET,IAAI,IAAI,CAACjV,KAAK,EAAE;UACfgV,CAAC,GAAG,IAAI,CAAChV,KAAK;;QAEf,IAAI,IAAI,CAACC,MAAM,EAAE;UAChBgV,CAAC,GAAG,IAAI,CAAChV,MAAM;;QAGhB,IAAI,CAACoC,YAAY,GAAG;UACnBqB,IAAI,EAAE,CAAC;UACPC,GAAG,EAAE,CAAC;UACNC,KAAK,EAAEoR,CAAC;UACRnR,MAAM,EAAEoR;SACR;QAED,IAAI,CAACnR,UAAU,CAAC,IAAI,CAACzB,YAAY,CAAC;;MAEnC,OAAO,IAAI,CAACA,YAAY;IACzB;;;;;;WAEA,SAAA5D,CAAkB8G,WAAwB;MACzCpE,MAAA,CAAAN,SAAA,CAAM6F,OAAO,CAAAnF,IAAA,OAACgE,WAAW,CAAC;MAE1B,IAAI,IAAI,CAAC3F,KAAK,EAAE;QACf,IAAMoG,KAAK,GAAG,IAAI,CAACnE,MAAM,IAAI0D,WAAW;QAExC,IAAI,IAAI,CAACqB,OAAO,KAAK3E,SAAS,EAAE;UAC/B,IAAI,CAAC2E,OAAO,GAAGjH,SAAS,CAAC,IAAI,CAACC,KAAK,CAAC;UACpCoG,KAAK,CAACY,OAAO,GAAG,IAAI;;QAGrB,IAAI,IAAI,CAACA,OAAO,IAAI,IAAI,CAACpF,SAAS,CAACiE,YAAY,EAAE;UAChD;;QAGD,IAAIO,KAAK,CAAC7D,KAAK,EAAE;UAEhB,IAAI,IAAI,CAACuG,WAAW,EAAE;YACrB1C,KAAK,CAAC9F,OAAO,CAACwI,WAAW,GAAG,IAAI,CAACA,WAAW,CAACmE,KAAK,CAAC,IAAI,CAAC+C,aAAa,IAAI,CAAC,CAAC;;UAE5E,IAAI,IAAI,CAACjH,UAAU,EAAE;YACpB3C,KAAK,CAAC9F,OAAO,CAACyI,UAAU,GAAG,IAAI,CAACA,UAAU;;UAE3C,IAAI,IAAI,CAACC,aAAa,EAAE;YACvB5C,KAAK,CAAC9F,OAAO,CAAC0I,aAAa,GAAG,IAAI,CAACA,aAAa;;UAEjD,IAAI,IAAI,CAACC,aAAa,EAAE;YACvB7C,KAAK,CAAC9F,OAAO,CAAC2I,aAAa,GAAG,IAAI,CAACA,aAAa;;UAGjD,IAAM7I,KAAK,GAAG,IAAI,CAACA,KAAK,IAAI,IAAI,CAACJ,KAAK,CAACgY,YAAY;UACnD,IAAM3X,MAAM,GAAG,IAAI,CAACA,MAAM,IAAI,IAAI,CAACL,KAAK,CAACiY,aAAa;UAEtD7R,KAAK,CAAC9F,OAAO,CAACE,SAAS,CAAC,IAAI,CAACR,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEI,KAAK,EAAEC,MAAM,CAAC;;QAGzD,IAAI,IAAI,CAAChB,WAAW,IAAI,IAAI,CAACyD,cAAc,EAAE,EAAE;UAC9C,IAAMqD,IAAI,GAAG,IAAI,CAAC+R,QAAQ,CAAC,IAAI,CAAClY,KAAK,CAAC;UAEtC,IAAI,CAAC4B,SAAS,CAACqE,aAAa,CAACzF,SAAS,CAAC2F,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;;;IAGrD;;;;;;WAEA,SAAAtH,CAAA;MACC0C,MAAA,CAAAN,SAAA,CAAM0L,KAAK,CAAAhL,IAAA,MAAE;MACb,IAAI,CAAC3B,KAAK,GAAGqC,SAAS;MACtB,IAAI,CAAC8V,UAAU,GAAG9V,SAAS;IAC5B;;;;;;WAEA,SAAAxD,CAAmBmB,KAAuB;MACzC,IAAI,IAAI,CAACmY,UAAU,KAAK9V,SAAS,EAAE;QAClC,IAAMjC,KAAK,GAAG,IAAI,CAACA,KAAK,IAAIJ,KAAK,CAACgY,YAAY;QAC9C,IAAM3X,MAAM,GAAG,IAAI,CAACA,MAAM,IAAIL,KAAK,CAACiY,aAAa;QAEjD;QACA,IAAMhY,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/CF,MAAM,CAACG,KAAK,GAAGA,KAAK;QACpBH,MAAM,CAACI,MAAM,GAAGA,MAAM;QAEtB,IAAMC,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAE;QAExCD,OAAO,CAAC8X,qBAAqB,GAAG,KAAK;QAErC9X,OAAO,CAACoI,SAAS,GAAG,IAAI,CAACuG,WAAW,EAAE;QACtC3O,OAAO,CAAC+X,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEjY,KAAK,EAAEC,MAAM,CAAC;QAErC,IAAI,CAACN,SAAS,CAACC,KAAK,CAAC,EAAE;UACtBM,OAAO,CAACwO,wBAAwB,GAAG,gBAAgB;UACnDxO,OAAO,CAACE,SAAS,CAACR,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEI,KAAK,EAAEC,MAAM,CAAC;;QAG9C,IAAI,CAAC8X,UAAU,GAAGlY,MAAM;;MAGzB,OAAO,IAAI,CAACkY,UAAU;IACvB;;EAED,OAAAJ,WAAC;AAAD,CAAC,CA3HgCzW,mBAAmB;;AA6HpD;;;AAGA,IAAAgX,mBAAA;EAKC,SAAAA,oBAAmB3Y,KAAQ,EAASqD,KAAa;;;;;aAA9BrD;;;;;;aAAiBqD;;IAJpCjC,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;aAA4B;;IAC5BD,MAAA,CAAAC,cAAA;;;;aAAyB;;IAGxB,IAAIhD,MAAM,CAACua,QAAQ,CAAC,aAAa,CAAC,IAAI5Y,KAAK,YAAY6Y,KAAK,EAAE;MAC7D,IAAI,CAACzZ,EAAE,GAAGY,KAAK,CAAC8Y,UAAU;KAE1B,MAAM;MACN,IAAI,CAAC1Z,EAAE,GAAG,IAAI;;EAEhB;EACD,OAAAuZ,mBAAC;AAAD,CAAC,CAbD;;AAmCA;;;AAGA,IAAAI,cAAA,0BAAAnX,MAAA;EAAoCC,SAAA,CAAAkX,cAAA,EAAAnX,MAAA;EA0CnC,SAAAmX,eAAA;IAAA,IAAAhX,KAAA,GACCH,MAAA,CAAAI,IAAA,OAAM,aACN,CAAC,CAAC;IA3CHZ,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA2BxB,QAAQ,CAACC,aAAa,CAAC,KAAK;;IACvDY,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAmCxB,QAAQ,CAACC,aAAa,CAAC,KAAK;;IAE/DY,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAoC;;IACpCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA0C;;IAC1CX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAmCA,KAAI,CAACI,QAAQ,CAAC,CAAC;;IAElDf,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IAEAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA8CxB,QAAQ,CAACC,aAAa,CAAC,QAAQ;;IAC7EY,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAsDA,KAAI,CAACiX,cAAc,CAACpY,UAAU,CAAC,IAAI;;IAEzFQ,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA2B;;IAC3BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA4B;;IAE5BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAiC;;IACjCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAkC;;IAElCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA4BkX,MAAM,CAACC;;IACnC9X,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAsC;;IAEtCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA2D;;IAC3DX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAsE;;IAEtEX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA6B;;IAC7BX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAgE;;IAEhEX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAmC;;IACnCX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA+B;;IAE/B;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA6C,IAAIoX,GAAG;;IACpD/X,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAkE;;IAClEX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAAmE;;IAEnEX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;;;IACAX,MAAA,CAAAC,cAAA,CAAAU,KAAA;;;;aAA2C,IAAI9D,SAAS,CAAC;QACxD8D,KAAI,CAACqX,wBAAwB,CAACrX,KAAI,CAACsX,qBAAqB,CAAC;MAC1D,CAAC;;IAMAtX,KAAI,CAACK,IAAI,CAACgU,WAAW,CAACrU,KAAI,CAACuX,SAAS,CAAC;IAErC;IACAvX,KAAI,CAACwX,UAAU,GAAGhZ,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAClDuB,KAAI,CAACuE,aAAa,GAAGvE,KAAI,CAACwX,UAAU,CAAC3Y,UAAU,CAAC,IAAI,EAAE;MAAEoG,KAAK,EAAE;IAAK,CAAE,CAAE;IACxEjF,KAAI,CAACuE,aAAa,CAACmS,qBAAqB,GAAG,KAAK;IAEhD;IACAQ,MAAM,CAACnZ,gBAAgB,CAAC,QAAQ,EAAE,UAAC0Z,GAAG;MACrCzX,KAAI,CAACyD,UAAU,GAAGyT,MAAM,CAACC,gBAAgB;IAC1C,CAAC,CAAC;IAEF;IACA;IACA,IAAI7a,MAAM,CAACua,QAAQ,CAAC,aAAa,CAAC,EAAE;MACnCrY,QAAQ,CAACT,gBAAgB,CAAC,YAAY,EAAE,UAAC2Z,EAAE;QAC1C,IAAI1X,KAAI,CAACyF,SAAS,CAAC0F,MAAM,KAAK,CAAC,EAAE;UAChCuM,EAAE,CAACC,cAAc,EAAE;;MAErB,CAAC,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAE,CAAC;;IAGvB;IACA,IAAItb,MAAM,CAACua,QAAQ,CAAC,aAAa,CAAC,EAAE;MACnC7W,KAAI,CAACK,IAAI,CAACtC,gBAAgB,CAAC,OAAO,EAAE,UAAC2Z,EAAE;QACtC,IAAIG,OAAO,GAAG,KAAK;QACnB7X,KAAI,CAACuF,SAAS,CAACuS,OAAO,CAAC,UAACC,GAAG;UAC1B,IAAIA,GAAG,CAACC,SAAS,EAAE;YAClBH,OAAO,GAAG,IAAI;YACd,OAAO,KAAK;;QAEd,CAAC,CAAC;QACF,IAAIA,OAAO,EAAE;UACZH,EAAE,CAACC,cAAc,EAAE;;MAErB,CAAC,EAAE;QAAEC,OAAO,EAAE;MAAK,CAAE,CAAC;;;EAGxB;EA/D2C;;;;;WAiE3C,SAAAza,CAAqBmM,EAAU,EAAEC,EAAU,EAAEC,EAAU,EAAEC,EAAU;MAClE,OAAO,IAAI,CAACjJ,YAAY,CAAC5B,OAAO,CAACqZ,oBAAoB,CAAC3O,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IACtE;;;;;;WAEA,SAAAtM,CAAqBmM,EAAU,EAAEC,EAAU,EAAE2O,OAAe,EAAE1O,EAAU,EAAEC,EAAU,EAAE0O,OAAe;MACpG,OAAO,IAAI,CAAC3X,YAAY,CAAC5B,OAAO,CAACwZ,oBAAoB,CAAC9O,EAAE,EAAEC,EAAE,EAAE2O,OAAO,EAAE1O,EAAE,EAAEC,EAAE,EAAE0O,OAAO,CAAC;IACxF;;;;;;WAEA,SAAAhb,CAAckb,QAAwB,EAAEC,UAA0B,EAAEC,UAAkB,EAAE7Z,KAAa,EAAEC,MAAc;MACpH;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MAEA;MACA;MAEA;MAEA,IAAI,CAACsY,cAAc,CAACvY,KAAK,GAAGA,KAAK;MACjC,IAAI,CAACuY,cAAc,CAACtY,MAAM,GAAGA,MAAM;MAEnC,IAAI,CAAC6Z,eAAe,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE/Z,KAAK,EAAEC,MAAM,CAAC;MAEnD;MACA;MAEA2Z,UAAU,CAACI,cAAc,CAAC,IAAI,CAACF,eAAe,CAAC;MAC/CH,QAAQ,CAACK,cAAc,CAAC,IAAI,CAACF,eAAe,CAAC;MAE7C,OAAO,IAAI,CAACA,eAAe,CAACG,aAAa,CAAC,IAAI,CAAC1B,cAAc,EAAEsB,UAAU,CAAE;IAC5E;;;;;;WAEA,SAAApb,CAAA;MACC,OAAO,IAAIwI,eAAe,CAAC,IAAI,CAAC;IACjC;;;;;;WAEA,SAAAxI,CAAA;MACC,OAAO,IAAI4N,cAAc,CAAC,IAAI,CAAC;IAChC;;;;;;WAEA,SAAA5N,CAASwQ,IAAY,EAAEC,KAAsB;MAC5C,OAAO,IAAIF,UAAU,CAAC,IAAI,EAAEC,IAAI,EAAEC,KAAK,CAAC;IACzC;;;;;;WAEA,SAAAzQ,CAAA;MACC,OAAO,IAAIyX,eAAe,EAAE;IAC7B;;;;;;WAEA,SAAAzX,CAAewQ,IAAY,EAAEC,KAAsB;MAClD,OAAO,IAAIiH,gBAAgB,CAAC,IAAI,EAAElH,IAAI,EAAEC,KAAK,CAAC;IAC/C;;;;;;WAEA,SAAAzQ,CAAYmB,KAAmC;MAC9C,OAAO,IAAI+X,WAAW,CAAC,IAAI,EAAE/X,KAAK,CAAC;IACpC;;;;;;WAEA,SAAAnB,CAAOuB,KAAa,EAAEC,MAAc;MAApC,IAAAqB,KAAA;MACC,IAAI,CAAC4Y,YAAY,GAAGla,KAAK;MACzB,IAAI,CAACma,aAAa,GAAGla,MAAM;MAC3B,IAAI,CAACma,MAAM,GAAG9W,IAAI,CAAC+W,KAAK,CAACra,KAAK,GAAG,IAAI,CAAC+E,UAAU,CAAC;MACjD,IAAI,CAACuV,OAAO,GAAGhX,IAAI,CAAC+W,KAAK,CAACpa,MAAM,GAAG,IAAI,CAAC8E,UAAU,CAAC;MAEnDlH,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAACkG,MAAM,EAAE,UAACK,KAAK;QAC9B,IAAIA,KAAK,EAAE;UACVA,KAAK,CAAC7D,KAAK,GAAG,IAAI;UAElB,IAAI6D,KAAK,CAAChG,KAAK,IAAI,IAAI,EAAE;YACxBgG,KAAK,CAACrE,IAAI,CAAC3B,KAAK,GAAGgG,KAAK,CAAChG,KAAK;YAC9BgG,KAAK,CAACrE,IAAI,CAACuN,KAAK,CAAClP,KAAK,GAAGgG,KAAK,CAAChG,KAAK,GAAG,IAAI;WAC3C,MACI;YACJgG,KAAK,CAACrE,IAAI,CAAC3B,KAAK,GAAGsB,KAAI,CAAC8Y,MAAM;YAC9BpU,KAAK,CAACrE,IAAI,CAACuN,KAAK,CAAClP,KAAK,GAAGA,KAAK,GAAG,IAAI;;UAGtC,IAAIgG,KAAK,CAAC/F,MAAM,IAAI,IAAI,EAAE;YACzB+F,KAAK,CAACrE,IAAI,CAAC1B,MAAM,GAAG+F,KAAK,CAAC/F,MAAM;YAChC+F,KAAK,CAACrE,IAAI,CAACuN,KAAK,CAACjP,MAAM,GAAG+F,KAAK,CAAC/F,MAAM,GAAG,IAAI;WAC7C,MACI;YACJ+F,KAAK,CAACrE,IAAI,CAAC1B,MAAM,GAAGqB,KAAI,CAACgZ,OAAO;YAChCtU,KAAK,CAACrE,IAAI,CAACuN,KAAK,CAACjP,MAAM,GAAGA,MAAM,GAAG,IAAI;;;MAG1C,CAAC,CAAC;MAEF;MACA,IAAI,CAAC6Y,UAAU,CAAC9Y,KAAK,GAAG,IAAI,CAACoa,MAAM;MACnC,IAAI,CAACtB,UAAU,CAAC7Y,MAAM,GAAG,IAAI,CAACqa,OAAO;MACrC,IAAI,CAACxB,UAAU,CAAC5J,KAAK,CAAClP,KAAK,GAAGA,KAAK,GAAG,IAAI;MAC1C,IAAI,CAAC8Y,UAAU,CAAC5J,KAAK,CAACjP,MAAM,GAAGA,MAAM,GAAG,IAAI;IAC7C;;;;;;WAEA,SAAAxB,CAAA;MACC,IAAMkD,IAAI,GAAG7B,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC7C,IAAMG,OAAO,GAAGyB,IAAI,CAACxB,UAAU,CAAC,IAAI,CAAE;MACtC,IAAM6F,KAAK,GAAG;QACbrE,IAAI,EAAEA,IAAI;QACVzB,OAAO,EAAEA,OAAO;QAChB6B,KAAK,EAAE,CAAC;QACRC,OAAO,EAAE,IAAI;QACbhC,KAAK,EAAEiC,SAAS;QAChBhC,MAAM,EAAEgC,SAAS;QACjBE,KAAK,EAAE,IAAI;QACXyE,OAAO,EAAE;OACT;MAEDjF,IAAI,CAACuN,KAAK,CAACuG,QAAQ,GAAG,UAAU;MAChC9T,IAAI,CAACuN,KAAK,CAACvL,GAAG,GAAG,KAAK;MACtBhC,IAAI,CAACuN,KAAK,CAACxL,IAAI,GAAG,KAAK;MAEvB,OAAOsC,KAAK;IACb;;;;;;WAEA,SAAAvH,CAAgBsD,KAAa;MAC5B,IAAM4D,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,IAAM8G,MAAM,GAAG9G,MAAM,CAAC8G,MAAM;MAC5B,KAAK,IAAI5N,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4N,MAAM,EAAE5N,CAAC,EAAE,EAAE;QAChC,IAAMmH,KAAK,GAAGL,MAAM,CAAC9G,CAAC,CAAC;QACvB,IAAImH,KAAK,CAACjE,KAAK,IAAIA,KAAK,EAAE;UACzB,OAAOiE,KAAK;;;IAGf;;;;;;WAEA,SAAAvH,CAASsD,KAAa,EAAEC,OAAuB;MAAvB,IAAAA,OAAA;QAAAA,OAAA,OAAuB;MAAA;MAC9C,IAAM2D,MAAM,GAAG,IAAI,CAACA,MAAM;MAE1B,IAAI4U,aAAa,GAAG,IAAI,CAACC,eAAe,CAACzY,KAAK,CAAC;MAC/C,IAAIwY,aAAa,EAAE;QAClB,OAAOA,aAAa;;MAGrB,IAAMvU,KAAK,GAAG,IAAI,CAACyU,mBAAmB,EAAE;MACxCzU,KAAK,CAACjE,KAAK,GAAGA,KAAK;MACnBiE,KAAK,CAAChE,OAAO,GAAGA,OAAO;MAEvB,IAAIgE,KAAK,CAAChE,OAAO,IAAI,IAAI,CAACoY,MAAM,EAAE;QACjCpU,KAAK,CAACrE,IAAI,CAAC3B,KAAK,GAAG,IAAI,CAACoa,MAAM;QAC9BpU,KAAK,CAACrE,IAAI,CAACuN,KAAK,CAAClP,KAAK,GAAG,IAAI,CAACka,YAAY,GAAG,IAAI;QACjDlU,KAAK,CAACrE,IAAI,CAAC1B,MAAM,GAAG,IAAI,CAACqa,OAAO;QAChCtU,KAAK,CAACrE,IAAI,CAACuN,KAAK,CAACjP,MAAM,GAAG,IAAI,CAACka,aAAa,GAAG,IAAI;;MAGpDxU,MAAM,CAAC0B,IAAI,CAACrB,KAAK,CAAC;MAElBL,MAAM,CAAC+U,IAAI,CAAC,UAACzV,CAAC,EAAEC,CAAC;QAChB,IAAID,CAAC,CAAClD,KAAK,GAAGmD,CAAC,CAACnD,KAAK,EAAE;UACtB,OAAO,CAAC;SACR,MACI,IAAIkD,CAAC,CAAClD,KAAK,GAAGmD,CAAC,CAACnD,KAAK,EAAE;UAC3B,OAAO,CAAC,CAAC;SACT,MACI;UACJ,OAAO,CAAC;;MAEV,CAAC,CAAC;MAEF,IAAM0K,MAAM,GAAG9G,MAAM,CAAC8G,MAAM;MAC5B,IAAMkO,UAAU,GAAG9c,MAAM,CAAC+c,OAAO,CAACjV,MAAM,EAAEK,KAAK,CAAC;MAChD,IAAI6U,IAAI;MAER,KAAK,IAAIhc,CAAC,GAAG8b,UAAU,GAAG,CAAC,EAAE9b,CAAC,GAAG4N,MAAM,EAAE5N,CAAC,EAAE,EAAE;QAC7C,IAAI8G,MAAM,CAAC9G,CAAC,CAAC,CAACmD,OAAO,EAAE;UACtB6Y,IAAI,GAAGlV,MAAM,CAAC9G,CAAC,CAAC;UAChB;;;MAIF,IAAImD,OAAO,EAAE;QACZ,IAAI6Y,IAAI,KAAK5Y,SAAS,EAAE;UACvB,IAAI,CAAC4W,SAAS,CAAClD,WAAW,CAAC3P,KAAK,CAACrE,IAAI,CAAC;SAEtC,MAAM;UACN,IAAI,CAACkX,SAAS,CAACiC,YAAY,CAAC9U,KAAK,CAACrE,IAAI,EAAEkZ,IAAI,CAAClZ,IAAI,CAAC;;;MAIpD,OAAOqE,KAAK;IACb;;;;;;WAEA,SAAAvH,CAAOsc,IAAyB;MAAhC,IAAAzZ,KAAA;MAEC,IAAI,CAAC0Z,YAAY,CAACvO,MAAM,GAAG,CAAC;MAE5B5O,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAACkG,MAAM,EAAE,UAACK,KAAK;QAC9B,IAAIA,KAAK,EAAE;UAEV,IAAIA,KAAK,CAAC7D,KAAK,IAAI6D,KAAK,CAAChE,OAAO,EAAE;YACjCV,KAAI,CAAC0Z,YAAY,CAAC3T,IAAI,CAACrB,KAAK,CAAC;YAE7BA,KAAK,CAAC9F,OAAO,CAAC+F,IAAI,EAAE;YACpBD,KAAK,CAAC9F,OAAO,CAAC6Z,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEzY,KAAI,CAAC8Y,MAAM,EAAE9Y,KAAI,CAACgZ,OAAO,CAAC;;;MAG3D,CAAC,CAAC;MAEF,IAAI,CAACzU,aAAa,CAACI,IAAI,EAAE;MACzB;MACA;MACA,IAAI,CAACJ,aAAa,CAACyC,SAAS,GAAG,MAAM;MACrC,IAAI,CAACzC,aAAa,CAACoS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACmC,MAAM,EAAE,IAAI,CAACE,OAAO,CAAC;MAE5DS,IAAI,CAACtT,MAAM,CAAC,IAAI,CAAC3F,YAAY,CAAC;MAE9B,IAAI,CAAC+D,aAAa,CAACc,OAAO,EAAE;MAE5B;MAEA9I,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAACub,YAAY,EAAE,UAAChV,KAAK;QACpCA,KAAK,CAAC9F,OAAO,CAACyG,OAAO,EAAE;QACvBX,KAAK,CAAC7D,KAAK,GAAG,KAAK;MACpB,CAAC,CAAC;MACF;MAEA,IAAI,IAAI,CAAC0E,SAAS,CAACoU,IAAI,IAAI,IAAI,CAACrC,qBAAqB,EAAE;QACtD,IAAI,CAACsC,mBAAmB,CAACC,GAAG,EAAE;;IAEhC;;;;;;WAEA,SAAA1c,CAAQ4a,GAAwB;MAC/B,IAAM1a,EAAE,GAAGD,YAAY,CAAC,EAAE,IAAI,CAAC6D,QAAQ,CAAC;MACxC,IAAM6F,KAAK,GAAGhL,KAAK,CAACge,OAAO,CAACzc,EAAE,CAAC,CAACkO,KAAK,EAAE;MACvC,IAAI,CAACwO,SAAS,CAACjT,KAAK,CAAC,GAAGiR,GAAG;MAC3B,OAAOjR,KAAK;IACb;;;;;;WAEA,SAAA3J,CAAc4a,GAAwB;MACrC,IAAIA,GAAG,CAAC9W,QAAQ,KAAKN,SAAS,EAAE;QAC/B,OAAO,IAAI,CAACoZ,SAAS,CAAChC,GAAG,CAAC9W,QAAQ,CAAC;;IAErC;;EAEA;EACA;EACA;;;;;WAEA,SAAA9D,CAAyC6c,aAAgB,EAAEC,WAA2B;MAA3B,IAAAA,WAAA;QAAAA,WAAA,OAA2B;MAAA;MACrF,IAAM3F,IAAI,GAAG2F,WAAW,GAAG,IAAI,CAAC5Z,IAAI,CAACkU,qBAAqB,EAAE,GAAG;QAAEnS,IAAI,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAC,CAAE;MAElF,OAAO,IAAIuU,mBAAmB,CAACoD,aAAa,EAAEA,aAAa,CAACE,OAAO,IAAIF,aAAa,CAACG,OAAO,GAAG;QAC9FtY,CAAC,EAAEmY,aAAa,CAACE,OAAO,IAAIF,aAAa,CAACE,OAAO,GAAG5F,IAAI,CAAClS,IAAI,GAAG,CAAC,CAAC;QAClEN,CAAC,EAAEkY,aAAa,CAACG,OAAO,IAAIH,aAAa,CAACG,OAAO,GAAG7F,IAAI,CAACjS,GAAG,GAAG,CAAC;OAChE,GAAG;QACHR,CAAC,EAAE,CAAC;QACJC,CAAC,EAAE;OACH,CAAC;IACH;;;;;;WAEA,SAAA3E,CAAcmE,KAAa;MAC1B,IAAIA,KAAK,CAACO,CAAC,GAAG,CAAC,IAAIP,KAAK,CAACO,CAAC,GAAG,IAAI,CAACiX,MAAM,GAAG,IAAI,CAACrV,UAAU,IAAInC,KAAK,CAACQ,CAAC,GAAG,CAAC,IAAIR,KAAK,CAACQ,CAAC,GAAG,IAAI,CAACkX,OAAO,GAAG,IAAI,CAACvV,UAAU,EAAE;QACtH;OACA,MACI;QACJ,IAAM2W,KAAK,GAAG,IAAI,CAAC7V,aAAa,CAACxF,YAAY;QAC5C;QACAiD,IAAI,CAACoU,KAAK,CAAC9U,KAAK,CAACO,CAAC,GAAG,IAAI,CAAC4B,UAAU,CAAC,EACrCzB,IAAI,CAACoU,KAAK,CAAC9U,KAAK,CAACQ,CAAC,GAAG,IAAI,CAAC2B,UAAU,CAAC,EACrC,CAAC,EACD,CAAC,CACD;QAED,IAAI2W,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAID,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAID,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;UACtE,OAAO,KAAK;;QAEb,IAAMC,OAAO,GAAGxe,KAAK,CAACye,OAAO,CAACH,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAAED,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,EAAED,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC9O,KAAK,EAAE;QAClF,IAAMiP,GAAG,GAAG,IAAI,CAACT,SAAS,CAACO,OAAO,CAAC;QAEnC,OAAOE,GAAG;;IAEZ;;;;;;WAEA,SAAArd,CAA+CgG,GAAQ,EAAEzF,CAAgC;MACxF,IAAM+c,MAAM,GAAG,IAAI,CAACC,OAAO,CAACvX,GAAG,CAA4B;MAE3D,IAAIsX,MAAM,KAAK9Z,SAAS,EAAE;QACzB8Z,MAAM,CAACE,WAAW,GAAG,IAAI;QAEzB,IAAI;UACHjd,CAAC,CAAC+c,MAAM,CAAC;SAET,SAAS;UACTA,MAAM,CAACE,WAAW,GAAG,KAAK;UAE1B,IAAIF,MAAM,CAACG,OAAO,EAAE;YACnBH,MAAM,CAACG,OAAO,GAAG,KAAK;YAEtBre,MAAM,CAACse,MAAM,CAACJ,MAAM,CAACK,SAAS,EAAE,UAAC1X,QAAQ;cACxC,OAAO,CAACA,QAAQ,CAAC2X,QAAQ;YAC1B,CAAC,CAAC;YAEF,IAAIN,MAAM,CAACK,SAAS,CAAC3P,MAAM,KAAK,CAAC,EAAE;cAClCsP,MAAM,CAACO,QAAQ,CAACxU,OAAO,EAAE;cACzB,OAAO,IAAI,CAACkU,OAAO,CAACvX,GAAG,CAAC;;;;;IAK7B;;;;;;WAEA,SAAAhG,CAAqDgG,GAAQ,EAAElF,KAA2B;MACzF,IAAI,CAAC,IAAI,CAACgd,mBAAmB,EAAE;QAC9B;;MAGD,IAAI,CAACC,WAAW,CAAC/X,GAAG,EAAE,UAACsX,MAAM;QAC5Ble,MAAM,CAAC4B,IAAI,CAACsc,MAAM,CAACK,SAAS,EAAE,UAAC1X,QAAQ;UACtC,IAAI,CAACA,QAAQ,CAAC2X,QAAQ,EAAE;YACvB3X,QAAQ,CAACA,QAAQ,CAACnD,IAAI,CAACmD,QAAQ,CAACxE,OAAO,EAAEX,KAAK,CAAC;;QAEjD,CAAC,CAAC;MACH,CAAC,CAAC;IACH;;;;;;WAEA,SAAAd,CAAkDgG,GAAQ,EAAEgY,MAA2B,EAAEld,KAA2B;MACnH,IAAI,CAAC,IAAI,CAACgd,mBAAmB,EAAE;QAC9B,OAAO,KAAK;;MAGb,IAAIG,UAAU,GAAG,KAAK;MAEtB,IAAI,CAACF,WAAW,CAAC/X,GAAG,EAAE,UAACsX,MAAM;QAC5Ble,MAAM,CAAC4B,IAAI,CAACsc,MAAM,CAACK,SAAS,EAAE,UAAC1X,QAAQ;UACtC,IAAI,CAACA,QAAQ,CAAC2X,QAAQ,IAAI3X,QAAQ,CAACiY,MAAM,KAAKF,MAAM,EAAE;YACrD/X,QAAQ,CAACA,QAAQ,CAACnD,IAAI,CAACmD,QAAQ,CAACxE,OAAO,EAAEX,KAAK,CAAC;YAC/Cmd,UAAU,GAAG,IAAI;;QAEnB,CAAC,CAAC;MACH,CAAC,CAAC;MAEF,OAAOA,UAAU;IAClB;;;;;;WAEA,SAAAje,CAAmB6c,aAA4B;MAA/C,IAAAha,KAAA;MAEC,IAAMsb,MAAM,GAAkBtB,aAAc,CAACsB,MAAM;MACnD,IAAIA,MAAM,IAAI,CAAC,IAAIA,MAAM,IAAI,CAAC,IAAIA,MAAM,IAAI,CAAC,EAAE;QAC9C;QACA;;MAGD,IAAMrd,KAAK,GAAG,IAAI,CAACsd,QAAQ,CAACvB,aAAa,CAAC;MAC1C,IAAMmB,MAAM,GAAG,IAAI,CAACK,aAAa,CAACvd,KAAK,CAACqD,KAAK,CAAC;MAE9C,IAAI6Z,MAAM,EAAE;QACX,IAAMM,IAAE,GAAGxd,KAAK,CAACZ,EAAE;QAEnB,IAAIqe,SAAO,GAAG,KAAK;QAEnBle,WAAW,CAAC2d,MAAM,EAAE,UAACpD,GAAG;UACvB,IAAM4D,IAAI,GAAG;YAAEte,EAAE,EAAEoe,IAAE;YAAEte,KAAK,EAAE4a;UAAG,CAAE;UAEnC/X,KAAI,CAAC4b,UAAU,CAAC7V,IAAI,CAAC4V,IAAI,CAAC;UAE1B,IAAI,CAACD,SAAO,IAAI1b,KAAI,CAAC6b,cAAc,CAAC,aAAa,EAAE9D,GAAG,EAAE9Z,KAAK,CAAC,EAAE;YAC/D;YACAyd,SAAO,GAAG,IAAI;YAEd,IAAMlW,GAAG,GAAGxF,KAAI,CAACyF,SAAS,CAACC,IAAI,CAAC,UAAC7D,CAAC;cACjC,OAAOA,CAAC,CAAC1E,KAAK,KAAK4a,GAAG,IAAIlW,CAAC,CAACxE,EAAE,KAAKoe,IAAE;YACtC,CAAC,CAAC;YAEF,IAAI,CAACjW,GAAG,EAAE;cACTxF,KAAI,CAACyF,SAAS,CAACM,IAAI,CAAC4V,IAAI,CAAC;;;UAI3B,OAAO,IAAI;QACZ,CAAC,CAAC;;IAEJ;;;;;;WAEA,SAAAxe,CAAyB6c,aAA4B;MAArD,IAAAha,KAAA;MACC,IAAM/B,KAAK,GAAG,IAAI,CAACsd,QAAQ,CAACvB,aAAa,CAAC;MAE1C,IAAMmB,MAAM,GAAG,IAAI,CAACK,aAAa,CAACvd,KAAK,CAACqD,KAAK,CAAC;MAC9CrD,KAAK,CAAC6d,MAAM,GAAG,IAAI,CAACC,cAAc,CAAC/B,aAAa,CAAC;MAEjD,IAAImB,MAAM,EAAE;QACX,IAAI,CAAC5V,SAAS,CAACuS,OAAO,CAAC,UAACC,GAAG;UAC1B,IAAI,CAACA,GAAG,CAACiE,QAAQ,CAACb,MAAM,CAAC,EAAE;YAC1Bnb,KAAI,CAACuF,SAAS,CAAC0W,MAAM,CAAClE,GAAG,CAAC;YAC1B,IAAIA,GAAG,CAACmE,eAAe,EAAE;cACxB5f,MAAM,CAAC6f,QAAQ,CAAC3d,QAAQ,CAAC4V,IAAI,EAAE,QAAQ,EAAE2D,GAAG,CAACqE,oBAAqB,CAAC;;YAEpEpc,KAAI,CAAC6b,cAAc,CAAC,YAAY,EAAE9D,GAAG,EAAE9Z,KAAK,CAAC;;QAE/C,CAAC,CAAC;QAEF,IAAIA,KAAK,CAAC6d,MAAM,EAAE;UACjBte,WAAW,CAAC2d,MAAM,EAAE,UAACpD,GAAG;YACvB,IAAI,CAAC/X,KAAI,CAACuF,SAAS,CAACC,GAAG,CAACuS,GAAG,CAAC,EAAE;cAC7B/X,KAAI,CAACuF,SAAS,CAAC8W,GAAG,CAACtE,GAAG,CAAC;cACvB,IAAIA,GAAG,CAACmE,eAAe,EAAE;gBACxBnE,GAAG,CAACqE,oBAAoB,GAAG9f,MAAM,CAACggB,QAAQ,CAAC9d,QAAQ,CAAC4V,IAAI,EAAE,QAAQ,CAAC;gBACnE9X,MAAM,CAAC6f,QAAQ,CAAC3d,QAAQ,CAAC4V,IAAI,EAAE,QAAQ,EAAE2D,GAAG,CAACmE,eAAe,CAAC;;cAE9Dlc,KAAI,CAAC6b,cAAc,CAAC,aAAa,EAAE9D,GAAG,EAAE9Z,KAAK,CAAC;;YAG/C,OAAO,IAAI;UACZ,CAAC,CAAC;;QAGH;OACA,MAAM;QACN,IAAI,CAACsH,SAAS,CAACuS,OAAO,CAAC,UAACC,GAAG;UAC1B,IAAIA,GAAG,CAACmE,eAAe,EAAE;YACxB5f,MAAM,CAAC6f,QAAQ,CAAC3d,QAAQ,CAAC4V,IAAI,EAAE,QAAQ,EAAE2D,GAAG,CAACqE,oBAAqB,CAAC;;UAEpEpc,KAAI,CAAC6b,cAAc,CAAC,YAAY,EAAE9D,GAAG,EAAE9Z,KAAK,CAAC;QAC9C,CAAC,CAAC;QAEF,IAAI,CAACsH,SAAS,CAAC0F,KAAK,EAAE;;MAEvB,IAAI,CAACsR,iBAAiB,CAAC,mBAAmB,EAAEte,KAAK,CAAC;IACnD;;;;;;WAEA,SAAAd,CAAec,KAAoB;MAClC,IAAIA,KAAK,CAACkd,MAAM,EAAE;QACjB,OAAald,KAAK,CAACkd,MAAO,CAACqB,UAAU,KAAK,IAAI,CAACjF,SAAS;;MAEzD,OAAO,IAAI;IACZ;;;;;;WAEA,SAAApa,CAAuB6c,aAA4B;MAClD,IAAM/b,KAAK,GAAG,IAAI,CAACsd,QAAQ,CAACvB,aAAa,CAAC;MAC1C;MACA,IAAI,CAACuC,iBAAiB,CAAC,iBAAiB,EAAEte,KAAK,CAAC;IACjD;;;;;;WAEA,SAAAd,CAAkB6c,aAA4B;MAA9C,IAAAha,KAAA;MACC,IAAI,IAAI,CAACyF,SAAS,CAAC0F,MAAM,KAAK,CAAC,EAAE;QAChC,IAAMsR,OAAK,GAAG,IAAI,CAAClB,QAAQ,CAACvB,aAAa,CAAC;QAC1C,IAAM0C,IAAE,GAAGD,OAAK,CAACpf,EAAE;QAEnB,IAAI,CAACoI,SAAS,CAACqS,OAAO,CAAC,UAACC,GAAG;UAC1B,IAAIA,GAAG,CAAC1a,EAAE,KAAKqf,IAAE,EAAE;YAClB1c,KAAI,CAAC6b,cAAc,CAAC,aAAa,EAAE9D,GAAG,CAAC5a,KAAK,EAAEsf,OAAK,CAAC;;QAEtD,CAAC,CAAC;;IAEJ;;;;;;WAEA,SAAAtf,CAAiB6c,aAA4B;MAA7C,IAAAha,KAAA;MAEC,IAAMsb,MAAM,GAAkBtB,aAAc,CAACsB,MAAM;MACnD,IAAIqB,UAAkD;MACtD,IAAIrB,MAAM,IAAI,CAAC,EAAE;QAChBqB,UAAU,GAAG,OAAO;OACpB,MACI,IAAIrB,MAAM,IAAI,CAAC,EAAE;QACrBqB,UAAU,GAAG,YAAY;OACzB,MACI,IAAIrB,MAAM,IAAI,CAAC,EAAE;QACrBqB,UAAU,GAAG,aAAa;OAC1B,MACI;QACJ;QACA;;MAGD,IAAM1e,KAAK,GAAG,IAAI,CAACsd,QAAQ,CAACvB,aAAa,CAAC;MAC1C,IAAM3c,EAAE,GAAGY,KAAK,CAACZ,EAAE;MAEnB,IAAI,IAAI,CAACue,UAAU,CAACzQ,MAAM,KAAK,CAAC,EAAE;QACjC,IAAMyR,QAAM,GAAG,IAAI,CAACpB,aAAa,CAACvd,KAAK,CAACqD,KAAK,CAAC;QAE9C,IAAIsb,QAAM,EAAE;UACX,IAAI,CAAChB,UAAU,CAAC9D,OAAO,CAAC,UAACC,GAAG;YAC3B,IAAIA,GAAG,CAAC1a,EAAE,KAAKA,EAAE,IAAI0a,GAAG,CAAC5a,KAAK,CAAC6e,QAAQ,CAACY,QAAM,CAAC,EAAE;cAChD5c,KAAI,CAAC6b,cAAc,CAACc,UAAU,EAAE5E,GAAG,CAAC5a,KAAK,EAAEc,KAAK,CAAC;;UAEnD,CAAC,CAAC;;QAGH,IAAI,CAAC2d,UAAU,CAACzQ,MAAM,GAAG,CAAC;;MAG3B,IAAI,IAAI,CAAC1F,SAAS,CAAC0F,MAAM,KAAK,CAAC,EAAE;QAChC,IAAI,CAAC1F,SAAS,CAACqS,OAAO,CAAC,UAACC,GAAG;UAC1B,IAAIA,GAAG,CAAC1a,EAAE,KAAKA,EAAE,EAAE;YAClB2C,KAAI,CAAC6b,cAAc,CAAC,WAAW,EAAE9D,GAAG,CAAC5a,KAAK,EAAEc,KAAK,CAAC;;QAEpD,CAAC,CAAC;QAEF,IAAI,CAACwH,SAAS,CAAC0F,MAAM,GAAG,CAAC;;IAE3B;;;;;;WAEA,SAAAhO,CAAqB6c,aAA4B;MAAjD,IAAAha,KAAA;MACC,IAAM/B,KAAK,GAAG,IAAI,CAACsd,QAAQ,CAACvB,aAAa,CAAC;MAC1C,IAAMmB,MAAM,GAAG,IAAI,CAACK,aAAa,CAACvd,KAAK,CAACqD,KAAK,CAAC;MAE9C,IAAI6Z,MAAM,EAAE;QACX3d,WAAW,CAAC2d,MAAM,EAAE,UAACpD,GAAG;UACvB,IAAI/X,KAAI,CAAC6b,cAAc,CAAC,UAAU,EAAE9D,GAAG,EAAE9Z,KAAK,CAAC,EAAE;YAChD,OAAO,KAAK;WACZ,MAAM;YACN,OAAO,IAAI;;QAEb,CAAC,CAAC;;IAEJ;;;;;;WAEA,SAAAd,CAAe6c,aAAyB;MAAxC,IAAAha,KAAA;MACC,IAAM/B,KAAK,GAAG,IAAI,CAACsd,QAAQ,CAACvB,aAAa,CAAC;MAC1C,IAAI,CAACzU,SAAS,CAACuS,OAAO,CAAC,UAACC,GAAG;QAC1B/X,KAAI,CAAC6b,cAAc,CAAC,OAAO,EAAE9D,GAAG,EAAE9Z,KAAK,CAAC;MACzC,CAAC,CAAC;IACH;;;;;;WAEA,SAAAd,CAAiBgG,GAAW,EAAEzF,CAAkB;MAAhD,IAAAsC,KAAA;MACC,IAAI,IAAI,CAAC6c,UAAU,CAAC1Z,GAAG,CAAC,KAAKxC,SAAS,EAAE;QACvC,IAAMmc,UAAQ,GAAGpf,CAAC,EAAE;QAEpB,IAAI,CAACmf,UAAU,CAAC1Z,GAAG,CAAC,GAAG,IAAI/G,eAAe,CAAC;UAC1C,OAAO4D,KAAI,CAAC6c,UAAU,CAAC1Z,GAAG,CAAC;UAC3B2Z,UAAQ,CAACtW,OAAO,EAAE;QACnB,CAAC,CAAC;;MAGH,OAAO,IAAI,CAACqW,UAAU,CAAC1Z,GAAG,CAAC,CAAC4Z,SAAS,EAAE;IACxC;;EAEA;;;;;WACA,SAAA5f,CAAWgG,GAA0B;MAArC,IAAAnD,KAAA;MACC,QAAQmD,GAAG;QACV,KAAK,mBAAmB;QACxB,KAAK,aAAa;QAClB,KAAK,YAAY;UAChB,OAAO,IAAI,CAAC6Z,gBAAgB,CAAC,aAAa,EAAE;YAC3C;YAEA;YACA,OAAOnf,cAAc,CAACqZ,MAAM,EAAE,aAAa,EAAE,UAACQ,EAAE;cAC/C1X,KAAI,CAACsX,qBAAqB,GAAGI,EAAE;cAC/B1X,KAAI,CAAC4Z,mBAAmB,CAACC,GAAG,EAAE;cAC9B;cACA;YACD,CAAC,CAAC;UACH,CAAC,CAAC;;QACH,KAAK,iBAAiB;UACrB,OAAO,IAAI,CAACmD,gBAAgB,CAAC,WAAW,EAAE;YACzC;YAEA;YACA,OAAOnf,cAAc,CAACqZ,MAAM,EAAE,WAAW,EAAE,UAACQ,EAAE;cAC7C;cACA1X,KAAI,CAACid,sBAAsB,CAACvF,EAAE,CAAC;cAC/B;YACD,CAAC,CAAC;UACH,CAAC,CAAC;;QACH,KAAK,OAAO;QACZ,KAAK,YAAY;QACjB,KAAK,aAAa;QAClB,KAAK,aAAa;QAClB,KAAK,aAAa;QAClB,KAAK,WAAW;UACf,OAAO,IAAI,CAACsF,gBAAgB,CAAC,aAAa,EAAE;YAC3C;YAEA,IAAME,SAAS,GAAGrf,cAAc,CAACmC,KAAI,CAACK,IAAI,EAAE,aAAa,EAAE,UAACqX,EAAiB;cAC5E1X,KAAI,CAACmd,kBAAkB,CAACzF,EAAE,CAAC;YAC5B,CAAC,CAAC;YAEF;YACA,IAAM0F,SAAS,GAAGvf,cAAc,CAACqZ,MAAM,EAAE,aAAa,EAAE,UAACQ,EAAiB;cACzE;cACA1X,KAAI,CAACqd,iBAAiB,CAAC3F,EAAE,CAAC;cAC1B;YACD,CAAC,CAAC;;YAEF,IAAM4F,OAAO,GAAGzf,cAAc,CAACqZ,MAAM,EAAE,WAAW,EAAE,UAACQ,EAAiB;cACrE1X,KAAI,CAACud,gBAAgB,CAAC7F,EAAE,CAAC;YAC1B,CAAC,CAAC;YAEF,OAAO,IAAIvb,QAAQ,CAAC;cACnB+gB,SAAS,CAAC1W,OAAO,EAAE;cACnB4W,SAAS,CAAC5W,OAAO,EAAE;cACnB8W,OAAO,CAAC9W,OAAO,EAAE;YAClB,CAAC,CAAC;UACH,CAAC,CAAC;QACH,KAAK,UAAU;UACd,OAAO,IAAI,CAACwW,gBAAgB,CAAC,UAAU,EAAE;YACxC,OAAOnf,cAAc,CAACqZ,MAAM,EAAE,UAAU,EAAE,UAACQ,EAAE;cAC5C1X,KAAI,CAACwd,oBAAoB,CAAC9F,EAAE,CAAC;YAC9B,CAAC,CAAC;UACH,CAAC,CAAC;QACH,KAAK,OAAO;UACX,OAAO,IAAI,CAACsF,gBAAgB,CAAC,OAAO,EAAE;YACrC,OAAO1gB,MAAM,CAACyB,gBAAgB,CAACmZ,MAAM,EAAE5a,MAAM,CAAC0B,gBAAgB,CAAC,OAAO,CAAC,EAAE,UAACC,KAAiB;cAC1F+B,KAAI,CAACyd,cAAc,CAACxf,KAAK,CAAC;YAC3B,CAAC,EAAE;cAAE2Z,OAAO,EAAE;YAAK,CAAE,CAAC;UACvB,CAAC,CAAC;;IAEL;;;;;;WAEA,SAAAza,CAAgDke,MAA2B,EAAElY,GAAQ,EAAEC,QAAwD,EAAExE,OAAW;MAA5J,IAAAoB,KAAA;MACC,IAAIya,MAAM,GAA4B,IAAI,CAACC,OAAO,CAACvX,GAAG,CAAQ;MAE9D,IAAIsX,MAAM,KAAK9Z,SAAS,EAAE;QACzB8Z,MAAM,GAAG,IAAI,CAACC,OAAO,CAACvX,GAAG,CAAC,GAAG;UAC5B6X,QAAQ,EAAE,IAAI,CAAC0C,UAAU,CAACva,GAAG,CAAE;UAC/B2X,SAAS,EAAE,EAAE;UACbH,WAAW,EAAE,KAAK;UAClBC,OAAO,EAAE;SACT;;MAGF,IAAM+C,QAAQ,GAAG;QAAEtC,MAAM,EAAAA,MAAA;QAAEzc,OAAO,EAAAA,OAAA;QAAEwE,QAAQ,EAAAA,QAAA;QAAE2X,QAAQ,EAAE;MAAK,CAAE;MAE/DN,MAAO,CAACK,SAAS,CAAC/U,IAAI,CAAC4X,QAAQ,CAAC;MAEhC,OAAO,IAAIxhB,QAAQ,CAAC;QACnBwhB,QAAQ,CAAC5C,QAAQ,GAAG,IAAI;QAExB,IAAIN,MAAO,CAACE,WAAW,EAAE;UACxBF,MAAO,CAACG,OAAO,GAAG,IAAI;SAEtB,MAAM;UACNre,MAAM,CAAC2J,WAAW,CAACuU,MAAO,CAACK,SAAS,EAAE6C,QAAQ,CAAC;UAE/C,IAAIlD,MAAO,CAACK,SAAS,CAAC3P,MAAM,KAAK,CAAC,EAAE;YACnCsP,MAAO,CAACO,QAAQ,CAACxU,OAAO,EAAE;YAC1B,OAAOxG,KAAI,CAAC0a,OAAO,CAACvX,GAAG,CAAC;;;MAG3B,CAAC,CAAC;IACH;;;;;;WAEA,SAAAhG,CAAiBsc,IAAyB,EAAEmE,OAAwB;MAEnE;MACA,IAAI,CAACzX,MAAM,CAACsT,IAAI,CAAC;MAEjB,IAAI,CAACmE,OAAO,EAAE;QACbA,OAAO,GAAG,EAAE;;MAGb,IAAI1b,KAAK,GAAW,IAAI,CAACuB,UAAU;MAEnC;MACA,IAAIma,OAAO,CAACC,QAAQ,IAAKD,OAAO,CAACC,QAAQ,GAAG,IAAI,CAAC/E,MAAO,EAAE;QACzD,IAAIzF,QAAQ,GAAGuK,OAAO,CAACC,QAAQ,GAAG,IAAI,CAAC/E,MAAM;QAC7C,IAAIzF,QAAQ,GAAGnR,KAAK,EAAE;UACrBA,KAAK,GAAGmR,QAAQ,GAAG,IAAI,CAAC5P,UAAU;;;MAIpC,IAAIma,OAAO,CAACE,SAAS,IAAKF,OAAO,CAACE,SAAS,GAAG,IAAI,CAAC9E,OAAQ,EAAE;QAC5D,IAAI3F,QAAQ,GAAGuK,OAAO,CAACE,SAAS,GAAG,IAAI,CAAC9E,OAAO;QAC/C,IAAI3F,QAAQ,GAAGnR,KAAK,EAAE;UACrBA,KAAK,GAAGmR,QAAQ,GAAG,IAAI,CAAC5P,UAAU;;;MAIpC,IAAIma,OAAO,CAAChO,QAAQ,IAAKgO,OAAO,CAAChO,QAAQ,GAAG,IAAI,CAACkJ,MAAO,EAAE;QACzD,IAAIiF,QAAQ,GAAGH,OAAO,CAAChO,QAAQ,GAAG,IAAI,CAACkJ,MAAM;QAC7C,IAAIiF,QAAQ,GAAG7b,KAAK,EAAE;UACrBA,KAAK,GAAG6b,QAAQ,GAAG,IAAI,CAACta,UAAU;;;MAIpC,IAAIma,OAAO,CAACnK,SAAS,IAAKmK,OAAO,CAACnK,SAAS,GAAG,IAAI,CAACuF,OAAQ,EAAE;QAC5D,IAAI+E,QAAQ,GAAGH,OAAO,CAACnK,SAAS,GAAG,IAAI,CAACuF,OAAO;QAC/C,IAAI+E,QAAQ,GAAG7b,KAAK,EAAE;UACrBA,KAAK,GAAG6b,QAAQ,GAAG,IAAI,CAACta,UAAU;;;MAIpC;MACA,IAAIma,OAAO,CAACI,kBAAkB,EAAE;QAC/B9b,KAAK,IAAI,IAAI,CAACuB,UAAU;;MAGzB;MACA,IAAIwa,WAAW,GAAG,KAAK;MACvB,IAAIC,WAAW,GAAG,IAAI,CAACpF,MAAM;MAC7B,IAAIqF,YAAY,GAAG,IAAI,CAACnF,OAAO;MAC/B,IAAMza,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C,IAAIyD,KAAK,IAAI,IAAI,CAACuB,UAAU,EAAE;QAC7Bwa,WAAW,GAAG,IAAI;QAClBC,WAAW,GAAG,IAAI,CAACpF,MAAM,GAAG5W,KAAK,GAAG,IAAI,CAACuB,UAAU;QACnD0a,YAAY,GAAG,IAAI,CAACnF,OAAO,GAAG9W,KAAK,GAAG,IAAI,CAACuB,UAAU;;MAGtDlF,MAAM,CAACG,KAAK,GAAGwf,WAAW;MAC1B3f,MAAM,CAACI,MAAM,GAAGwf,YAAY;MAE5B;MACA,IAAMvf,OAAO,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAE;MAExC,IAAIH,KAAK,GAAG,CAAC;MACb,IAAIC,MAAM,GAAG,CAAC;MACd,IAAIyf,YAAY,GAAG,KAAK;MAExB7hB,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAACkG,MAAM,EAAE,UAACK,KAAK;QAC9B,IAAIA,KAAK,IAAIA,KAAK,CAAChE,OAAO,EAAE;UAC3B,IAAIgE,KAAK,CAACY,OAAO,IAAI2Y,WAAW,EAAE;YACjCG,YAAY,GAAG,IAAI;YAEnB1Z,KAAK,CAAC2Z,cAAc,GAAG3Z,KAAK,CAACrE,IAAI;YACjCqE,KAAK,CAAC4Z,iBAAiB,GAAG5Z,KAAK,CAAC9F,OAAO;YAEvC8F,KAAK,CAACrE,IAAI,GAAG7B,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;YAC7CiG,KAAK,CAACrE,IAAI,CAAC3B,KAAK,GAAGwf,WAAW;YAC9BxZ,KAAK,CAACrE,IAAI,CAAC1B,MAAM,GAAGwf,YAAY;YAEhCzZ,KAAK,CAAC9F,OAAO,GAAG8F,KAAK,CAACrE,IAAI,CAACxB,UAAU,CAAC,IAAI,CAAE;YAE5C6F,KAAK,CAAC7D,KAAK,GAAG,IAAI;YAClB6D,KAAK,CAACxC,KAAK,GAAGA,KAAK;;;MAItB,CAAC,CAAC;MAEF,IAAIkc,YAAY,EAAE;QACjB,IAAI,CAACja,YAAY,GAAG,IAAI;QACxB,IAAI,CAACgC,MAAM,CAACsT,IAAI,CAAC;QACjB,IAAI,CAACtV,YAAY,GAAG,KAAK;;MAG1B5H,MAAM,CAAC4B,IAAI,CAAC,IAAI,CAACkG,MAAM,EAAE,UAACK,KAAK;QAC9B,IAAIA,KAAK,IAAIA,KAAK,CAAChE,OAAO,EAAE;UAE3B;UACA9B,OAAO,CAACE,SAAS,CAAC4F,KAAK,CAACrE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;UAEnC;UACA,IAAIqE,KAAK,CAAC2Z,cAAc,EAAE;YACzB3Z,KAAK,CAACrE,IAAI,GAAGqE,KAAK,CAAC2Z,cAAc;YACjC3Z,KAAK,CAAC2Z,cAAc,GAAG1d,SAAS;;UAGjC,IAAI+D,KAAK,CAAC4Z,iBAAiB,EAAE;YAC5B5Z,KAAK,CAAC9F,OAAO,GAAG8F,KAAK,CAAC4Z,iBAAiB;YACvC5Z,KAAK,CAAC4Z,iBAAiB,GAAG3d,SAAS;;UAGpC,IAAIjC,KAAK,GAAGgG,KAAK,CAACrE,IAAI,CAACke,WAAW,EAAE;YACnC7f,KAAK,GAAGgG,KAAK,CAACrE,IAAI,CAACke,WAAW;;UAE/B,IAAI5f,MAAM,GAAG+F,KAAK,CAACrE,IAAI,CAACme,YAAY,EAAE;YACrC7f,MAAM,GAAG+F,KAAK,CAACrE,IAAI,CAACme,YAAY;;UAGjC9Z,KAAK,CAACxC,KAAK,GAAGvB,SAAS;;MAEzB,CAAC,CAAC;MAEFpC,MAAM,CAACqP,KAAK,CAAClP,KAAK,GAAGA,KAAK,GAAG,IAAI;MACjCH,MAAM,CAACqP,KAAK,CAACjP,MAAM,GAAGA,MAAM,GAAG,IAAI;MAEnC,OAAOJ,MAAM;IACd;;EAED,OAAAyY,cAAC;AAAD,CAAC,CA91BmC7a,QAAQ"},"metadata":{},"sourceType":"module"}