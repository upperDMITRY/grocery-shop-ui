{"ast":null,"code":"/**\r\n * @ignore\r\n */\nexport function compare(left, right) {\n  if (left === right) {\n    return 0;\n  } else if (left < right) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n/**\r\n * @ignore\r\n */\n\nexport function compareArray(left, right, f) {\n  var leftLength = left.length;\n  var rightLength = right.length;\n  var length = Math.min(leftLength, rightLength);\n\n  for (var i = 0; i < length; ++i) {\n    var order = f(left[i], right[i]);\n\n    if (order !== 0) {\n      return order;\n    }\n  }\n\n  return compare(leftLength, rightLength);\n}\n/**\r\n * @ignore\r\n */\n\nexport function reverse(order) {\n  if (order < 0) {\n    return 1;\n  } else if (order > 0) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n/**\r\n * @ignore\r\n */\n\nexport function compareNumber(a, b) {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n}","map":{"version":3,"sources":["../../../../../src/.internal/core/util/Order.ts"],"names":[],"mappings":"AAEA;;AAEG;AACH,OAAM,SAAU,OAAV,CAAuD,IAAvD,EAAgE,KAAhE,EAAwE;AAC7E,MAAI,IAAI,KAAK,KAAb,EAAoB;AACnB,WAAO,CAAP;AAEA,GAHD,MAGO,IAAI,IAAI,GAAG,KAAX,EAAkB;AACxB,WAAO,CAAC,CAAR;AAEA,GAHM,MAGA;AACN,WAAO,CAAP;AACA;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,YAAV,CAA0B,IAA1B,EAA8C,KAA9C,EAAmE,CAAnE,EAA2F;AAChG,MAAM,UAAU,GAAG,IAAI,CAAC,MAAxB;AACA,MAAM,WAAW,GAAG,KAAK,CAAC,MAA1B;AAEA,MAAM,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,UAAT,EAAqB,WAArB,CAAf;;AAEA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,EAAE,CAA9B,EAAiC;AAChC,QAAM,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAD,CAAL,EAAU,KAAK,CAAC,CAAD,CAAf,CAAf;;AAEA,QAAI,KAAK,KAAK,CAAd,EAAiB;AAChB,aAAO,KAAP;AACA;AACD;;AAED,SAAO,OAAO,CAAC,UAAD,EAAa,WAAb,CAAd;AACA;AAED;;AAEG;;AACH,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAA8B;AACnC,MAAI,KAAK,GAAG,CAAZ,EAAe;AACd,WAAO,CAAP;AAEA,GAHD,MAGO,IAAI,KAAK,GAAG,CAAZ,EAAe;AACrB,WAAO,CAAC,CAAR;AAEA,GAHM,MAGA;AACN,WAAO,CAAP;AACA;AACD;AAED;;AAEG;;AACH,OAAM,SAAU,aAAV,CAAwB,CAAxB,EAAmC,CAAnC,EAA4C;AACjD,MAAI,CAAC,KAAK,CAAV,EAAa;AACZ,WAAO,CAAP;AAEA,GAHD,MAGO,IAAI,CAAC,GAAG,CAAR,EAAW;AACjB,WAAO,CAAC,CAAR;AAEA,GAHM,MAGA;AACN,WAAO,CAAP;AACA;AACD","sourcesContent":["export type Order = -1 | 0 | 1;\n\n/**\n * @ignore\n */\nexport function compare<A extends string | number | boolean>(left: A, right: A): Order {\n\tif (left === right) {\n\t\treturn 0;\n\n\t} else if (left < right) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareArray<A>(left: ArrayLike<A>, right: ArrayLike<A>, f: (x: A, y: A) => Order): Order {\n\tconst leftLength = left.length;\n\tconst rightLength = right.length;\n\n\tconst length = Math.min(leftLength, rightLength);\n\n\tfor (let i = 0; i < length; ++i) {\n\t\tconst order = f(left[i], right[i]);\n\n\t\tif (order !== 0) {\n\t\t\treturn order;\n\t\t}\n\t}\n\n\treturn compare(leftLength, rightLength);\n}\n\n/**\n * @ignore\n */\nexport function reverse(order: Order): Order {\n\tif (order < 0) {\n\t\treturn 1;\n\n\t} else if (order > 0) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 0;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function compareNumber(a: number, b: number): Order {\n\tif (a === b) {\n\t\treturn 0;\n\n\t} else if (a < b) {\n\t\treturn -1;\n\n\t} else {\n\t\treturn 1;\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}