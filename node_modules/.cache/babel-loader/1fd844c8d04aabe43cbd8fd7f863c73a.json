{"ast":null,"code":"/** @ignore */\n\n/** */\nimport { __extends } from \"tslib\";\nimport { BlendMode } from \"./Renderer\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\nimport { Throttler } from \"../../util/Throttler\";\nimport { Disposer, CounterDisposer } from \"../../util/Disposer\";\nimport { TextFormatter } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n/**\r\n * @ignore\r\n */\n\nfunction checkArgs(name, actual, expected) {\n  if (actual !== expected) {\n    throw new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n  }\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction checkMinArgs(name, actual, expected) {\n  if (actual < expected) {\n    throw new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n  }\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction checkEvenArgs(name, actual, expected) {\n  checkMinArgs(name, actual, expected);\n\n  if (actual % expected !== 0) {\n    throw new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n  }\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction assertBinary(value) {\n  if (value === 0 || value === 1) {\n    return value;\n  } else {\n    throw new Error(\"Flag must be 0 or 1\");\n  }\n} //  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n// function distributeIdBAK(id: number): number {\n// \tif (id === 1) {\n// \t\treturn 0x000001;\n// \t} else {\n// \t\t// Finds the closest power of 2\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\n// \t\t// Translates the id into an odd fraction index\n// \t\tconst index = ((base - id) * 2) + 1;\n// \t\t// TODO is Math.round correct ?\n// \t\treturn Math.round(0xffffff * (index / base));\n// \t}\n// }\n\n/**\r\n * Function by smeans:\r\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\r\n * @ignore\r\n */\n\n\nfunction distributeId(id) {\n  var rgb = [0, 0, 0];\n\n  for (var i = 0; i < 24; i++) {\n    rgb[i % 3] <<= 1;\n    rgb[i % 3] |= id & 0x01;\n    id >>= 1;\n  }\n\n  return (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction eachTargets(hitTarget, f) {\n  for (;;) {\n    if (hitTarget.interactive) {\n      if (!f(hitTarget)) {\n        break;\n      }\n    }\n\n    if (hitTarget._parent) {\n      hitTarget = hitTarget._parent;\n    } else {\n      break;\n    }\n  }\n} // TODO feature detection for mouse/touch/pointer\n\n/**\r\n * @ignore\r\n */\n\n\nfunction onPointerEvent(element, name, f) {\n  return $utils.addEventListener(element, $utils.getRendererEvent(name), function (event) {\n    if (event.touches) {\n      $array.each(event.touches, function (touch) {\n        f(touch);\n      });\n    } else {\n      f(event);\n    }\n  });\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction isTainted(image) {\n  var canvas = document.createElement(\"canvas\");\n  canvas.width = 1;\n  canvas.height = 1;\n  var context = canvas.getContext(\"2d\");\n  context.drawImage(image, 0, 0, 1, 1);\n\n  try {\n    context.getImageData(0, 0, 1, 1);\n    return false;\n  } catch (err) {\n    console.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n    return true;\n  }\n}\n/**\r\n * @ignore\r\n */\n\n\nvar CanvasPivot =\n/** @class */\nfunction () {\n  function CanvasPivot() {\n    Object.defineProperty(this, \"_x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n  }\n\n  Object.defineProperty(CanvasPivot.prototype, \"x\", {\n    get: function () {\n      return this._x;\n    },\n    set: function (value) {\n      this._x = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CanvasPivot.prototype, \"y\", {\n    get: function () {\n      return this._y;\n    },\n    set: function (value) {\n      this._y = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return CanvasPivot;\n}();\n\nexport { CanvasPivot };\n/**\r\n * @ignore\r\n */\n\nvar CanvasDisplayObject =\n/** @class */\nfunction (_super) {\n  __extends(CanvasDisplayObject, _super);\n\n  function CanvasDisplayObject(renderer) {\n    var _this = _super.call(this, function () {\n      _this._renderer._removeObject(_this);\n    }) || this;\n\n    Object.defineProperty(_this, \"_layer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"mask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(_this, \"visible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"exportable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"interactive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"wheelable\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"isMeasured\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"buttonMode\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"alpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"compoundAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"angle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"scale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"pivot\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new CanvasPivot()\n    });\n    Object.defineProperty(_this, \"filter\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"cursorOverStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_replacedCursorStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_localMatrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    Object.defineProperty(_this, \"_matrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    }); // TODO can this be replaced with _localMatrix ?\n\n    Object.defineProperty(_this, \"_uMatrix\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Matrix()\n    });\n    Object.defineProperty(_this, \"_renderer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_parent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_localBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_bounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_colorId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    _this._renderer = renderer;\n    return _this;\n  }\n\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getCanvas\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.getLayer().view;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var self = this;\n\n      for (;;) {\n        if (self._layer) {\n          return self._layer;\n        } else if (self._parent) {\n          self = self._parent;\n        } else {\n          return this._renderer.defaultLayer;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"setLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (order, visible) {\n      if (visible === void 0) {\n        visible = true;\n      }\n\n      if (order == null) {\n        this._layer = undefined;\n      } else {\n        this._layer = this._renderer.getLayer(order, visible);\n        this._layer.visible = visible;\n\n        if (this._parent) {\n          this._parent.registerChildLayer(this._layer);\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"markDirtyLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.getLayer().dirty = true;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.invalidateBounds();\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"invalidateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._localBounds = undefined;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bounds) {}\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_getColorId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this._colorId === undefined) {\n        this._colorId = this._renderer.paintId(this);\n      }\n\n      return this._colorId;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_isInteractive\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.interactive || this._renderer._forceInteractive > 0;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_isInteractiveMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._isInteractive();\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"contains\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child) {\n      for (;;) {\n        if (child === this) {\n          return true;\n        } else if (child._parent) {\n          child = child._parent;\n        } else {\n          return false;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"toGlobal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this._matrix.apply(point);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"toLocal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this._matrix.applyInverse(point);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getLocalMatrix\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n\n      return this._uMatrix;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getLocalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._localBounds) {\n        var bn = 10000000;\n        this._localBounds = {\n          left: bn,\n          top: bn,\n          right: -bn,\n          bottom: -bn\n        };\n\n        this._addBounds(this._localBounds);\n      }\n\n      return this._localBounds;\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"getAdjustedBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      this._setMatrix();\n\n      var matrix = this.getLocalMatrix();\n      var p0 = matrix.apply({\n        x: bounds.left,\n        y: bounds.top\n      });\n      var p1 = matrix.apply({\n        x: bounds.right,\n        y: bounds.top\n      });\n      var p2 = matrix.apply({\n        x: bounds.right,\n        y: bounds.bottom\n      });\n      var p3 = matrix.apply({\n        x: bounds.left,\n        y: bounds.bottom\n      });\n      return {\n        left: Math.min(p0.x, p1.x, p2.x, p3.x),\n        top: Math.min(p0.y, p1.y, p2.y, p3.y),\n        right: Math.max(p0.x, p1.x, p2.x, p3.x),\n        bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n      };\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback, context) {\n      if (this.interactive) {\n        return this._renderer._addEvent(this, key, callback, context);\n      } else {\n        return new Disposer(function () {});\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_setMatrix\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      // TODO only calculate this if it has actually changed\n      this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, // Converts degrees to radians\n      this.angle * Math.PI / 180, this.scale);\n\n      this._matrix.copyFrom(this._localMatrix);\n\n      if (this._parent) {\n        // TODO only calculate this if it has actually changed\n        this._matrix.prepend(this._parent._matrix);\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_transform\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, resolution) {\n      var m = this._matrix;\n      context.setTransform(m.a * resolution, m.b * resolution, m.c * resolution, m.d * resolution, m.tx * resolution, m.ty * resolution);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var _this = this;\n\n      if (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n        this._setMatrix();\n\n        var resolution_1 = this._renderer.resolution;\n        var layers = this._renderer.layers;\n        var ghostContext = this._renderer._ghostContext;\n        var mask_1 = this.mask;\n\n        if (mask_1) {\n          mask_1._setMatrix();\n        }\n\n        $array.each(layers, function (layer) {\n          if (layer) {\n            layer.context.save(); // We must apply the mask before we transform the element\n\n            if (mask_1) {\n              mask_1._transform(layer.context, layer.scale || resolution_1);\n\n              mask_1._runPath(layer.context);\n\n              layer.context.clip();\n            }\n\n            layer.context.globalAlpha = _this.compoundAlpha * _this.alpha;\n\n            _this._transform(layer.context, layer.scale || resolution_1);\n\n            if (_this.filter) {\n              layer.context.filter = _this.filter;\n            }\n          }\n        });\n        ghostContext.save(); // We must apply the mask before we transform the element\n\n        if (mask_1 && this._isInteractiveMask()) {\n          mask_1._transform(ghostContext, resolution_1);\n\n          mask_1._runPath(ghostContext);\n\n          ghostContext.clip();\n        }\n\n        this._transform(ghostContext, resolution_1);\n\n        this._render(parentLayer);\n\n        ghostContext.restore();\n        $array.each(layers, function (layer) {\n          if (layer) {\n            layer.context.restore();\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      if (this.exportable === false) {\n        var layer = this._layer || parentLayer;\n        layer.tainted = true;\n      }\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"hovering\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._renderer._hovering.has(this);\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"dragging\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      return this._renderer._dragging.some(function (x) {\n        return x.value === _this;\n      });\n    }\n  });\n  Object.defineProperty(CanvasDisplayObject.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.getLayer().dirty = true;\n    }\n  });\n  return CanvasDisplayObject;\n}(Disposer);\n\nexport { CanvasDisplayObject };\n/**\r\n * @ignore\r\n */\n\nvar CanvasContainer =\n/** @class */\nfunction (_super) {\n  __extends(CanvasContainer, _super);\n\n  function CanvasContainer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"interactiveChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_childLayers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_children\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    return _this;\n  }\n\n  Object.defineProperty(CanvasContainer.prototype, \"_isInteractiveMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.interactiveChildren || _super.prototype._isInteractiveMask.call(this);\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"addChild\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child) {\n      child._parent = this;\n\n      this._children.push(child);\n\n      if (child._layer) {\n        this.registerChildLayer(child._layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"addChildAt\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child, index) {\n      child._parent = this;\n\n      this._children.splice(index, 0, child);\n\n      if (child._layer) {\n        this.registerChildLayer(child._layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"removeChild\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (child) {\n      child._parent = undefined;\n      $array.removeFirst(this._children, child);\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var _this = this;\n\n      _super.prototype._render.call(this, parentLayer);\n\n      var renderer = this._renderer;\n\n      if (this.interactive && this.interactiveChildren) {\n        ++renderer._forceInteractive;\n      }\n\n      var layer = this._layer || parentLayer;\n      $array.each(this._children, function (child) {\n        child.compoundAlpha = _this.compoundAlpha * _this.alpha;\n        child.render(layer);\n      });\n\n      if (this.interactive && this.interactiveChildren) {\n        --renderer._forceInteractive;\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"registerChildLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      if (!this._childLayers) {\n        this._childLayers = [];\n      }\n\n      $array.pushOne(this._childLayers, layer);\n\n      if (this._parent) {\n        this._parent.registerChildLayer(layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"markDirtyLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (deep) {\n      if (deep === void 0) {\n        deep = false;\n      }\n\n      _super.prototype.markDirtyLayer.call(this);\n\n      if (deep && this._childLayers) {\n        $array.each(this._childLayers, function (layer) {\n          return layer.dirty = true;\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasContainer.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.dispose.call(this);\n\n      if (this._childLayers) {\n        $array.each(this._childLayers, function (layer) {\n          layer.dirty = true;\n        });\n      }\n    }\n  });\n  return CanvasContainer;\n}(CanvasDisplayObject);\n\nexport { CanvasContainer };\n/**\r\n * @ignore\r\n */\n\nfunction setPoint(bounds, point) {\n  bounds.left = Math.min(bounds.left, point.x);\n  bounds.top = Math.min(bounds.top, point.y);\n  bounds.right = Math.max(bounds.right, point.x);\n  bounds.bottom = Math.max(bounds.bottom, point.y);\n}\n/**\r\n * @ignore\r\n */\n\n\nvar Op =\n/** @class */\nfunction () {\n  function Op() {}\n\n  Object.defineProperty(Op.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_context, _forceColor) {}\n  });\n  Object.defineProperty(Op.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_context) {}\n  });\n  Object.defineProperty(Op.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bounds) {}\n  });\n  return Op;\n}();\n/**\r\n * @ignore\r\n */\n\n\nvar BeginFill =\n/** @class */\nfunction (_super) {\n  __extends(BeginFill, _super);\n\n  function BeginFill(color) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    return _this;\n  }\n\n  Object.defineProperty(BeginFill.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, forceColor) {\n      if (forceColor !== undefined) {\n        context.fillStyle = forceColor;\n      } else {\n        context.fillStyle = this.color;\n      }\n    }\n  });\n  return BeginFill;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar EndFill =\n/** @class */\nfunction (_super) {\n  __extends(EndFill, _super);\n\n  function EndFill(clearShadow) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"clearShadow\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: clearShadow\n    });\n    return _this;\n  }\n\n  Object.defineProperty(EndFill.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.fill();\n\n      if (this.clearShadow) {\n        context.shadowColor = \"\";\n        context.shadowBlur = 0;\n        context.shadowOffsetX = 0;\n        context.shadowOffsetY = 0;\n      }\n    }\n  });\n  return EndFill;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar EndStroke =\n/** @class */\nfunction (_super) {\n  __extends(EndStroke, _super);\n\n  function EndStroke() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(EndStroke.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.stroke();\n    }\n  });\n  return EndStroke;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar LineStyle =\n/** @class */\nfunction (_super) {\n  __extends(LineStyle, _super);\n\n  function LineStyle(width, color) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(_this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    return _this;\n  }\n\n  Object.defineProperty(LineStyle.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, forceColor) {\n      if (forceColor !== undefined) {\n        context.strokeStyle = forceColor;\n      } else {\n        context.strokeStyle = this.color;\n      }\n\n      context.lineWidth = this.width;\n    }\n  });\n  return LineStyle;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar LineDash =\n/** @class */\nfunction (_super) {\n  __extends(LineDash, _super);\n\n  function LineDash(dash) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"dash\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: dash\n    });\n    return _this;\n  }\n\n  Object.defineProperty(LineDash.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.setLineDash(this.dash);\n    }\n  });\n  return LineDash;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar LineDashOffset =\n/** @class */\nfunction (_super) {\n  __extends(LineDashOffset, _super);\n\n  function LineDashOffset(dashOffset) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"dashOffset\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: dashOffset\n    });\n    return _this;\n  }\n\n  Object.defineProperty(LineDashOffset.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      context.lineDashOffset = this.dashOffset;\n    }\n  });\n  return LineDashOffset;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar DrawRect =\n/** @class */\nfunction (_super) {\n  __extends(DrawRect, _super);\n\n  function DrawRect(x, y, width, height) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: width\n    });\n    Object.defineProperty(_this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: height\n    });\n    return _this;\n  }\n\n  Object.defineProperty(DrawRect.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.rect(this.x, this.y, this.width, this.height);\n    }\n  });\n  Object.defineProperty(DrawRect.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var l = this.x;\n      var t = this.y;\n      var r = l + this.width;\n      var b = t + this.height;\n      setPoint(bounds, {\n        x: l,\n        y: t\n      });\n      setPoint(bounds, {\n        x: r,\n        y: t\n      });\n      setPoint(bounds, {\n        x: l,\n        y: b\n      });\n      setPoint(bounds, {\n        x: r,\n        y: b\n      });\n    }\n  });\n  return DrawRect;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar DrawCircle =\n/** @class */\nfunction (_super) {\n  __extends(DrawCircle, _super);\n\n  function DrawCircle(x, y, radius) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    return _this;\n  }\n\n  Object.defineProperty(DrawCircle.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.moveTo(this.x + this.radius, this.y);\n      context.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n    }\n  }); // TODO handle skewing and rotation\n\n  Object.defineProperty(DrawCircle.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x - this.radius,\n        y: this.y - this.radius\n      });\n      setPoint(bounds, {\n        x: this.x + this.radius,\n        y: this.y + this.radius\n      });\n    }\n  });\n  return DrawCircle;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar Arc =\n/** @class */\nfunction (_super) {\n  __extends(Arc, _super);\n\n  function Arc(cx, cy, radius, startAngle, endAngle, anticlockwise) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"cx\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cx\n    });\n    Object.defineProperty(_this, \"cy\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cy\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    Object.defineProperty(_this, \"startAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: startAngle\n    });\n    Object.defineProperty(_this, \"endAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: endAngle\n    });\n    Object.defineProperty(_this, \"anticlockwise\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: anticlockwise\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Arc.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.radius > 0) {\n        context.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n      }\n    }\n  });\n  Object.defineProperty(Arc.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n      setPoint(bounds, {\n        x: arcBounds.left,\n        y: arcBounds.top\n      });\n      setPoint(bounds, {\n        x: arcBounds.right,\n        y: arcBounds.bottom\n      });\n    }\n  });\n  return Arc;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar ArcTo =\n/** @class */\nfunction (_super) {\n  __extends(ArcTo, _super);\n\n  function ArcTo(x1, y1, x2, y2, radius) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"x1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x1\n    });\n    Object.defineProperty(_this, \"y1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y1\n    });\n    Object.defineProperty(_this, \"x2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x2\n    });\n    Object.defineProperty(_this, \"y2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y2\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: radius\n    });\n    return _this;\n  }\n\n  Object.defineProperty(ArcTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.radius > 0) {\n        context.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n      }\n    }\n  }); // TODO: add points\n\n  Object.defineProperty(ArcTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bounds) {\n      /*\r\n      // not finished\r\n      https://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\r\n            if (prevPoint) {\r\n          let x1 = prevPoint.x;\r\n          let y1 = prevPoint.y;\r\n          let x2 = this.x2;\r\n          let y2 = this.y2;\r\n          let r = this.radius;\r\n                let xa = (x2 - x1) / 2;\r\n          let ya = (y2 - y1) / 2;\r\n                let x0 = x1 + xa;\r\n          let y0 = y1 + ya;\r\n                let a = Math.hypot(xa, ya);\r\n          let b = Math.sqrt(r * r - a * a);\r\n                let cx = x0 + b * ya / a;\r\n          let cy = y0 - b * xa / a;\r\n                console.log(cx, cy);\r\n      }*/\n    }\n  });\n  return ArcTo;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar LineTo =\n/** @class */\nfunction (_super) {\n  __extends(LineTo, _super);\n\n  function LineTo(x, y) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    return _this;\n  }\n\n  Object.defineProperty(LineTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.lineTo(this.x, this.y);\n    }\n  });\n  Object.defineProperty(LineTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x,\n        y: this.y\n      });\n    }\n  });\n  return LineTo;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar MoveTo =\n/** @class */\nfunction (_super) {\n  __extends(MoveTo, _super);\n\n  function MoveTo(x, y) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: x\n    });\n    Object.defineProperty(_this, \"y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: y\n    });\n    return _this;\n  }\n\n  Object.defineProperty(MoveTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.moveTo(this.x, this.y);\n    }\n  });\n  Object.defineProperty(MoveTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.x,\n        y: this.y\n      });\n    }\n  });\n  return MoveTo;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar ClosePath =\n/** @class */\nfunction (_super) {\n  __extends(ClosePath, _super);\n\n  function ClosePath() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(ClosePath.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.closePath();\n    }\n  });\n  return ClosePath;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar BezierCurveTo =\n/** @class */\nfunction (_super) {\n  __extends(BezierCurveTo, _super);\n\n  function BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"cpX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX\n    });\n    Object.defineProperty(_this, \"cpY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY\n    });\n    Object.defineProperty(_this, \"cpX2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX2\n    });\n    Object.defineProperty(_this, \"cpY2\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY2\n    });\n    Object.defineProperty(_this, \"toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toX\n    });\n    Object.defineProperty(_this, \"toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toY\n    });\n    return _this;\n  }\n\n  Object.defineProperty(BezierCurveTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n    }\n  }); // TODO: OK?\n\n  Object.defineProperty(BezierCurveTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.cpX,\n        y: this.cpY\n      });\n      setPoint(bounds, {\n        x: this.cpX2,\n        y: this.cpY2\n      });\n      setPoint(bounds, {\n        x: this.toX,\n        y: this.toY\n      });\n    }\n  });\n  return BezierCurveTo;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar QuadraticCurveTo =\n/** @class */\nfunction (_super) {\n  __extends(QuadraticCurveTo, _super);\n\n  function QuadraticCurveTo(cpX, cpY, toX, toY) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"cpX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpX\n    });\n    Object.defineProperty(_this, \"cpY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: cpY\n    });\n    Object.defineProperty(_this, \"toX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toX\n    });\n    Object.defineProperty(_this, \"toY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: toY\n    });\n    return _this;\n  }\n\n  Object.defineProperty(QuadraticCurveTo.prototype, \"path\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n    }\n  }); // TODO: OK?\n\n  Object.defineProperty(QuadraticCurveTo.prototype, \"addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      setPoint(bounds, {\n        x: this.cpX,\n        y: this.cpY\n      });\n      setPoint(bounds, {\n        x: this.toX,\n        y: this.toY\n      });\n    }\n  });\n  return QuadraticCurveTo;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar Shadow =\n/** @class */\nfunction (_super) {\n  __extends(Shadow, _super);\n\n  function Shadow(color, blur, offsetX, offsetY, opacity) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperty(_this, \"color\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: color\n    });\n    Object.defineProperty(_this, \"blur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: blur\n    });\n    Object.defineProperty(_this, \"offsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: offsetX\n    });\n    Object.defineProperty(_this, \"offsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: offsetY\n    });\n    Object.defineProperty(_this, \"opacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: opacity\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Shadow.prototype, \"colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, _forceColor) {\n      if (this.opacity) {\n        context.fillStyle = this.color;\n      }\n\n      context.shadowColor = this.color;\n\n      if (this.blur) {\n        context.shadowBlur = this.blur;\n      }\n\n      if (this.offsetX) {\n        context.shadowOffsetX = this.offsetX;\n      }\n\n      if (this.offsetY) {\n        context.shadowOffsetY = this.offsetY;\n      }\n    }\n  });\n  return Shadow;\n}(Op);\n/**\r\n * @ignore\r\n */\n\n\nvar CanvasGraphics =\n/** @class */\nfunction (_super) {\n  __extends(CanvasGraphics, _super);\n\n  function CanvasGraphics() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_operations\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"blendMode\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: BlendMode.NORMAL\n    });\n    Object.defineProperty(_this, \"_hasShadows\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_fillAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_strokeAlpha\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(CanvasGraphics.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.clear.call(this);\n\n      this._operations.length = 0;\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_pushOp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (op) {\n      this._operations.push(op);\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"beginFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (color, alpha) {\n      if (alpha === void 0) {\n        alpha = 1;\n      }\n\n      this._fillAlpha = alpha;\n\n      if (color) {\n        if (color instanceof Color) {\n          this._pushOp(new BeginFill(color.toCSS(alpha)));\n        } else {\n          this.isMeasured = true;\n\n          this._pushOp(new BeginFill(color));\n        }\n      } else {\n        this._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"endFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._pushOp(new EndFill(this._hasShadows));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"endStroke\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._pushOp(new EndStroke());\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"lineStyle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (width, color, alpha) {\n      if (width === void 0) {\n        width = 0;\n      }\n\n      if (alpha === void 0) {\n        alpha = 1;\n      }\n\n      this._strokeAlpha = alpha;\n\n      if (color) {\n        if (color instanceof Color) {\n          this._pushOp(new LineStyle(width, color.toCSS(alpha)));\n        } else {\n          this._pushOp(new LineStyle(width, color));\n        }\n      } else {\n        this._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\"));\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"setLineDash\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dash) {\n      this._pushOp(new LineDash(dash ? dash : []));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"setLineDashOffset\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dashOffset) {\n      this._pushOp(new LineDashOffset(dashOffset || 0));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"drawRect\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y, width, height) {\n      this._pushOp(new DrawRect(x, y, width, height));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"drawCircle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y, radius) {\n      this._pushOp(new DrawCircle(x, y, radius));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"arc\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cx, cy, radius, startAngle, endAngle, anticlockwise) {\n      if (anticlockwise === void 0) {\n        anticlockwise = false;\n      }\n\n      this._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"arcTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x1, y1, x2, y2, radius) {\n      this._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"lineTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y) {\n      this._pushOp(new LineTo(x, y));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"moveTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y) {\n      this._pushOp(new MoveTo(x, y));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"bezierCurveTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cpX, cpY, cpX2, cpY2, toX, toY) {\n      this._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"quadraticCurveTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cpX, cpY, toX, toY) {\n      this._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"closePath\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._pushOp(new ClosePath());\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"shadow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (color, blur, offsetX, offsetY, opacity) {\n      this._hasShadows = true;\n\n      this._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n    }\n  }); // https://svgwg.org/svg2-draft/paths.html#DProperty\n  // TODO better error checking\n\n  Object.defineProperty(CanvasGraphics.prototype, \"svgPath\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (path) {\n      var _this = this;\n\n      var x = 0;\n      var y = 0;\n      var cpx = null;\n      var cpy = null;\n      var qcpx = null;\n      var qcpy = null;\n      var SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n      var ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n      var match;\n\n      while ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n        var name_1 = match[1];\n        var rest = match[2];\n        var args = [];\n\n        while ((match = ARGS_REGEXP.exec(rest)) !== null) {\n          args.push(+match[1]);\n        } // Reset control point\n\n\n        if (name_1 !== \"S\" && name_1 !== \"s\" && name_1 !== \"C\" && name_1 !== \"c\") {\n          cpx = null;\n          cpy = null;\n        } // Reset control point\n\n\n        if (name_1 !== \"Q\" && name_1 !== \"q\" && name_1 !== \"T\" && name_1 !== \"t\") {\n          qcpx = null;\n          qcpy = null;\n        }\n\n        switch (name_1) {\n          case \"M\":\n            checkEvenArgs(name_1, args.length, 2);\n            x = args[0];\n            y = args[1];\n            this.moveTo(x, y);\n\n            for (var i = 2; i < args.length; i += 2) {\n              x = args[i];\n              y = args[i + 1];\n              this.lineTo(x, y);\n            }\n\n            break;\n\n          case \"m\":\n            checkEvenArgs(name_1, args.length, 2);\n            x += args[0];\n            y += args[1];\n            this.moveTo(x, y);\n\n            for (var i = 2; i < args.length; i += 2) {\n              x += args[i];\n              y += args[i + 1];\n              this.lineTo(x, y);\n            }\n\n            break;\n\n          case \"L\":\n            checkEvenArgs(name_1, args.length, 2);\n\n            for (var i = 0; i < args.length; i += 2) {\n              x = args[i];\n              y = args[i + 1];\n              this.lineTo(x, y);\n            }\n\n            break;\n\n          case \"l\":\n            checkEvenArgs(name_1, args.length, 2);\n\n            for (var i = 0; i < args.length; i += 2) {\n              x += args[i];\n              y += args[i + 1];\n              this.lineTo(x, y);\n            }\n\n            break;\n\n          case \"H\":\n            checkMinArgs(name_1, args.length, 1);\n\n            for (var i = 0; i < args.length; ++i) {\n              x = args[i];\n              this.lineTo(x, y);\n            }\n\n            break;\n\n          case \"h\":\n            checkMinArgs(name_1, args.length, 1);\n\n            for (var i = 0; i < args.length; ++i) {\n              x += args[i];\n              this.lineTo(x, y);\n            }\n\n            break;\n\n          case \"V\":\n            checkMinArgs(name_1, args.length, 1);\n\n            for (var i = 0; i < args.length; ++i) {\n              y = args[i];\n              this.lineTo(x, y);\n            }\n\n            break;\n\n          case \"v\":\n            checkMinArgs(name_1, args.length, 1);\n\n            for (var i = 0; i < args.length; ++i) {\n              y += args[i];\n              this.lineTo(x, y);\n            }\n\n            break;\n\n          case \"C\":\n            checkEvenArgs(name_1, args.length, 6);\n\n            for (var i = 0; i < args.length; i += 6) {\n              var x1 = args[i];\n              var y1 = args[i + 1];\n              cpx = args[i + 2];\n              cpy = args[i + 3];\n              x = args[i + 4];\n              y = args[i + 5];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n\n            break;\n\n          case \"c\":\n            checkEvenArgs(name_1, args.length, 6);\n\n            for (var i = 0; i < args.length; i += 6) {\n              var x1 = args[i] + x;\n              var y1 = args[i + 1] + y;\n              cpx = args[i + 2] + x;\n              cpy = args[i + 3] + y;\n              x += args[i + 4];\n              y += args[i + 5];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n\n            break;\n\n          case \"S\":\n            checkEvenArgs(name_1, args.length, 4);\n\n            if (cpx === null || cpy === null) {\n              cpx = x;\n              cpy = y;\n            }\n\n            for (var i = 0; i < args.length; i += 4) {\n              var x1 = 2 * x - cpx;\n              var y1 = 2 * y - cpy;\n              cpx = args[i];\n              cpy = args[i + 1];\n              x = args[i + 2];\n              y = args[i + 3];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n\n            break;\n\n          case \"s\":\n            checkEvenArgs(name_1, args.length, 4);\n\n            if (cpx === null || cpy === null) {\n              cpx = x;\n              cpy = y;\n            }\n\n            for (var i = 0; i < args.length; i += 4) {\n              var x1 = 2 * x - cpx;\n              var y1 = 2 * y - cpy;\n              cpx = args[i] + x;\n              cpy = args[i + 1] + y;\n              x += args[i + 2];\n              y += args[i + 3];\n              this.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n            }\n\n            break;\n\n          case \"Q\":\n            checkEvenArgs(name_1, args.length, 4);\n\n            for (var i = 0; i < args.length; i += 4) {\n              qcpx = args[i];\n              qcpy = args[i + 1];\n              x = args[i + 2];\n              y = args[i + 3];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n\n            break;\n\n          case \"q\":\n            checkEvenArgs(name_1, args.length, 4);\n\n            for (var i = 0; i < args.length; i += 4) {\n              qcpx = args[i] + x;\n              qcpy = args[i + 1] + y;\n              x += args[i + 2];\n              y += args[i + 3];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n\n            break;\n\n          case \"T\":\n            checkEvenArgs(name_1, args.length, 2);\n\n            if (qcpx === null || qcpy === null) {\n              qcpx = x;\n              qcpy = y;\n            }\n\n            for (var i = 0; i < args.length; i += 2) {\n              qcpx = 2 * x - qcpx;\n              qcpy = 2 * y - qcpy;\n              x = args[i];\n              y = args[i + 1];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n\n            break;\n\n          case \"t\":\n            checkEvenArgs(name_1, args.length, 2);\n\n            if (qcpx === null || qcpy === null) {\n              qcpx = x;\n              qcpy = y;\n            }\n\n            for (var i = 0; i < args.length; i += 2) {\n              qcpx = 2 * x - qcpx;\n              qcpy = 2 * y - qcpy;\n              x += args[i];\n              y += args[i + 1];\n              this.quadraticCurveTo(qcpx, qcpy, x, y);\n            }\n\n            break;\n\n          case \"A\":\n          case \"a\":\n            var relative = name_1 === \"a\";\n            checkEvenArgs(name_1, args.length, 7);\n\n            for (var i = 0; i < args.length; i += 7) {\n              var cx = args[i + 5];\n              var cy = args[i + 6];\n\n              if (relative) {\n                cx += x;\n                cy += y;\n              }\n\n              var bs = arcToBezier({\n                px: x,\n                py: y,\n                rx: args[i],\n                ry: args[i + 1],\n                xAxisRotation: args[i + 2],\n                largeArcFlag: assertBinary(args[i + 3]),\n                sweepFlag: assertBinary(args[i + 4]),\n                cx: cx,\n                cy: cy\n              });\n              $array.each(bs, function (b) {\n                _this.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n\n                x = b.x;\n                y = b.y;\n              });\n            }\n\n            break;\n\n          case \"Z\":\n          case \"z\":\n            checkArgs(name_1, args.length, 0);\n            this.closePath();\n            break;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_runPath\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      context.beginPath();\n      $array.each(this._operations, function (op) {\n        op.path(context);\n      });\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      _super.prototype._render.call(this, parentLayer);\n\n      var layer = this._layer || parentLayer;\n      var layerDirty = layer.dirty;\n\n      var interactive = this._isInteractive(); // if (this.targetLayer) {\n      // \tconsole.log(this._operations, layer)\n      // }\n\n\n      if (layerDirty || interactive) {\n        var context_1 = layer.context;\n        var ghostContext_1 = this._renderer._ghostContext;\n\n        if (layerDirty) {\n          context_1.globalCompositeOperation = this.blendMode;\n          context_1.beginPath();\n        }\n\n        var color_1;\n\n        if (interactive) {\n          ghostContext_1.beginPath();\n          color_1 = this._getColorId();\n        }\n\n        $array.each(this._operations, function (op) {\n          if (layerDirty) {\n            op.path(context_1);\n            op.colorize(context_1, undefined);\n          }\n\n          if (interactive) {\n            op.path(ghostContext_1);\n            op.colorize(ghostContext_1, color_1);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"renderDetached\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.visible) {\n        this._setMatrix();\n\n        context.save(); // We must apply the mask before we transform the element\n\n        var mask = this.mask;\n\n        if (mask) {\n          mask._setMatrix();\n\n          mask._transform(context, 1);\n\n          mask._runPath(context);\n\n          context.clip();\n        } // TODO handle compoundAlpha somehow ?\n\n\n        context.globalAlpha = this.compoundAlpha * this.alpha;\n\n        this._transform(context, 1);\n\n        if (this.filter) {\n          context.filter = this.filter;\n        }\n\n        context.globalCompositeOperation = this.blendMode;\n        context.beginPath();\n        $array.each(this._operations, function (op) {\n          op.path(context);\n          op.colorize(context, undefined);\n        });\n        context.restore();\n      }\n    }\n  });\n  Object.defineProperty(CanvasGraphics.prototype, \"_addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      if (this.visible && this.isMeasured) {\n        $array.each(this._operations, function (op) {\n          op.addBounds(bounds);\n        });\n      }\n    }\n  });\n  return CanvasGraphics;\n}(CanvasDisplayObject);\n\nexport { CanvasGraphics };\n/**\r\n * @ignore\r\n */\n\nvar CanvasText =\n/** @class */\nfunction (_super) {\n  __extends(CanvasText, _super);\n\n  function CanvasText(renderer, text, style) {\n    var _this = _super.call(this, renderer) || this;\n\n    Object.defineProperty(_this, \"text\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"style\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"resolution\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_textInfo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_textVisible\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_originalScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    _this.text = text;\n    _this.style = style;\n    return _this;\n  }\n\n  Object.defineProperty(CanvasText.prototype, \"invalidateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.invalidateBounds.call(this);\n\n      this._textInfo = undefined;\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_shared\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context) {\n      if (this.style.textAlign) {\n        context.textAlign = this.style.textAlign;\n      }\n\n      if (this.style.direction) {\n        context.direction = this.style.direction;\n      }\n\n      if (this.style.textBaseline) {\n        context.textBaseline = this.style.textBaseline;\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_prerender\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer, ignoreGhost, ignoreFontWeight) {\n      if (ignoreGhost === void 0) {\n        ignoreGhost = false;\n      }\n\n      if (ignoreFontWeight === void 0) {\n        ignoreFontWeight = false;\n      }\n\n      _super.prototype._render.call(this, layer);\n\n      var context = layer.context;\n      var ghostContext = this._renderer._ghostContext; // Font style\n\n      var style = this.style;\n\n      var fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n\n      context.font = fontStyle;\n\n      if (this._isInteractive() && !ignoreGhost) {\n        ghostContext.font = fontStyle;\n      } // Other parameters\n\n\n      if (style.fill) {\n        if (style.fill instanceof Color) {\n          context.fillStyle = style.fill.toCSS();\n        } else {\n          context.fillStyle = style.fill;\n        }\n      }\n\n      if (style.shadowColor) {\n        layer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n      }\n\n      if (style.shadowBlur) {\n        layer.context.shadowBlur = style.shadowBlur;\n      }\n\n      if (style.shadowOffsetX) {\n        layer.context.shadowOffsetX = style.shadowOffsetX;\n      }\n\n      if (style.shadowOffsetY) {\n        layer.context.shadowOffsetY = style.shadowOffsetY;\n      }\n\n      this._shared(context);\n\n      if (this._isInteractive() && !ignoreGhost) {\n        ghostContext.fillStyle = this._getColorId();\n\n        this._shared(ghostContext);\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_getFontStyle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (style2, ignoreFontWeight) {\n      if (ignoreFontWeight === void 0) {\n        ignoreFontWeight = false;\n      } // Process defaults\n\n\n      var style = this.style;\n      var fontStyle = [];\n\n      if (style2 && style2.fontVariant) {\n        fontStyle.push(style2.fontVariant);\n      } else if (style.fontVariant) {\n        fontStyle.push(style.fontVariant);\n      }\n\n      if (!ignoreFontWeight) {\n        if (style2 && style2.fontWeight) {\n          fontStyle.push(style2.fontWeight);\n        } else if (style.fontWeight) {\n          fontStyle.push(style.fontWeight);\n        }\n      }\n\n      if (style2 && style2.fontStyle) {\n        fontStyle.push(style2.fontStyle);\n      } else if (style.fontStyle) {\n        fontStyle.push(style.fontStyle);\n      }\n\n      if (style2 && style2.fontSize) {\n        if ($type.isNumber(style2.fontSize)) {\n          style2.fontSize = style2.fontSize + \"px\";\n        }\n\n        fontStyle.push(style2.fontSize);\n      } else if (style.fontSize) {\n        if ($type.isNumber(style.fontSize)) {\n          style.fontSize = style.fontSize + \"px\";\n        }\n\n        fontStyle.push(style.fontSize);\n      }\n\n      if (style2 && style2.fontFamily) {\n        fontStyle.push(style2.fontFamily);\n      } else if (style.fontFamily) {\n        fontStyle.push(style.fontFamily);\n      } else if (fontStyle.length) {\n        fontStyle.push(\"Arial\");\n      }\n\n      return fontStyle.join(\" \");\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var _this = this;\n\n      var layer = this._layer || parentLayer; // We need measurements in order to properly position text for alignment\n\n      if (!this._textInfo) {\n        this._measure(layer);\n      }\n\n      if (this._textVisible) {\n        var interactive_1 = this._isInteractive();\n\n        var context_2 = layer.context;\n        var layerDirty_1 = layer.dirty;\n        var ghostContext_2 = this._renderer._ghostContext; //console.log(\"interactive:\",  interactive, \"layerDirty:\", layerDirty);\n\n        context_2.save();\n        ghostContext_2.save();\n\n        this._prerender(layer); // const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n        // const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n        // Process text info produced by _measure()\n\n\n        $array.each(this._textInfo, function (line, _index) {\n          $array.each(line.textChunks, function (chunk, _index) {\n            // Set style\n            if (chunk.style) {\n              context_2.save();\n              ghostContext_2.save();\n              context_2.font = chunk.style;\n\n              if (_this._isInteractive()) {\n                ghostContext_2.font = chunk.style;\n              }\n            }\n\n            if (chunk.fill) {\n              context_2.save();\n              context_2.fillStyle = chunk.fill.toCSS(); // Color does not affect ghostContext so we not set it\n            } // Draw text\n\n\n            if (layerDirty_1) {\n              context_2.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n            }\n\n            if (interactive_1 && _this.interactive) {\n              // Draw text in ghost canvas ONLY if it is set as interactive\n              // explicitly. This way we avoid hit test anomalies caused by anti\n              // aliasing of text.\n              ghostContext_2.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n            }\n\n            if (chunk.fill) {\n              context_2.restore(); // Color does not affect ghostContext so we not set it\n            } // Reset style\n\n\n            if (chunk.style) {\n              context_2.restore();\n              ghostContext_2.restore();\n            }\n          });\n        });\n        context_2.restore();\n        ghostContext_2.restore();\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_addBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      if (this.visible && this.isMeasured) {\n        //if (this._textVisible) {\n        var x = this._measure(this.getLayer());\n\n        setPoint(bounds, {\n          x: x.left,\n          y: x.top\n        });\n        setPoint(bounds, {\n          x: x.right,\n          y: x.bottom\n        }); //}\n      }\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_measure\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      var _this = this;\n\n      var context = layer.context;\n      var ghostContext = this._renderer._ghostContext; // Reset text info\n\n      this._textInfo = []; // Init\n\n      var oversizedBehavior = this.style.oversizedBehavior;\n      var maxWidth = this.style.maxWidth;\n      var truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n      var wrap = $type.isNumber(maxWidth) && oversizedBehavior == \"wrap\"; // Pre-render\n\n      context.save();\n      ghostContext.save();\n\n      this._prerender(layer, true, true); // Get default font metrix\n\n\n      var refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \"; // Split up text into lines\n\n      var lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n      var styleRestored = true;\n      var minX = 0;\n      var maxX = 0; // Iterate through the lines\n\n      var offsetY = 0;\n      $array.each(lines, function (line, _index) {\n        // Split up line into format/value chunks\n        var chunks;\n\n        if (line == \"\") {\n          chunks = [{\n            type: \"value\",\n            text: \"\"\n          }];\n        } else {\n          chunks = TextFormatter.chunk(line, false, _this.style.ignoreFormatting);\n        }\n\n        var _loop_1 = function () {\n          // Init line object\n          var lineInfo = {\n            offsetY: offsetY,\n            ascent: 0,\n            width: 0,\n            height: 0,\n            left: 0,\n            right: 0,\n            textChunks: []\n          }; // Measure reference text\n\n          var metrics = _this._measureText(refText, context);\n\n          var height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n          lineInfo.height = height;\n          lineInfo.ascent = metrics.actualBoundingBoxAscent;\n          var currentStyle;\n          var currentFormat;\n          var currentFill;\n          var currentChunkWidth;\n          var skipFurtherText = false;\n          var firstTextChunk = true;\n          var leftoverChunks = []; //let offsetX = 0;\n          //let chunk;\n          //while(chunk = chunks.shift()) {\n\n          $array.eachContinue(chunks, function (chunk, index) {\n            // Format chunk\n            if (chunk.type == \"format\") {\n              if (chunk.text == \"[/]\") {\n                if (!styleRestored) {\n                  context.restore();\n                  ghostContext.restore();\n                  styleRestored = true;\n                }\n\n                currentFill = undefined;\n                currentStyle = undefined;\n                currentChunkWidth = undefined;\n                currentFormat = chunk.text;\n              } else {\n                if (!styleRestored) {\n                  context.restore();\n                  ghostContext.restore();\n                }\n\n                var format = TextFormatter.getTextStyle(chunk.text);\n\n                var fontStyle = _this._getFontStyle(format);\n\n                context.save();\n                ghostContext.save();\n                context.font = fontStyle;\n                currentStyle = fontStyle;\n                currentFormat = chunk.text;\n\n                if (format.fill) {\n                  currentFill = format.fill;\n                }\n\n                if (format.width) {\n                  currentChunkWidth = $type.toNumber(format.width);\n                }\n\n                styleRestored = false; // Measure reference text after change of format\n\n                var metrics_1 = _this._measureText(refText, context);\n\n                var height_1 = metrics_1.actualBoundingBoxAscent + metrics_1.actualBoundingBoxDescent;\n\n                if (height_1 > lineInfo.height) {\n                  lineInfo.height = height_1;\n                }\n\n                if (metrics_1.actualBoundingBoxAscent > lineInfo.ascent) {\n                  lineInfo.ascent = metrics_1.actualBoundingBoxAscent;\n                }\n              }\n            } // Text chunk\n            else if (chunk.type == \"value\" && !skipFurtherText) {\n              // Measure\n              var metrics_2 = _this._measureText(chunk.text, context);\n\n              var chunkWidth = metrics_2.actualBoundingBoxLeft + metrics_2.actualBoundingBoxRight; // Check for fit\n\n              if (truncate) {\n                // Break words?\n                var breakWords = firstTextChunk || _this.style.breakWords || false; // Measure ellipsis and check if it fits\n\n                var ellipsis = _this.style.ellipsis || \"\";\n\n                var ellipsisMetrics = _this._measureText(ellipsis, context);\n\n                var ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight; // Check fit\n\n                if (lineInfo.width + chunkWidth > maxWidth) {\n                  var excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n                  chunk.text = _this._truncateText(context, chunk.text, excessWidth, breakWords);\n                  chunk.text += ellipsis;\n                  skipFurtherText = true;\n                }\n              } else if (wrap) {\n                // Check fit\n                if (lineInfo.width + chunkWidth > maxWidth) {\n                  var excessWidth = maxWidth - lineInfo.width;\n\n                  var tmpText = _this._truncateText(context, chunk.text, excessWidth, false, firstTextChunk);\n\n                  if (tmpText == \"\") {\n                    // Unable to fit a single letter - hide the whole label\n                    _this._textVisible = true;\n                    return false;\n                  } //skipFurtherText = true;\n                  //Add remaining chunks for the next line\n\n\n                  leftoverChunks = chunks.slice(index + 1); //Add remaining text of current chunk if it was forced-cut\n\n                  if ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n                    leftoverChunks.unshift({\n                      type: \"value\",\n                      text: chunk.text.substr(tmpText.length)\n                    });\n\n                    if (currentFormat) {\n                      leftoverChunks.unshift({\n                        type: \"format\",\n                        text: currentFormat\n                      });\n                    }\n                  } // Set current chunk (truncated)\n\n\n                  chunk.text = tmpText;\n                  chunks = [];\n                  skipFurtherText = true;\n                }\n              } // Chunk width?\n\n\n              var leftBoundMod = 1;\n              var rightBoundMod = 1;\n\n              if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) {\n                // increase horizontal bounding boxes accordingly\n                var boundsMod = chunkWidth / currentChunkWidth;\n\n                switch (_this.style.textAlign) {\n                  case \"right\":\n                  case \"end\":\n                    leftBoundMod = boundsMod;\n                    break;\n\n                  case \"center\":\n                    leftBoundMod = boundsMod;\n                    rightBoundMod = boundsMod;\n                    break;\n\n                  default:\n                    rightBoundMod = boundsMod;\n                }\n\n                chunkWidth = currentChunkWidth;\n              }\n\n              var chunkHeight = metrics_2.actualBoundingBoxAscent + metrics_2.actualBoundingBoxDescent;\n\n              if (chunkHeight > lineInfo.height) {\n                lineInfo.height = chunkHeight;\n              }\n\n              if (metrics_2.actualBoundingBoxAscent > lineInfo.ascent) {\n                lineInfo.ascent = metrics_2.actualBoundingBoxAscent;\n              }\n\n              lineInfo.width += chunkWidth;\n              lineInfo.left += metrics_2.actualBoundingBoxLeft / leftBoundMod;\n              lineInfo.right += metrics_2.actualBoundingBoxRight / rightBoundMod;\n              lineInfo.textChunks.push({\n                style: currentStyle,\n                fill: currentFill,\n                text: chunk.text,\n                width: chunkWidth,\n                height: chunkHeight,\n                left: metrics_2.actualBoundingBoxLeft,\n                right: metrics_2.actualBoundingBoxRight,\n                ascent: metrics_2.actualBoundingBoxAscent,\n                offsetX: 0,\n                offsetY: 0\n              }); //offsetX += chunkWidth;\n\n              firstTextChunk = false;\n            }\n\n            if (leftoverChunks) {//return false;\n            }\n\n            return true; //}\n          });\n\n          if (_this.style.lineHeight instanceof Percent) {\n            lineInfo.height *= _this.style.lineHeight.value;\n            lineInfo.ascent *= _this.style.lineHeight.value;\n          } else {\n            lineInfo.height *= _this.style.lineHeight || 1.2;\n            lineInfo.ascent *= _this.style.lineHeight || 1.2;\n          }\n\n          if (minX < lineInfo.left) {\n            minX = lineInfo.left;\n          }\n\n          if (maxX < lineInfo.right) {\n            maxX = lineInfo.right;\n          }\n\n          _this._textInfo.push(lineInfo); //lineInfo.offsetY += lineInfo.ascent;\n\n\n          offsetY += lineInfo.height; // Reset chunks so that it can proceed to the next line\n\n          chunks = leftoverChunks || [];\n        };\n\n        while (chunks.length > 0) {\n          _loop_1();\n        }\n      });\n\n      if (!styleRestored) {\n        context.restore();\n        ghostContext.restore();\n      } // Adjust chunk internal offsets\n\n\n      $array.each(this._textInfo, function (lineInfo, _index) {\n        var currentChunkOffset = 0;\n        $array.each(lineInfo.textChunks, function (chunk) {\n          chunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n          chunk.offsetY += lineInfo.height - lineInfo.height * (_this.style.baselineRatio || 0.19);\n          currentChunkOffset += chunk.width;\n        });\n      });\n      var bounds = {\n        left: -minX,\n        top: 0,\n        right: maxX,\n        bottom: offsetY\n      }; // We need to fit?\n\n      if (oversizedBehavior !== \"none\") {\n        var ratio = this._fitRatio(bounds);\n\n        if (ratio < 1) {\n          if (oversizedBehavior == \"fit\") {\n            if ($type.isNumber(this.style.minScale) && ratio < this.style.minScale) {\n              this._textVisible = false;\n            } else {\n              if (!this._originalScale || this._originalScale == 1) {\n                this._originalScale = this.scale;\n              }\n\n              this.scale = ratio;\n              this._textVisible = true;\n            }\n          } else if (oversizedBehavior == \"hide\") {\n            this._textVisible = false;\n          } else {\n            switch (this.style.textAlign) {\n              case \"right\":\n              case \"end\":\n                bounds.left = maxWidth;\n                bounds.right = 0;\n                break;\n\n              case \"center\":\n                bounds.left = -maxWidth / 2;\n                bounds.right = maxWidth / 2;\n                break;\n\n              default:\n                bounds.left = 0;\n                bounds.right = maxWidth;\n            }\n\n            this.scale = this._originalScale || 1;\n            this._originalScale = undefined;\n            this._textVisible = true;\n          }\n        } else {\n          this.scale = this._originalScale || 1;\n          this._originalScale = undefined;\n          this._textVisible = true;\n        }\n      }\n\n      context.restore();\n      ghostContext.restore();\n      return bounds;\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_fitRatio\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var maxW = this.style.maxWidth;\n      var maxH = this.style.maxHeight;\n\n      if (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n        return 1;\n      }\n\n      var w = bounds.right - bounds.left;\n      var h = bounds.bottom - bounds.top;\n      return Math.min(maxW / w || 1, maxH / h || 1);\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_truncateText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (context, text, maxWidth, breakWords, fallbackBreakWords) {\n      if (breakWords === void 0) {\n        breakWords = false;\n      }\n\n      if (fallbackBreakWords === void 0) {\n        fallbackBreakWords = true;\n      }\n\n      var width;\n\n      do {\n        if (breakWords) {\n          text = text.slice(0, -1);\n        } else {\n          var tmp = text.replace(/[^,;:!?\\\\\\/\\.\\s]+[,;:!?\\\\\\/\\.\\s]*$/g, \"\");\n\n          if (tmp == \"\" && fallbackBreakWords) {\n            breakWords = true;\n          } else {\n            text = tmp;\n          }\n        }\n\n        var metrics = this._measureText(text, context);\n\n        width = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n      } while (width > maxWidth && text != \"\");\n\n      return text;\n    }\n  });\n  Object.defineProperty(CanvasText.prototype, \"_measureText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, context) {\n      var metrics = context.measureText(text);\n      var fakeMetrics = {};\n\n      if (metrics.actualBoundingBoxAscent == null) {\n        var div = document.createElement(\"div\");\n        div.innerText = text;\n        div.style.visibility = \"hidden\";\n        div.style.position = \"absolute\";\n        div.style.top = \"-1000000px;\";\n        div.style.fontFamily = this.style.fontFamily || \"\";\n        div.style.fontSize = this.style.fontSize + \"\";\n        document.body.appendChild(div);\n        var bbox = div.getBoundingClientRect();\n        document.body.removeChild(div);\n        var h = bbox.height;\n        var w_1 = metrics.width;\n        var left = 0;\n        var right = w_1;\n        fakeMetrics = {\n          actualBoundingBoxAscent: h,\n          actualBoundingBoxDescent: 0,\n          actualBoundingBoxLeft: left,\n          actualBoundingBoxRight: right,\n          fontBoundingBoxAscent: h,\n          fontBoundingBoxDescent: 0,\n          width: w_1\n        }; //return fake;\n      } else {\n        fakeMetrics = {\n          actualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n          actualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n          actualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n          actualBoundingBoxRight: metrics.actualBoundingBoxRight,\n          fontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n          fontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n          width: metrics.width\n        };\n      }\n\n      var w = metrics.width;\n\n      switch (this.style.textAlign) {\n        case \"right\":\n        case \"end\":\n          fakeMetrics.actualBoundingBoxLeft = w;\n          fakeMetrics.actualBoundingBoxRight = 0;\n          break;\n\n        case \"center\":\n          fakeMetrics.actualBoundingBoxLeft = w / 2;\n          fakeMetrics.actualBoundingBoxRight = w / 2;\n          break;\n\n        default:\n          fakeMetrics.actualBoundingBoxLeft = 0;\n          fakeMetrics.actualBoundingBoxRight = w;\n      }\n\n      return fakeMetrics;\n    }\n  });\n  return CanvasText;\n}(CanvasDisplayObject);\n\nexport { CanvasText };\n/**\r\n * @ignore\r\n */\n\nvar CanvasTextStyle =\n/** @class */\nfunction () {\n  function CanvasTextStyle() {\n    //public wordWrapWidth: number = 100;\n    Object.defineProperty(this, \"fill\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textAlign\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontFamily\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontSize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontWeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontStyle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"fontVariant\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowColor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowBlur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOffsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"shadowOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // leading?: number;\n    // letterSpacing?: number;\n\n    Object.defineProperty(this, \"lineHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: percent(120)\n    });\n    Object.defineProperty(this, \"baselineRatio\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0.19\n    }); // padding?: number;\n    // stroke?: number;\n    // strokeThickness?: number;\n    // trim?: number;\n    // wordWrap?: boolean;\n\n    Object.defineProperty(this, \"direction\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"textBaseline\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"oversizedBehavior\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"none\"\n    });\n    Object.defineProperty(this, \"breakWords\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"ellipsis\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"…\"\n    });\n    Object.defineProperty(this, \"maxWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"maxHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"minScale\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"ignoreFormatting\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n  }\n\n  return CanvasTextStyle;\n}();\n\nexport { CanvasTextStyle };\n/**\r\n * @ignore\r\n */\n\nvar CanvasRadialText =\n/** @class */\nfunction (_super) {\n  __extends(CanvasRadialText, _super);\n\n  function CanvasRadialText() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"textType\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"circular\"\n    });\n    Object.defineProperty(_this, \"radius\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"startAngle\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"inside\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"orientation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"auto\"\n    });\n    Object.defineProperty(_this, \"kerning\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_textReversed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    return _this;\n  }\n\n  Object.defineProperty(CanvasRadialText.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      switch (this.textType) {\n        case \"circular\":\n          this._renderCircular(parentLayer);\n\n          break;\n\n        default:\n          _super.prototype._render.call(this, parentLayer);\n\n          break;\n      }\n    }\n  });\n  Object.defineProperty(CanvasRadialText.prototype, \"_renderCircular\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      var layer = this._layer || parentLayer;\n\n      this._prerender(layer);\n\n      var interactive = this._isInteractive();\n\n      var context = layer.context;\n      var layerDirty = layer.dirty;\n      var ghostContext = this._renderer._ghostContext; // Savepoint\n\n      context.save();\n\n      if (interactive) {\n        ghostContext.save();\n      } // Init\n\n\n      var radius = this.radius || 0;\n      var startAngle = this.startAngle || 0;\n      var deltaAngle = 0;\n      var orientation = this.orientation;\n      var inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n      var inside = this.inside;\n      var align = this.style.textAlign || \"left\";\n      var kerning = this.kerning || 0;\n      var clockwise = align == \"left\" ? 1 : -1;\n      var shouldReverse = !this._textReversed; // We need measurements in order to properly position text for alignment\n\n      if (!this._textInfo) {\n        this._measure(layer);\n      } // Check if we need to invert the whole stuff\n\n\n      if (inward == \"auto\") {\n        // Calc max angle so we know whether we need to flip it\n        var maxAngle_1 = 0;\n        var midAngle = 0;\n        $array.each(this._textInfo, function (line, _index) {\n          var deltaAngle = startAngle + line.width / (radius - line.height) / 2 * -clockwise;\n\n          if (deltaAngle > maxAngle_1) {\n            maxAngle_1 = deltaAngle;\n          }\n        });\n\n        if (align == \"left\") {\n          midAngle = (maxAngle_1 + deltaAngle / 2) * $math.DEGREES;\n        } else if (align == \"right\") {\n          midAngle = (maxAngle_1 - deltaAngle / 2) * $math.DEGREES;\n        } else {\n          midAngle = startAngle * $math.DEGREES;\n        }\n\n        midAngle = $math.normalizeAngle(midAngle);\n        inward = midAngle >= 270 || midAngle <= 90;\n      }\n\n      if (inward == true && shouldReverse) {\n        this._textInfo.reverse();\n\n        this._textReversed = true;\n      } // if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n      // \tclockwise *= -1;\n      // }\n      // Process text info produced by _measure()\n\n\n      $array.each(this._textInfo, function (line, _index) {\n        var textHeight = line.height; // Adjust radius (for `inside = false`)\n        // Radius adjustment for `inside = false` is below the line calculation\n\n        if (!inside) {\n          radius += textHeight;\n        } // Reverse letters if we're painting them counter-clockwise\n\n\n        if ((clockwise == -1 && inward || clockwise == 1 && !inward) && shouldReverse) {\n          line.textChunks.reverse();\n        } // Init angles\n\n\n        var lineStartAngle = startAngle;\n        deltaAngle = 0; // Adjust for center-align\n\n        if (align == \"center\") {\n          lineStartAngle += line.width / (radius - textHeight) / 2 * -clockwise;\n          deltaAngle = lineStartAngle - startAngle;\n        } // if (inward == \"auto\") {\n        // \tlet midAngle;\n        // \tif (align == \"left\") {\n        // \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n        // \t}\n        // \telse if () {\n        // \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n        // \t}\n        // \tinward = (midAngle >= 270) || (midAngle <= 90);\n        // }\n        // Rotate letters if they are facing outward\n\n\n        lineStartAngle += Math.PI * (inward ? 0 : 1); // Rotate 180 if outward\n        // Savepoint\n\n        context.save();\n\n        if (interactive) {\n          ghostContext.save();\n        } // Assume starting angle\n\n\n        context.rotate(lineStartAngle);\n\n        if (interactive) {\n          ghostContext.rotate(lineStartAngle);\n        }\n\n        var angleShift = 0;\n        $array.each(line.textChunks, function (chunk, _index) {\n          // Draw the letter\n          var char = chunk.text;\n          var charWidth = chunk.width; // Rotate half a letter\n\n          angleShift = charWidth / 2 / (radius - textHeight) * clockwise;\n          context.rotate(angleShift);\n\n          if (interactive) {\n            ghostContext.rotate(angleShift);\n          } // Set style\n\n\n          if (chunk.style) {\n            context.save();\n            ghostContext.save();\n            context.font = chunk.style;\n\n            if (interactive) {\n              ghostContext.font = chunk.style;\n            }\n          }\n\n          if (chunk.fill) {\n            context.save();\n            context.fillStyle = chunk.fill.toCSS(); // Color does not affect ghostContext so we not set it\n          } // Center letters\n\n\n          context.textBaseline = \"middle\";\n          context.textAlign = \"center\";\n\n          if (interactive) {\n            ghostContext.textBaseline = \"middle\";\n            ghostContext.textAlign = \"center\";\n          } // Plop the letter\n\n\n          if (layerDirty) {\n            context.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n          }\n\n          if (interactive) {\n            ghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n          }\n\n          if (chunk.fill) {\n            context.restore(); // Color does not affect ghostContext so we not set it\n          } // Reset style\n\n\n          if (chunk.style) {\n            context.restore();\n            ghostContext.restore();\n          } // Rotate half a letter and add spacing\n\n\n          angleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n          context.rotate(angleShift);\n\n          if (interactive) {\n            ghostContext.rotate(angleShift);\n          }\n        }); // Restore angle\n\n        context.restore();\n\n        if (interactive) {\n          ghostContext.restore();\n        } // Adjust radius (for `inside = true`)\n\n\n        if (inside) {\n          radius -= textHeight;\n        }\n      }); // Restore\n\n      context.restore();\n\n      if (interactive) {\n        ghostContext.restore();\n      }\n    }\n  });\n  Object.defineProperty(CanvasRadialText.prototype, \"_measure\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      switch (this.textType) {\n        case \"circular\":\n          return this._measureCircular(layer);\n\n        default:\n          return _super.prototype._measure.call(this, layer);\n      }\n    }\n  });\n  Object.defineProperty(CanvasRadialText.prototype, \"_measureCircular\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (layer) {\n      var _this = this;\n\n      var context = layer.context;\n      var ghostContext = this._renderer._ghostContext; // Reset text info\n\n      this._textInfo = [];\n      this._textReversed = false; // Pre-render\n\n      context.save();\n      ghostContext.save();\n\n      this._prerender(layer, true); // Split up text into lines\n\n\n      var lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n      var styleRestored = true; // Iterate through the lines\n\n      var offsetY = 0;\n      $array.each(lines, function (line, _index) {\n        // Split up line into format/value chunks\n        var chunks = TextFormatter.chunk(line, false, _this.style.ignoreFormatting); // Init line object\n\n        var lineInfo = {\n          offsetY: offsetY,\n          ascent: 0,\n          width: 0,\n          height: 0,\n          left: 0,\n          right: 0,\n          textChunks: []\n        };\n        var currentStyle;\n        var currentFill;\n        var currentChunkWidth; //while(chunk = chunks.shift()) {\n\n        $array.each(chunks, function (chunk, _index) {\n          // Format chunk\n          if (chunk.type == \"format\") {\n            if (chunk.text == \"[/]\") {\n              if (!styleRestored) {\n                context.restore();\n                ghostContext.restore();\n                styleRestored = true;\n              }\n\n              currentFill = undefined;\n              currentStyle = undefined;\n              currentChunkWidth = undefined;\n            } else {\n              var format = TextFormatter.getTextStyle(chunk.text);\n\n              var fontStyle = _this._getFontStyle(format);\n\n              context.save();\n              ghostContext.save();\n              context.font = fontStyle;\n              currentStyle = fontStyle;\n\n              if (format.fill) {\n                currentFill = format.fill;\n              }\n\n              if (format.width) {\n                currentChunkWidth = $type.toNumber(format.width);\n              }\n\n              styleRestored = false;\n            }\n          } // Text format\n          else if (chunk.type == \"value\") {\n            // Measure each letter\n            for (var i = 0; i < chunk.text.length; i++) {\n              var char = chunk.text[i]; // Measure\n\n              var metrics = _this._measureText(char, context);\n\n              var chunkWidth = metrics.width; // Chunk width?\n\n              if (currentStyle && currentChunkWidth && currentChunkWidth > chunkWidth) {\n                chunkWidth = currentChunkWidth;\n              }\n\n              var chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n              if (chunkHeight > lineInfo.height) {\n                lineInfo.height = chunkHeight;\n              }\n\n              if (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n                lineInfo.ascent = metrics.actualBoundingBoxAscent;\n              }\n\n              lineInfo.width += chunkWidth;\n              lineInfo.left += metrics.actualBoundingBoxLeft;\n              lineInfo.right += metrics.actualBoundingBoxRight;\n              lineInfo.textChunks.push({\n                style: currentStyle,\n                fill: currentFill,\n                text: char,\n                width: chunkWidth,\n                height: chunkHeight + metrics.actualBoundingBoxDescent,\n                left: metrics.actualBoundingBoxLeft,\n                right: metrics.actualBoundingBoxRight,\n                ascent: metrics.actualBoundingBoxAscent,\n                offsetX: 0,\n                offsetY: chunkHeight\n              });\n            }\n          }\n        });\n\n        if (_this.style.lineHeight instanceof Percent) {\n          lineInfo.height *= _this.style.lineHeight.value;\n        } else {\n          lineInfo.height *= _this.style.lineHeight || 1.2;\n        }\n\n        _this._textInfo.push(lineInfo); //lineInfo.offsetY += lineInfo.ascent;\n\n\n        offsetY += lineInfo.height;\n      });\n\n      if (!styleRestored) {\n        context.restore();\n        ghostContext.restore();\n      } // Adjust chunk internal offsets\n\n\n      $array.each(this._textInfo, function (lineInfo) {\n        $array.each(lineInfo.textChunks, function (chunk) {\n          chunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n        });\n      });\n      context.restore();\n      ghostContext.restore();\n      return {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n    }\n  });\n  return CanvasRadialText;\n}(CanvasText);\n\nexport { CanvasRadialText };\n/**\r\n * @ignore\r\n */\n\nvar CanvasImage =\n/** @class */\nfunction (_super) {\n  __extends(CanvasImage, _super);\n\n  function CanvasImage(renderer, image) {\n    var _this = _super.call(this, renderer) || this;\n\n    Object.defineProperty(_this, \"width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"image\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"tainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowColor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowBlur\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowOffsetX\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowOffsetY\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"shadowOpacity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_imageMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    _this.image = image;\n    return _this;\n  }\n\n  Object.defineProperty(CanvasImage.prototype, \"getLocalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._localBounds) {\n        var w = 0;\n        var h = 0;\n\n        if (this.width) {\n          w = this.width;\n        }\n\n        if (this.height) {\n          h = this.height;\n        }\n\n        this._localBounds = {\n          left: 0,\n          top: 0,\n          right: w,\n          bottom: h\n        };\n\n        this._addBounds(this._localBounds);\n      }\n\n      return this._localBounds;\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"_render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parentLayer) {\n      _super.prototype._render.call(this, parentLayer);\n\n      if (this.image) {\n        var layer = this._layer || parentLayer;\n\n        if (this.tainted === undefined) {\n          this.tainted = isTainted(this.image);\n          layer.tainted = true;\n        }\n\n        if (this.tainted && this._renderer._omitTainted) {\n          return;\n        }\n\n        if (layer.dirty) {\n          if (this.shadowColor) {\n            layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n          }\n\n          if (this.shadowBlur) {\n            layer.context.shadowBlur = this.shadowBlur;\n          }\n\n          if (this.shadowOffsetX) {\n            layer.context.shadowOffsetX = this.shadowOffsetX;\n          }\n\n          if (this.shadowOffsetY) {\n            layer.context.shadowOffsetY = this.shadowOffsetY;\n          }\n\n          var width = this.width || this.image.naturalWidth;\n          var height = this.height || this.image.naturalHeight;\n          layer.context.drawImage(this.image, 0, 0, width, height);\n        }\n\n        if (this.interactive && this._isInteractive()) {\n          var mask = this._getMask(this.image);\n\n          this._renderer._ghostContext.drawImage(mask, 0, 0);\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"clear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.clear.call(this);\n\n      this.image = undefined;\n      this._imageMask = undefined;\n    }\n  });\n  Object.defineProperty(CanvasImage.prototype, \"_getMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (image) {\n      if (this._imageMask === undefined) {\n        var width = this.width || image.naturalWidth;\n        var height = this.height || image.naturalHeight; // We need to create a second canvas because destination-in clears out the entire canvas\n\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = width;\n        canvas.height = height;\n        var context = canvas.getContext(\"2d\");\n        context.imageSmoothingEnabled = false;\n        context.fillStyle = this._getColorId();\n        context.fillRect(0, 0, width, height);\n\n        if (!isTainted(image)) {\n          context.globalCompositeOperation = \"destination-in\";\n          context.drawImage(image, 0, 0, width, height);\n        }\n\n        this._imageMask = canvas;\n      }\n\n      return this._imageMask;\n    }\n  });\n  return CanvasImage;\n}(CanvasDisplayObject);\n\nexport { CanvasImage };\n/**\r\n * @ignore\r\n */\n\nvar CanvasRendererEvent =\n/** @class */\nfunction () {\n  function CanvasRendererEvent(event, point) {\n    Object.defineProperty(this, \"event\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: event\n    });\n    Object.defineProperty(this, \"point\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: point\n    });\n    Object.defineProperty(this, \"id\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"simulated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, \"native\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n\n    if ($utils.supports(\"touchevents\") && event instanceof Touch) {\n      this.id = event.identifier;\n    } else {\n      this.id = null;\n    }\n  }\n\n  return CanvasRendererEvent;\n}();\n\nexport { CanvasRendererEvent };\n/**\r\n * @ignore\r\n */\n\nvar CanvasRenderer =\n/** @class */\nfunction (_super) {\n  __extends(CanvasRenderer, _super);\n\n  function CanvasRenderer() {\n    var _this = _super.call(this, function () {}) || this;\n\n    Object.defineProperty(_this, \"view\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"div\")\n    });\n    Object.defineProperty(_this, \"_layerDom\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"div\")\n    });\n    Object.defineProperty(_this, \"layers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_dirtyLayers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"defaultLayer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.getLayer(0)\n    });\n    Object.defineProperty(_this, \"_ghostView\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_ghostContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_patternCanvas\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: document.createElement(\"canvas\")\n    });\n    Object.defineProperty(_this, \"_patternContext\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._patternCanvas.getContext(\"2d\")\n    });\n    Object.defineProperty(_this, \"_width\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_height\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_clientWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_clientHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"resolution\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: window.devicePixelRatio\n    });\n    Object.defineProperty(_this, \"interactionsEnabled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"_listeners\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_colorId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_colorMap\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_forceInteractive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_omitTainted\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    }); // TODO this should store the Id as well\n\n    Object.defineProperty(_this, \"_hovering\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Set()\n    });\n    Object.defineProperty(_this, \"_dragging\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_mousedown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_lastPointerMoveEvent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_mouseMoveThrottler\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Throttler(function () {\n        _this._dispatchGlobalMousemove(_this._lastPointerMoveEvent);\n      })\n    });\n\n    _this.view.appendChild(_this._layerDom); // @todo : do the same for ghost\n\n\n    _this._ghostView = document.createElement(\"canvas\");\n    _this._ghostContext = _this._ghostView.getContext(\"2d\", {\n      alpha: false\n    });\n    _this._ghostContext.imageSmoothingEnabled = false; // Monitor for possible pixel ratio changes (when page is zoomed)\n\n    window.addEventListener(\"resize\", function (_ev) {\n      _this.resolution = window.devicePixelRatio;\n    }); // We need this in order top prevent default touch gestures when dragging\n    // draggable elements\n\n    if ($utils.supports(\"touchevents\")) {\n      document.addEventListener(\"touchstart\", function (ev) {\n        if (_this._dragging.length !== 0) {\n          ev.preventDefault();\n        }\n      }, {\n        passive: false\n      });\n    } // Prevent scrolling of the window when hovering on \"wheelable\" object\n\n\n    if ($utils.supports(\"wheelevents\")) {\n      _this.view.addEventListener(\"wheel\", function (ev) {\n        var prevent = false;\n\n        _this._hovering.forEach(function (obj) {\n          if (obj.wheelable) {\n            prevent = true;\n            return false;\n          }\n        });\n\n        if (prevent) {\n          ev.preventDefault();\n        }\n      }, {\n        passive: false\n      });\n    }\n\n    return _this;\n  }\n\n  ;\n  Object.defineProperty(CanvasRenderer.prototype, \"createLinearGradient\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x1, y1, x2, y2) {\n      return this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createRadialGradient\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x1, y1, radius1, x2, y2, radius2) {\n      return this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createPattern\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (graphics, background, repetition, width, height) {\n      // const patternCanvas = document.createElement(\"canvas\");\n      // const patternContext = patternCanvas.getContext(\"2d\")!;\n      // patternCanvas.width = width;\n      // patternCanvas.height = height;\n      // if (fill) {\n      // \tpatternContext.fillStyle = fill.toCSS();\n      // \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n      // }\n      // const layer = {\n      // \tview: patternCanvas,\n      // \tcontext: patternContext,\n      // \tvisible: true,\n      // \torder: 0,\n      // \twidth: width,\n      // \theight: height,\n      // \tdirty: true\n      // };\n      // // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n      // // patternContext.stroke();\n      // image.targetLayer = layer;\n      // image.render(layer);\n      //this._layerDom.appendChild(patternCanvas);\n      this._patternCanvas.width = width;\n      this._patternCanvas.height = height;\n\n      this._patternContext.clearRect(0, 0, width, height); // patternCanvas.style.width = width * this.resolution + \"px\";\n      // patternCanvas.style.height = height * this.resolution + \"px\";\n\n\n      background.renderDetached(this._patternContext);\n      graphics.renderDetached(this._patternContext);\n      return this._patternContext.createPattern(this._patternCanvas, repetition);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new CanvasContainer(this);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new CanvasGraphics(this);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, style) {\n      return new CanvasText(this, text, style);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeTextStyle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new CanvasTextStyle();\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makeRadialText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (text, style) {\n      return new CanvasRadialText(this, text, style);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"makePicture\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (image) {\n      return new CanvasImage(this, image);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"resize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (width, height) {\n      var _this = this;\n\n      this._clientWidth = width;\n      this._clientHeight = height;\n      this._width = Math.floor(width * this.resolution);\n      this._height = Math.floor(height * this.resolution);\n      $array.each(this.layers, function (layer) {\n        if (layer) {\n          layer.dirty = true;\n\n          if (layer.width != null) {\n            layer.view.width = layer.width;\n            layer.view.style.width = layer.width + \"px\";\n          } else {\n            layer.view.width = _this._width;\n            layer.view.style.width = width + \"px\";\n          }\n\n          if (layer.height != null) {\n            layer.view.height = layer.height;\n            layer.view.style.height = layer.height + \"px\";\n          } else {\n            layer.view.height = _this._height;\n            layer.view.style.height = height + \"px\";\n          }\n        }\n      }); // @todo: do the same for ghost canvases\n\n      this._ghostView.width = this._width;\n      this._ghostView.height = this._height;\n      this._ghostView.style.width = width + \"px\";\n      this._ghostView.style.height = height + \"px\";\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"createDetachedLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var view = document.createElement(\"canvas\");\n      var context = view.getContext(\"2d\");\n      var layer = {\n        view: view,\n        context: context,\n        order: 0,\n        visible: true,\n        width: undefined,\n        height: undefined,\n        dirty: true,\n        tainted: false\n      };\n      view.style.position = \"absolute\";\n      view.style.top = \"0px\";\n      view.style.left = \"0px\";\n      return layer;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"getLayerByOrder\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (order) {\n      var layers = this.layers;\n      var length = layers.length;\n\n      for (var i = 0; i < length; i++) {\n        var layer = layers[i];\n\n        if (layer.order == order) {\n          return layer;\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"getLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (order, visible) {\n      if (visible === void 0) {\n        visible = true;\n      }\n\n      var layers = this.layers;\n      var existingLayer = this.getLayerByOrder(order);\n\n      if (existingLayer) {\n        return existingLayer;\n      }\n\n      var layer = this.createDetachedLayer();\n      layer.order = order;\n      layer.visible = visible;\n\n      if (layer.visible && this._width) {\n        layer.view.width = this._width;\n        layer.view.style.width = this._clientWidth + \"px\";\n        layer.view.height = this._height;\n        layer.view.style.height = this._clientHeight + \"px\";\n      }\n\n      layers.push(layer);\n      layers.sort(function (a, b) {\n        if (a.order > b.order) {\n          return 1;\n        } else if (a.order < b.order) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n      var length = layers.length;\n      var layerIndex = $array.indexOf(layers, layer);\n      var next;\n\n      for (var i = layerIndex + 1; i < length; i++) {\n        if (layers[i].visible) {\n          next = layers[i];\n          break;\n        }\n      }\n\n      if (visible) {\n        if (next === undefined) {\n          this._layerDom.appendChild(layer.view);\n        } else {\n          this._layerDom.insertBefore(layer.view, next.view);\n        }\n      }\n\n      return layer;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root) {\n      var _this = this;\n\n      this._dirtyLayers.length = 0;\n      $array.each(this.layers, function (layer) {\n        if (layer) {\n          if (layer.dirty && layer.visible) {\n            _this._dirtyLayers.push(layer);\n\n            layer.context.save();\n            layer.context.clearRect(0, 0, _this._width, _this._height);\n          }\n        }\n      });\n\n      this._ghostContext.save(); //this._ghostContext.clearRect(0, 0, this._width, this._height);\n      //this._ghostContext.beginPath();\n\n\n      this._ghostContext.fillStyle = '#000';\n\n      this._ghostContext.fillRect(0, 0, this._width, this._height);\n\n      root.render(this.defaultLayer);\n\n      this._ghostContext.restore(); //setTimeout(() => {\n\n\n      $array.each(this._dirtyLayers, function (layer) {\n        layer.context.restore();\n        layer.dirty = false;\n      }); //}, 100)\n\n      if (this._hovering.size && this._lastPointerMoveEvent) {\n        this._mouseMoveThrottler.run();\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"paintId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (obj) {\n      var id = distributeId(++this._colorId);\n      var color = Color.fromHex(id).toCSS();\n      this._colorMap[color] = obj;\n      return color;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_removeObject\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (obj) {\n      if (obj._colorId !== undefined) {\n        delete this._colorMap[obj._colorId];\n      }\n    }\n  }); // protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n  // \treturn this._colorMap[colorId];\n  // }\n\n  Object.defineProperty(CanvasRenderer.prototype, \"getEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent, adjustPoint) {\n      if (adjustPoint === void 0) {\n        adjustPoint = true;\n      }\n\n      var bbox = adjustPoint ? this.view.getBoundingClientRect() : {\n        left: 0,\n        top: 0\n      };\n      return new CanvasRendererEvent(originalEvent, originalEvent.clientX || originalEvent.clientY ? {\n        x: originalEvent.clientX - (originalEvent.clientX ? bbox.left : 0),\n        y: originalEvent.clientY - (originalEvent.clientY ? bbox.top : 0)\n      } : {\n        x: 0,\n        y: 0\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_getHitTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      if (point.x < 0 || point.x > this._width / this.resolution || point.y < 0 || point.y > this._height / this.resolution) {\n        return;\n      } else {\n        var pixel = this._ghostContext.getImageData( // TODO should this round ?\n        Math.round(point.x * this.resolution), Math.round(point.y * this.resolution), 1, 1);\n\n        if (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n          return false;\n        }\n\n        var colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n        var hit = this._colorMap[colorId];\n        return hit;\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_withEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, f) {\n      var events = this._events[key];\n\n      if (events !== undefined) {\n        events.dispatching = true;\n\n        try {\n          f(events);\n        } finally {\n          events.dispatching = false;\n\n          if (events.cleanup) {\n            events.cleanup = false;\n            $array.keepIf(events.callbacks, function (callback) {\n              return !callback.disposed;\n            });\n\n            if (events.callbacks.length === 0) {\n              events.disposer.dispose();\n              delete this._events[key];\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchEventAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, event) {\n      if (!this.interactionsEnabled) {\n        return;\n      }\n\n      this._withEvents(key, function (events) {\n        $array.each(events.callbacks, function (callback) {\n          if (!callback.disposed) {\n            callback.callback.call(callback.context, event);\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, target, event) {\n      if (!this.interactionsEnabled) {\n        return false;\n      }\n\n      var dispatched = false;\n\n      this._withEvents(key, function (events) {\n        $array.each(events.callbacks, function (callback) {\n          if (!callback.disposed && callback.object === target) {\n            callback.callback.call(callback.context, event);\n            dispatched = true;\n          }\n        });\n      });\n\n      return dispatched;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchMousedown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n\n      var button = originalEvent.button;\n\n      if (button != 0 && button != 2 && button != 1) {\n        // Ignore non-primary mouse buttons\n        return;\n      }\n\n      var event = this.getEvent(originalEvent);\n\n      var target = this._getHitTarget(event.point);\n\n      if (target) {\n        var id_1 = event.id;\n        var dragged_1 = false;\n        eachTargets(target, function (obj) {\n          var info = {\n            id: id_1,\n            value: obj\n          };\n\n          _this._mousedown.push(info);\n\n          if (!dragged_1 && _this._dispatchEvent(\"pointerdown\", obj, event)) {\n            // Only dispatch the first element which matches\n            dragged_1 = true;\n\n            var has = _this._dragging.some(function (x) {\n              return x.value === obj && x.id === id_1;\n            });\n\n            if (!has) {\n              _this._dragging.push(info);\n            }\n          }\n\n          return true;\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchGlobalMousemove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n\n      var event = this.getEvent(originalEvent);\n\n      var target = this._getHitTarget(event.point);\n\n      event.native = this._isNativeEvent(originalEvent);\n\n      if (target) {\n        this._hovering.forEach(function (obj) {\n          if (!obj.contains(target)) {\n            _this._hovering.delete(obj);\n\n            if (obj.cursorOverStyle) {\n              $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\n            }\n\n            _this._dispatchEvent(\"pointerout\", obj, event);\n          }\n        });\n\n        if (event.native) {\n          eachTargets(target, function (obj) {\n            if (!_this._hovering.has(obj)) {\n              _this._hovering.add(obj);\n\n              if (obj.cursorOverStyle) {\n                obj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n                $utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n              }\n\n              _this._dispatchEvent(\"pointerover\", obj, event);\n            }\n\n            return true;\n          });\n        } //} else if (target === false) {\n\n      } else {\n        this._hovering.forEach(function (obj) {\n          if (obj.cursorOverStyle) {\n            $utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle);\n          }\n\n          _this._dispatchEvent(\"pointerout\", obj, event);\n        });\n\n        this._hovering.clear();\n      }\n\n      this._dispatchEventAll(\"globalpointermove\", event);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_isNativeEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      if (event.target) {\n        return event.target.parentNode === this._layerDom;\n      }\n\n      return true;\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchGlobalMouseup\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var event = this.getEvent(originalEvent); //const target = this._getHitTarget(event.point);\n\n      this._dispatchEventAll(\"globalpointerup\", event);\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDragMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n\n      if (this._dragging.length !== 0) {\n        var event_1 = this.getEvent(originalEvent);\n        var id_2 = event_1.id;\n\n        this._dragging.forEach(function (obj) {\n          if (obj.id === id_2) {\n            _this._dispatchEvent(\"pointermove\", obj.value, event_1);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDragEnd\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n\n      var button = originalEvent.button;\n      var clickevent;\n\n      if (button == 0) {\n        clickevent = \"click\";\n      } else if (button == 2) {\n        clickevent = \"rightclick\";\n      } else if (button == 1) {\n        clickevent = \"middleclick\";\n      } else {\n        // Ignore non-primary mouse buttons\n        return;\n      }\n\n      var event = this.getEvent(originalEvent);\n      var id = event.id;\n\n      if (this._mousedown.length !== 0) {\n        var target_1 = this._getHitTarget(event.point);\n\n        if (target_1) {\n          this._mousedown.forEach(function (obj) {\n            if (obj.id === id && obj.value.contains(target_1)) {\n              _this._dispatchEvent(clickevent, obj.value, event);\n            }\n          });\n        }\n\n        this._mousedown.length = 0;\n      }\n\n      if (this._dragging.length !== 0) {\n        this._dragging.forEach(function (obj) {\n          if (obj.id === id) {\n            _this._dispatchEvent(\"pointerup\", obj.value, event);\n          }\n        });\n\n        this._dragging.length = 0;\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchDoubleClick\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n\n      var event = this.getEvent(originalEvent);\n\n      var target = this._getHitTarget(event.point);\n\n      if (target) {\n        eachTargets(target, function (obj) {\n          if (_this._dispatchEvent(\"dblclick\", obj, event)) {\n            return false;\n          } else {\n            return true;\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_dispatchWheel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (originalEvent) {\n      var _this = this;\n\n      var event = this.getEvent(originalEvent);\n\n      this._hovering.forEach(function (obj) {\n        _this._dispatchEvent(\"wheel\", obj, event);\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_makeSharedEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, f) {\n      var _this = this;\n\n      if (this._listeners[key] === undefined) {\n        var listener_1 = f();\n        this._listeners[key] = new CounterDisposer(function () {\n          delete _this._listeners[key];\n          listener_1.dispose();\n        });\n      }\n\n      return this._listeners[key].increment();\n    }\n  }); // This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n\n  Object.defineProperty(CanvasRenderer.prototype, \"_initEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      var _this = this;\n\n      switch (key) {\n        case \"globalpointermove\":\n        case \"pointerover\":\n        case \"pointerout\":\n          return this._makeSharedEvent(\"pointermove\", function () {\n            //const throttler = new Throttler();\n            // TODO handle throttling properly for multitouch\n            return onPointerEvent(window, \"pointermove\", function (ev) {\n              _this._lastPointerMoveEvent = ev;\n\n              _this._mouseMoveThrottler.run(); //throttler.throttle(() => {\n              //});\n\n            });\n          });\n\n        case \"globalpointerup\":\n          return this._makeSharedEvent(\"pointerup\", function () {\n            //const throttler = new Throttler();\n            // TODO handle throttling properly for multitouch\n            return onPointerEvent(window, \"pointerup\", function (ev) {\n              //throttler.throttle(() => {\n              _this._dispatchGlobalMouseup(ev); //});\n\n            });\n          });\n\n        case \"click\":\n        case \"rightclick\":\n        case \"middleclick\":\n        case \"pointerdown\":\n        case \"pointermove\":\n        case \"pointerup\":\n          return this._makeSharedEvent(\"pointerdown\", function () {\n            //const throttler = new Throttler();\n            var mousedown = onPointerEvent(_this.view, \"pointerdown\", function (ev) {\n              _this._dispatchMousedown(ev);\n            }); // TODO handle throttling properly for multitouch\n\n            var mousemove = onPointerEvent(window, \"pointermove\", function (ev) {\n              //throttler.throttle(() => {\n              _this._dispatchDragMove(ev); //});\n\n            });\n            var mouseup = onPointerEvent(window, \"pointerup\", function (ev) {\n              _this._dispatchDragEnd(ev);\n            });\n            return new Disposer(function () {\n              mousedown.dispose();\n              mousemove.dispose();\n              mouseup.dispose();\n            });\n          });\n\n        case \"dblclick\":\n          return this._makeSharedEvent(\"dblclick\", function () {\n            return onPointerEvent(window, \"dblclick\", function (ev) {\n              _this._dispatchDoubleClick(ev);\n            });\n          });\n\n        case \"wheel\":\n          return this._makeSharedEvent(\"wheel\", function () {\n            return $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), function (event) {\n              _this._dispatchWheel(event);\n            }, {\n              passive: false\n            });\n          });\n      }\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"_addEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (object, key, callback, context) {\n      var _this = this;\n\n      var events = this._events[key];\n\n      if (events === undefined) {\n        events = this._events[key] = {\n          disposer: this._initEvent(key),\n          callbacks: [],\n          dispatching: false,\n          cleanup: false\n        };\n      }\n\n      var listener = {\n        object: object,\n        context: context,\n        callback: callback,\n        disposed: false\n      };\n      events.callbacks.push(listener);\n      return new Disposer(function () {\n        listener.disposed = true;\n\n        if (events.dispatching) {\n          events.cleanup = true;\n        } else {\n          $array.removeFirst(events.callbacks, listener);\n\n          if (events.callbacks.length === 0) {\n            events.disposer.dispose();\n            delete _this._events[key];\n          }\n        }\n      });\n    }\n  });\n  Object.defineProperty(CanvasRenderer.prototype, \"getCanvas\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (root, options) {\n      // Make sure everything is rendered\n      this.render(root);\n\n      if (!options) {\n        options = {};\n      }\n\n      var scale = this.resolution; // Check if we need to scale\n\n      if (options.minWidth && options.minWidth > this._width) {\n        var minScale = options.minWidth / this._width;\n\n        if (minScale > scale) {\n          scale = minScale * this.resolution;\n        }\n      }\n\n      if (options.minHeight && options.minHeight > this._height) {\n        var minScale = options.minHeight / this._height;\n\n        if (minScale > scale) {\n          scale = minScale * this.resolution;\n        }\n      }\n\n      if (options.maxWidth && options.maxWidth < this._width) {\n        var maxScale = options.maxWidth / this._width;\n\n        if (maxScale < scale) {\n          scale = maxScale * this.resolution;\n        }\n      }\n\n      if (options.maxHeight && options.maxHeight > this._height) {\n        var maxScale = options.maxHeight / this._height;\n\n        if (maxScale < scale) {\n          scale = maxScale * this.resolution;\n        }\n      } // Check if we need to compensate for pixel ratio\n\n\n      if (options.maintainPixelRatio) {\n        scale /= this.resolution;\n      } // Set up new canvas for export\n\n\n      var forceRender = false;\n      var canvasWidth = this._width;\n      var canvasHeight = this._height;\n      var canvas = document.createElement(\"canvas\");\n\n      if (scale != this.resolution) {\n        forceRender = true;\n        canvasWidth = this._width * scale / this.resolution;\n        canvasHeight = this._height * scale / this.resolution;\n      }\n\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight; // Context\n\n      var context = canvas.getContext(\"2d\");\n      var width = 0;\n      var height = 0;\n      var needRerender = false;\n      $array.each(this.layers, function (layer) {\n        if (layer && layer.visible) {\n          if (layer.tainted || forceRender) {\n            needRerender = true;\n            layer.exportableView = layer.view;\n            layer.exportableContext = layer.context;\n            layer.view = document.createElement(\"canvas\");\n            layer.view.width = canvasWidth;\n            layer.view.height = canvasHeight;\n            layer.context = layer.view.getContext(\"2d\");\n            layer.dirty = true;\n            layer.scale = scale;\n          }\n        }\n      });\n\n      if (needRerender) {\n        this._omitTainted = true;\n        this.render(root);\n        this._omitTainted = false;\n      }\n\n      $array.each(this.layers, function (layer) {\n        if (layer && layer.visible) {\n          // Layer is fine. Just plop it into our target canvas\n          context.drawImage(layer.view, 0, 0); // Restore layer original canvas\n\n          if (layer.exportableView) {\n            layer.view = layer.exportableView;\n            layer.exportableView = undefined;\n          }\n\n          if (layer.exportableContext) {\n            layer.context = layer.exportableContext;\n            layer.exportableContext = undefined;\n          }\n\n          if (width < layer.view.clientWidth) {\n            width = layer.view.clientWidth;\n          }\n\n          if (height < layer.view.clientHeight) {\n            height = layer.view.clientHeight;\n          }\n\n          layer.scale = undefined;\n        }\n      });\n      canvas.style.width = width + \"px\";\n      canvas.style.height = height + \"px\";\n      return canvas;\n    }\n  });\n  return CanvasRenderer;\n}(Disposer);\n\nexport { CanvasRenderer };","map":{"version":3,"sources":["../../../../../../src/.internal/core/render/backend/CanvasRenderer.ts"],"names":[],"mappings":"AAAA;;AAAc;;AAEd,SAEmF,SAFnF,QAGO,YAHP;AAMA,SAAS,KAAT,QAAsB,kBAAtB;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,SAAS,OAAT,EAAkB,OAAlB,QAAiC,oBAAjC;AACA,SAAS,SAAT,QAA0B,sBAA1B;AACA,SAAS,QAAT,EAA8B,eAA9B,QAAqD,qBAArD;AACA,SAAS,aAAT,QAA0C,0BAA1C;AACA,OAAO,KAAK,MAAZ,MAAwB,kBAAxB;AACA,OAAO,KAAK,MAAZ,MAAwB,kBAAxB;AACA,OAAO,KAAK,KAAZ,MAAuB,iBAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,iBAAvB;AACA,OAAO,WAAP,MAAwB,yBAAxB;AAGA;;AAEG;;AACH,SAAS,SAAT,CAAmB,IAAnB,EAAiC,MAAjC,EAAiD,QAAjD,EAAiE;AAChE,MAAI,MAAM,KAAK,QAAf,EAAyB;AACxB,UAAM,IAAI,KAAJ,CAAU,cAAc,QAAd,GAAyB,iBAAzB,GAA6C,IAA7C,GAAoD,WAApD,GAAkE,MAA5E,CAAN;AACA;AACD;AAED;;AAEG;;;AACH,SAAS,YAAT,CAAsB,IAAtB,EAAoC,MAApC,EAAoD,QAApD,EAAoE;AACnE,MAAI,MAAM,GAAG,QAAb,EAAuB;AACtB,UAAM,IAAI,KAAJ,CAAU,uBAAuB,QAAvB,GAAkC,iBAAlC,GAAsD,IAAtD,GAA6D,WAA7D,GAA2E,MAArF,CAAN;AACA;AACD;AAED;;AAEG;;;AACH,SAAS,aAAT,CAAuB,IAAvB,EAAqC,MAArC,EAAqD,QAArD,EAAqE;AACpE,EAAA,YAAY,CAAC,IAAD,EAAO,MAAP,EAAe,QAAf,CAAZ;;AAEA,MAAK,MAAM,GAAG,QAAV,KAAwB,CAA5B,EAA+B;AAC9B,UAAM,IAAI,KAAJ,CAAU,mBAAmB,IAAnB,GAA0B,uBAA1B,GAAoD,QAA9D,CAAN;AACA;AACD;AAED;;AAEG;;;AACH,SAAS,YAAT,CAAsB,KAAtB,EAAmC;AAClC,MAAI,KAAK,KAAK,CAAV,IAAe,KAAK,KAAK,CAA7B,EAAgC;AAC/B,WAAO,KAAP;AAEA,GAHD,MAGO;AACN,UAAM,IAAI,KAAJ,CAAU,qBAAV,CAAN;AACA;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIG;;;AACH,SAAS,YAAT,CAAsB,EAAtB,EAAgC;AAC/B,MAAM,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAApB,EAAwB,CAAC,EAAzB,EAA6B;AAC5B,IAAA,GAAG,CAAC,CAAC,GAAG,CAAL,CAAH,KAAe,CAAf;AACA,IAAA,GAAG,CAAC,CAAC,GAAG,CAAL,CAAH,IAAc,EAAE,GAAG,IAAnB;AACA,IAAA,EAAE,KAAK,CAAP;AACA;;AACD,SAAO,CAAC,GAAG,CAAC,CAAD,CAAH,GAAS,CAAV,KAAgB,GAAG,CAAC,CAAD,CAAH,IAAU,CAA1B,KAAgC,GAAG,CAAC,CAAD,CAAH,IAAU,EAA1C,CAAP;AACA;AAED;;AAEG;;;AACH,SAAS,WAAT,CAAqB,SAArB,EAAqD,CAArD,EAAgG;AAC/F,WAAU;AACT,QAAI,SAAS,CAAC,WAAd,EAA2B;AAC1B,UAAI,CAAC,CAAC,CAAC,SAAD,CAAN,EAAmB;AAClB;AACA;AACD;;AAED,QAAI,SAAS,CAAC,OAAd,EAAuB;AACtB,MAAA,SAAS,GAAG,SAAS,CAAC,OAAtB;AAEA,KAHD,MAGO;AACN;AACA;AACD;AACD,C,CAED;;AACA;;AAEG;;;AACH,SAAS,cAAT,CAAwB,OAAxB,EAA8C,IAA9C,EAA4D,CAA5D,EAA6F;AAC5F,SAAO,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAiC,MAAM,CAAC,gBAAP,CAAwB,IAAxB,CAAjC,EAAgE,UAAC,KAAD,EAA+B;AACrG,QAAU,KAAM,CAAC,OAAjB,EAA0B;AACzB,MAAA,MAAM,CAAC,IAAP,CAAyB,KAAM,CAAC,OAAhC,EAAyC,UAAC,KAAD,EAAM;AAC9C,QAAA,CAAC,CAAC,KAAD,CAAD;AACA,OAFD;AAIA,KALD,MAKO;AACN,MAAA,CAAC,CAAa,KAAb,CAAD;AACA;AACD,GATM,CAAP;AAUA;AAED;;AAEG;;;AACH,SAAS,SAAT,CAAmB,KAAnB,EAA0C;AACzC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,EAAA,MAAM,CAAC,KAAP,GAAe,CAAf;AACA,EAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB;AACA,MAAM,OAAO,GAAG,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAhB;AACA,EAAA,OAAO,CAAC,SAAR,CAAkB,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC;;AAEA,MAAI;AACH,IAAA,OAAO,CAAC,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B;AACA,WAAO,KAAP;AACA,GAHD,CAIA,OAAO,GAAP,EAAY;AACX,IAAA,OAAO,CAAC,IAAR,CAAa,aAAa,KAAK,CAAC,GAAnB,GAAyB,2KAAtC;AACA,WAAO,IAAP;AACA;AACD;AAED;;AAEG;;;AACH,IAAA,WAAA;AAAA;AAAA,YAAA;AAAA,WAAA,WAAA,GAAA;AACC,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAuB;AAAvB,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAuB;AAAvB,KAAA;AAiBA;;AAfA,EAAA,MAAA,CAAA,cAAA,CAAI,WAAA,CAAA,SAAJ,EAAI,GAAJ,EAAK;SAAL,YAAA;AACC,aAAO,KAAK,EAAZ;AACA,KAFI;SAQL,UAAM,KAAN,EAAmB;AAClB,WAAK,EAAL,GAAU,KAAV;AACA,KAVI;qBAAA;;AAAA,GAAL;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,WAAA,CAAA,SAAJ,EAAI,GAAJ,EAAK;SAAL,YAAA;AACC,aAAO,KAAK,EAAZ;AACA,KAFI;SAQL,UAAM,KAAN,EAAmB;AAClB,WAAK,EAAL,GAAU,KAAV;AACA,KAVI;qBAAA;;AAAA,GAAL;AAWD,SAAA,WAAA;AAAC,CAnBD,EAAA;;;AAqBA;;AAEG;;AACH,IAAA,mBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyC,EAAA,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;;AAmCxC,WAAA,mBAAA,CAAY,QAAZ,EAAoC;AAApC,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,YAAA;AACL,MAAA,KAAI,CAAC,SAAL,CAAe,aAAf,CAA6B,KAA7B;AACA,KAFD,KAEE,IAHH;;AAlCA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,QAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,MAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAqC;AAArC,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA0B;AAA1B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA8B;AAA9B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,aAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA8B;AAA9B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA4B;AAA5B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA6B;AAA7B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA6B;AAA7B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,OAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAuB;AAAvB,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA+B;AAA/B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,OAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAuB;AAAvB,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,OAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAuB;AAAvB,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,GAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAmB;AAAnB,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,GAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAmB;AAAnB,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,OAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA4B,IAAI,WAAJ;AAA5B,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,QAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,iBAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,sBAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA8B,IAAI,MAAJ;AAA9B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAyB,IAAI,MAAJ;AAAzB,KAAA,EAWoC,CAVpC;;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,UAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA6B,IAAI,MAAJ;AAA7B,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,UAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAOC,IAAA,KAAI,CAAC,SAAL,GAAiB,QAAjB;;AACA;;;;;;WAED,YAAA;AACC,aAAO,KAAK,QAAL,GAAgB,IAAvB;AACA;;;;;;WAED,YAAA;AACC,UAAI,IAAI,GAAwB,IAAhC;;AAEA,eAAU;AACT,YAAI,IAAI,CAAC,MAAT,EAAiB;AAChB,iBAAO,IAAI,CAAC,MAAZ;AAEA,SAHD,MAGO,IAAI,IAAI,CAAC,OAAT,EAAkB;AACxB,UAAA,IAAI,GAAG,IAAI,CAAC,OAAZ;AAEA,SAHM,MAGA;AACN,iBAAO,KAAK,SAAL,CAAe,YAAtB;AACA;AACD;AACD;;;;;;WAED,UAAgB,KAAhB,EAA2C,OAA3C,EAAkE;AAAvB,UAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,OAAA,GAAA,IAAA;AAAuB;;AACjE,UAAI,KAAK,IAAI,IAAb,EAAmB;AAClB,aAAK,MAAL,GAAc,SAAd;AAEA,OAHD,MAGO;AACN,aAAK,MAAL,GAAc,KAAK,SAAL,CAAe,QAAf,CAAwB,KAAxB,EAA+B,OAA/B,CAAd;AACA,aAAK,MAAL,CAAY,OAAZ,GAAsB,OAAtB;;AACA,YAAI,KAAK,OAAT,EAAkB;AACjB,eAAK,OAAL,CAAa,kBAAb,CAAgC,KAAK,MAArC;AACA;AACD;AACD;;;;;;WAED,YAAA;AACC,WAAK,QAAL,GAAgB,KAAhB,GAAwB,IAAxB;AACA;;;;;;WAED,YAAA;AACC,WAAK,gBAAL;AACA;;;;;;WAED,YAAA;AACC,WAAK,YAAL,GAAoB,SAApB;AACA;;;;;;WAED,UAAkB,OAAlB,EAAkC,CAAW;;;;;;WAE7C,YAAA;AACC,UAAI,KAAK,QAAL,KAAkB,SAAtB,EAAiC;AAChC,aAAK,QAAL,GAAgB,KAAK,SAAL,CAAe,OAAf,CAAuB,IAAvB,CAAhB;AACA;;AAED,aAAO,KAAK,QAAZ;AACA;;;;;;WAED,YAAA;AACC,aAAO,KAAK,WAAL,IAAoB,KAAK,SAAL,CAAe,iBAAf,GAAmC,CAA9D;AACA;;;;;;WAED,YAAA;AACC,aAAO,KAAK,cAAL,EAAP;AACA;;;;;;WAED,UAAgB,KAAhB,EAA0C;AACzC,eAAU;AACT,YAAI,KAAK,KAAK,IAAd,EAAoB;AACnB,iBAAO,IAAP;AAEA,SAHD,MAGO,IAAI,KAAK,CAAC,OAAV,EAAmB;AACzB,UAAA,KAAK,GAAG,KAAK,CAAC,OAAd;AAEA,SAHM,MAGA;AACN,iBAAO,KAAP;AACA;AACD;AACD;;;;;;WAED,UAAS,KAAT,EAAsB;AACrB,aAAO,KAAK,OAAL,CAAa,KAAb,CAAmB,KAAnB,CAAP;AACA;;;;;;WAED,UAAQ,KAAR,EAAqB;AACpB,aAAO,KAAK,OAAL,CAAa,YAAb,CAA0B,KAA1B,CAAP;AACA;;;;;;WAED,YAAA;AACC,WAAK,QAAL,CAAc,YAAd,CAA2B,CAA3B,EAA8B,CAA9B,EAAiC,KAAK,KAAL,CAAW,CAA5C,EAA+C,KAAK,KAAL,CAAW,CAA1D,EAA6D,KAAK,KAAL,GAAa,IAAI,CAAC,EAAlB,GAAuB,GAApF,EAAyF,KAAK,KAA9F;;AACA,aAAO,KAAK,QAAZ;AACA;;;;;;WAED,YAAA;AACC,UAAI,CAAC,KAAK,YAAV,EAAwB;AAEvB,YAAM,EAAE,GAAG,QAAX;AACA,aAAK,YAAL,GAAoB;AACnB,UAAA,IAAI,EAAE,EADa;AAEnB,UAAA,GAAG,EAAE,EAFc;AAGnB,UAAA,KAAK,EAAE,CAAC,EAHW;AAInB,UAAA,MAAM,EAAE,CAAC;AAJU,SAApB;;AAOA,aAAK,UAAL,CAAgB,KAAK,YAArB;AACA;;AACD,aAAO,KAAK,YAAZ;AACA;;;;;;WAED,UAAkB,MAAlB,EAAiC;AAChC,WAAK,UAAL;;AAEA,UAAM,MAAM,GAAG,KAAK,cAAL,EAAf;AAEA,UAAM,EAAE,GAAG,MAAM,CAAC,KAAP,CAAa;AAAE,QAAA,CAAC,EAAE,MAAM,CAAC,IAAZ;AAAkB,QAAA,CAAC,EAAE,MAAM,CAAC;AAA5B,OAAb,CAAX;AACA,UAAM,EAAE,GAAG,MAAM,CAAC,KAAP,CAAa;AAAE,QAAA,CAAC,EAAE,MAAM,CAAC,KAAZ;AAAmB,QAAA,CAAC,EAAE,MAAM,CAAC;AAA7B,OAAb,CAAX;AACA,UAAM,EAAE,GAAG,MAAM,CAAC,KAAP,CAAa;AAAE,QAAA,CAAC,EAAE,MAAM,CAAC,KAAZ;AAAmB,QAAA,CAAC,EAAE,MAAM,CAAC;AAA7B,OAAb,CAAX;AACA,UAAM,EAAE,GAAG,MAAM,CAAC,KAAP,CAAa;AAAE,QAAA,CAAC,EAAE,MAAM,CAAC,IAAZ;AAAkB,QAAA,CAAC,EAAE,MAAM,CAAC;AAA5B,OAAb,CAAX;AAEA,aAAO;AACN,QAAA,IAAI,EAAE,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,CAAZ,EAAe,EAAE,CAAC,CAAlB,EAAqB,EAAE,CAAC,CAAxB,EAA2B,EAAE,CAAC,CAA9B,CADA;AAEN,QAAA,GAAG,EAAE,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,CAAZ,EAAe,EAAE,CAAC,CAAlB,EAAqB,EAAE,CAAC,CAAxB,EAA2B,EAAE,CAAC,CAA9B,CAFC;AAGN,QAAA,KAAK,EAAE,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,CAAZ,EAAe,EAAE,CAAC,CAAlB,EAAqB,EAAE,CAAC,CAAxB,EAA2B,EAAE,CAAC,CAA9B,CAHD;AAIN,QAAA,MAAM,EAAE,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,CAAZ,EAAe,EAAE,CAAC,CAAlB,EAAqB,EAAE,CAAC,CAAxB,EAA2B,EAAE,CAAC,CAA9B;AAJF,OAAP;AAMA;;;;;;WAED,UAAyC,GAAzC,EAAmD,QAAnD,EAA6G,OAA7G,EAAwH;AACvH,UAAI,KAAK,WAAT,EAAsB;AACrB,eAAO,KAAK,SAAL,CAAe,SAAf,CAAyB,IAAzB,EAA+B,GAA/B,EAAoC,QAApC,EAA8C,OAA9C,CAAP;AAEA,OAHD,MAGO;AACN,eAAO,IAAI,QAAJ,CAAa,YAAA,CAAS,CAAtB,CAAP;AACA;AACD;;;;;;WAED,YAAA;AACC;AACA,WAAK,YAAL,CAAkB,YAAlB,CACC,KAAK,CADN,EAEC,KAAK,CAFN,EAGC,KAAK,KAAL,CAAW,CAHZ,EAIC,KAAK,KAAL,CAAW,CAJZ,EAKC;AACA,WAAK,KAAL,GAAa,IAAI,CAAC,EAAlB,GAAuB,GANxB,EAOC,KAAK,KAPN;;AAUA,WAAK,OAAL,CAAa,QAAb,CAAsB,KAAK,YAA3B;;AAEA,UAAI,KAAK,OAAT,EAAkB;AACjB;AACA,aAAK,OAAL,CAAa,OAAb,CAAqB,KAAK,OAAL,CAAa,OAAlC;AACA;AACD;;;;;;WAED,UAAkB,OAAlB,EAAqD,UAArD,EAAuE;AACtE,UAAM,CAAC,GAAG,KAAK,OAAf;AACA,MAAA,OAAO,CAAC,YAAR,CACC,CAAC,CAAC,CAAF,GAAM,UADP,EAEC,CAAC,CAAC,CAAF,GAAM,UAFP,EAGC,CAAC,CAAC,CAAF,GAAM,UAHP,EAIC,CAAC,CAAC,CAAF,GAAM,UAJP,EAKC,CAAC,CAAC,EAAF,GAAO,UALR,EAMC,CAAC,CAAC,EAAF,GAAO,UANR;AAQA;;;;;;WAED,UAAc,WAAd,EAAsC;AAAtC,UAAA,KAAA,GAAA,IAAA;;AACC,UAAI,KAAK,OAAL,KAAiB,KAAK,UAAL,KAAoB,KAApB,IAA6B,CAAC,KAAK,SAAL,CAAe,YAA9D,CAAJ,EAAiF;AAChF,aAAK,UAAL;;AAEA,YAAM,YAAU,GAAG,KAAK,SAAL,CAAe,UAAlC;AAEA,YAAM,MAAM,GAAG,KAAK,SAAL,CAAe,MAA9B;AACA,YAAM,YAAY,GAAG,KAAK,SAAL,CAAe,aAApC;AAEA,YAAM,MAAI,GAAG,KAAK,IAAlB;;AACA,YAAI,MAAJ,EAAU;AACT,UAAA,MAAI,CAAC,UAAL;AACA;;AAED,QAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,UAAC,KAAD,EAAM;AACzB,cAAI,KAAJ,EAAW;AACV,YAAA,KAAK,CAAC,OAAN,CAAc,IAAd,GADU,CAGV;;AACA,gBAAI,MAAJ,EAAU;AACT,cAAA,MAAI,CAAC,UAAL,CAAgB,KAAK,CAAC,OAAtB,EAA+B,KAAK,CAAC,KAAN,IAAe,YAA9C;;AACA,cAAA,MAAI,CAAC,QAAL,CAAc,KAAK,CAAC,OAApB;;AACA,cAAA,KAAK,CAAC,OAAN,CAAc,IAAd;AACA;;AAED,YAAA,KAAK,CAAC,OAAN,CAAc,WAAd,GAA4B,KAAI,CAAC,aAAL,GAAqB,KAAI,CAAC,KAAtD;;AAEA,YAAA,KAAI,CAAC,UAAL,CAAgB,KAAK,CAAC,OAAtB,EAA+B,KAAK,CAAC,KAAN,IAAe,YAA9C;;AAEA,gBAAI,KAAI,CAAC,MAAT,EAAiB;AAChB,cAAA,KAAK,CAAC,OAAN,CAAc,MAAd,GAAuB,KAAI,CAAC,MAA5B;AACA;AACD;AACD,SAnBD;AAqBA,QAAA,YAAY,CAAC,IAAb,GAlCgF,CAoChF;;AACA,YAAI,MAAI,IAAI,KAAK,kBAAL,EAAZ,EAAuC;AACtC,UAAA,MAAI,CAAC,UAAL,CAAgB,YAAhB,EAA8B,YAA9B;;AACA,UAAA,MAAI,CAAC,QAAL,CAAc,YAAd;;AACA,UAAA,YAAY,CAAC,IAAb;AACA;;AAED,aAAK,UAAL,CAAgB,YAAhB,EAA8B,YAA9B;;AAEA,aAAK,OAAL,CAAa,WAAb;;AAEA,QAAA,YAAY,CAAC,OAAb;AAEA,QAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,UAAC,KAAD,EAAM;AACzB,cAAI,KAAJ,EAAW;AACV,YAAA,KAAK,CAAC,OAAN,CAAc,OAAd;AACA;AACD,SAJD;AAKA;AACD;;;;;;WAED,UAAkB,WAAlB,EAA0C;AACzC,UAAI,KAAK,UAAL,KAAoB,KAAxB,EAA+B;AAC9B,YAAM,KAAK,GAAG,KAAK,MAAL,IAAe,WAA7B;AACA,QAAA,KAAK,CAAC,OAAN,GAAgB,IAAhB;AACA;AACD;;;;;;WAED,YAAA;AACC,aAAO,KAAK,SAAL,CAAe,SAAf,CAAyB,GAAzB,CAA6B,IAA7B,CAAP;AACA;;;;;;WAED,YAAA;AAAA,UAAA,KAAA,GAAA,IAAA;;AACC,aAAO,KAAK,SAAL,CAAe,SAAf,CAAyB,IAAzB,CAA8B,UAAC,CAAD,EAAE;AAAK,eAAA,CAAC,CAAC,KAAF,KAAA,KAAA;AAAgB,OAArD,CAAP;AACA;;;;;;WAED,YAAA;AACC,WAAK,QAAL,GAAgB,KAAhB,GAAwB,IAAxB;AACA;;AAEF,SAAA,mBAAA;AAAC,CA7RD,CAAyC,QAAzC,CAAA;;;AA+RA;;AAEG;;AACH,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqC,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AAArC,WAAA,eAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACC,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,qBAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAsC;AAAtC,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAkD;AAAlD,KAAA;;AAyEA;;;;;;WAvEA,YAAA;AACC,aAAO,KAAK,mBAAL,IAA4B,MAAA,CAAA,SAAA,CAAM,kBAAN,CAAwB,IAAxB,CAAwB,IAAxB,CAAnC;AACA;;;;;;WAED,UAAS,KAAT,EAAmC;AAClC,MAAA,KAAK,CAAC,OAAN,GAAgB,IAAhB;;AACA,WAAK,SAAL,CAAe,IAAf,CAAoB,KAApB;;AACA,UAAI,KAAK,CAAC,MAAV,EAAkB;AACjB,aAAK,kBAAL,CAAwB,KAAK,CAAC,MAA9B;AACA;AACD;;;;;;WAED,UAAW,KAAX,EAAuC,KAAvC,EAAoD;AACnD,MAAA,KAAK,CAAC,OAAN,GAAgB,IAAhB;;AACA,WAAK,SAAL,CAAe,MAAf,CAAsB,KAAtB,EAA6B,CAA7B,EAAgC,KAAhC;;AACA,UAAI,KAAK,CAAC,MAAV,EAAkB;AACjB,aAAK,kBAAL,CAAwB,KAAK,CAAC,MAA9B;AACA;AACD;;;;;;WAED,UAAY,KAAZ,EAAsC;AACrC,MAAA,KAAK,CAAC,OAAN,GAAgB,SAAhB;AACA,MAAA,MAAM,CAAC,WAAP,CAAmB,KAAK,SAAxB,EAAmC,KAAnC;AACA;;;;;;WAED,UAAkB,WAAlB,EAA0C;AAA1C,UAAA,KAAA,GAAA,IAAA;;AACC,MAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAAc,WAAd;;AAEA,UAAM,QAAQ,GAAG,KAAK,SAAtB;;AAEA,UAAI,KAAK,WAAL,IAAoB,KAAK,mBAA7B,EAAkD;AACjD,UAAE,QAAQ,CAAC,iBAAX;AACA;;AAED,UAAM,KAAK,GAAG,KAAK,MAAL,IAAe,WAA7B;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,SAAjB,EAA4B,UAAC,KAAD,EAAM;AACjC,QAAA,KAAK,CAAC,aAAN,GAAsB,KAAI,CAAC,aAAL,GAAqB,KAAI,CAAC,KAAhD;AACA,QAAA,KAAK,CAAC,MAAN,CAAa,KAAb;AACA,OAHD;;AAKA,UAAI,KAAK,WAAL,IAAoB,KAAK,mBAA7B,EAAkD;AACjD,UAAE,QAAQ,CAAC,iBAAX;AACA;AACD;;;;;;WAED,UAAmB,KAAnB,EAAqC;AACpC,UAAI,CAAC,KAAK,YAAV,EAAwB;AACvB,aAAK,YAAL,GAAoB,EAApB;AACA;;AACD,MAAA,MAAM,CAAC,OAAP,CAAe,KAAK,YAApB,EAAkC,KAAlC;;AACA,UAAI,KAAK,OAAT,EAAkB;AACjB,aAAK,OAAL,CAAa,kBAAb,CAAgC,KAAhC;AACA;AACD;;;;;;WAED,UAAsB,IAAtB,EAA2C;AAArB,UAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,IAAA,GAAA,KAAA;AAAqB;;AAC1C,MAAA,MAAA,CAAA,SAAA,CAAM,cAAN,CAAoB,IAApB,CAAoB,IAApB;;AACA,UAAI,IAAI,IAAI,KAAK,YAAjB,EAA+B;AAC9B,QAAA,MAAM,CAAC,IAAP,CAAY,KAAK,YAAjB,EAA+B,UAAC,KAAD,EAAM;AAAK,iBAAA,KAAK,CAAC,KAAN,GAAA,IAAA;AAAkB,SAA5D;AACA;AACD;;;;;;WAED,YAAA;AACC,MAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb;;AACA,UAAI,KAAK,YAAT,EAAuB;AACtB,QAAA,MAAM,CAAC,IAAP,CAAY,KAAK,YAAjB,EAA+B,UAAC,KAAD,EAAM;AACpC,UAAA,KAAK,CAAC,KAAN,GAAc,IAAd;AACA,SAFD;AAGA;AACD;;AACF,SAAA,eAAA;AAAC,CA7ED,CAAqC,mBAArC,CAAA;;;AA+EA;;AAEG;;AACH,SAAS,QAAT,CAAkB,MAAlB,EAAmC,KAAnC,EAAgD;AAC/C,EAAA,MAAM,CAAC,IAAP,GAAc,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,IAAhB,EAAsB,KAAK,CAAC,CAA5B,CAAd;AACA,EAAA,MAAM,CAAC,GAAP,GAAa,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,GAAhB,EAAqB,KAAK,CAAC,CAA3B,CAAb;AACA,EAAA,MAAM,CAAC,KAAP,GAAe,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,KAAhB,EAAuB,KAAK,CAAC,CAA7B,CAAf;AACA,EAAA,MAAM,CAAC,MAAP,GAAgB,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,MAAhB,EAAwB,KAAK,CAAC,CAA9B,CAAhB;AACA;AAED;;AAEG;;;AACH,IAAA,EAAA;AAAA;AAAA,YAAA;AAAA,WAAA,EAAA,GAAA,CAMC;;;;;;WALA,UAAgB,QAAhB,EAAoD,WAApD,EAAmF,CAAW;;;;;;WAE9F,UAAY,QAAZ,EAA8C,CAAW;;;;;;WAEzD,UAAiB,OAAjB,EAAiC,CAAW;;AAC7C,SAAA,EAAA;AAAC,CAND,EAAA;AAQA;;AAEG;;;AACH,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwB,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AACvB,WAAA,SAAA,CAAmB,KAAnB,EAAiE;AAAjE,QAAA,KAAA,GAAqE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAA5E;;;;;;aAAmB;;;AAA4D;;;;;;WAE/E,UAAgB,OAAhB,EAAmD,UAAnD,EAAiF;AAChF,UAAI,UAAU,KAAK,SAAnB,EAA8B;AAC7B,QAAA,OAAO,CAAC,SAAR,GAAoB,UAApB;AAEA,OAHD,MAGO;AACN,QAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,KAAzB;AACA;AACD;;AACF,SAAA,SAAA;AAAC,CAXD,CAAwB,EAAxB,CAAA;AAaA;;AAEG;;;AACH,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsB,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AACrB,WAAA,OAAA,CAAmB,WAAnB,EAAuC;AAAvC,QAAA,KAAA,GAA2C,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAAlD;;;;;;aAAmB;;;AAAkC;;;;;;WACrD,UAAgB,OAAhB,EAAmD,WAAnD,EAAkF;AACjF,MAAA,OAAO,CAAC,IAAR;;AACA,UAAI,KAAK,WAAT,EAAsB;AACrB,QAAA,OAAO,CAAC,WAAR,GAAsB,EAAtB;AACA,QAAA,OAAO,CAAC,UAAR,GAAqB,CAArB;AACA,QAAA,OAAO,CAAC,aAAR,GAAwB,CAAxB;AACA,QAAA,OAAO,CAAC,aAAR,GAAwB,CAAxB;AACA;AACD;;AACF,SAAA,OAAA;AAAC,CAXD,CAAsB,EAAtB,CAAA;AAaA;;AAEG;;;AACH,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwB,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAAxB,WAAA,SAAA,GAAA;;AAIC;;;;;;WAHA,UAAgB,OAAhB,EAAmD,WAAnD,EAAkF;AACjF,MAAA,OAAO,CAAC,MAAR;AACA;;AACF,SAAA,SAAA;AAAC,CAJD,CAAwB,EAAxB,CAAA;AAMA;;AAEG;;;AACH,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwB,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AACvB,WAAA,SAAA,CAAmB,KAAnB,EAAyC,KAAzC,EAAuF;AAAvF,QAAA,KAAA,GAA2F,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAAlG;;;;;;aAAmB;;;;;;aAAsB;;;AAA4D;;;;;;WAErG,UAAgB,OAAhB,EAAmD,UAAnD,EAAiF;AAChF,UAAI,UAAU,KAAK,SAAnB,EAA8B;AAC7B,QAAA,OAAO,CAAC,WAAR,GAAsB,UAAtB;AAEA,OAHD,MAGO;AACN,QAAA,OAAO,CAAC,WAAR,GAAsB,KAAK,KAA3B;AACA;;AAED,MAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,KAAzB;AACA;;AACF,SAAA,SAAA;AAAC,CAbD,CAAwB,EAAxB,CAAA;AAeA;;AAEG;;;AACH,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuB,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AACtB,WAAA,QAAA,CAAmB,IAAnB,EAAiC;AAAjC,QAAA,KAAA,GAAqC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAA5C;;;;;;aAAmB;;;AAA4B;;;;;;WAE/C,UAAgB,OAAhB,EAAmD,WAAnD,EAAkF;AACjF,MAAA,OAAO,CAAC,WAAR,CAAoB,KAAK,IAAzB;AACA;;AACF,SAAA,QAAA;AAAC,CAND,CAAuB,EAAvB,CAAA;AAQA;;AAEG;;;AACH,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAC5B,WAAA,cAAA,CAAmB,UAAnB,EAAqC;AAArC,QAAA,KAAA,GAAyC,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAAhD;;;;;;aAAmB;;;AAAgC;;;;;;WAEnD,UAAgB,OAAhB,EAAmD,WAAnD,EAAkF;AACjF,MAAA,OAAO,CAAC,cAAR,GAAyB,KAAK,UAA9B;AACA;;AACF,SAAA,cAAA;AAAC,CAND,CAA6B,EAA7B,CAAA;AAQA;;AAEG;;;AACH,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuB,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AACtB,WAAA,QAAA,CAAmB,CAAnB,EAAqC,CAArC,EAAuD,KAAvD,EAA6E,MAA7E,EAA2F;AAA3F,QAAA,KAAA,GAA+F,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAAtG;;;;;;aAAmB;;;;;;aAAkB;;;;;;aAAkB;;;;;;aAAsB;;;AAA4B;;;;;;WAEzG,UAAY,OAAZ,EAA6C;AAC5C,MAAA,OAAO,CAAC,IAAR,CAAa,KAAK,CAAlB,EAAqB,KAAK,CAA1B,EAA6B,KAAK,KAAlC,EAAyC,KAAK,MAA9C;AACA;;;;;;WAED,UAAiB,MAAjB,EAAgC;AAC/B,UAAM,CAAC,GAAG,KAAK,CAAf;AACA,UAAM,CAAC,GAAG,KAAK,CAAf;AACA,UAAM,CAAC,GAAG,CAAC,GAAG,KAAK,KAAnB;AACA,UAAM,CAAC,GAAG,CAAC,GAAG,KAAK,MAAnB;AAEA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,CAAL;AAAQ,QAAA,CAAC,EAAE;AAAX,OAAT,CAAR;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,CAAL;AAAQ,QAAA,CAAC,EAAE;AAAX,OAAT,CAAR;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,CAAL;AAAQ,QAAA,CAAC,EAAE;AAAX,OAAT,CAAR;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,CAAL;AAAQ,QAAA,CAAC,EAAE;AAAX,OAAT,CAAR;AACA;;AACF,SAAA,QAAA;AAAC,CAlBD,CAAuB,EAAvB,CAAA;AAoBA;;AAEG;;;AACH,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAyB,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AACxB,WAAA,UAAA,CAAmB,CAAnB,EAAqC,CAArC,EAAuD,MAAvD,EAAqE;AAArE,QAAA,KAAA,GAAyE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAAhF;;;;;;aAAmB;;;;;;aAAkB;;;;;;aAAkB;;;AAA4B;;;;;;WAEnF,UAAY,OAAZ,EAA6C;AAC5C,MAAA,OAAO,CAAC,MAAR,CAAe,KAAK,CAAL,GAAS,KAAK,MAA7B,EAAqC,KAAK,CAA1C;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAK,CAAjB,EAAoB,KAAK,CAAzB,EAA4B,KAAK,MAAjC,EAAyC,CAAzC,EAA4C,IAAI,IAAI,CAAC,EAArD;AACA;KANF,CAQC;;;;;;WACA,UAAiB,MAAjB,EAAgC;AAC/B,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,KAAK,CAAL,GAAS,KAAK,MAAnB;AAA2B,QAAA,CAAC,EAAE,KAAK,CAAL,GAAS,KAAK;AAA5C,OAAT,CAAR;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,KAAK,CAAL,GAAS,KAAK,MAAnB;AAA2B,QAAA,CAAC,EAAE,KAAK,CAAL,GAAS,KAAK;AAA5C,OAAT,CAAR;AACA;;AACF,SAAA,UAAA;AAAC,CAbD,CAAyB,EAAzB,CAAA;AAeA;;AAEG;;;AACH,IAAA,GAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkB,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AACjB,WAAA,GAAA,CACQ,EADR,EAEQ,EAFR,EAGQ,MAHR,EAIQ,UAJR,EAKQ,QALR,EAMQ,aANR,EAM8B;AAN9B,QAAA,KAAA,GAOI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAPX;;;;;;aACQ;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;AACM;;;;;;WAEd,UAAY,OAAZ,EAA6C;AAC5C,UAAI,KAAK,MAAL,GAAc,CAAlB,EAAqB;AACpB,QAAA,OAAO,CAAC,GAAR,CAAY,KAAK,EAAjB,EAAqB,KAAK,EAA1B,EAA8B,KAAK,MAAnC,EAA2C,KAAK,UAAhD,EAA4D,KAAK,QAAjE,EAA2E,KAAK,aAAhF;AACA;AACD;;;;;;WAED,UAAiB,MAAjB,EAAgC;AAC/B,UAAI,SAAS,GAAG,KAAK,CAAC,YAAN,CAAmB,KAAK,EAAxB,EAA4B,KAAK,EAAjC,EAAqC,KAAK,UAAL,GAAkB,KAAK,CAAC,OAA7D,EAAsE,KAAK,QAAL,GAAgB,KAAK,CAAC,OAA5F,EAAqG,KAAK,MAA1G,CAAhB;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,SAAS,CAAC,IAAf;AAAqB,QAAA,CAAC,EAAE,SAAS,CAAC;AAAlC,OAAT,CAAR;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,SAAS,CAAC,KAAf;AAAsB,QAAA,CAAC,EAAE,SAAS,CAAC;AAAnC,OAAT,CAAR;AACA;;AACF,SAAA,GAAA;AAAC,CArBD,CAAkB,EAAlB,CAAA;AAuBA;;AAEG;;;AACH,IAAA,KAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoB,EAAA,SAAA,CAAA,KAAA,EAAA,MAAA,CAAA;;AACnB,WAAA,KAAA,CACQ,EADR,EAEQ,EAFR,EAGQ,EAHR,EAIQ,EAJR,EAKQ,MALR,EAKsB;AALtB,QAAA,KAAA,GAMI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IANX;;;;;;aACQ;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;AACM;;;;;;WAEd,UAAY,OAAZ,EAA6C;AAC5C,UAAI,KAAK,MAAL,GAAc,CAAlB,EAAqB;AACpB,QAAA,OAAO,CAAC,KAAR,CAAc,KAAK,EAAnB,EAAuB,KAAK,EAA5B,EAAgC,KAAK,EAArC,EAAyC,KAAK,EAA9C,EAAkD,KAAK,MAAvD;AACA;AACD;KAbF,CAeC;;;;;;WACA,UAAiB,OAAjB,EAAiC;AAChC;;;;;;;;;;;;;;;;;;;AAyBA;;AACF,SAAA,KAAA;AAAC,CA3CD,CAAoB,EAApB,CAAA;AA6CA;;AAEG;;;AACH,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqB,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AACpB,WAAA,MAAA,CAAmB,CAAnB,EAAqC,CAArC,EAA8C;AAA9C,QAAA,KAAA,GAAkD,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAAzD;;;;;;aAAmB;;;;;;aAAkB;;;AAAuB;;;;;;WAE5D,UAAY,OAAZ,EAA6C;AAC5C,MAAA,OAAO,CAAC,MAAR,CAAe,KAAK,CAApB,EAAuB,KAAK,CAA5B;AACA;;;;;;WAED,UAAiB,MAAjB,EAAgC;AAC/B,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,KAAK,CAAV;AAAa,QAAA,CAAC,EAAE,KAAK;AAArB,OAAT,CAAR;AACA;;AACF,SAAA,MAAA;AAAC,CAVD,CAAqB,EAArB,CAAA;AAYA;;AAEG;;;AACH,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqB,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AACpB,WAAA,MAAA,CAAmB,CAAnB,EAAqC,CAArC,EAA8C;AAA9C,QAAA,KAAA,GAAkD,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAAzD;;;;;;aAAmB;;;;;;aAAkB;;;AAAuB;;;;;;WAE5D,UAAY,OAAZ,EAA6C;AAC5C,MAAA,OAAO,CAAC,MAAR,CAAe,KAAK,CAApB,EAAuB,KAAK,CAA5B;AACA;;;;;;WAED,UAAiB,MAAjB,EAAgC;AAC/B,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,KAAK,CAAV;AAAa,QAAA,CAAC,EAAE,KAAK;AAArB,OAAT,CAAR;AACA;;AACF,SAAA,MAAA;AAAC,CAVD,CAAqB,EAArB,CAAA;AAYA;;AAEG;;;AACH,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwB,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAAxB,WAAA,SAAA,GAAA;;AAIC;;;;;;WAHA,UAAY,OAAZ,EAA6C;AAC5C,MAAA,OAAO,CAAC,SAAR;AACA;;AACF,SAAA,SAAA;AAAC,CAJD,CAAwB,EAAxB,CAAA;AAMA;;AAEG;;;AACH,IAAA,aAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,SAAA,CAAA,aAAA,EAAA,MAAA,CAAA;;AAC3B,WAAA,aAAA,CACQ,GADR,EAEQ,GAFR,EAGQ,IAHR,EAIQ,IAJR,EAKQ,GALR,EAMQ,GANR,EAMmB;AANnB,QAAA,KAAA,GAOI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IAPX;;;;;;aACQ;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;AACM;;;;;;WAEd,UAAY,OAAZ,EAA6C;AAC5C,MAAA,OAAO,CAAC,aAAR,CAAsB,KAAK,GAA3B,EAAgC,KAAK,GAArC,EAA0C,KAAK,IAA/C,EAAqD,KAAK,IAA1D,EAAgE,KAAK,GAArE,EAA0E,KAAK,GAA/E;AACA;KAZF,CAcC;;;;;;WACA,UAAiB,MAAjB,EAAgC;AAC/B,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,KAAK,GAAV;AAAe,QAAA,CAAC,EAAE,KAAK;AAAvB,OAAT,CAAR;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,KAAK,IAAV;AAAgB,QAAA,CAAC,EAAE,KAAK;AAAxB,OAAT,CAAR;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,KAAK,GAAV;AAAe,QAAA,CAAC,EAAE,KAAK;AAAvB,OAAT,CAAR;AACA;;AACF,SAAA,aAAA;AAAC,CApBD,CAA4B,EAA5B,CAAA;AAsBA;;AAEG;;;AACH,IAAA,gBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAC9B,WAAA,gBAAA,CACQ,GADR,EAEQ,GAFR,EAGQ,GAHR,EAIQ,GAJR,EAImB;AAJnB,QAAA,KAAA,GAKI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IALX;;;;;;aACQ;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;AACM;;;;;;WAEd,UAAY,OAAZ,EAA6C;AAC5C,MAAA,OAAO,CAAC,gBAAR,CAAyB,KAAK,GAA9B,EAAmC,KAAK,GAAxC,EAA6C,KAAK,GAAlD,EAAuD,KAAK,GAA5D;AACA;KAVF,CAYC;;;;;;WACA,UAAiB,MAAjB,EAAgC;AAC/B,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,KAAK,GAAV;AAAe,QAAA,CAAC,EAAE,KAAK;AAAvB,OAAT,CAAR;AACA,MAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,QAAA,CAAC,EAAE,KAAK,GAAV;AAAe,QAAA,CAAC,EAAE,KAAK;AAAvB,OAAT,CAAR;AACA;;AACF,SAAA,gBAAA;AAAC,CAjBD,CAA+B,EAA/B,CAAA;AAmBA;;AAEG;;;AACH,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqB,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AACpB,WAAA,MAAA,CACQ,KADR,EAEQ,IAFR,EAGQ,OAHR,EAIQ,OAJR,EAKQ,OALR,EAKwB;AALxB,QAAA,KAAA,GAMI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IANX;;;;;;aACQ;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;;;;aACA;;;AACM;;;;;;WAEd,UAAgB,OAAhB,EAAmD,WAAnD,EAAkF;AACjF,UAAI,KAAK,OAAT,EAAkB;AACjB,QAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,KAAzB;AACA;;AACD,MAAA,OAAO,CAAC,WAAR,GAAsB,KAAK,KAA3B;;AACA,UAAI,KAAK,IAAT,EAAe;AACd,QAAA,OAAO,CAAC,UAAR,GAAqB,KAAK,IAA1B;AACA;;AACD,UAAI,KAAK,OAAT,EAAkB;AACjB,QAAA,OAAO,CAAC,aAAR,GAAwB,KAAK,OAA7B;AACA;;AACD,UAAI,KAAK,OAAT,EAAkB;AACjB,QAAA,OAAO,CAAC,aAAR,GAAwB,KAAK,OAA7B;AACA;AACD;;AACF,SAAA,MAAA;AAAC,CAxBD,CAAqB,EAArB,CAAA;AA2BA;;AAEG;;;AACH,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAApC,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACC,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,aAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAmC;AAAnC,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA8B,SAAS,CAAC;AAAxC,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,aAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAiC;AAAjC,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;;AAscA;;;;;;WApcA,YAAA;AACC,MAAA,MAAA,CAAA,SAAA,CAAM,KAAN,CAAW,IAAX,CAAW,IAAX;;AACA,WAAK,WAAL,CAAiB,MAAjB,GAA0B,CAA1B;AACA;;;;;;WAED,UAAkB,EAAlB,EAAwB;AACvB,WAAK,WAAL,CAAiB,IAAjB,CAAsB,EAAtB;AACA;;;;;;WAED,UAAU,KAAV,EAA0D,KAA1D,EAA2E;AAAjB,UAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,KAAA,GAAA,CAAA;AAAiB;;AAC1E,WAAK,UAAL,GAAkB,KAAlB;;AACA,UAAI,KAAJ,EAAW;AACV,YAAI,KAAK,YAAY,KAArB,EAA4B;AAC3B,eAAK,OAAL,CAAa,IAAI,SAAJ,CAAc,KAAK,CAAC,KAAN,CAAY,KAAZ,CAAd,CAAb;AAEA,SAHD,MAGO;AACN,eAAK,UAAL,GAAkB,IAAlB;;AACA,eAAK,OAAL,CAAa,IAAI,SAAJ,CAAc,KAAd,CAAb;AACA;AACD,OARD,MAQO;AACN,aAAK,OAAL,CAAa,IAAI,SAAJ,CAAc,mBAAmB,KAAnB,GAA2B,GAAzC,CAAb;AACA;AACD;;;;;;WAED,YAAA;AACC,WAAK,OAAL,CAAa,IAAI,OAAJ,CAAY,KAAK,WAAjB,CAAb;AACA;;;;;;WAED,YAAA;AACC,WAAK,OAAL,CAAa,IAAI,SAAJ,EAAb;AACA;;;;;;WAED,UAAU,KAAV,EAA6B,KAA7B,EAA6E,KAA7E,EAA8F;AAApF,UAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,KAAA,GAAA,CAAA;AAAiB;;AAAkD,UAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,KAAA,GAAA,CAAA;AAAiB;;AAC7F,WAAK,YAAL,GAAoB,KAApB;;AACA,UAAI,KAAJ,EAAW;AACV,YAAI,KAAK,YAAY,KAArB,EAA4B;AAC3B,eAAK,OAAL,CAAa,IAAI,SAAJ,CAAc,KAAd,EAAqB,KAAK,CAAC,KAAN,CAAY,KAAZ,CAArB,CAAb;AACA,SAFD,MAEO;AACN,eAAK,OAAL,CAAa,IAAI,SAAJ,CAAc,KAAd,EAAqB,KAArB,CAAb;AACA;AACD,OAND,MAMO;AACN,aAAK,OAAL,CAAa,IAAI,SAAJ,CAAc,KAAd,EAAqB,mBAAmB,KAAnB,GAA2B,GAAhD,CAAb;AACA;AACD;;;;;;WAED,UAAY,IAAZ,EAA2B;AAC1B,WAAK,OAAL,CAAa,IAAI,QAAJ,CAAa,IAAI,GAAG,IAAH,GAAU,EAA3B,CAAb;AACA;;;;;;WAED,UAAkB,UAAlB,EAAqC;AACpC,WAAK,OAAL,CAAa,IAAI,cAAJ,CAAmB,UAAU,IAAI,CAAjC,CAAb;AACA;;;;;;WAED,UAAS,CAAT,EAAoB,CAApB,EAA+B,KAA/B,EAA8C,MAA9C,EAA4D;AAC3D,WAAK,OAAL,CAAa,IAAI,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,KAAnB,EAA0B,MAA1B,CAAb;AACA;;;;;;WAED,UAAW,CAAX,EAAsB,CAAtB,EAAiC,MAAjC,EAA+C;AAC9C,WAAK,OAAL,CAAa,IAAI,UAAJ,CAAe,CAAf,EAAkB,CAAlB,EAAqB,MAArB,CAAb;AACA;;;;;;WAED,UAAI,EAAJ,EAAgB,EAAhB,EAA4B,MAA5B,EAA4C,UAA5C,EAAgE,QAAhE,EAAkF,aAAlF,EAAgH;AAA9B,UAAA,aAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,aAAA,GAAA,KAAA;AAA8B;;AAC/G,WAAK,OAAL,CAAa,IAAI,GAAJ,CAAQ,EAAR,EAAY,EAAZ,EAAgB,MAAhB,EAAwB,UAAxB,EAAoC,QAApC,EAA8C,aAA9C,CAAb;AACA;;;;;;WAED,UAAM,EAAN,EAAkB,EAAlB,EAA8B,EAA9B,EAA0C,EAA1C,EAAsD,MAAtD,EAAoE;AACnE,WAAK,OAAL,CAAa,IAAI,KAAJ,CAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,MAA1B,CAAb;AACA;;;;;;WAED,UAAO,CAAP,EAAkB,CAAlB,EAA2B;AAC1B,WAAK,OAAL,CAAa,IAAI,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAb;AACA;;;;;;WAED,UAAO,CAAP,EAAkB,CAAlB,EAA2B;AAC1B,WAAK,OAAL,CAAa,IAAI,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAb;AACA;;;;;;WAED,UAAc,GAAd,EAA2B,GAA3B,EAAwC,IAAxC,EAAsD,IAAtD,EAAoE,GAApE,EAAiF,GAAjF,EAA4F;AAC3F,WAAK,OAAL,CAAa,IAAI,aAAJ,CAAkB,GAAlB,EAAuB,GAAvB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,GAAxC,EAA6C,GAA7C,CAAb;AACA;;;;;;WAED,UAAiB,GAAjB,EAA8B,GAA9B,EAA2C,GAA3C,EAAwD,GAAxD,EAAmE;AAClE,WAAK,OAAL,CAAa,IAAI,gBAAJ,CAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAb;AACA;;;;;;WAED,YAAA;AACC,WAAK,OAAL,CAAa,IAAI,SAAJ,EAAb;AACA;;;;;;WAED,UAAO,KAAP,EAAqB,IAArB,EAAoC,OAApC,EAAsD,OAAtD,EAAwE,OAAxE,EAAwF;AACvF,WAAK,WAAL,GAAmB,IAAnB;;AACA,WAAK,OAAL,CAAa,IAAI,MAAJ,CAAW,OAAO,GAAG,KAAK,CAAC,KAAN,CAAY,OAAZ,CAAH,GAA0B,KAAK,CAAC,KAAN,CAAY,KAAK,UAAL,IAAmB,KAAK,YAApC,CAA5C,EAA+F,IAA/F,EAAqG,OAArG,EAA8G,OAA9G,CAAb;AACA;KArGF,CAuGC;AACA;;;;;;WACA,UAAQ,IAAR,EAAoB;AAApB,UAAA,KAAA,GAAA,IAAA;;AACC,UAAI,CAAC,GAAG,CAAR;AACA,UAAI,CAAC,GAAG,CAAR;AACA,UAAI,GAAG,GAAkB,IAAzB;AACA,UAAI,GAAG,GAAkB,IAAzB;AACA,UAAI,IAAI,GAAkB,IAA1B;AACA,UAAI,IAAI,GAAkB,IAA1B;AAEA,UAAM,eAAe,GAAG,qDAAxB;AACA,UAAM,WAAW,GAAG,qHAApB;AAEA,UAAI,KAAJ;;AAEA,aAAO,CAAC,KAAK,GAAG,eAAe,CAAC,IAAhB,CAAqB,IAArB,CAAT,MAAyC,IAAhD,EAAsD;AACrD,YAAM,MAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;AACA,YAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;AAEA,YAAM,IAAI,GAAG,EAAb;;AAEA,eAAO,CAAC,KAAK,GAAG,WAAW,CAAC,IAAZ,CAAiB,IAAjB,CAAT,MAAqC,IAA5C,EAAkD;AACjD,UAAA,IAAI,CAAC,IAAL,CAAU,CAAC,KAAK,CAAC,CAAD,CAAhB;AACA,SARoD,CAUrD;;;AACA,YAAI,MAAI,KAAK,GAAT,IAAgB,MAAI,KAAK,GAAzB,IAAgC,MAAI,KAAK,GAAzC,IAAgD,MAAI,KAAK,GAA7D,EAAkE;AACjE,UAAA,GAAG,GAAG,IAAN;AACA,UAAA,GAAG,GAAG,IAAN;AACA,SAdoD,CAgBrD;;;AACA,YAAI,MAAI,KAAK,GAAT,IAAgB,MAAI,KAAK,GAAzB,IAAgC,MAAI,KAAK,GAAzC,IAAgD,MAAI,KAAK,GAA7D,EAAkE;AACjE,UAAA,IAAI,GAAG,IAAP;AACA,UAAA,IAAI,GAAG,IAAP;AACA;;AAED,gBAAQ,MAAR;AACC,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;AACA,YAAA,CAAC,GAAG,IAAI,CAAC,CAAD,CAAR;AACA,YAAA,CAAC,GAAG,IAAI,CAAC,CAAD,CAAR;AACA,iBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;;AAEA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,cAAA,CAAC,GAAG,IAAI,CAAC,CAAD,CAAR;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAR;AACA,mBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACA;;AACD;;AACD,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;AACA,YAAA,CAAC,IAAI,IAAI,CAAC,CAAD,CAAT;AACA,YAAA,CAAC,IAAI,IAAI,CAAC,CAAD,CAAT;AACA,iBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;;AAEA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,cAAA,CAAC,IAAI,IAAI,CAAC,CAAD,CAAT;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAL,CAAT;AACA,mBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACA;;AACD;;AAED,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,cAAA,CAAC,GAAG,IAAI,CAAC,CAAD,CAAR;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAR;AACA,mBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACA;;AACD;;AACD,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,cAAA,CAAC,IAAI,IAAI,CAAC,CAAD,CAAT;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAL,CAAT;AACA,mBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACA;;AACD;;AAED,eAAK,GAAL;AACC,YAAA,YAAY,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAZ;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACrC,cAAA,CAAC,GAAG,IAAI,CAAC,CAAD,CAAR;AACA,mBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACA;;AACD;;AACD,eAAK,GAAL;AACC,YAAA,YAAY,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAZ;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACrC,cAAA,CAAC,IAAI,IAAI,CAAC,CAAD,CAAT;AACA,mBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACA;;AACD;;AAED,eAAK,GAAL;AACC,YAAA,YAAY,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAZ;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACrC,cAAA,CAAC,GAAG,IAAI,CAAC,CAAD,CAAR;AACA,mBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACA;;AACD;;AACD,eAAK,GAAL;AACC,YAAA,YAAY,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAZ;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,EAAE,CAAnC,EAAsC;AACrC,cAAA,CAAC,IAAI,IAAI,CAAC,CAAD,CAAT;AACA,mBAAK,MAAL,CAAY,CAAZ,EAAe,CAAf;AACA;;AACD;;AAED,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,kBAAM,EAAE,GAAG,IAAI,CAAC,CAAD,CAAf;AACA,kBAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAf;AACA,cAAA,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAV;AACA,cAAA,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAV;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAR;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAR;AACA,mBAAK,aAAL,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,CAArC,EAAwC,CAAxC;AACA;;AACD;;AACD,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,kBAAM,EAAE,GAAG,IAAI,CAAC,CAAD,CAAJ,GAAU,CAArB;AACA,kBAAM,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAJ,GAAc,CAAzB;AACA,cAAA,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAJ,GAAc,CAApB;AACA,cAAA,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAJ,GAAc,CAApB;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAL,CAAT;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAL,CAAT;AACA,mBAAK,aAAL,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,CAArC,EAAwC,CAAxC;AACA;;AACD;;AAED,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,gBAAI,GAAG,KAAK,IAAR,IAAgB,GAAG,KAAK,IAA5B,EAAkC;AACjC,cAAA,GAAG,GAAG,CAAN;AACA,cAAA,GAAG,GAAG,CAAN;AACA;;AACD,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,kBAAM,EAAE,GAAG,IAAI,CAAJ,GAAQ,GAAnB;AACA,kBAAM,EAAE,GAAG,IAAI,CAAJ,GAAQ,GAAnB;AACA,cAAA,GAAG,GAAG,IAAI,CAAC,CAAD,CAAV;AACA,cAAA,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAV;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAR;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAR;AACA,mBAAK,aAAL,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,CAArC,EAAwC,CAAxC;AACA;;AACD;;AACD,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,gBAAI,GAAG,KAAK,IAAR,IAAgB,GAAG,KAAK,IAA5B,EAAkC;AACjC,cAAA,GAAG,GAAG,CAAN;AACA,cAAA,GAAG,GAAG,CAAN;AACA;;AACD,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,kBAAM,EAAE,GAAG,IAAI,CAAJ,GAAQ,GAAnB;AACA,kBAAM,EAAE,GAAG,IAAI,CAAJ,GAAQ,GAAnB;AACA,cAAA,GAAG,GAAG,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAhB;AACA,cAAA,GAAG,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAJ,GAAc,CAApB;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAL,CAAT;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAL,CAAT;AACA,mBAAK,aAAL,CAAmB,EAAnB,EAAuB,EAAvB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,CAArC,EAAwC,CAAxC;AACA;;AACD;;AAED,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,cAAA,IAAI,GAAG,IAAI,CAAC,CAAD,CAAX;AACA,cAAA,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAX;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAR;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAR;AACA,mBAAK,gBAAL,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC,CAAlC,EAAqC,CAArC;AACA;;AACD;;AACD,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,cAAA,IAAI,GAAG,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAjB;AACA,cAAA,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAJ,GAAc,CAArB;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAL,CAAT;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAL,CAAT;AACA,mBAAK,gBAAL,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC,CAAlC,EAAqC,CAArC;AACA;;AACD;;AAED,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,gBAAI,IAAI,KAAK,IAAT,IAAiB,IAAI,KAAK,IAA9B,EAAoC;AACnC,cAAA,IAAI,GAAG,CAAP;AACA,cAAA,IAAI,GAAG,CAAP;AACA;;AACD,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,cAAA,IAAI,GAAG,IAAI,CAAJ,GAAQ,IAAf;AACA,cAAA,IAAI,GAAG,IAAI,CAAJ,GAAQ,IAAf;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAD,CAAR;AACA,cAAA,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAR;AACA,mBAAK,gBAAL,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC,CAAlC,EAAqC,CAArC;AACA;;AACD;;AACD,eAAK,GAAL;AACC,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AACA,gBAAI,IAAI,KAAK,IAAT,IAAiB,IAAI,KAAK,IAA9B,EAAoC;AACnC,cAAA,IAAI,GAAG,CAAP;AACA,cAAA,IAAI,GAAG,CAAP;AACA;;AACD,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,cAAA,IAAI,GAAG,IAAI,CAAJ,GAAQ,IAAf;AACA,cAAA,IAAI,GAAG,IAAI,CAAJ,GAAQ,IAAf;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAD,CAAT;AACA,cAAA,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAL,CAAT;AACA,mBAAK,gBAAL,CAAsB,IAAtB,EAA4B,IAA5B,EAAkC,CAAlC,EAAqC,CAArC;AACA;;AACD;;AAED,eAAK,GAAL;AACA,eAAK,GAAL;AACC,gBAAM,QAAQ,GAAI,MAAI,KAAK,GAA3B;AAEA,YAAA,aAAa,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAb;;AAEA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,IAAI,CAAtC,EAAyC;AACxC,kBAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAb;AACA,kBAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAL,CAAb;;AAEA,kBAAI,QAAJ,EAAc;AACb,gBAAA,EAAE,IAAI,CAAN;AACA,gBAAA,EAAE,IAAI,CAAN;AACA;;AAED,kBAAM,EAAE,GAAG,WAAW,CAAC;AACtB,gBAAA,EAAE,EAAE,CADkB;AAEtB,gBAAA,EAAE,EAAE,CAFkB;AAGtB,gBAAA,EAAE,EAAE,IAAI,CAAC,CAAD,CAHc;AAItB,gBAAA,EAAE,EAAE,IAAI,CAAC,CAAC,GAAG,CAAL,CAJc;AAKtB,gBAAA,aAAa,EAAE,IAAI,CAAC,CAAC,GAAG,CAAL,CALG;AAMtB,gBAAA,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,CAAL,CAAL,CANJ;AAOtB,gBAAA,SAAS,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,CAAL,CAAL,CAPD;AAQtB,gBAAA,EAAE,EAAA,EARoB;AAStB,gBAAA,EAAE,EAAA;AAToB,eAAD,CAAtB;AAYA,cAAA,MAAM,CAAC,IAAP,CAAY,EAAZ,EAAgB,UAAC,CAAD,EAAE;AACjB,gBAAA,KAAI,CAAC,aAAL,CAAmB,CAAC,CAAC,EAArB,EAAyB,CAAC,CAAC,EAA3B,EAA+B,CAAC,CAAC,EAAjC,EAAqC,CAAC,CAAC,EAAvC,EAA2C,CAAC,CAAC,CAA7C,EAAgD,CAAC,CAAC,CAAlD;;AACA,gBAAA,CAAC,GAAG,CAAC,CAAC,CAAN;AACA,gBAAA,CAAC,GAAG,CAAC,CAAC,CAAN;AACA,eAJD;AAKA;;AACD;;AACD,eAAK,GAAL;AACA,eAAK,GAAL;AACC,YAAA,SAAS,CAAC,MAAD,EAAO,IAAI,CAAC,MAAZ,EAAoB,CAApB,CAAT;AACA,iBAAK,SAAL;AACA;AA3NF;AA6NA;AACD;;;;;;WAGD,UAAgB,OAAhB,EAAiD;AAChD,MAAA,OAAO,CAAC,SAAR;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,WAAjB,EAA8B,UAAC,EAAD,EAAG;AAChC,QAAA,EAAE,CAAC,IAAH,CAAQ,OAAR;AACA,OAFD;AAGA;;;;;;WAED,UAAkB,WAAlB,EAA0C;AACzC,MAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAAc,WAAd;;AAEA,UAAM,KAAK,GAAG,KAAK,MAAL,IAAe,WAA7B;AAEA,UAAM,UAAU,GAAG,KAAK,CAAC,KAAzB;;AACA,UAAM,WAAW,GAAG,KAAK,cAAL,EAApB,CANyC,CAQzC;AACA;AACA;;;AAEA,UAAI,UAAU,IAAI,WAAlB,EAA+B;AAE9B,YAAM,SAAO,GAAG,KAAK,CAAC,OAAtB;AACA,YAAM,cAAY,GAAG,KAAK,SAAL,CAAe,aAApC;;AAEA,YAAI,UAAJ,EAAgB;AACf,UAAA,SAAO,CAAC,wBAAR,GAAmC,KAAK,SAAxC;AAEA,UAAA,SAAO,CAAC,SAAR;AACA;;AAED,YAAI,OAAJ;;AAEA,YAAI,WAAJ,EAAiB;AAChB,UAAA,cAAY,CAAC,SAAb;AACA,UAAA,OAAK,GAAG,KAAK,WAAL,EAAR;AACA;;AAED,QAAA,MAAM,CAAC,IAAP,CAAY,KAAK,WAAjB,EAA8B,UAAC,EAAD,EAAG;AAChC,cAAI,UAAJ,EAAgB;AACf,YAAA,EAAE,CAAC,IAAH,CAAQ,SAAR;AACA,YAAA,EAAE,CAAC,QAAH,CAAY,SAAZ,EAAqB,SAArB;AACA;;AAED,cAAI,WAAJ,EAAiB;AAChB,YAAA,EAAE,CAAC,IAAH,CAAQ,cAAR;AACA,YAAA,EAAE,CAAC,QAAH,CAAY,cAAZ,EAA0B,OAA1B;AACA;AACD,SAVD;AAWA;AACD;;;;;;WAED,UAAsB,OAAtB,EAAuD;AACtD,UAAI,KAAK,OAAT,EAAkB;AACjB,aAAK,UAAL;;AAEA,QAAA,OAAO,CAAC,IAAR,GAHiB,CAKjB;;AACA,YAAM,IAAI,GAAG,KAAK,IAAlB;;AACA,YAAI,IAAJ,EAAU;AACT,UAAA,IAAI,CAAC,UAAL;;AACA,UAAA,IAAI,CAAC,UAAL,CAAgB,OAAhB,EAAyB,CAAzB;;AACA,UAAA,IAAI,CAAC,QAAL,CAAc,OAAd;;AACA,UAAA,OAAO,CAAC,IAAR;AACA,SAZgB,CAcjB;;;AACA,QAAA,OAAO,CAAC,WAAR,GAAsB,KAAK,aAAL,GAAqB,KAAK,KAAhD;;AAEA,aAAK,UAAL,CAAgB,OAAhB,EAAyB,CAAzB;;AAEA,YAAI,KAAK,MAAT,EAAiB;AAChB,UAAA,OAAO,CAAC,MAAR,GAAiB,KAAK,MAAtB;AACA;;AAED,QAAA,OAAO,CAAC,wBAAR,GAAmC,KAAK,SAAxC;AAEA,QAAA,OAAO,CAAC,SAAR;AAEA,QAAA,MAAM,CAAC,IAAP,CAAY,KAAK,WAAjB,EAA8B,UAAC,EAAD,EAAG;AAChC,UAAA,EAAE,CAAC,IAAH,CAAQ,OAAR;AACA,UAAA,EAAE,CAAC,QAAH,CAAY,OAAZ,EAAqB,SAArB;AACA,SAHD;AAKA,QAAA,OAAO,CAAC,OAAR;AACA;AACD;;;;;;WAED,UAAkB,MAAlB,EAAiC;AAChC,UAAI,KAAK,OAAL,IAAgB,KAAK,UAAzB,EAAqC;AACpC,QAAA,MAAM,CAAC,IAAP,CAAY,KAAK,WAAjB,EAA8B,UAAC,EAAD,EAAG;AAChC,UAAA,EAAE,CAAC,SAAH,CAAa,MAAb;AACA,SAFD;AAGA;AACD;;AACF,SAAA,cAAA;AAAC,CA7cD,CAAoC,mBAApC,CAAA;;;AA4eA;;AAEG;;AACH,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAS/B,WAAA,UAAA,CAAY,QAAZ,EAAsC,IAAtC,EAAoD,KAApD,EAA0E;AAA1E,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,QAAN,KAAe,IADhB;;AARA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,MAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,OAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA4B;AAA5B,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAkC;AAAlC,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,gBAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAoC;AAApC,KAAA;AAIC,IAAA,KAAI,CAAC,IAAL,GAAY,IAAZ;AACA,IAAA,KAAI,CAAC,KAAL,GAAa,KAAb;;AACA;;;;;;WAED,YAAA;AACC,MAAA,MAAA,CAAA,SAAA,CAAM,gBAAN,CAAsB,IAAtB,CAAsB,IAAtB;;AACA,WAAK,SAAL,GAAiB,SAAjB;AACA;;;;;;WAED,UAAgB,OAAhB,EAAiD;AAChD,UAAI,KAAK,KAAL,CAAW,SAAf,EAA0B;AACzB,QAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,KAAL,CAAW,SAA/B;AACA;;AAED,UAAI,KAAK,KAAL,CAAW,SAAf,EAA0B;AACzB,QAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,KAAL,CAAW,SAA/B;AACA;;AAED,UAAI,KAAK,KAAL,CAAW,YAAf,EAA6B;AAC5B,QAAA,OAAO,CAAC,YAAR,GAAuB,KAAK,KAAL,CAAW,YAAlC;AACA;AAED;;;;;;WAED,UAAqB,KAArB,EAAyC,WAAzC,EAA8D,gBAA9D,EAAsF;AAA7C,UAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,WAAA,GAAA,KAAA;AAAmB;;AAAE,UAAA,gBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,gBAAA,GAAA,KAAA;AAAwB;;AACrF,MAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAAc,KAAd;;AAEA,UAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,UAAM,YAAY,GAAG,KAAK,SAAL,CAAe,aAApC,CAJqF,CAMrF;;AAEA,UAAM,KAAK,GAAG,KAAK,KAAnB;;AACA,UAAI,SAAS,GAAG,KAAK,aAAL,CAAmB,SAAnB,EAA8B,gBAA9B,CAAhB;;AAEA,MAAA,OAAO,CAAC,IAAR,GAAe,SAAf;;AACA,UAAI,KAAK,cAAL,MAAyB,CAAC,WAA9B,EAA2C;AAC1C,QAAA,YAAY,CAAC,IAAb,GAAoB,SAApB;AACA,OAdoF,CAgBrF;;;AACA,UAAI,KAAK,CAAC,IAAV,EAAgB;AACf,YAAI,KAAK,CAAC,IAAN,YAAsB,KAA1B,EAAiC;AAChC,UAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,CAAC,IAAN,CAAW,KAAX,EAApB;AACA,SAFD,MAEO;AACN,UAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,CAAC,IAA1B;AACA;AACD;;AAED,UAAI,KAAK,CAAC,WAAV,EAAuB;AACtB,QAAA,KAAK,CAAC,OAAN,CAAc,WAAd,GAA4B,KAAK,CAAC,WAAN,CAAkB,KAAlB,CAAwB,KAAK,CAAC,aAAN,IAAuB,CAA/C,CAA5B;AACA;;AACD,UAAI,KAAK,CAAC,UAAV,EAAsB;AACrB,QAAA,KAAK,CAAC,OAAN,CAAc,UAAd,GAA2B,KAAK,CAAC,UAAjC;AACA;;AACD,UAAI,KAAK,CAAC,aAAV,EAAyB;AACxB,QAAA,KAAK,CAAC,OAAN,CAAc,aAAd,GAA8B,KAAK,CAAC,aAApC;AACA;;AACD,UAAI,KAAK,CAAC,aAAV,EAAyB;AACxB,QAAA,KAAK,CAAC,OAAN,CAAc,aAAd,GAA8B,KAAK,CAAC,aAApC;AACA;;AAED,WAAK,OAAL,CAAa,OAAb;;AAEA,UAAI,KAAK,cAAL,MAAyB,CAAC,WAA9B,EAA2C;AAC1C,QAAA,YAAY,CAAC,SAAb,GAAyB,KAAK,WAAL,EAAzB;;AACA,aAAK,OAAL,CAAa,YAAb;AACA;AACD;;;;;;WAED,UAAwB,MAAxB,EAA6C,gBAA7C,EAAqE;AAAxB,UAAA,gBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,gBAAA,GAAA,KAAA;AAAwB,OAAA,CAEpE;;;AACA,UAAM,KAAK,GAAG,KAAK,KAAnB;AACA,UAAI,SAAS,GAAa,EAA1B;;AAEA,UAAI,MAAM,IAAI,MAAM,CAAC,WAArB,EAAkC;AACjC,QAAA,SAAS,CAAC,IAAV,CAAe,MAAM,CAAC,WAAtB;AACA,OAFD,MAGK,IAAI,KAAK,CAAC,WAAV,EAAuB;AAC3B,QAAA,SAAS,CAAC,IAAV,CAAe,KAAK,CAAC,WAArB;AACA;;AAED,UAAI,CAAC,gBAAL,EAAuB;AACtB,YAAI,MAAM,IAAI,MAAM,CAAC,UAArB,EAAiC;AAChC,UAAA,SAAS,CAAC,IAAV,CAAe,MAAM,CAAC,UAAtB;AACA,SAFD,MAGK,IAAI,KAAK,CAAC,UAAV,EAAsB;AAC1B,UAAA,SAAS,CAAC,IAAV,CAAe,KAAK,CAAC,UAArB;AACA;AACD;;AAED,UAAI,MAAM,IAAI,MAAM,CAAC,SAArB,EAAgC;AAC/B,QAAA,SAAS,CAAC,IAAV,CAAe,MAAM,CAAC,SAAtB;AACA,OAFD,MAGK,IAAI,KAAK,CAAC,SAAV,EAAqB;AACzB,QAAA,SAAS,CAAC,IAAV,CAAe,KAAK,CAAC,SAArB;AACA;;AAED,UAAI,MAAM,IAAI,MAAM,CAAC,QAArB,EAA+B;AAC9B,YAAI,KAAK,CAAC,QAAN,CAAe,MAAM,CAAC,QAAtB,CAAJ,EAAqC;AACpC,UAAA,MAAM,CAAC,QAAP,GAAkB,MAAM,CAAC,QAAP,GAAkB,IAApC;AACA;;AACD,QAAA,SAAS,CAAC,IAAV,CAAe,MAAM,CAAC,QAAtB;AACA,OALD,MAMK,IAAI,KAAK,CAAC,QAAV,EAAoB;AACxB,YAAI,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,QAArB,CAAJ,EAAoC;AACnC,UAAA,KAAK,CAAC,QAAN,GAAiB,KAAK,CAAC,QAAN,GAAiB,IAAlC;AACA;;AACD,QAAA,SAAS,CAAC,IAAV,CAAe,KAAK,CAAC,QAArB;AACA;;AAED,UAAI,MAAM,IAAI,MAAM,CAAC,UAArB,EAAiC;AAChC,QAAA,SAAS,CAAC,IAAV,CAAe,MAAM,CAAC,UAAtB;AACA,OAFD,MAGK,IAAI,KAAK,CAAC,UAAV,EAAsB;AAC1B,QAAA,SAAS,CAAC,IAAV,CAAe,KAAK,CAAC,UAArB;AACA,OAFI,MAGA,IAAI,SAAS,CAAC,MAAd,EAAsB;AAC1B,QAAA,SAAS,CAAC,IAAV,CAAe,OAAf;AACA;;AAED,aAAO,SAAS,CAAC,IAAV,CAAe,GAAf,CAAP;AACA;;;;;;WAED,UAAkB,WAAlB,EAA0C;AAA1C,UAAA,KAAA,GAAA,IAAA;;AACC,UAAM,KAAK,GAAG,KAAK,MAAL,IAAe,WAA7B,CADyC,CAGzC;;AACA,UAAI,CAAC,KAAK,SAAV,EAAqB;AACpB,aAAK,QAAL,CAAc,KAAd;AACA;;AAED,UAAI,KAAK,YAAT,EAAuB;AAEtB,YAAM,aAAW,GAAG,KAAK,cAAL,EAApB;;AACA,YAAM,SAAO,GAAG,KAAK,CAAC,OAAtB;AACA,YAAM,YAAU,GAAG,KAAK,CAAC,KAAzB;AACA,YAAM,cAAY,GAAG,KAAK,SAAL,CAAe,aAApC,CALsB,CAQtB;;AAEA,QAAA,SAAO,CAAC,IAAR;AACA,QAAA,cAAY,CAAC,IAAb;;AACA,aAAK,UAAL,CAAgB,KAAhB,EAZsB,CActB;AACA;AAIA;;;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,KAAK,SAAjB,EAA6B,UAAC,IAAD,EAAO,MAAP,EAAa;AACzC,UAAA,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,UAAjB,EAA6B,UAAC,KAAD,EAAQ,MAAR,EAAc;AAE1C;AACA,gBAAI,KAAK,CAAC,KAAV,EAAiB;AAChB,cAAA,SAAO,CAAC,IAAR;AACA,cAAA,cAAY,CAAC,IAAb;AAEA,cAAA,SAAO,CAAC,IAAR,GAAe,KAAK,CAAC,KAArB;;AACA,kBAAI,KAAI,CAAC,cAAL,EAAJ,EAA2B;AAC1B,gBAAA,cAAY,CAAC,IAAb,GAAoB,KAAK,CAAC,KAA1B;AACA;AACD;;AAED,gBAAI,KAAK,CAAC,IAAV,EAAgB;AACf,cAAA,SAAO,CAAC,IAAR;AACA,cAAA,SAAO,CAAC,SAAR,GAAoB,KAAK,CAAC,IAAN,CAAW,KAAX,EAApB,CAFe,CAGf;AACA,aAjByC,CAmB1C;;;AACA,gBAAI,YAAJ,EAAgB;AACf,cAAA,SAAO,CAAC,QAAR,CAAiB,KAAK,CAAC,IAAvB,EAA6B,KAAK,CAAC,OAAnC,EAA4C,IAAI,CAAC,OAAL,GAAe,KAAK,CAAC,OAAjE;AACA;;AAED,gBAAI,aAAW,IAAI,KAAI,CAAC,WAAxB,EAAqC;AACpC;AACA;AACA;AACA,cAAA,cAAY,CAAC,QAAb,CAAsB,KAAK,CAAC,IAA5B,EAAkC,KAAK,CAAC,OAAxC,EAAiD,IAAI,CAAC,OAAL,GAAe,KAAK,CAAC,OAAtE;AACA;;AAED,gBAAI,KAAK,CAAC,IAAV,EAAgB;AACf,cAAA,SAAO,CAAC,OAAR,GADe,CAEf;AACA,aAlCyC,CAoC1C;;;AACA,gBAAI,KAAK,CAAC,KAAV,EAAiB;AAChB,cAAA,SAAO,CAAC,OAAR;AACA,cAAA,cAAY,CAAC,OAAb;AACA;AAED,WA1CD;AA2CA,SA5CD;AA8CA,QAAA,SAAO,CAAC,OAAR;AACA,QAAA,cAAY,CAAC,OAAb;AACA;AACD;;;;;;WAED,UAAkB,MAAlB,EAAiC;AAChC,UAAI,KAAK,OAAL,IAAgB,KAAK,UAAzB,EAAqC;AACpC;AACA,YAAM,CAAC,GAAG,KAAK,QAAL,CAAc,KAAK,QAAL,EAAd,CAAV;;AACA,QAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,UAAA,CAAC,EAAE,CAAC,CAAC,IAAP;AAAa,UAAA,CAAC,EAAE,CAAC,CAAC;AAAlB,SAAT,CAAR;AACA,QAAA,QAAQ,CAAC,MAAD,EAAS;AAAE,UAAA,CAAC,EAAE,CAAC,CAAC,KAAP;AAAc,UAAA,CAAC,EAAE,CAAC,CAAC;AAAnB,SAAT,CAAR,CAJoC,CAKpC;AACA;AACD;;;;;;WAED,UAAgB,KAAhB,EAAkC;AAAlC,UAAA,KAAA,GAAA,IAAA;;AACC,UAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,UAAM,YAAY,GAAG,KAAK,SAAL,CAAe,aAApC,CAFiC,CAIjC;;AACA,WAAK,SAAL,GAAiB,EAAjB,CALiC,CAOjC;;AACA,UAAM,iBAAiB,GAAG,KAAK,KAAL,CAAW,iBAArC;AACA,UAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,QAA5B;AAEA,UAAM,QAAQ,GAAG,KAAK,CAAC,QAAN,CAAe,QAAf,KAA4B,iBAAiB,IAAI,UAAlE;AACA,UAAM,IAAI,GAAG,KAAK,CAAC,QAAN,CAAe,QAAf,KAA4B,iBAAiB,IAAI,MAA9D,CAZiC,CAcjC;;AACA,MAAA,OAAO,CAAC,IAAR;AACA,MAAA,YAAY,CAAC,IAAb;;AACA,WAAK,UAAL,CAAgB,KAAhB,EAAuB,IAAvB,EAA6B,IAA7B,EAjBiC,CAmBjC;;;AACA,UAAM,OAAO,GAAG,iEAAhB,CApBiC,CAsBjC;;AACA,UAAM,KAAK,GAAG,KAAK,IAAL,CAAU,QAAV,GAAqB,OAArB,CAA6B,KAA7B,EAAoC,EAApC,EAAwC,KAAxC,CAA8C,IAA9C,CAAd;AACA,UAAI,aAAa,GAAG,IAApB;AACA,UAAI,IAAI,GAAG,CAAX;AACA,UAAI,IAAI,GAAG,CAAX,CA1BiC,CA4BjC;;AACA,UAAI,OAAO,GAAG,CAAd;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,UAAC,IAAD,EAAO,MAAP,EAAa;AAE/B;AACA,YAAI,MAAJ;;AACA,YAAI,IAAI,IAAI,EAAZ,EAAgB;AACf,UAAA,MAAM,GAAG,CAAC;AACT,YAAA,IAAI,EAAE,OADG;AAET,YAAA,IAAI,EAAE;AAFG,WAAD,CAAT;AAIA,SALD,MAMK;AACJ,UAAA,MAAM,GAAG,aAAa,CAAC,KAAd,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,KAAI,CAAC,KAAL,CAAW,gBAA5C,CAAT;AACA;;;AAIA;AACA,cAAI,QAAQ,GAAU;AACrB,YAAA,OAAO,EAAE,OADY;AAErB,YAAA,MAAM,EAAE,CAFa;AAGrB,YAAA,KAAK,EAAE,CAHc;AAIrB,YAAA,MAAM,EAAE,CAJa;AAKrB,YAAA,IAAI,EAAE,CALe;AAMrB,YAAA,KAAK,EAAE,CANc;AAOrB,YAAA,UAAU,EAAE;AAPS,WAAtB,C,CAUA;;AACA,cAAM,OAAO,GAAG,KAAI,CAAC,YAAL,CAAkB,OAAlB,EAA2B,OAA3B,CAAhB;;AAEA,cAAM,MAAM,GAAG,OAAO,CAAC,uBAAR,GAAkC,OAAO,CAAC,wBAAzD;AACA,UAAA,QAAQ,CAAC,MAAT,GAAkB,MAAlB;AACA,UAAA,QAAQ,CAAC,MAAT,GAAkB,OAAO,CAAC,uBAA1B;AAEA,cAAI,YAAJ;AACA,cAAI,aAAJ;AACA,cAAI,WAAJ;AACA,cAAI,iBAAJ;AACA,cAAI,eAAe,GAAG,KAAtB;AACA,cAAI,cAAc,GAAG,IAArB;AACA,cAAI,cAAc,GAAsB,EAAxC,C,CACA;AACA;AAEA;;AACA,UAAA,MAAM,CAAC,YAAP,CAAoB,MAApB,EAA4B,UAAC,KAAD,EAAQ,KAAR,EAAa;AAExC;AACA,gBAAI,KAAK,CAAC,IAAN,IAAc,QAAlB,EAA4B;AAC3B,kBAAI,KAAK,CAAC,IAAN,IAAc,KAAlB,EAAyB;AACxB,oBAAI,CAAC,aAAL,EAAoB;AACnB,kBAAA,OAAO,CAAC,OAAR;AACA,kBAAA,YAAY,CAAC,OAAb;AACA,kBAAA,aAAa,GAAG,IAAhB;AACA;;AACD,gBAAA,WAAW,GAAG,SAAd;AACA,gBAAA,YAAY,GAAG,SAAf;AACA,gBAAA,iBAAiB,GAAG,SAApB;AACA,gBAAA,aAAa,GAAG,KAAK,CAAC,IAAtB;AACA,eAVD,MAWK;AAEJ,oBAAI,CAAC,aAAL,EAAoB;AACnB,kBAAA,OAAO,CAAC,OAAR;AACA,kBAAA,YAAY,CAAC,OAAb;AACA;;AAED,oBAAI,MAAM,GAAG,aAAa,CAAC,YAAd,CAA2B,KAAK,CAAC,IAAjC,CAAb;;AACA,oBAAM,SAAS,GAAG,KAAI,CAAC,aAAL,CAAmB,MAAnB,CAAlB;;AACA,gBAAA,OAAO,CAAC,IAAR;AACA,gBAAA,YAAY,CAAC,IAAb;AACA,gBAAA,OAAO,CAAC,IAAR,GAAe,SAAf;AACA,gBAAA,YAAY,GAAG,SAAf;AACA,gBAAA,aAAa,GAAG,KAAK,CAAC,IAAtB;;AACA,oBAAI,MAAM,CAAC,IAAX,EAAiB;AAChB,kBAAA,WAAW,GAAU,MAAM,CAAC,IAA5B;AACA;;AACD,oBAAU,MAAO,CAAC,KAAlB,EAAyB;AACxB,kBAAA,iBAAiB,GAAG,KAAK,CAAC,QAAN,CAAqB,MAAO,CAAC,KAA7B,CAApB;AACA;;AACD,gBAAA,aAAa,GAAG,KAAhB,CApBI,CAsBJ;;AACA,oBAAM,SAAO,GAAG,KAAI,CAAC,YAAL,CAAkB,OAAlB,EAA2B,OAA3B,CAAhB;;AACA,oBAAM,QAAM,GAAG,SAAO,CAAC,uBAAR,GAAkC,SAAO,CAAC,wBAAzD;;AACA,oBAAI,QAAM,GAAG,QAAQ,CAAC,MAAtB,EAA8B;AAC7B,kBAAA,QAAQ,CAAC,MAAT,GAAkB,QAAlB;AACA;;AACD,oBAAI,SAAO,CAAC,uBAAR,GAAkC,QAAQ,CAAC,MAA/C,EAAuD;AACtD,kBAAA,QAAQ,CAAC,MAAT,GAAkB,SAAO,CAAC,uBAA1B;AACA;AACD;AACD,aA5CD,CA8CA;AA9CA,iBA+CK,IAAI,KAAK,CAAC,IAAN,IAAc,OAAd,IAAyB,CAAC,eAA9B,EAA+C;AAEnD;AACA,kBAAM,SAAO,GAAG,KAAI,CAAC,YAAL,CAAkB,KAAK,CAAC,IAAxB,EAA8B,OAA9B,CAAhB;;AACA,kBAAI,UAAU,GAAG,SAAO,CAAC,qBAAR,GAAgC,SAAO,CAAC,sBAAzD,CAJmD,CAMnD;;AACA,kBAAI,QAAJ,EAAc;AAEb;AACA,oBAAI,UAAU,GAAG,cAAc,IAAI,KAAI,CAAC,KAAL,CAAW,UAA7B,IAA2C,KAA5D,CAHa,CAKb;;AACA,oBAAM,QAAQ,GAAG,KAAI,CAAC,KAAL,CAAW,QAAX,IAAuB,EAAxC;;AACA,oBAAM,eAAe,GAAG,KAAI,CAAC,YAAL,CAAkB,QAAlB,EAA4B,OAA5B,CAAxB;;AACA,oBAAM,aAAa,GAAG,eAAe,CAAC,qBAAhB,GAAwC,eAAe,CAAC,sBAA9E,CARa,CAUb;;AACA,oBAAK,QAAQ,CAAC,KAAT,GAAiB,UAAlB,GAAgC,QAApC,EAA8C;AAC7C,sBAAM,WAAW,GAAG,QAAQ,GAAG,QAAQ,CAAC,KAApB,GAA4B,aAAhD;AACA,kBAAA,KAAK,CAAC,IAAN,GAAa,KAAI,CAAC,aAAL,CAAmB,OAAnB,EAA4B,KAAK,CAAC,IAAlC,EAAwC,WAAxC,EAAqD,UAArD,CAAb;AACA,kBAAA,KAAK,CAAC,IAAN,IAAc,QAAd;AACA,kBAAA,eAAe,GAAG,IAAlB;AACA;AAED,eAlBD,MAmBK,IAAI,IAAJ,EAAU;AACd;AACA,oBAAK,QAAQ,CAAC,KAAT,GAAiB,UAAlB,GAAgC,QAApC,EAA8C;AAC7C,sBAAM,WAAW,GAAG,QAAQ,GAAG,QAAQ,CAAC,KAAxC;;AACA,sBAAM,OAAO,GAAG,KAAI,CAAC,aAAL,CAAmB,OAAnB,EAA4B,KAAK,CAAC,IAAlC,EAAwC,WAAxC,EAAqD,KAArD,EAA4D,cAA5D,CAAhB;;AAEA,sBAAI,OAAO,IAAI,EAAf,EAAmB;AAClB;AACA,oBAAA,KAAI,CAAC,YAAL,GAAoB,IAApB;AACA,2BAAO,KAAP;AACA,mBAR4C,CAS7C;AAEA;;;AACA,kBAAA,cAAc,GAAG,MAAM,CAAC,KAAP,CAAa,KAAK,GAAG,CAArB,CAAjB,CAZ6C,CAc7C;;AACA,sBAAI,MAAM,CAAC,IAAP,CAAY,OAAZ,KAAwB,MAAM,CAAC,IAAP,CAAY,KAAK,CAAC,IAAlB,CAA5B,EAAqD;AACpD,oBAAA,cAAc,CAAC,OAAf,CAAuB;AACtB,sBAAA,IAAI,EAAE,OADgB;AAEtB,sBAAA,IAAI,EAAE,KAAK,CAAC,IAAN,CAAW,MAAX,CAAkB,OAAO,CAAC,MAA1B;AAFgB,qBAAvB;;AAIA,wBAAI,aAAJ,EAAmB;AAClB,sBAAA,cAAc,CAAC,OAAf,CAAuB;AACtB,wBAAA,IAAI,EAAE,QADgB;AAEtB,wBAAA,IAAI,EAAE;AAFgB,uBAAvB;AAIA;AACD,mBA1B4C,CA4B7C;;;AACA,kBAAA,KAAK,CAAC,IAAN,GAAa,OAAb;AAEA,kBAAA,MAAM,GAAG,EAAT;AACA,kBAAA,eAAe,GAAG,IAAlB;AACA;AAED,eA/DkD,CAiEnD;;;AACA,kBAAI,YAAY,GAAG,CAAnB;AACA,kBAAI,aAAa,GAAG,CAApB;;AACA,kBAAI,YAAY,IAAI,iBAAhB,IAAsC,iBAAiB,GAAG,UAA9D,EAA2E;AAC1E;AACA,oBAAM,SAAS,GAAG,UAAU,GAAG,iBAA/B;;AACA,wBAAQ,KAAI,CAAC,KAAL,CAAW,SAAnB;AACC,uBAAK,OAAL;AACA,uBAAK,KAAL;AACC,oBAAA,YAAY,GAAG,SAAf;AACA;;AACD,uBAAK,QAAL;AACC,oBAAA,YAAY,GAAG,SAAf;AACA,oBAAA,aAAa,GAAG,SAAhB;AACA;;AACD;AACC,oBAAA,aAAa,GAAG,SAAhB;AAVF;;AAYA,gBAAA,UAAU,GAAG,iBAAb;AACA;;AAED,kBAAM,WAAW,GAAG,SAAO,CAAC,uBAAR,GAAkC,SAAO,CAAC,wBAA9D;;AAGA,kBAAI,WAAW,GAAG,QAAQ,CAAC,MAA3B,EAAmC;AAClC,gBAAA,QAAQ,CAAC,MAAT,GAAkB,WAAlB;AACA;;AACD,kBAAI,SAAO,CAAC,uBAAR,GAAkC,QAAQ,CAAC,MAA/C,EAAuD;AACtD,gBAAA,QAAQ,CAAC,MAAT,GAAkB,SAAO,CAAC,uBAA1B;AACA;;AAED,cAAA,QAAQ,CAAC,KAAT,IAAkB,UAAlB;AACA,cAAA,QAAQ,CAAC,IAAT,IAAiB,SAAO,CAAC,qBAAR,GAAgC,YAAjD;AACA,cAAA,QAAQ,CAAC,KAAT,IAAkB,SAAO,CAAC,sBAAR,GAAiC,aAAnD;AACA,cAAA,QAAQ,CAAC,UAAT,CAAoB,IAApB,CAAyB;AACxB,gBAAA,KAAK,EAAE,YADiB;AAExB,gBAAA,IAAI,EAAE,WAFkB;AAGxB,gBAAA,IAAI,EAAE,KAAK,CAAC,IAHY;AAIxB,gBAAA,KAAK,EAAE,UAJiB;AAKxB,gBAAA,MAAM,EAAE,WALgB;AAMxB,gBAAA,IAAI,EAAE,SAAO,CAAC,qBANU;AAOxB,gBAAA,KAAK,EAAE,SAAO,CAAC,sBAPS;AAQxB,gBAAA,MAAM,EAAE,SAAO,CAAC,uBARQ;AASxB,gBAAA,OAAO,EAAE,CATe;AAUxB,gBAAA,OAAO,EAAE;AAVe,eAAzB,EAnGmD,CAgHnD;;AAEA,cAAA,cAAc,GAAG,KAAjB;AAEA;;AAED,gBAAI,cAAJ,EAAoB,CACnB;AACA;;AAED,mBAAO,IAAP,CA5KwC,CA8KxC;AACA,WA/KD;;AAiLA,cAAI,KAAI,CAAC,KAAL,CAAW,UAAX,YAAiC,OAArC,EAA8C;AAC7C,YAAA,QAAQ,CAAC,MAAT,IAAmB,KAAI,CAAC,KAAL,CAAW,UAAX,CAAsB,KAAzC;AACA,YAAA,QAAQ,CAAC,MAAT,IAAmB,KAAI,CAAC,KAAL,CAAW,UAAX,CAAsB,KAAzC;AACA,WAHD,MAIK;AACJ,YAAA,QAAQ,CAAC,MAAT,IAAmB,KAAI,CAAC,KAAL,CAAW,UAAX,IAAyB,GAA5C;AACA,YAAA,QAAQ,CAAC,MAAT,IAAmB,KAAI,CAAC,KAAL,CAAW,UAAX,IAAyB,GAA5C;AACA;;AAED,cAAI,IAAI,GAAG,QAAQ,CAAC,IAApB,EAA0B;AACzB,YAAA,IAAI,GAAG,QAAQ,CAAC,IAAhB;AACA;;AAED,cAAI,IAAI,GAAG,QAAQ,CAAC,KAApB,EAA2B;AAC1B,YAAA,IAAI,GAAG,QAAQ,CAAC,KAAhB;AACA;;AAED,UAAA,KAAI,CAAC,SAAL,CAAgB,IAAhB,CAAqB,QAArB,E,CAEA;;;AACA,UAAA,OAAO,IAAI,QAAQ,CAAC,MAApB,C,CAEA;;AACA,UAAA,MAAM,GAAG,cAAc,IAAI,EAA3B;;;AAvOD,eAAO,MAAM,CAAC,MAAP,GAAgB,CAAvB,EAAwB;;AAwOvB;AAED,OAxPD;;AA0PA,UAAI,CAAC,aAAL,EAAoB;AACnB,QAAA,OAAO,CAAC,OAAR;AACA,QAAA,YAAY,CAAC,OAAb;AACA,OA3RgC,CA6RjC;;;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,SAAjB,EAA4B,UAAC,QAAD,EAAW,MAAX,EAAyB;AACpD,YAAI,kBAAkB,GAAG,CAAzB;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,QAAQ,CAAC,UAArB,EAAiC,UAAC,KAAD,EAAM;AACtC,UAAA,KAAK,CAAC,OAAN,GAAgB,kBAAkB,GAAG,KAAK,CAAC,IAA3B,GAAkC,QAAQ,CAAC,IAA3D;AACA,UAAA,KAAK,CAAC,OAAN,IAAiB,QAAQ,CAAC,MAAT,GAAkB,QAAQ,CAAC,MAAT,IAAmB,KAAI,CAAC,KAAL,CAAW,aAAX,IAA4B,IAA/C,CAAnC;AACA,UAAA,kBAAkB,IAAI,KAAK,CAAC,KAA5B;AACA,SAJD;AAKA,OAPD;AASA,UAAM,MAAM,GAAG;AACd,QAAA,IAAI,EAAE,CAAC,IADO;AAEd,QAAA,GAAG,EAAE,CAFS;AAGd,QAAA,KAAK,EAAE,IAHO;AAId,QAAA,MAAM,EAAE;AAJM,OAAf,CAvSiC,CA8SjC;;AACA,UAAI,iBAAiB,KAAK,MAA1B,EAAkC;AACjC,YAAM,KAAK,GAAG,KAAK,SAAL,CAAe,MAAf,CAAd;;AACA,YAAI,KAAK,GAAG,CAAZ,EAAe;AACd,cAAI,iBAAiB,IAAI,KAAzB,EAAgC;AAC/B,gBAAI,KAAK,CAAC,QAAN,CAAe,KAAK,KAAL,CAAW,QAA1B,KAAwC,KAAK,GAAG,KAAK,KAAL,CAAW,QAA/D,EAA0E;AACzE,mBAAK,YAAL,GAAoB,KAApB;AACA,aAFD,MAGK;AACJ,kBAAI,CAAC,KAAK,cAAN,IAAwB,KAAK,cAAL,IAAuB,CAAnD,EAAsD;AACrD,qBAAK,cAAL,GAAsB,KAAK,KAA3B;AACA;;AACD,mBAAK,KAAL,GAAa,KAAb;AACA,mBAAK,YAAL,GAAoB,IAApB;AACA;AACD,WAXD,MAYK,IAAI,iBAAiB,IAAI,MAAzB,EAAiC;AACrC,iBAAK,YAAL,GAAoB,KAApB;AACA,WAFI,MAGA;AAEJ,oBAAQ,KAAK,KAAL,CAAW,SAAnB;AACC,mBAAK,OAAL;AACA,mBAAK,KAAL;AACC,gBAAA,MAAM,CAAC,IAAP,GAAc,QAAd;AACA,gBAAA,MAAM,CAAC,KAAP,GAAe,CAAf;AACA;;AACD,mBAAK,QAAL;AACC,gBAAA,MAAM,CAAC,IAAP,GAAc,CAAC,QAAD,GAAY,CAA1B;AACA,gBAAA,MAAM,CAAC,KAAP,GAAe,QAAQ,GAAG,CAA1B;AACA;;AACD;AACC,gBAAA,MAAM,CAAC,IAAP,GAAc,CAAd;AACA,gBAAA,MAAM,CAAC,KAAP,GAAe,QAAf;AAZF;;AAeA,iBAAK,KAAL,GAAa,KAAK,cAAL,IAAuB,CAApC;AACA,iBAAK,cAAL,GAAsB,SAAtB;AACA,iBAAK,YAAL,GAAoB,IAApB;AACA;AACD,SArCD,MAsCK;AACJ,eAAK,KAAL,GAAa,KAAK,cAAL,IAAuB,CAApC;AACA,eAAK,cAAL,GAAsB,SAAtB;AACA,eAAK,YAAL,GAAoB,IAApB;AACA;AACD;;AAED,MAAA,OAAO,CAAC,OAAR;AACA,MAAA,YAAY,CAAC,OAAb;AAEA,aAAO,MAAP;AACA;;;;;;WAED,UAAoB,MAApB,EAAmC;AAClC,UAAM,IAAI,GAAG,KAAK,KAAL,CAAW,QAAxB;AACA,UAAM,IAAI,GAAG,KAAK,KAAL,CAAW,SAAxB;;AACA,UAAI,CAAC,KAAK,CAAC,QAAN,CAAe,IAAf,CAAD,IAAyB,CAAC,KAAK,CAAC,QAAN,CAAe,IAAf,CAA9B,EAAoD;AACnD,eAAO,CAAP;AACA;;AACD,UAAM,CAAC,GAAG,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,IAAhC;AACA,UAAM,CAAC,GAAG,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,GAAjC;AACA,aAAO,IAAI,CAAC,GAAL,CAAS,IAAK,GAAG,CAAR,IAAa,CAAtB,EAAyB,IAAK,GAAG,CAAR,IAAa,CAAtC,CAAP;AACA;;;;;;WAED,UAAwB,OAAxB,EAA2D,IAA3D,EAAyE,QAAzE,EAA2F,UAA3F,EAAwH,kBAAxH,EAA0J;AAA/D,UAAA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,UAAA,GAAA,KAAA;AAA2B;;AAAE,UAAA,kBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,kBAAA,GAAA,IAAA;AAAkC;;AACzJ,UAAI,KAAJ;;AACA,SAAG;AACF,YAAI,UAAJ,EAAgB;AACf,UAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACA,SAFD,MAGK;AACJ,cAAI,GAAG,GAAG,IAAI,CAAC,OAAL,CAAa,qCAAb,EAAoD,EAApD,CAAV;;AACA,cAAI,GAAG,IAAI,EAAP,IAAa,kBAAjB,EAAqC;AACpC,YAAA,UAAU,GAAG,IAAb;AACA,WAFD,MAGK;AACJ,YAAA,IAAI,GAAG,GAAP;AACA;AACD;;AACD,YAAM,OAAO,GAAG,KAAK,YAAL,CAAkB,IAAlB,EAAwB,OAAxB,CAAhB;;AACA,QAAA,KAAK,GAAG,OAAO,CAAC,qBAAR,GAAgC,OAAO,CAAC,sBAAhD;AACA,OAfD,QAeU,KAAK,GAAG,QAAT,IAAsB,IAAI,IAAI,EAfvC;;AAgBA,aAAO,IAAP;AACA;;;;;;WAED,UAAuB,IAAvB,EAAqC,OAArC,EAAsE;AACrE,UAAI,OAAO,GAAG,OAAO,CAAC,WAAR,CAAoB,IAApB,CAAd;AACA,UAAI,WAAW,GAAQ,EAAvB;;AACA,UAAI,OAAO,CAAC,uBAAR,IAAmC,IAAvC,EAA6C;AAC5C,YAAM,GAAG,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ;AACA,QAAA,GAAG,CAAC,SAAJ,GAAgB,IAAhB;AACA,QAAA,GAAG,CAAC,KAAJ,CAAU,UAAV,GAAuB,QAAvB;AACA,QAAA,GAAG,CAAC,KAAJ,CAAU,QAAV,GAAqB,UAArB;AACA,QAAA,GAAG,CAAC,KAAJ,CAAU,GAAV,GAAgB,aAAhB;AACA,QAAA,GAAG,CAAC,KAAJ,CAAU,UAAV,GAAuB,KAAK,KAAL,CAAW,UAAX,IAAyB,EAAhD;AACA,QAAA,GAAG,CAAC,KAAJ,CAAU,QAAV,GAAqB,KAAK,KAAL,CAAW,QAAX,GAAsB,EAA3C;AACA,QAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B;AACA,YAAM,IAAI,GAAG,GAAG,CAAC,qBAAJ,EAAb;AACA,QAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,GAA1B;AACA,YAAM,CAAC,GAAG,IAAI,CAAC,MAAf;AACA,YAAM,GAAC,GAAG,OAAO,CAAC,KAAlB;AACA,YAAI,IAAI,GAAG,CAAX;AACA,YAAI,KAAK,GAAG,GAAZ;AAEA,QAAA,WAAW,GAAG;AACb,UAAA,uBAAuB,EAAE,CADZ;AAEb,UAAA,wBAAwB,EAAE,CAFb;AAGb,UAAA,qBAAqB,EAAE,IAHV;AAIb,UAAA,sBAAsB,EAAE,KAJX;AAKb,UAAA,qBAAqB,EAAE,CALV;AAMb,UAAA,sBAAsB,EAAE,CANX;AAOb,UAAA,KAAK,EAAE;AAPM,SAAd,CAhB4C,CAyB5C;AACA,OA1BD,MA2BK;AACJ,QAAA,WAAW,GAAG;AACb,UAAA,uBAAuB,EAAE,OAAO,CAAC,uBADpB;AAEb,UAAA,wBAAwB,EAAE,OAAO,CAAC,wBAFrB;AAGb,UAAA,qBAAqB,EAAE,OAAO,CAAC,qBAHlB;AAIb,UAAA,sBAAsB,EAAE,OAAO,CAAC,sBAJnB;AAKb,UAAA,qBAAqB,EAAE,OAAO,CAAC,uBALlB;AAMb,UAAA,sBAAsB,EAAE,OAAO,CAAC,wBANnB;AAOb,UAAA,KAAK,EAAE,OAAO,CAAC;AAPF,SAAd;AASA;;AAED,UAAM,CAAC,GAAG,OAAO,CAAC,KAAlB;;AACA,cAAQ,KAAK,KAAL,CAAW,SAAnB;AACC,aAAK,OAAL;AACA,aAAK,KAAL;AACC,UAAA,WAAW,CAAC,qBAAZ,GAAoC,CAApC;AACA,UAAA,WAAW,CAAC,sBAAZ,GAAqC,CAArC;AACA;;AACD,aAAK,QAAL;AACC,UAAA,WAAW,CAAC,qBAAZ,GAAoC,CAAC,GAAG,CAAxC;AACA,UAAA,WAAW,CAAC,sBAAZ,GAAqC,CAAC,GAAG,CAAzC;AACA;;AACD;AACC,UAAA,WAAW,CAAC,qBAAZ,GAAoC,CAApC;AACA,UAAA,WAAW,CAAC,sBAAZ,GAAqC,CAArC;AAZF;;AAeA,aAAO,WAAP;AACA;;AAEF,SAAA,UAAA;AAAC,CAlqBD,CAAgC,mBAAhC,CAAA;;;AAoqBA;;AAEG;;AACH,IAAA,eAAA;AAAA;AAAA,YAAA;AAAA,WAAA,eAAA,GAAA;AACC;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,MAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,UAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,aAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,aAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA,EAbD,CAcC;AACA;;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAuC,OAAO,CAAC,GAAD;AAA9C,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAgC;AAAhC,KAAA,EAjBD,CAkBC;AACA;AACA;AACA;AACA;;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,mBAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA2E;AAA3E,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA8B;AAA9B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,UAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA2B;AAA3B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,UAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,UAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,kBAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAoC;AAApC,KAAA;AACA;;AAAD,SAAA,eAAA;AAAC,CAhCD,EAAA;;;AAkCA;;AAEG;;AACH,IAAA,gBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAAtC,WAAA,gBAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACC,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,UAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA+E;AAA/E,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,QAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,QAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA0B;AAA1B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,aAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAqD;AAArD,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA0B;AAA1B,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAiC;AAAjC,KAAA;;AA8XA;;;;;;WA5XA,UAAe,WAAf,EAAuC;AACtC,cAAQ,KAAK,QAAb;AACC,aAAK,UAAL;AACC,eAAK,eAAL,CAAqB,WAArB;;AACA;;AACD;AACC,UAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAAc,WAAd;;AACA;AANF;AAQA;;;;;;WAED,UAAuB,WAAvB,EAA+C;AAC9C,UAAM,KAAK,GAAG,KAAK,MAAL,IAAe,WAA7B;;AAEA,WAAK,UAAL,CAAgB,KAAhB;;AAEA,UAAM,WAAW,GAAG,KAAK,cAAL,EAApB;;AACA,UAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,UAAM,UAAU,GAAG,KAAK,CAAC,KAAzB;AACA,UAAM,YAAY,GAAG,KAAK,SAAL,CAAe,aAApC,CAR8C,CAU9C;;AACA,MAAA,OAAO,CAAC,IAAR;;AACA,UAAI,WAAJ,EAAiB;AAChB,QAAA,YAAY,CAAC,IAAb;AACA,OAd6C,CAgB9C;;;AACA,UAAI,MAAM,GAAI,KAAK,MAAL,IAAe,CAA7B;AACA,UAAI,UAAU,GAAI,KAAK,UAAL,IAAmB,CAArC;AACA,UAAI,UAAU,GAAG,CAAjB;AACA,UAAI,WAAW,GAAG,KAAK,WAAvB;AACA,UAAI,MAAM,GAAG,WAAW,IAAI,MAAf,GAAwB,MAAxB,GAAiC,WAAW,IAAI,QAA7D;AACA,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,UAAM,KAAK,GAAG,KAAK,KAAL,CAAW,SAAX,IAAwB,MAAtC;AACA,UAAM,OAAO,GAAG,KAAK,OAAL,IAAgB,CAAhC;AACA,UAAI,SAAS,GAAG,KAAK,IAAI,MAAT,GAAkB,CAAlB,GAAsB,CAAC,CAAvC;AACA,UAAM,aAAa,GAAG,CAAC,KAAK,aAA5B,CA1B8C,CA4B9C;;AACA,UAAI,CAAC,KAAK,SAAV,EAAqB;AACpB,aAAK,QAAL,CAAc,KAAd;AACA,OA/B6C,CAiC9C;;;AACA,UAAI,MAAM,IAAI,MAAd,EAAsB;AACrB;AACA,YAAI,UAAQ,GAAG,CAAf;AACA,YAAI,QAAQ,GAAG,CAAf;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,KAAK,SAAjB,EAA6B,UAAC,IAAD,EAAO,MAAP,EAAa;AACzC,cAAM,UAAU,GAAG,UAAU,GAAI,IAAI,CAAC,KAAL,IAAc,MAAM,GAAG,IAAI,CAAC,MAA5B,CAAD,GAAwC,CAAxC,GAA4C,CAAC,SAA7E;;AACA,cAAI,UAAU,GAAG,UAAjB,EAA2B;AAC1B,YAAA,UAAQ,GAAG,UAAX;AACA;AACD,SALD;;AAMA,YAAI,KAAK,IAAI,MAAb,EAAqB;AACpB,UAAA,QAAQ,GAAG,CAAC,UAAQ,GAAG,UAAU,GAAG,CAAzB,IAA8B,KAAK,CAAC,OAA/C;AACA,SAFD,MAGK,IAAI,KAAK,IAAI,OAAb,EAAsB;AAC1B,UAAA,QAAQ,GAAG,CAAC,UAAQ,GAAG,UAAU,GAAG,CAAzB,IAA8B,KAAK,CAAC,OAA/C;AACA,SAFI,MAGA;AACJ,UAAA,QAAQ,GAAG,UAAU,GAAG,KAAK,CAAC,OAA9B;AACA;;AACD,QAAA,QAAQ,GAAG,KAAK,CAAC,cAAN,CAAqB,QAArB,CAAX;AACA,QAAA,MAAM,GAAI,QAAQ,IAAI,GAAb,IAAsB,QAAQ,IAAI,EAA3C;AACA;;AAED,UAAI,MAAM,IAAI,IAAV,IAAkB,aAAtB,EAAqC;AACpC,aAAK,SAAL,CAAgB,OAAhB;;AACA,aAAK,aAAL,GAAqB,IAArB;AACA,OA5D6C,CA8D9C;AACA;AACA;AAEA;;;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,SAAjB,EAA6B,UAAC,IAAD,EAAO,MAAP,EAAa;AAEzC,YAAM,UAAU,GAAG,IAAI,CAAC,MAAxB,CAFyC,CAIzC;AACA;;AACA,YAAI,CAAC,MAAL,EAAa;AACZ,UAAA,MAAM,IAAI,UAAV;AACA,SARwC,CAUzC;;;AACA,YAAI,CAAE,SAAS,IAAI,CAAC,CAAd,IAAmB,MAApB,IAAgC,SAAS,IAAI,CAAb,IAAkB,CAAC,MAApD,KAAgE,aAApE,EAAmF;AAClF,UAAA,IAAI,CAAC,UAAL,CAAgB,OAAhB;AACA,SAbwC,CAezC;;;AACA,YAAI,cAAc,GAAG,UAArB;AACA,QAAA,UAAU,GAAG,CAAb,CAjByC,CAmBzC;;AACA,YAAI,KAAK,IAAI,QAAb,EAAuB;AACtB,UAAA,cAAc,IAAK,IAAI,CAAC,KAAL,IAAc,MAAM,GAAG,UAAvB,CAAD,GAAuC,CAAvC,GAA2C,CAAC,SAA9D;AACA,UAAA,UAAU,GAAG,cAAc,GAAG,UAA9B;AACA,SAvBwC,CAyBzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAA,cAAc,IAAK,IAAI,CAAC,EAAL,IAAW,MAAM,GAAG,CAAH,GAAO,CAAxB,CAAnB,CArCyC,CAqCO;AAEhD;;AACA,QAAA,OAAO,CAAC,IAAR;;AACA,YAAI,WAAJ,EAAiB;AAChB,UAAA,YAAY,CAAC,IAAb;AACA,SA3CwC,CA6CzC;;;AACA,QAAA,OAAO,CAAC,MAAR,CAAe,cAAf;;AACA,YAAI,WAAJ,EAAiB;AAChB,UAAA,YAAY,CAAC,MAAb,CAAoB,cAApB;AACA;;AAED,YAAI,UAAU,GAAG,CAAjB;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,UAAjB,EAA6B,UAAC,KAAD,EAAQ,MAAR,EAAc;AAE1C;AACA,cAAM,IAAI,GAAG,KAAK,CAAC,IAAnB;AACA,cAAM,SAAS,GAAG,KAAK,CAAC,KAAxB,CAJ0C,CAM1C;;AACA,UAAA,UAAU,GAAI,SAAS,GAAG,CAAb,IAAmB,MAAM,GAAG,UAA5B,IAA0C,SAAvD;AACA,UAAA,OAAO,CAAC,MAAR,CAAe,UAAf;;AACA,cAAI,WAAJ,EAAiB;AAChB,YAAA,YAAY,CAAC,MAAb,CAAoB,UAApB;AACA,WAXyC,CAa1C;;;AACA,cAAI,KAAK,CAAC,KAAV,EAAiB;AAChB,YAAA,OAAO,CAAC,IAAR;AACA,YAAA,YAAY,CAAC,IAAb;AAEA,YAAA,OAAO,CAAC,IAAR,GAAe,KAAK,CAAC,KAArB;;AACA,gBAAI,WAAJ,EAAiB;AAChB,cAAA,YAAY,CAAC,IAAb,GAAoB,KAAK,CAAC,KAA1B;AACA;AACD;;AAED,cAAI,KAAK,CAAC,IAAV,EAAgB;AACf,YAAA,OAAO,CAAC,IAAR;AACA,YAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,CAAC,IAAN,CAAW,KAAX,EAApB,CAFe,CAGf;AACA,WA5ByC,CA8B1C;;;AACA,UAAA,OAAO,CAAC,YAAR,GAAuB,QAAvB;AACA,UAAA,OAAO,CAAC,SAAR,GAAoB,QAApB;;AACA,cAAI,WAAJ,EAAiB;AAChB,YAAA,YAAY,CAAC,YAAb,GAA4B,QAA5B;AACA,YAAA,YAAY,CAAC,SAAb,GAAyB,QAAzB;AACA,WApCyC,CAsC1C;;;AACA,cAAI,UAAJ,EAAgB;AACf,YAAA,OAAO,CAAC,QAAR,CAAiB,IAAjB,EAAuB,CAAvB,EAA0B,CAAC,MAAM,GAAG,CAAH,GAAO,CAAC,CAAf,KAAqB,IAAI,MAAJ,GAAa,UAAU,GAAG,CAA/C,CAA1B;AACA;;AACD,cAAI,WAAJ,EAAiB;AAChB,YAAA,YAAY,CAAC,QAAb,CAAsB,IAAtB,EAA4B,CAA5B,EAA+B,CAAC,MAAM,GAAG,CAAH,GAAO,CAAC,CAAf,KAAqB,IAAI,MAAJ,GAAa,UAAU,GAAG,CAA/C,CAA/B;AACA;;AAED,cAAI,KAAK,CAAC,IAAV,EAAgB;AACf,YAAA,OAAO,CAAC,OAAR,GADe,CAEf;AACA,WAjDyC,CAmD1C;;;AACA,cAAI,KAAK,CAAC,KAAV,EAAiB;AAChB,YAAA,OAAO,CAAC,OAAR;AACA,YAAA,YAAY,CAAC,OAAb;AACA,WAvDyC,CAyD1C;;;AACA,UAAA,UAAU,GAAG,CAAC,SAAS,GAAG,CAAZ,GAAgB,OAAjB,KAA6B,MAAM,GAAG,UAAtC,IAAoD,SAAjE;AACA,UAAA,OAAO,CAAC,MAAR,CAAe,UAAf;;AACA,cAAI,WAAJ,EAAiB;AAChB,YAAA,YAAY,CAAC,MAAb,CAAoB,UAApB;AACA;AAED,SAhED,EApDyC,CAsHzC;;AACA,QAAA,OAAO,CAAC,OAAR;;AACA,YAAI,WAAJ,EAAiB;AAChB,UAAA,YAAY,CAAC,OAAb;AACA,SA1HwC,CA4HzC;;;AACA,YAAI,MAAJ,EAAY;AACX,UAAA,MAAM,IAAI,UAAV;AACA;AAED,OAjID,EAnE8C,CAsM9C;;AACA,MAAA,OAAO,CAAC,OAAR;;AACA,UAAI,WAAJ,EAAiB;AAChB,QAAA,YAAY,CAAC,OAAb;AACA;AACD;;;;;;WAED,UAAgB,KAAhB,EAAkC;AACjC,cAAQ,KAAK,QAAb;AACC,aAAK,UAAL;AACC,iBAAO,KAAK,gBAAL,CAAsB,KAAtB,CAAP;;AACD;AACC,iBAAO,MAAA,CAAA,SAAA,CAAM,QAAN,CAAc,IAAd,CAAc,IAAd,EAAe,KAAf,CAAP;AAJF;AAMA;;;;;;WAED,UAAwB,KAAxB,EAA0C;AAA1C,UAAA,KAAA,GAAA,IAAA;;AACC,UAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,UAAM,YAAY,GAAG,KAAK,SAAL,CAAe,aAApC,CAFyC,CAIzC;;AACA,WAAK,SAAL,GAAiB,EAAjB;AACA,WAAK,aAAL,GAAqB,KAArB,CANyC,CAQzC;;AACA,MAAA,OAAO,CAAC,IAAR;AACA,MAAA,YAAY,CAAC,IAAb;;AACA,WAAK,UAAL,CAAgB,KAAhB,EAAuB,IAAvB,EAXyC,CAazC;;;AACA,UAAM,KAAK,GAAG,KAAK,IAAL,CAAU,QAAV,GAAqB,OAArB,CAA6B,KAA7B,EAAoC,EAApC,EAAwC,KAAxC,CAA8C,IAA9C,CAAd;AACA,UAAI,aAAa,GAAG,IAApB,CAfyC,CAiBzC;;AACA,UAAI,OAAO,GAAG,CAAd;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,UAAC,IAAD,EAAO,MAAP,EAAa;AAE/B;AACA,YAAI,MAAM,GAAG,aAAa,CAAC,KAAd,CAAoB,IAApB,EAA0B,KAA1B,EAAiC,KAAI,CAAC,KAAL,CAAW,gBAA5C,CAAb,CAH+B,CAK/B;;AACA,YAAI,QAAQ,GAAU;AACrB,UAAA,OAAO,EAAE,OADY;AAErB,UAAA,MAAM,EAAE,CAFa;AAGrB,UAAA,KAAK,EAAE,CAHc;AAIrB,UAAA,MAAM,EAAE,CAJa;AAKrB,UAAA,IAAI,EAAE,CALe;AAMrB,UAAA,KAAK,EAAE,CANc;AAOrB,UAAA,UAAU,EAAE;AAPS,SAAtB;AAUA,YAAI,YAAJ;AACA,YAAI,WAAJ;AACA,YAAI,iBAAJ,CAlB+B,CAoB/B;;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,UAAC,KAAD,EAAQ,MAAR,EAAc;AAEjC;AACA,cAAI,KAAK,CAAC,IAAN,IAAc,QAAlB,EAA4B;AAC3B,gBAAI,KAAK,CAAC,IAAN,IAAc,KAAlB,EAAyB;AACxB,kBAAI,CAAC,aAAL,EAAoB;AACnB,gBAAA,OAAO,CAAC,OAAR;AACA,gBAAA,YAAY,CAAC,OAAb;AACA,gBAAA,aAAa,GAAG,IAAhB;AACA;;AACD,cAAA,WAAW,GAAG,SAAd;AACA,cAAA,YAAY,GAAG,SAAf;AACA,cAAA,iBAAiB,GAAG,SAApB;AACA,aATD,MAUK;AACJ,kBAAI,MAAM,GAAG,aAAa,CAAC,YAAd,CAA2B,KAAK,CAAC,IAAjC,CAAb;;AACA,kBAAM,SAAS,GAAG,KAAI,CAAC,aAAL,CAAmB,MAAnB,CAAlB;;AACA,cAAA,OAAO,CAAC,IAAR;AACA,cAAA,YAAY,CAAC,IAAb;AACA,cAAA,OAAO,CAAC,IAAR,GAAe,SAAf;AACA,cAAA,YAAY,GAAG,SAAf;;AACA,kBAAI,MAAM,CAAC,IAAX,EAAiB;AAChB,gBAAA,WAAW,GAAU,MAAM,CAAC,IAA5B;AACA;;AACD,kBAAU,MAAO,CAAC,KAAlB,EAAyB;AACxB,gBAAA,iBAAiB,GAAG,KAAK,CAAC,QAAN,CAAqB,MAAO,CAAC,KAA7B,CAApB;AACA;;AACD,cAAA,aAAa,GAAG,KAAhB;AACA;AACD,WA1BD,CA4BA;AA5BA,eA6BK,IAAI,KAAK,CAAC,IAAN,IAAc,OAAlB,EAA2B;AAE/B;AACA,iBAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,IAAN,CAAW,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAE3C,kBAAM,IAAI,GAAG,KAAK,CAAC,IAAN,CAAW,CAAX,CAAb,CAF2C,CAI3C;;AACA,kBAAM,OAAO,GAAG,KAAI,CAAC,YAAL,CAAkB,IAAlB,EAAwB,OAAxB,CAAhB;;AACA,kBAAI,UAAU,GAAG,OAAO,CAAC,KAAzB,CAN2C,CAQ3C;;AACA,kBAAI,YAAY,IAAI,iBAAhB,IAAsC,iBAAiB,GAAG,UAA9D,EAA2E;AAC1E,gBAAA,UAAU,GAAG,iBAAb;AACA;;AAED,kBAAM,WAAW,GAAG,OAAO,CAAC,uBAAR,GAAkC,OAAO,CAAC,wBAA9D;;AACA,kBAAI,WAAW,GAAG,QAAQ,CAAC,MAA3B,EAAmC;AAClC,gBAAA,QAAQ,CAAC,MAAT,GAAkB,WAAlB;AACA;;AACD,kBAAI,OAAO,CAAC,uBAAR,GAAkC,QAAQ,CAAC,MAA/C,EAAuD;AACtD,gBAAA,QAAQ,CAAC,MAAT,GAAkB,OAAO,CAAC,uBAA1B;AACA;;AAED,cAAA,QAAQ,CAAC,KAAT,IAAkB,UAAlB;AACA,cAAA,QAAQ,CAAC,IAAT,IAAiB,OAAO,CAAC,qBAAzB;AACA,cAAA,QAAQ,CAAC,KAAT,IAAkB,OAAO,CAAC,sBAA1B;AACA,cAAA,QAAQ,CAAC,UAAT,CAAoB,IAApB,CAAyB;AACxB,gBAAA,KAAK,EAAE,YADiB;AAExB,gBAAA,IAAI,EAAE,WAFkB;AAGxB,gBAAA,IAAI,EAAE,IAHkB;AAIxB,gBAAA,KAAK,EAAE,UAJiB;AAKxB,gBAAA,MAAM,EAAE,WAAW,GAAG,OAAO,CAAC,wBALN;AAMxB,gBAAA,IAAI,EAAE,OAAO,CAAC,qBANU;AAOxB,gBAAA,KAAK,EAAE,OAAO,CAAC,sBAPS;AAQxB,gBAAA,MAAM,EAAE,OAAO,CAAC,uBARQ;AASxB,gBAAA,OAAO,EAAE,CATe;AAUxB,gBAAA,OAAO,EAAE;AAVe,eAAzB;AAaA;AAED;AACD,SA3ED;;AA6EA,YAAI,KAAI,CAAC,KAAL,CAAW,UAAX,YAAiC,OAArC,EAA8C;AAC7C,UAAA,QAAQ,CAAC,MAAT,IAAmB,KAAI,CAAC,KAAL,CAAW,UAAX,CAAsB,KAAzC;AACA,SAFD,MAGK;AACJ,UAAA,QAAQ,CAAC,MAAT,IAAmB,KAAI,CAAC,KAAL,CAAW,UAAX,IAAyB,GAA5C;AACA;;AAED,QAAA,KAAI,CAAC,SAAL,CAAgB,IAAhB,CAAqB,QAArB,EAzG+B,CA2G/B;;;AACA,QAAA,OAAO,IAAI,QAAQ,CAAC,MAApB;AAGA,OA/GD;;AAiHA,UAAI,CAAC,aAAL,EAAoB;AACnB,QAAA,OAAO,CAAC,OAAR;AACA,QAAA,YAAY,CAAC,OAAb;AACA,OAvIwC,CAyIzC;;;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,SAAjB,EAA4B,UAAC,QAAD,EAAS;AACpC,QAAA,MAAM,CAAC,IAAP,CAAY,QAAQ,CAAC,UAArB,EAAiC,UAAC,KAAD,EAAM;AACtC,UAAA,KAAK,CAAC,OAAN,IAAiB,IAAI,CAAC,KAAL,CAAW,CAAC,QAAQ,CAAC,MAAT,GAAkB,KAAK,CAAC,MAAxB,IAAkC,QAAQ,CAAC,MAAT,GAAkB,KAAK,CAAC,MAA1D,CAAD,IAAsE,CAAjF,CAAjB;AACA,SAFD;AAGA,OAJD;AAMA,MAAA,OAAO,CAAC,OAAR;AACA,MAAA,YAAY,CAAC,OAAb;AAEA,aAAO;AACN,QAAA,IAAI,EAAE,CADA;AAEN,QAAA,GAAG,EAAE,CAFC;AAGN,QAAA,KAAK,EAAE,CAHD;AAIN,QAAA,MAAM,EAAE;AAJF,OAAP;AAMA;;AAEF,SAAA,gBAAA;AAAC,CAtYD,CAAsC,UAAtC,CAAA;;;AAwYA;;AAEG;;AACH,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAchC,WAAA,WAAA,CAAY,QAAZ,EAAsC,KAAtC,EAAyE;AAAzE,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,QAAN,KAAe,IADhB;;AAbA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,OAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,QAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,OAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,aAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAIC,IAAA,KAAI,CAAC,KAAL,GAAa,KAAb;;AACA;;;;;;WAED,YAAA;AACC,UAAI,CAAC,KAAK,YAAV,EAAwB;AAGvB,YAAI,CAAC,GAAG,CAAR;AACA,YAAI,CAAC,GAAG,CAAR;;AAEA,YAAI,KAAK,KAAT,EAAgB;AACf,UAAA,CAAC,GAAG,KAAK,KAAT;AACA;;AACD,YAAI,KAAK,MAAT,EAAiB;AAChB,UAAA,CAAC,GAAG,KAAK,MAAT;AACA;;AAED,aAAK,YAAL,GAAoB;AACnB,UAAA,IAAI,EAAE,CADa;AAEnB,UAAA,GAAG,EAAE,CAFc;AAGnB,UAAA,KAAK,EAAE,CAHY;AAInB,UAAA,MAAM,EAAE;AAJW,SAApB;;AAOA,aAAK,UAAL,CAAgB,KAAK,YAArB;AACA;;AACD,aAAO,KAAK,YAAZ;AACA;;;;;;WAED,UAAkB,WAAlB,EAA0C;AACzC,MAAA,MAAA,CAAA,SAAA,CAAM,OAAN,CAAa,IAAb,CAAa,IAAb,EAAc,WAAd;;AAEA,UAAI,KAAK,KAAT,EAAgB;AACf,YAAM,KAAK,GAAG,KAAK,MAAL,IAAe,WAA7B;;AAEA,YAAI,KAAK,OAAL,KAAiB,SAArB,EAAgC;AAC/B,eAAK,OAAL,GAAe,SAAS,CAAC,KAAK,KAAN,CAAxB;AACA,UAAA,KAAK,CAAC,OAAN,GAAgB,IAAhB;AACA;;AAED,YAAI,KAAK,OAAL,IAAgB,KAAK,SAAL,CAAe,YAAnC,EAAiD;AAChD;AACA;;AAED,YAAI,KAAK,CAAC,KAAV,EAAiB;AAEhB,cAAI,KAAK,WAAT,EAAsB;AACrB,YAAA,KAAK,CAAC,OAAN,CAAc,WAAd,GAA4B,KAAK,WAAL,CAAiB,KAAjB,CAAuB,KAAK,aAAL,IAAsB,CAA7C,CAA5B;AACA;;AACD,cAAI,KAAK,UAAT,EAAqB;AACpB,YAAA,KAAK,CAAC,OAAN,CAAc,UAAd,GAA2B,KAAK,UAAhC;AACA;;AACD,cAAI,KAAK,aAAT,EAAwB;AACvB,YAAA,KAAK,CAAC,OAAN,CAAc,aAAd,GAA8B,KAAK,aAAnC;AACA;;AACD,cAAI,KAAK,aAAT,EAAwB;AACvB,YAAA,KAAK,CAAC,OAAN,CAAc,aAAd,GAA8B,KAAK,aAAnC;AACA;;AAED,cAAM,KAAK,GAAG,KAAK,KAAL,IAAc,KAAK,KAAL,CAAW,YAAvC;AACA,cAAM,MAAM,GAAG,KAAK,MAAL,IAAe,KAAK,KAAL,CAAW,aAAzC;AAEA,UAAA,KAAK,CAAC,OAAN,CAAc,SAAd,CAAwB,KAAK,KAA7B,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,KAA1C,EAAiD,MAAjD;AACA;;AAED,YAAI,KAAK,WAAL,IAAoB,KAAK,cAAL,EAAxB,EAA+C;AAC9C,cAAM,IAAI,GAAG,KAAK,QAAL,CAAc,KAAK,KAAnB,CAAb;;AAEA,eAAK,SAAL,CAAe,aAAf,CAA6B,SAA7B,CAAuC,IAAvC,EAA6C,CAA7C,EAAgD,CAAhD;AACA;AACD;AACD;;;;;;WAED,YAAA;AACC,MAAA,MAAA,CAAA,SAAA,CAAM,KAAN,CAAW,IAAX,CAAW,IAAX;;AACA,WAAK,KAAL,GAAa,SAAb;AACA,WAAK,UAAL,GAAkB,SAAlB;AACA;;;;;;WAED,UAAmB,KAAnB,EAA0C;AACzC,UAAI,KAAK,UAAL,KAAoB,SAAxB,EAAmC;AAClC,YAAM,KAAK,GAAG,KAAK,KAAL,IAAc,KAAK,CAAC,YAAlC;AACA,YAAM,MAAM,GAAG,KAAK,MAAL,IAAe,KAAK,CAAC,aAApC,CAFkC,CAIlC;;AACA,YAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,QAAA,MAAM,CAAC,KAAP,GAAe,KAAf;AACA,QAAA,MAAM,CAAC,MAAP,GAAgB,MAAhB;AAEA,YAAM,OAAO,GAAG,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAhB;AAEA,QAAA,OAAO,CAAC,qBAAR,GAAgC,KAAhC;AAEA,QAAA,OAAO,CAAC,SAAR,GAAoB,KAAK,WAAL,EAApB;AACA,QAAA,OAAO,CAAC,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,KAAvB,EAA8B,MAA9B;;AAEA,YAAI,CAAC,SAAS,CAAC,KAAD,CAAd,EAAuB;AACtB,UAAA,OAAO,CAAC,wBAAR,GAAmC,gBAAnC;AACA,UAAA,OAAO,CAAC,SAAR,CAAkB,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,KAA/B,EAAsC,MAAtC;AACA;;AAED,aAAK,UAAL,GAAkB,MAAlB;AACA;;AAED,aAAO,KAAK,UAAZ;AACA;;AAEF,SAAA,WAAA;AAAC,CA3HD,CAAiC,mBAAjC,CAAA;;;AA6HA;;AAEG;;AACH,IAAA,mBAAA;AAAA;AAAA,YAAA;AAKC,WAAA,mBAAA,CAAmB,KAAnB,EAAoC,KAApC,EAAiD;;;;;aAA9B;;;;;;aAAiB;;AAJpC,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,IAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA4B;AAA5B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,QAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAyB;AAAzB,KAAA;;AAGC,QAAI,MAAM,CAAC,QAAP,CAAgB,aAAhB,KAAkC,KAAK,YAAY,KAAvD,EAA8D;AAC7D,WAAK,EAAL,GAAU,KAAK,CAAC,UAAhB;AAEA,KAHD,MAGO;AACN,WAAK,EAAL,GAAU,IAAV;AACA;AACD;;AACF,SAAA,mBAAA;AAAC,CAbD,EAAA;;;AAmCA;;AAEG;;AACH,IAAA,cAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AA0CnC,WAAA,cAAA,GAAA;AAAA,QAAA,KAAA,GACC,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,YAAA,CACL,CADD,KACE,IAFH;;AAzCA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,MAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA2B,QAAQ,CAAC,aAAT,CAAuB,KAAvB;AAA3B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAmC,QAAQ,CAAC,aAAT,CAAuB,KAAvB;AAAnC,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,QAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAoC;AAApC,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA0C;AAA1C,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAmC,KAAI,CAAC,QAAL,CAAc,CAAd;AAAnC,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,gBAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA8C,QAAQ,CAAC,aAAT,CAAuB,QAAvB;AAA9C,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,iBAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAsD,KAAI,CAAC,cAAL,CAAoB,UAApB,CAA+B,IAA/B;AAAtD,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,QAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA2B;AAA3B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA4B;AAA5B,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAiC;AAAjC,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,eAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAkC;AAAlC,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA4B,MAAM,CAAC;AAAnC,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,qBAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAsC;AAAtC,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA2D;AAA3D,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAsE;AAAtE,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,UAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA6B;AAA7B,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAgE;AAAhE,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,mBAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAmC;AAAnC,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,cAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA+B;AAA/B,KAAA,EAYA,CAVA;;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA6C,IAAI,GAAJ;AAA7C,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,WAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAkE;AAAlE,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,YAAA,EAAA;sBAAA;wBAAA;oBAAA;aAAmE;AAAnE,KAAA;AAEA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,uBAAA,EAAA;sBAAA;wBAAA;oBAAA;;AAAA,KAAA;AACA,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,qBAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA2C,IAAI,SAAJ,CAAc,YAAA;AACxD,QAAA,KAAI,CAAC,wBAAL,CAA8B,KAAI,CAAC,qBAAnC;AACA,OAF0C;AAA3C,KAAA;;AAQC,IAAA,KAAI,CAAC,IAAL,CAAU,WAAV,CAAsB,KAAI,CAAC,SAA3B,EAJD,CAMC;;;AACA,IAAA,KAAI,CAAC,UAAL,GAAkB,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAlB;AACA,IAAA,KAAI,CAAC,aAAL,GAAqB,KAAI,CAAC,UAAL,CAAgB,UAAhB,CAA2B,IAA3B,EAAiC;AAAE,MAAA,KAAK,EAAE;AAAT,KAAjC,CAArB;AACA,IAAA,KAAI,CAAC,aAAL,CAAmB,qBAAnB,GAA2C,KAA3C,CATD,CAWC;;AACA,IAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,UAAC,GAAD,EAAI;AACrC,MAAA,KAAI,CAAC,UAAL,GAAkB,MAAM,CAAC,gBAAzB;AACA,KAFD,EAZD,CAgBC;AACA;;AACA,QAAI,MAAM,CAAC,QAAP,CAAgB,aAAhB,CAAJ,EAAoC;AACnC,MAAA,QAAQ,CAAC,gBAAT,CAA0B,YAA1B,EAAwC,UAAC,EAAD,EAAG;AAC1C,YAAI,KAAI,CAAC,SAAL,CAAe,MAAf,KAA0B,CAA9B,EAAiC;AAChC,UAAA,EAAE,CAAC,cAAH;AACA;AACD,OAJD,EAIG;AAAE,QAAA,OAAO,EAAE;AAAX,OAJH;AAKA,KAxBF,CA0BC;;;AACA,QAAI,MAAM,CAAC,QAAP,CAAgB,aAAhB,CAAJ,EAAoC;AACnC,MAAA,KAAI,CAAC,IAAL,CAAU,gBAAV,CAA2B,OAA3B,EAAoC,UAAC,EAAD,EAAG;AACtC,YAAI,OAAO,GAAG,KAAd;;AACA,QAAA,KAAI,CAAC,SAAL,CAAe,OAAf,CAAuB,UAAC,GAAD,EAAI;AAC1B,cAAI,GAAG,CAAC,SAAR,EAAmB;AAClB,YAAA,OAAO,GAAG,IAAV;AACA,mBAAO,KAAP;AACA;AACD,SALD;;AAMA,YAAI,OAAJ,EAAa;AACZ,UAAA,EAAE,CAAC,cAAH;AACA;AACD,OAXD,EAWG;AAAE,QAAA,OAAO,EAAE;AAAX,OAXH;AAYA;;;AAED;;AA/D0C;;;;;WAiE3C,UAAqB,EAArB,EAAiC,EAAjC,EAA6C,EAA7C,EAAyD,EAAzD,EAAmE;AAClE,aAAO,KAAK,YAAL,CAAkB,OAAlB,CAA0B,oBAA1B,CAA+C,EAA/C,EAAmD,EAAnD,EAAuD,EAAvD,EAA2D,EAA3D,CAAP;AACA;;;;;;WAED,UAAqB,EAArB,EAAiC,EAAjC,EAA6C,OAA7C,EAA8D,EAA9D,EAA0E,EAA1E,EAAsF,OAAtF,EAAqG;AACpG,aAAO,KAAK,YAAL,CAAkB,OAAlB,CAA0B,oBAA1B,CAA+C,EAA/C,EAAmD,EAAnD,EAAuD,OAAvD,EAAgE,EAAhE,EAAoE,EAApE,EAAwE,OAAxE,CAAP;AACA;;;;;;WAED,UAAc,QAAd,EAAwC,UAAxC,EAAoE,UAApE,EAAwF,KAAxF,EAAuG,MAAvG,EAAqH;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA,WAAK,cAAL,CAAoB,KAApB,GAA4B,KAA5B;AACA,WAAK,cAAL,CAAoB,MAApB,GAA6B,MAA7B;;AAEA,WAAK,eAAL,CAAqB,SAArB,CAA+B,CAA/B,EAAkC,CAAlC,EAAqC,KAArC,EAA4C,MAA5C,EA/BoH,CAiCpH;AACA;;;AAEA,MAAA,UAAU,CAAC,cAAX,CAA0B,KAAK,eAA/B;AACA,MAAA,QAAQ,CAAC,cAAT,CAAwB,KAAK,eAA7B;AAEA,aAAO,KAAK,eAAL,CAAqB,aAArB,CAAmC,KAAK,cAAxC,EAAwD,UAAxD,CAAP;AACA;;;;;;WAED,YAAA;AACC,aAAO,IAAI,eAAJ,CAAoB,IAApB,CAAP;AACA;;;;;;WAED,YAAA;AACC,aAAO,IAAI,cAAJ,CAAmB,IAAnB,CAAP;AACA;;;;;;WAED,UAAS,IAAT,EAAuB,KAAvB,EAA6C;AAC5C,aAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,IAArB,EAA2B,KAA3B,CAAP;AACA;;;;;;WAED,YAAA;AACC,aAAO,IAAI,eAAJ,EAAP;AACA;;;;;;WAED,UAAe,IAAf,EAA6B,KAA7B,EAAmD;AAClD,aAAO,IAAI,gBAAJ,CAAqB,IAArB,EAA2B,IAA3B,EAAiC,KAAjC,CAAP;AACA;;;;;;WAED,UAAY,KAAZ,EAA+C;AAC9C,aAAO,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,KAAtB,CAAP;AACA;;;;;;WAED,UAAO,KAAP,EAAsB,MAAtB,EAAoC;AAApC,UAAA,KAAA,GAAA,IAAA;;AACC,WAAK,YAAL,GAAoB,KAApB;AACA,WAAK,aAAL,GAAqB,MAArB;AACA,WAAK,MAAL,GAAc,IAAI,CAAC,KAAL,CAAW,KAAK,GAAG,KAAK,UAAxB,CAAd;AACA,WAAK,OAAL,GAAe,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,KAAK,UAAzB,CAAf;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,MAAjB,EAAyB,UAAC,KAAD,EAAM;AAC9B,YAAI,KAAJ,EAAW;AACV,UAAA,KAAK,CAAC,KAAN,GAAc,IAAd;;AAEA,cAAI,KAAK,CAAC,KAAN,IAAe,IAAnB,EAAyB;AACxB,YAAA,KAAK,CAAC,IAAN,CAAW,KAAX,GAAmB,KAAK,CAAC,KAAzB;AACA,YAAA,KAAK,CAAC,IAAN,CAAW,KAAX,CAAiB,KAAjB,GAAyB,KAAK,CAAC,KAAN,GAAc,IAAvC;AACA,WAHD,MAIK;AACJ,YAAA,KAAK,CAAC,IAAN,CAAW,KAAX,GAAmB,KAAI,CAAC,MAAxB;AACA,YAAA,KAAK,CAAC,IAAN,CAAW,KAAX,CAAiB,KAAjB,GAAyB,KAAK,GAAG,IAAjC;AACA;;AAED,cAAI,KAAK,CAAC,MAAN,IAAgB,IAApB,EAA0B;AACzB,YAAA,KAAK,CAAC,IAAN,CAAW,MAAX,GAAoB,KAAK,CAAC,MAA1B;AACA,YAAA,KAAK,CAAC,IAAN,CAAW,KAAX,CAAiB,MAAjB,GAA0B,KAAK,CAAC,MAAN,GAAe,IAAzC;AACA,WAHD,MAIK;AACJ,YAAA,KAAK,CAAC,IAAN,CAAW,MAAX,GAAoB,KAAI,CAAC,OAAzB;AACA,YAAA,KAAK,CAAC,IAAN,CAAW,KAAX,CAAiB,MAAjB,GAA0B,MAAM,GAAG,IAAnC;AACA;AACD;AACD,OAtBD,EANmC,CA8BnC;;AACA,WAAK,UAAL,CAAgB,KAAhB,GAAwB,KAAK,MAA7B;AACA,WAAK,UAAL,CAAgB,MAAhB,GAAyB,KAAK,OAA9B;AACA,WAAK,UAAL,CAAgB,KAAhB,CAAsB,KAAtB,GAA8B,KAAK,GAAG,IAAtC;AACA,WAAK,UAAL,CAAgB,KAAhB,CAAsB,MAAtB,GAA+B,MAAM,GAAG,IAAxC;AACA;;;;;;WAED,YAAA;AACC,UAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAb;AACA,UAAM,OAAO,GAAG,IAAI,CAAC,UAAL,CAAgB,IAAhB,CAAhB;AACA,UAAM,KAAK,GAAG;AACb,QAAA,IAAI,EAAE,IADO;AAEb,QAAA,OAAO,EAAE,OAFI;AAGb,QAAA,KAAK,EAAE,CAHM;AAIb,QAAA,OAAO,EAAE,IAJI;AAKb,QAAA,KAAK,EAAE,SALM;AAMb,QAAA,MAAM,EAAE,SANK;AAOb,QAAA,KAAK,EAAE,IAPM;AAQb,QAAA,OAAO,EAAE;AARI,OAAd;AAWA,MAAA,IAAI,CAAC,KAAL,CAAW,QAAX,GAAsB,UAAtB;AACA,MAAA,IAAI,CAAC,KAAL,CAAW,GAAX,GAAiB,KAAjB;AACA,MAAA,IAAI,CAAC,KAAL,CAAW,IAAX,GAAkB,KAAlB;AAEA,aAAO,KAAP;AACA;;;;;;WAED,UAAgB,KAAhB,EAA6B;AAC5B,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,UAAM,MAAM,GAAG,MAAM,CAAC,MAAtB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAApB,EAA4B,CAAC,EAA7B,EAAiC;AAChC,YAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;;AACA,YAAI,KAAK,CAAC,KAAN,IAAe,KAAnB,EAA0B;AACzB,iBAAO,KAAP;AACA;AACD;AACD;;;;;;WAED,UAAS,KAAT,EAAwB,OAAxB,EAA+C;AAAvB,UAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,OAAA,GAAA,IAAA;AAAuB;;AAC9C,UAAM,MAAM,GAAG,KAAK,MAApB;AAEA,UAAI,aAAa,GAAG,KAAK,eAAL,CAAqB,KAArB,CAApB;;AACA,UAAI,aAAJ,EAAmB;AAClB,eAAO,aAAP;AACA;;AAED,UAAM,KAAK,GAAG,KAAK,mBAAL,EAAd;AACA,MAAA,KAAK,CAAC,KAAN,GAAc,KAAd;AACA,MAAA,KAAK,CAAC,OAAN,GAAgB,OAAhB;;AAEA,UAAI,KAAK,CAAC,OAAN,IAAiB,KAAK,MAA1B,EAAkC;AACjC,QAAA,KAAK,CAAC,IAAN,CAAW,KAAX,GAAmB,KAAK,MAAxB;AACA,QAAA,KAAK,CAAC,IAAN,CAAW,KAAX,CAAiB,KAAjB,GAAyB,KAAK,YAAL,GAAoB,IAA7C;AACA,QAAA,KAAK,CAAC,IAAN,CAAW,MAAX,GAAoB,KAAK,OAAzB;AACA,QAAA,KAAK,CAAC,IAAN,CAAW,KAAX,CAAiB,MAAjB,GAA0B,KAAK,aAAL,GAAqB,IAA/C;AACA;;AAED,MAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,UAAC,CAAD,EAAI,CAAJ,EAAK;AAChB,YAAI,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAhB,EAAuB;AACtB,iBAAO,CAAP;AACA,SAFD,MAGK,IAAI,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAhB,EAAuB;AAC3B,iBAAO,CAAC,CAAR;AACA,SAFI,MAGA;AACJ,iBAAO,CAAP;AACA;AACD,OAVD;AAYA,UAAM,MAAM,GAAG,MAAM,CAAC,MAAtB;AACA,UAAM,UAAU,GAAG,MAAM,CAAC,OAAP,CAAe,MAAf,EAAuB,KAAvB,CAAnB;AACA,UAAI,IAAJ;;AAEA,WAAK,IAAI,CAAC,GAAG,UAAU,GAAG,CAA1B,EAA6B,CAAC,GAAG,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC7C,YAAI,MAAM,CAAC,CAAD,CAAN,CAAU,OAAd,EAAuB;AACtB,UAAA,IAAI,GAAG,MAAM,CAAC,CAAD,CAAb;AACA;AACA;AACD;;AAED,UAAI,OAAJ,EAAa;AACZ,YAAI,IAAI,KAAK,SAAb,EAAwB;AACvB,eAAK,SAAL,CAAe,WAAf,CAA2B,KAAK,CAAC,IAAjC;AAEA,SAHD,MAGO;AACN,eAAK,SAAL,CAAe,YAAf,CAA4B,KAAK,CAAC,IAAlC,EAAwC,IAAI,CAAC,IAA7C;AACA;AACD;;AAED,aAAO,KAAP;AACA;;;;;;WAED,UAAO,IAAP,EAAgC;AAAhC,UAAA,KAAA,GAAA,IAAA;;AAEC,WAAK,YAAL,CAAkB,MAAlB,GAA2B,CAA3B;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,MAAjB,EAAyB,UAAC,KAAD,EAAM;AAC9B,YAAI,KAAJ,EAAW;AAEV,cAAI,KAAK,CAAC,KAAN,IAAe,KAAK,CAAC,OAAzB,EAAkC;AACjC,YAAA,KAAI,CAAC,YAAL,CAAkB,IAAlB,CAAuB,KAAvB;;AAEA,YAAA,KAAK,CAAC,OAAN,CAAc,IAAd;AACA,YAAA,KAAK,CAAC,OAAN,CAAc,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,KAAI,CAAC,MAAnC,EAA2C,KAAI,CAAC,OAAhD;AACA;AACD;AACD,OAVD;;AAYA,WAAK,aAAL,CAAmB,IAAnB,GAhB+B,CAiB/B;AACA;;;AACA,WAAK,aAAL,CAAmB,SAAnB,GAA+B,MAA/B;;AACA,WAAK,aAAL,CAAmB,QAAnB,CAA4B,CAA5B,EAA+B,CAA/B,EAAkC,KAAK,MAAvC,EAA+C,KAAK,OAApD;;AAEA,MAAA,IAAI,CAAC,MAAL,CAAY,KAAK,YAAjB;;AAEA,WAAK,aAAL,CAAmB,OAAnB,GAxB+B,CA0B/B;;;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,YAAjB,EAA+B,UAAC,KAAD,EAAM;AACpC,QAAA,KAAK,CAAC,OAAN,CAAc,OAAd;AACA,QAAA,KAAK,CAAC,KAAN,GAAc,KAAd;AACA,OAHD,EA5B+B,CAgC/B;;AAEA,UAAI,KAAK,SAAL,CAAe,IAAf,IAAuB,KAAK,qBAAhC,EAAuD;AACtD,aAAK,mBAAL,CAAyB,GAAzB;AACA;AACD;;;;;;WAED,UAAQ,GAAR,EAAgC;AAC/B,UAAM,EAAE,GAAG,YAAY,CAAC,EAAE,KAAK,QAAR,CAAvB;AACA,UAAM,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc,EAAd,EAAkB,KAAlB,EAAd;AACA,WAAK,SAAL,CAAe,KAAf,IAAwB,GAAxB;AACA,aAAO,KAAP;AACA;;;;;;WAED,UAAc,GAAd,EAAsC;AACrC,UAAI,GAAG,CAAC,QAAJ,KAAiB,SAArB,EAAgC;AAC/B,eAAO,KAAK,SAAL,CAAe,GAAG,CAAC,QAAnB,CAAP;AACA;AACD;KA/UF,CAiVC;AACA;AACA;;;;;;WAEA,UAAyC,aAAzC,EAA2D,WAA3D,EAAsF;AAA3B,UAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,QAAA,WAAA,GAAA,IAAA;AAA2B;;AACrF,UAAM,IAAI,GAAG,WAAW,GAAG,KAAK,IAAL,CAAU,qBAAV,EAAH,GAAuC;AAAE,QAAA,IAAI,EAAE,CAAR;AAAW,QAAA,GAAG,EAAE;AAAhB,OAA/D;AAEA,aAAO,IAAI,mBAAJ,CAAwB,aAAxB,EAAuC,aAAa,CAAC,OAAd,IAAyB,aAAa,CAAC,OAAvC,GAAiD;AAC9F,QAAA,CAAC,EAAE,aAAa,CAAC,OAAd,IAAyB,aAAa,CAAC,OAAd,GAAwB,IAAI,CAAC,IAA7B,GAAoC,CAA7D,CAD2F;AAE9F,QAAA,CAAC,EAAE,aAAa,CAAC,OAAd,IAAyB,aAAa,CAAC,OAAd,GAAwB,IAAI,CAAC,GAA7B,GAAmC,CAA5D;AAF2F,OAAjD,GAG1C;AACH,QAAA,CAAC,EAAE,CADA;AAEH,QAAA,CAAC,EAAE;AAFA,OAHG,CAAP;AAOA;;;;;;WAED,UAAc,KAAd,EAA2B;AAC1B,UAAI,KAAK,CAAC,CAAN,GAAU,CAAV,IAAe,KAAK,CAAC,CAAN,GAAU,KAAK,MAAL,GAAc,KAAK,UAA5C,IAA0D,KAAK,CAAC,CAAN,GAAU,CAApE,IAAyE,KAAK,CAAC,CAAN,GAAU,KAAK,OAAL,GAAe,KAAK,UAA3G,EAAuH;AACtH;AACA,OAFD,MAGK;AACJ,YAAM,KAAK,GAAG,KAAK,aAAL,CAAmB,YAAnB,EACb;AACA,QAAA,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,CAAN,GAAU,KAAK,UAA1B,CAFa,EAGb,IAAI,CAAC,KAAL,CAAW,KAAK,CAAC,CAAN,GAAU,KAAK,UAA1B,CAHa,EAIb,CAJa,EAKb,CALa,CAAd;;AAQA,YAAI,KAAK,CAAC,IAAN,CAAW,CAAX,MAAkB,CAAlB,IAAuB,KAAK,CAAC,IAAN,CAAW,CAAX,MAAkB,CAAzC,IAA8C,KAAK,CAAC,IAAN,CAAW,CAAX,MAAkB,CAApE,EAAuE;AACtE,iBAAO,KAAP;AACA;;AACD,YAAM,OAAO,GAAG,KAAK,CAAC,OAAN,CAAc,KAAK,CAAC,IAAN,CAAW,CAAX,CAAd,EAA6B,KAAK,CAAC,IAAN,CAAW,CAAX,CAA7B,EAA4C,KAAK,CAAC,IAAN,CAAW,CAAX,CAA5C,EAA2D,KAA3D,EAAhB;AACA,YAAM,GAAG,GAAG,KAAK,SAAL,CAAe,OAAf,CAAZ;AAEA,eAAO,GAAP;AACA;AACD;;;;;;WAED,UAA+C,GAA/C,EAAyD,CAAzD,EAAyF;AACxF,UAAM,MAAM,GAAG,KAAK,OAAL,CAAa,GAAb,CAAf;;AAEA,UAAI,MAAM,KAAK,SAAf,EAA0B;AACzB,QAAA,MAAM,CAAC,WAAP,GAAqB,IAArB;;AAEA,YAAI;AACH,UAAA,CAAC,CAAC,MAAD,CAAD;AAEA,SAHD,SAGU;AACT,UAAA,MAAM,CAAC,WAAP,GAAqB,KAArB;;AAEA,cAAI,MAAM,CAAC,OAAX,EAAoB;AACnB,YAAA,MAAM,CAAC,OAAP,GAAiB,KAAjB;AAEA,YAAA,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,SAArB,EAAgC,UAAC,QAAD,EAAS;AACxC,qBAAO,CAAC,QAAQ,CAAC,QAAjB;AACA,aAFD;;AAIA,gBAAI,MAAM,CAAC,SAAP,CAAiB,MAAjB,KAA4B,CAAhC,EAAmC;AAClC,cAAA,MAAM,CAAC,QAAP,CAAgB,OAAhB;AACA,qBAAO,KAAK,OAAL,CAAa,GAAb,CAAP;AACA;AACD;AACD;AACD;AACD;;;;;;WAED,UAAqD,GAArD,EAA+D,KAA/D,EAA0F;AACzF,UAAI,CAAC,KAAK,mBAAV,EAA+B;AAC9B;AACA;;AAED,WAAK,WAAL,CAAiB,GAAjB,EAAsB,UAAC,MAAD,EAAO;AAC5B,QAAA,MAAM,CAAC,IAAP,CAAY,MAAM,CAAC,SAAnB,EAA8B,UAAC,QAAD,EAAS;AACtC,cAAI,CAAC,QAAQ,CAAC,QAAd,EAAwB;AACvB,YAAA,QAAQ,CAAC,QAAT,CAAkB,IAAlB,CAAuB,QAAQ,CAAC,OAAhC,EAAyC,KAAzC;AACA;AACD,SAJD;AAKA,OAND;AAOA;;;;;;WAED,UAAkD,GAAlD,EAA4D,MAA5D,EAAyF,KAAzF,EAAoH;AACnH,UAAI,CAAC,KAAK,mBAAV,EAA+B;AAC9B,eAAO,KAAP;AACA;;AAED,UAAI,UAAU,GAAG,KAAjB;;AAEA,WAAK,WAAL,CAAiB,GAAjB,EAAsB,UAAC,MAAD,EAAO;AAC5B,QAAA,MAAM,CAAC,IAAP,CAAY,MAAM,CAAC,SAAnB,EAA8B,UAAC,QAAD,EAAS;AACtC,cAAI,CAAC,QAAQ,CAAC,QAAV,IAAsB,QAAQ,CAAC,MAAT,KAAoB,MAA9C,EAAsD;AACrD,YAAA,QAAQ,CAAC,QAAT,CAAkB,IAAlB,CAAuB,QAAQ,CAAC,OAAhC,EAAyC,KAAzC;AACA,YAAA,UAAU,GAAG,IAAb;AACA;AACD,SALD;AAMA,OAPD;;AASA,aAAO,UAAP;AACA;;;;;;WAED,UAAmB,aAAnB,EAA+C;AAA/C,UAAA,KAAA,GAAA,IAAA;;AAEC,UAAM,MAAM,GAAkB,aAAc,CAAC,MAA7C;;AACA,UAAI,MAAM,IAAI,CAAV,IAAe,MAAM,IAAI,CAAzB,IAA8B,MAAM,IAAI,CAA5C,EAA+C;AAC9C;AACA;AACA;;AAED,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,aAAd,CAAd;;AACA,UAAM,MAAM,GAAG,KAAK,aAAL,CAAmB,KAAK,CAAC,KAAzB,CAAf;;AAEA,UAAI,MAAJ,EAAY;AACX,YAAM,IAAE,GAAG,KAAK,CAAC,EAAjB;AAEA,YAAI,SAAO,GAAG,KAAd;AAEA,QAAA,WAAW,CAAC,MAAD,EAAS,UAAC,GAAD,EAAI;AACvB,cAAM,IAAI,GAAG;AAAE,YAAA,EAAE,EAAE,IAAN;AAAU,YAAA,KAAK,EAAE;AAAjB,WAAb;;AAEA,UAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,IAArB;;AAEA,cAAI,CAAC,SAAD,IAAY,KAAI,CAAC,cAAL,CAAoB,aAApB,EAAmC,GAAnC,EAAwC,KAAxC,CAAhB,EAAgE;AAC/D;AACA,YAAA,SAAO,GAAG,IAAV;;AAEA,gBAAM,GAAG,GAAG,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,UAAC,CAAD,EAAE;AACjC,qBAAO,CAAC,CAAC,KAAF,KAAY,GAAZ,IAAmB,CAAC,CAAC,EAAF,KAAS,IAAnC;AACA,aAFW,CAAZ;;AAIA,gBAAI,CAAC,GAAL,EAAU;AACT,cAAA,KAAI,CAAC,SAAL,CAAe,IAAf,CAAoB,IAApB;AACA;AACD;;AAED,iBAAO,IAAP;AACA,SAnBU,CAAX;AAoBA;AACD;;;;;;WAED,UAAyB,aAAzB,EAAqD;AAArD,UAAA,KAAA,GAAA,IAAA;;AACC,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,aAAd,CAAd;;AAEA,UAAM,MAAM,GAAG,KAAK,aAAL,CAAmB,KAAK,CAAC,KAAzB,CAAf;;AACA,MAAA,KAAK,CAAC,MAAN,GAAe,KAAK,cAAL,CAAoB,aAApB,CAAf;;AAEA,UAAI,MAAJ,EAAY;AACX,aAAK,SAAL,CAAe,OAAf,CAAuB,UAAC,GAAD,EAAI;AAC1B,cAAI,CAAC,GAAG,CAAC,QAAJ,CAAa,MAAb,CAAL,EAA2B;AAC1B,YAAA,KAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,GAAtB;;AACA,gBAAI,GAAG,CAAC,eAAR,EAAyB;AACxB,cAAA,MAAM,CAAC,QAAP,CAAgB,QAAQ,CAAC,IAAzB,EAA+B,QAA/B,EAAyC,GAAG,CAAC,oBAA7C;AACA;;AACD,YAAA,KAAI,CAAC,cAAL,CAAoB,YAApB,EAAkC,GAAlC,EAAuC,KAAvC;AACA;AACD,SARD;;AAUA,YAAI,KAAK,CAAC,MAAV,EAAkB;AACjB,UAAA,WAAW,CAAC,MAAD,EAAS,UAAC,GAAD,EAAI;AACvB,gBAAI,CAAC,KAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,GAAnB,CAAL,EAA8B;AAC7B,cAAA,KAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,GAAnB;;AACA,kBAAI,GAAG,CAAC,eAAR,EAAyB;AACxB,gBAAA,GAAG,CAAC,oBAAJ,GAA2B,MAAM,CAAC,QAAP,CAAgB,QAAQ,CAAC,IAAzB,EAA+B,QAA/B,CAA3B;AACA,gBAAA,MAAM,CAAC,QAAP,CAAgB,QAAQ,CAAC,IAAzB,EAA+B,QAA/B,EAAyC,GAAG,CAAC,eAA7C;AACA;;AACD,cAAA,KAAI,CAAC,cAAL,CAAoB,aAApB,EAAmC,GAAnC,EAAwC,KAAxC;AACA;;AAED,mBAAO,IAAP;AACA,WAXU,CAAX;AAYA,SAxBU,CA0BX;;AACA,OA3BD,MA2BO;AACN,aAAK,SAAL,CAAe,OAAf,CAAuB,UAAC,GAAD,EAAI;AAC1B,cAAI,GAAG,CAAC,eAAR,EAAyB;AACxB,YAAA,MAAM,CAAC,QAAP,CAAgB,QAAQ,CAAC,IAAzB,EAA+B,QAA/B,EAAyC,GAAG,CAAC,oBAA7C;AACA;;AACD,UAAA,KAAI,CAAC,cAAL,CAAoB,YAApB,EAAkC,GAAlC,EAAuC,KAAvC;AACA,SALD;;AAOA,aAAK,SAAL,CAAe,KAAf;AACA;;AACD,WAAK,iBAAL,CAAuB,mBAAvB,EAA4C,KAA5C;AACA;;;;;;WAED,UAAe,KAAf,EAAmC;AAClC,UAAI,KAAK,CAAC,MAAV,EAAkB;AACjB,eAAa,KAAK,CAAC,MAAN,CAAc,UAAd,KAA6B,KAAK,SAA/C;AACA;;AACD,aAAO,IAAP;AACA;;;;;;WAED,UAAuB,aAAvB,EAAmD;AAClD,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,aAAd,CAAd,CADkD,CAElD;;AACA,WAAK,iBAAL,CAAuB,iBAAvB,EAA0C,KAA1C;AACA;;;;;;WAED,UAAkB,aAAlB,EAA8C;AAA9C,UAAA,KAAA,GAAA,IAAA;;AACC,UAAI,KAAK,SAAL,CAAe,MAAf,KAA0B,CAA9B,EAAiC;AAChC,YAAM,OAAK,GAAG,KAAK,QAAL,CAAc,aAAd,CAAd;AACA,YAAM,IAAE,GAAG,OAAK,CAAC,EAAjB;;AAEA,aAAK,SAAL,CAAe,OAAf,CAAuB,UAAC,GAAD,EAAI;AAC1B,cAAI,GAAG,CAAC,EAAJ,KAAW,IAAf,EAAmB;AAClB,YAAA,KAAI,CAAC,cAAL,CAAoB,aAApB,EAAmC,GAAG,CAAC,KAAvC,EAA8C,OAA9C;AACA;AACD,SAJD;AAKA;AACD;;;;;;WAED,UAAiB,aAAjB,EAA6C;AAA7C,UAAA,KAAA,GAAA,IAAA;;AAEC,UAAM,MAAM,GAAkB,aAAc,CAAC,MAA7C;AACA,UAAI,UAAJ;;AACA,UAAI,MAAM,IAAI,CAAd,EAAiB;AAChB,QAAA,UAAU,GAAG,OAAb;AACA,OAFD,MAGK,IAAI,MAAM,IAAI,CAAd,EAAiB;AACrB,QAAA,UAAU,GAAG,YAAb;AACA,OAFI,MAGA,IAAI,MAAM,IAAI,CAAd,EAAiB;AACrB,QAAA,UAAU,GAAG,aAAb;AACA,OAFI,MAGA;AACJ;AACA;AACA;;AAED,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,aAAd,CAAd;AACA,UAAM,EAAE,GAAG,KAAK,CAAC,EAAjB;;AAEA,UAAI,KAAK,UAAL,CAAgB,MAAhB,KAA2B,CAA/B,EAAkC;AACjC,YAAM,QAAM,GAAG,KAAK,aAAL,CAAmB,KAAK,CAAC,KAAzB,CAAf;;AAEA,YAAI,QAAJ,EAAY;AACX,eAAK,UAAL,CAAgB,OAAhB,CAAwB,UAAC,GAAD,EAAI;AAC3B,gBAAI,GAAG,CAAC,EAAJ,KAAW,EAAX,IAAiB,GAAG,CAAC,KAAJ,CAAU,QAAV,CAAmB,QAAnB,CAArB,EAAiD;AAChD,cAAA,KAAI,CAAC,cAAL,CAAoB,UAApB,EAAgC,GAAG,CAAC,KAApC,EAA2C,KAA3C;AACA;AACD,WAJD;AAKA;;AAED,aAAK,UAAL,CAAgB,MAAhB,GAAyB,CAAzB;AACA;;AAED,UAAI,KAAK,SAAL,CAAe,MAAf,KAA0B,CAA9B,EAAiC;AAChC,aAAK,SAAL,CAAe,OAAf,CAAuB,UAAC,GAAD,EAAI;AAC1B,cAAI,GAAG,CAAC,EAAJ,KAAW,EAAf,EAAmB;AAClB,YAAA,KAAI,CAAC,cAAL,CAAoB,WAApB,EAAiC,GAAG,CAAC,KAArC,EAA4C,KAA5C;AACA;AACD,SAJD;;AAMA,aAAK,SAAL,CAAe,MAAf,GAAwB,CAAxB;AACA;AACD;;;;;;WAED,UAAqB,aAArB,EAAiD;AAAjD,UAAA,KAAA,GAAA,IAAA;;AACC,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,aAAd,CAAd;;AACA,UAAM,MAAM,GAAG,KAAK,aAAL,CAAmB,KAAK,CAAC,KAAzB,CAAf;;AAEA,UAAI,MAAJ,EAAY;AACX,QAAA,WAAW,CAAC,MAAD,EAAS,UAAC,GAAD,EAAI;AACvB,cAAI,KAAI,CAAC,cAAL,CAAoB,UAApB,EAAgC,GAAhC,EAAqC,KAArC,CAAJ,EAAiD;AAChD,mBAAO,KAAP;AACA,WAFD,MAEO;AACN,mBAAO,IAAP;AACA;AACD,SANU,CAAX;AAOA;AACD;;;;;;WAED,UAAe,aAAf,EAAwC;AAAxC,UAAA,KAAA,GAAA,IAAA;;AACC,UAAM,KAAK,GAAG,KAAK,QAAL,CAAc,aAAd,CAAd;;AACA,WAAK,SAAL,CAAe,OAAf,CAAuB,UAAC,GAAD,EAAI;AAC1B,QAAA,KAAI,CAAC,cAAL,CAAoB,OAApB,EAA6B,GAA7B,EAAkC,KAAlC;AACA,OAFD;AAGA;;;;;;WAED,UAAiB,GAAjB,EAA8B,CAA9B,EAAgD;AAAhD,UAAA,KAAA,GAAA,IAAA;;AACC,UAAI,KAAK,UAAL,CAAgB,GAAhB,MAAyB,SAA7B,EAAwC;AACvC,YAAM,UAAQ,GAAG,CAAC,EAAlB;AAEA,aAAK,UAAL,CAAgB,GAAhB,IAAuB,IAAI,eAAJ,CAAoB,YAAA;AAC1C,iBAAO,KAAI,CAAC,UAAL,CAAgB,GAAhB,CAAP;AACA,UAAA,UAAQ,CAAC,OAAT;AACA,SAHsB,CAAvB;AAIA;;AAED,aAAO,KAAK,UAAL,CAAgB,GAAhB,EAAqB,SAArB,EAAP;AACA;KAnnBF,CAqnBC;;;;;;WACA,UAAW,GAAX,EAAqC;AAArC,UAAA,KAAA,GAAA,IAAA;;AACC,cAAQ,GAAR;AACC,aAAK,mBAAL;AACA,aAAK,aAAL;AACA,aAAK,YAAL;AACC,iBAAO,KAAK,gBAAL,CAAsB,aAAtB,EAAqC,YAAA;AAC3C;AAEA;AACA,mBAAO,cAAc,CAAC,MAAD,EAAS,aAAT,EAAwB,UAAC,EAAD,EAAG;AAC/C,cAAA,KAAI,CAAC,qBAAL,GAA6B,EAA7B;;AACA,cAAA,KAAI,CAAC,mBAAL,CAAyB,GAAzB,GAF+C,CAG/C;AACA;;AACA,aALoB,CAArB;AAMA,WAVM,CAAP;;AAWD,aAAK,iBAAL;AACC,iBAAO,KAAK,gBAAL,CAAsB,WAAtB,EAAmC,YAAA;AACzC;AAEA;AACA,mBAAO,cAAc,CAAC,MAAD,EAAS,WAAT,EAAsB,UAAC,EAAD,EAAG;AAC7C;AACA,cAAA,KAAI,CAAC,sBAAL,CAA4B,EAA5B,EAF6C,CAG7C;;AACA,aAJoB,CAArB;AAKA,WATM,CAAP;;AAUD,aAAK,OAAL;AACA,aAAK,YAAL;AACA,aAAK,aAAL;AACA,aAAK,aAAL;AACA,aAAK,aAAL;AACA,aAAK,WAAL;AACC,iBAAO,KAAK,gBAAL,CAAsB,aAAtB,EAAqC,YAAA;AAC3C;AAEA,gBAAM,SAAS,GAAG,cAAc,CAAC,KAAI,CAAC,IAAN,EAAY,aAAZ,EAA2B,UAAC,EAAD,EAAkB;AAC5E,cAAA,KAAI,CAAC,kBAAL,CAAwB,EAAxB;AACA,aAF+B,CAAhC,CAH2C,CAO3C;;AACA,gBAAM,SAAS,GAAG,cAAc,CAAC,MAAD,EAAS,aAAT,EAAwB,UAAC,EAAD,EAAkB;AACzE;AACA,cAAA,KAAI,CAAC,iBAAL,CAAuB,EAAvB,EAFyE,CAGzE;;AACA,aAJ+B,CAAhC;AAMA,gBAAM,OAAO,GAAG,cAAc,CAAC,MAAD,EAAS,WAAT,EAAsB,UAAC,EAAD,EAAkB;AACrE,cAAA,KAAI,CAAC,gBAAL,CAAsB,EAAtB;AACA,aAF6B,CAA9B;AAIA,mBAAO,IAAI,QAAJ,CAAa,YAAA;AACnB,cAAA,SAAS,CAAC,OAAV;AACA,cAAA,SAAS,CAAC,OAAV;AACA,cAAA,OAAO,CAAC,OAAR;AACA,aAJM,CAAP;AAKA,WAvBM,CAAP;;AAwBD,aAAK,UAAL;AACC,iBAAO,KAAK,gBAAL,CAAsB,UAAtB,EAAkC,YAAA;AACxC,mBAAO,cAAc,CAAC,MAAD,EAAS,UAAT,EAAqB,UAAC,EAAD,EAAG;AAC5C,cAAA,KAAI,CAAC,oBAAL,CAA0B,EAA1B;AACA,aAFoB,CAArB;AAGA,WAJM,CAAP;;AAKD,aAAK,OAAL;AACC,iBAAO,KAAK,gBAAL,CAAsB,OAAtB,EAA+B,YAAA;AACrC,mBAAO,MAAM,CAAC,gBAAP,CAAwB,MAAxB,EAAgC,MAAM,CAAC,gBAAP,CAAwB,OAAxB,CAAhC,EAAkE,UAAC,KAAD,EAAkB;AAC1F,cAAA,KAAI,CAAC,cAAL,CAAoB,KAApB;AACA,aAFM,EAEJ;AAAE,cAAA,OAAO,EAAE;AAAX,aAFI,CAAP;AAGA,WAJM,CAAP;AA/DF;AAqEA;;;;;;WAED,UAAgD,MAAhD,EAA6E,GAA7E,EAAuF,QAAvF,EAAiJ,OAAjJ,EAA4J;AAA5J,UAAA,KAAA,GAAA,IAAA;;AACC,UAAI,MAAM,GAA4B,KAAK,OAAL,CAAa,GAAb,CAAtC;;AAEA,UAAI,MAAM,KAAK,SAAf,EAA0B;AACzB,QAAA,MAAM,GAAG,KAAK,OAAL,CAAa,GAAb,IAAoB;AAC5B,UAAA,QAAQ,EAAE,KAAK,UAAL,CAAgB,GAAhB,CADkB;AAE5B,UAAA,SAAS,EAAE,EAFiB;AAG5B,UAAA,WAAW,EAAE,KAHe;AAI5B,UAAA,OAAO,EAAE;AAJmB,SAA7B;AAMA;;AAED,UAAM,QAAQ,GAAG;AAAE,QAAA,MAAM,EAAA,MAAR;AAAU,QAAA,OAAO,EAAA,OAAjB;AAAmB,QAAA,QAAQ,EAAA,QAA3B;AAA6B,QAAA,QAAQ,EAAE;AAAvC,OAAjB;AAEA,MAAA,MAAO,CAAC,SAAR,CAAkB,IAAlB,CAAuB,QAAvB;AAEA,aAAO,IAAI,QAAJ,CAAa,YAAA;AACnB,QAAA,QAAQ,CAAC,QAAT,GAAoB,IAApB;;AAEA,YAAI,MAAO,CAAC,WAAZ,EAAyB;AACxB,UAAA,MAAO,CAAC,OAAR,GAAkB,IAAlB;AAEA,SAHD,MAGO;AACN,UAAA,MAAM,CAAC,WAAP,CAAmB,MAAO,CAAC,SAA3B,EAAsC,QAAtC;;AAEA,cAAI,MAAO,CAAC,SAAR,CAAkB,MAAlB,KAA6B,CAAjC,EAAoC;AACnC,YAAA,MAAO,CAAC,QAAR,CAAiB,OAAjB;AACA,mBAAO,KAAI,CAAC,OAAL,CAAa,GAAb,CAAP;AACA;AACD;AACD,OAdM,CAAP;AAeA;;;;;;WAED,UAAiB,IAAjB,EAA4C,OAA5C,EAAoE;AAEnE;AACA,WAAK,MAAL,CAAY,IAAZ;;AAEA,UAAI,CAAC,OAAL,EAAc;AACb,QAAA,OAAO,GAAG,EAAV;AACA;;AAED,UAAI,KAAK,GAAW,KAAK,UAAzB,CATmE,CAWnE;;AACA,UAAI,OAAO,CAAC,QAAR,IAAqB,OAAO,CAAC,QAAR,GAAmB,KAAK,MAAjD,EAA0D;AACzD,YAAI,QAAQ,GAAG,OAAO,CAAC,QAAR,GAAmB,KAAK,MAAvC;;AACA,YAAI,QAAQ,GAAG,KAAf,EAAsB;AACrB,UAAA,KAAK,GAAG,QAAQ,GAAG,KAAK,UAAxB;AACA;AACD;;AAED,UAAI,OAAO,CAAC,SAAR,IAAsB,OAAO,CAAC,SAAR,GAAoB,KAAK,OAAnD,EAA6D;AAC5D,YAAI,QAAQ,GAAG,OAAO,CAAC,SAAR,GAAoB,KAAK,OAAxC;;AACA,YAAI,QAAQ,GAAG,KAAf,EAAsB;AACrB,UAAA,KAAK,GAAG,QAAQ,GAAG,KAAK,UAAxB;AACA;AACD;;AAED,UAAI,OAAO,CAAC,QAAR,IAAqB,OAAO,CAAC,QAAR,GAAmB,KAAK,MAAjD,EAA0D;AACzD,YAAI,QAAQ,GAAG,OAAO,CAAC,QAAR,GAAmB,KAAK,MAAvC;;AACA,YAAI,QAAQ,GAAG,KAAf,EAAsB;AACrB,UAAA,KAAK,GAAG,QAAQ,GAAG,KAAK,UAAxB;AACA;AACD;;AAED,UAAI,OAAO,CAAC,SAAR,IAAsB,OAAO,CAAC,SAAR,GAAoB,KAAK,OAAnD,EAA6D;AAC5D,YAAI,QAAQ,GAAG,OAAO,CAAC,SAAR,GAAoB,KAAK,OAAxC;;AACA,YAAI,QAAQ,GAAG,KAAf,EAAsB;AACrB,UAAA,KAAK,GAAG,QAAQ,GAAG,KAAK,UAAxB;AACA;AACD,OAtCkE,CAwCnE;;;AACA,UAAI,OAAO,CAAC,kBAAZ,EAAgC;AAC/B,QAAA,KAAK,IAAI,KAAK,UAAd;AACA,OA3CkE,CA6CnE;;;AACA,UAAI,WAAW,GAAG,KAAlB;AACA,UAAI,WAAW,GAAG,KAAK,MAAvB;AACA,UAAI,YAAY,GAAG,KAAK,OAAxB;AACA,UAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;;AACA,UAAI,KAAK,IAAI,KAAK,UAAlB,EAA8B;AAC7B,QAAA,WAAW,GAAG,IAAd;AACA,QAAA,WAAW,GAAG,KAAK,MAAL,GAAc,KAAd,GAAsB,KAAK,UAAzC;AACA,QAAA,YAAY,GAAG,KAAK,OAAL,GAAe,KAAf,GAAuB,KAAK,UAA3C;AACA;;AAED,MAAA,MAAM,CAAC,KAAP,GAAe,WAAf;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,YAAhB,CAzDmE,CA2DnE;;AACA,UAAM,OAAO,GAAG,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAhB;AAEA,UAAI,KAAK,GAAG,CAAZ;AACA,UAAI,MAAM,GAAG,CAAb;AACA,UAAI,YAAY,GAAG,KAAnB;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,MAAjB,EAAyB,UAAC,KAAD,EAAM;AAC9B,YAAI,KAAK,IAAI,KAAK,CAAC,OAAnB,EAA4B;AAC3B,cAAI,KAAK,CAAC,OAAN,IAAiB,WAArB,EAAkC;AACjC,YAAA,YAAY,GAAG,IAAf;AAEA,YAAA,KAAK,CAAC,cAAN,GAAuB,KAAK,CAAC,IAA7B;AACA,YAAA,KAAK,CAAC,iBAAN,GAA0B,KAAK,CAAC,OAAhC;AAEA,YAAA,KAAK,CAAC,IAAN,GAAa,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAb;AACA,YAAA,KAAK,CAAC,IAAN,CAAW,KAAX,GAAmB,WAAnB;AACA,YAAA,KAAK,CAAC,IAAN,CAAW,MAAX,GAAoB,YAApB;AAEA,YAAA,KAAK,CAAC,OAAN,GAAgB,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,IAAtB,CAAhB;AAEA,YAAA,KAAK,CAAC,KAAN,GAAc,IAAd;AACA,YAAA,KAAK,CAAC,KAAN,GAAc,KAAd;AAEA;AACD;AACD,OAnBD;;AAqBA,UAAI,YAAJ,EAAkB;AACjB,aAAK,YAAL,GAAoB,IAApB;AACA,aAAK,MAAL,CAAY,IAAZ;AACA,aAAK,YAAL,GAAoB,KAApB;AACA;;AAED,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,MAAjB,EAAyB,UAAC,KAAD,EAAM;AAC9B,YAAI,KAAK,IAAI,KAAK,CAAC,OAAnB,EAA4B;AAE3B;AACA,UAAA,OAAO,CAAC,SAAR,CAAkB,KAAK,CAAC,IAAxB,EAA8B,CAA9B,EAAiC,CAAjC,EAH2B,CAK3B;;AACA,cAAI,KAAK,CAAC,cAAV,EAA0B;AACzB,YAAA,KAAK,CAAC,IAAN,GAAa,KAAK,CAAC,cAAnB;AACA,YAAA,KAAK,CAAC,cAAN,GAAuB,SAAvB;AACA;;AAED,cAAI,KAAK,CAAC,iBAAV,EAA6B;AAC5B,YAAA,KAAK,CAAC,OAAN,GAAgB,KAAK,CAAC,iBAAtB;AACA,YAAA,KAAK,CAAC,iBAAN,GAA0B,SAA1B;AACA;;AAED,cAAI,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,WAAvB,EAAoC;AACnC,YAAA,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,WAAnB;AACA;;AACD,cAAI,MAAM,GAAG,KAAK,CAAC,IAAN,CAAW,YAAxB,EAAsC;AACrC,YAAA,MAAM,GAAG,KAAK,CAAC,IAAN,CAAW,YAApB;AACA;;AAED,UAAA,KAAK,CAAC,KAAN,GAAc,SAAd;AACA;AACD,OA1BD;AA4BA,MAAA,MAAM,CAAC,KAAP,CAAa,KAAb,GAAqB,KAAK,GAAG,IAA7B;AACA,MAAA,MAAM,CAAC,KAAP,CAAa,MAAb,GAAsB,MAAM,GAAG,IAA/B;AAEA,aAAO,MAAP;AACA;;AAEF,SAAA,cAAA;AAAC,CA91BD,CAAoC,QAApC,CAAA","sourcesContent":["/** @ignore *//** */\n\nimport {\n\tIRenderer, IContainer, IDisplayObject, IGraphics, IRendererEvents,\n\tIText, ITextStyle, IRadialText, IPicture, IRendererEvent, ILayer, ICanvasOptions, BlendMode, IPointerEvent, Id\n} from \"./Renderer\";\nimport type { IBounds } from \"../../util/IBounds\";\nimport type { IPoint } from \"../../util/IPoint\";\nimport { Color } from \"../../util/Color\";\nimport { Matrix } from \"../../util/Matrix\";\nimport { Percent, percent } from \"../../util/Percent\";\nimport { Throttler } from \"../../util/Throttler\";\nimport { Disposer, IDisposer, CounterDisposer } from \"../../util/Disposer\";\nimport { TextFormatter, ITextChunk } from \"../../util/TextFormatter\";\nimport * as $utils from \"../../util/Utils\";\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\nimport * as $math from \"../../util/Math\";\nimport arcToBezier from 'svg-arc-to-cubic-bezier';\n\n\n/**\n * @ignore\n */\nfunction checkArgs(name: string, actual: number, expected: number) {\n\tif (actual !== expected) {\n\t\tthrow new Error(\"Required \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkMinArgs(name: string, actual: number, expected: number) {\n\tif (actual < expected) {\n\t\tthrow new Error(\"Required at least \" + expected + \" arguments for \" + name + \" but got \" + actual);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction checkEvenArgs(name: string, actual: number, expected: number) {\n\tcheckMinArgs(name, actual, expected);\n\n\tif ((actual % expected) !== 0) {\n\t\tthrow new Error(\"Arguments for \" + name + \" must be in pairs of \" + expected);\n\t}\n}\n\n/**\n * @ignore\n */\nfunction assertBinary(value: number): 0 | 1 {\n\tif (value === 0 || value === 1) {\n\t\treturn value;\n\n\t} else {\n\t\tthrow new Error(\"Flag must be 0 or 1\");\n\t}\n}\n\n//  1 -> 0xffffff * (2 / 2)\n//  2 -> 0xffffff * (1 / 2)\n//\n//  3 -> 0xffffff * (3 / 4)\n//  4 -> 0xffffff * (1 / 4)\n//\n//  5 -> 0xffffff * (7 / 8)\n//  6 -> 0xffffff * (5 / 8)\n//  7 -> 0xffffff * (3 / 8)\n//  8 -> 0xffffff * (1 / 8)\n//\n//  9 -> 0xffffff * (15 / 16)\n// 10 -> 0xffffff * (13 / 16)\n// 11 -> 0xffffff * (11 / 16)\n// 12 -> 0xffffff *  (9 / 16)\n// 13 -> 0xffffff *  (7 / 16)\n// 14 -> 0xffffff *  (5 / 16)\n// 15 -> 0xffffff *  (3 / 16)\n// 16 -> 0xffffff *  (1 / 16)\n// @todo remove this old color distribution algo if the new one pans out\n// function distributeIdBAK(id: number): number {\n// \tif (id === 1) {\n// \t\treturn 0x000001;\n\n// \t} else {\n// \t\t// Finds the closest power of 2\n// \t\tconst base = Math.pow(2, Math.ceil(Math.log(id) / Math.log(2)));\n\n// \t\t// Translates the id into an odd fraction index\n// \t\tconst index = ((base - id) * 2) + 1;\n\n// \t\t// TODO is Math.round correct ?\n// \t\treturn Math.round(0xffffff * (index / base));\n// \t}\n// }\n\n/**\n * Function by smeans:\n * https://lowcode.life/generating-unique-contrasting-colors-in-javascript/\n * @ignore\n */\nfunction distributeId(id: number): number {\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 24; i++) {\n\t\trgb[i % 3] <<= 1;\n\t\trgb[i % 3] |= id & 0x01;\n\t\tid >>= 1;\n\t}\n\treturn (rgb[2] | 0) + (rgb[1] << 8) + (rgb[0] << 16);\n}\n\n/**\n * @ignore\n */\nfunction eachTargets(hitTarget: CanvasDisplayObject, f: (target: CanvasDisplayObject) => boolean): void {\n\tfor (; ;) {\n\t\tif (hitTarget.interactive) {\n\t\t\tif (!f(hitTarget)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (hitTarget._parent) {\n\t\t\thitTarget = hitTarget._parent;\n\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\n// TODO feature detection for mouse/touch/pointer\n/**\n * @ignore\n */\nfunction onPointerEvent(element: EventTarget, name: string, f: (event: IPointerEvent) => void): IDisposer {\n\treturn $utils.addEventListener(element, $utils.getRendererEvent(name), (event: MouseEvent | TouchEvent) => {\n\t\tif ((<any>event).touches) {\n\t\t\t$array.each((<TouchEvent>event).touches, (touch) => {\n\t\t\t\tf(touch);\n\t\t\t});\n\n\t\t} else {\n\t\t\tf(<MouseEvent>event);\n\t\t}\n\t});\n}\n\n/**\n * @ignore\n */\nfunction isTainted(image: HTMLImageElement): boolean {\n\tconst canvas = document.createElement(\"canvas\");\n\tcanvas.width = 1;\n\tcanvas.height = 1;\n\tconst context = canvas.getContext(\"2d\")!;\n\tcontext.drawImage(image, 0, 0, 1, 1);\n\n\ttry {\n\t\tcontext.getImageData(0, 0, 1, 1);\n\t\treturn false;\n\t}\n\tcatch (err) {\n\t\tconsole.warn(\"Image \\\"\" + image.src + \"\\\" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors\");\n\t\treturn true;\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasPivot implements IPoint {\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\tget x(): number {\n\t\treturn this._x;\n\t}\n\n\tget y(): number {\n\t\treturn this._y;\n\t}\n\n\tset x(value: number) {\n\t\tthis._x = value;\n\t}\n\n\tset y(value: number) {\n\t\tthis._y = value;\n\t}\n}\n\n/**\n * @ignore\n */\nexport class CanvasDisplayObject extends Disposer implements IDisplayObject, IDisposer {\n\tpublic _layer?: CanvasLayer;\n\n\tpublic mask: CanvasGraphics | null = null;\n\tpublic visible: boolean = true;\n\tpublic exportable?: boolean = true;\n\tpublic interactive: boolean = false;\n\tpublic wheelable: boolean = false;\n\tpublic isMeasured: boolean = false;\n\tpublic buttonMode: boolean = false;\n\tpublic alpha: number = 1;\n\tpublic compoundAlpha: number = 1;\n\tpublic angle: number = 0;\n\tpublic scale: number = 1;\n\tpublic x: number = 0;\n\tpublic y: number = 0;\n\tpublic pivot: CanvasPivot = new CanvasPivot();\n\n\tpublic filter?: string;\n\n\tpublic cursorOverStyle?: string;\n\tpublic _replacedCursorStyle?: string;\n\n\tpublic _localMatrix: Matrix = new Matrix();\n\tpublic _matrix: Matrix = new Matrix();\n\t// TODO can this be replaced with _localMatrix ?\n\tprotected _uMatrix: Matrix = new Matrix();\n\n\tprotected _renderer: CanvasRenderer;\n\tpublic _parent: CanvasContainer | undefined;\n\n\tprotected _localBounds: IBounds | undefined;\n\tprotected _bounds: IBounds | undefined;\n\tpublic _colorId: string | undefined;\n\n\tconstructor(renderer: CanvasRenderer) {\n\t\tsuper(() => {\n\t\t\tthis._renderer._removeObject(this);\n\t\t});\n\n\t\tthis._renderer = renderer;\n\t}\n\n\tpublic getCanvas(): HTMLCanvasElement {\n\t\treturn this.getLayer().view;\n\t}\n\n\tpublic getLayer(): CanvasLayer {\n\t\tlet self: CanvasDisplayObject = this;\n\n\t\tfor (; ;) {\n\t\t\tif (self._layer) {\n\t\t\t\treturn self._layer;\n\n\t\t\t} else if (self._parent) {\n\t\t\t\tself = self._parent;\n\n\t\t\t} else {\n\t\t\t\treturn this._renderer.defaultLayer;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic setLayer(order: number | undefined, visible: boolean = true): void {\n\t\tif (order == null) {\n\t\t\tthis._layer = undefined;\n\n\t\t} else {\n\t\t\tthis._layer = this._renderer.getLayer(order, visible);\n\t\t\tthis._layer.visible = visible;\n\t\t\tif (this._parent) {\n\t\t\t\tthis._parent.registerChildLayer(this._layer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(): void {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n\tpublic clear(): void {\n\t\tthis.invalidateBounds();\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tthis._localBounds = undefined;\n\t}\n\n\tpublic _addBounds(_bounds: IBounds): void { }\n\n\tprotected _getColorId(): string {\n\t\tif (this._colorId === undefined) {\n\t\t\tthis._colorId = this._renderer.paintId(this);\n\t\t}\n\n\t\treturn this._colorId;\n\t}\n\n\tprotected _isInteractive(): boolean {\n\t\treturn this.interactive || this._renderer._forceInteractive > 0;\n\t}\n\n\tprotected _isInteractiveMask(): boolean {\n\t\treturn this._isInteractive();\n\t}\n\n\tpublic contains(child: CanvasDisplayObject): boolean {\n\t\tfor (; ;) {\n\t\t\tif (child === this) {\n\t\t\t\treturn true;\n\n\t\t\t} else if (child._parent) {\n\t\t\t\tchild = child._parent;\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\ttoGlobal(point: IPoint): IPoint {\n\t\treturn this._matrix.apply(point);\n\t}\n\n\ttoLocal(point: IPoint): IPoint {\n\t\treturn this._matrix.applyInverse(point);\n\t}\n\n\tpublic getLocalMatrix(): Matrix {\n\t\tthis._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale);\n\t\treturn this._uMatrix;\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\t\t\tconst bn = 10000000;\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: bn,\n\t\t\t\ttop: bn,\n\t\t\t\tright: -bn,\n\t\t\t\tbottom: -bn\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tgetAdjustedBounds(bounds: IBounds): IBounds {\n\t\tthis._setMatrix();\n\n\t\tconst matrix = this.getLocalMatrix();\n\n\t\tconst p0 = matrix.apply({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = matrix.apply({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = matrix.apply({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = matrix.apply({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\ton<C, Key extends keyof IRendererEvents>(key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tif (this.interactive) {\n\t\t\treturn this._renderer._addEvent(this, key, callback, context);\n\n\t\t} else {\n\t\t\treturn new Disposer(() => { });\n\t\t}\n\t}\n\n\tpublic _setMatrix(): void {\n\t\t// TODO only calculate this if it has actually changed\n\t\tthis._localMatrix.setTransform(\n\t\t\tthis.x,\n\t\t\tthis.y,\n\t\t\tthis.pivot.x,\n\t\t\tthis.pivot.y,\n\t\t\t// Converts degrees to radians\n\t\t\tthis.angle * Math.PI / 180,\n\t\t\tthis.scale\n\t\t);\n\n\t\tthis._matrix.copyFrom(this._localMatrix);\n\n\t\tif (this._parent) {\n\t\t\t// TODO only calculate this if it has actually changed\n\t\t\tthis._matrix.prepend(this._parent._matrix);\n\t\t}\n\t}\n\n\tpublic _transform(context: CanvasRenderingContext2D, resolution: number): void {\n\t\tconst m = this._matrix;\n\t\tcontext.setTransform(\n\t\t\tm.a * resolution,\n\t\t\tm.b * resolution,\n\t\t\tm.c * resolution,\n\t\t\tm.d * resolution,\n\t\t\tm.tx * resolution,\n\t\t\tm.ty * resolution\n\t\t);\n\t}\n\n\tpublic render(parentLayer: CanvasLayer): void {\n\t\tif (this.visible && (this.exportable !== false || !this._renderer._omitTainted)) {\n\t\t\tthis._setMatrix();\n\n\t\t\tconst resolution = this._renderer.resolution;\n\n\t\t\tconst layers = this._renderer.layers;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t}\n\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.context.save();\n\n\t\t\t\t\t// We must apply the mask before we transform the element\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tmask._transform(layer.context, layer.scale || resolution);\n\t\t\t\t\t\tmask._runPath(layer.context);\n\t\t\t\t\t\tlayer.context.clip();\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer.context.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\t\t\tthis._transform(layer.context, layer.scale || resolution);\n\n\t\t\t\t\tif (this.filter) {\n\t\t\t\t\t\tlayer.context.filter = this.filter;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tghostContext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tif (mask && this._isInteractiveMask()) {\n\t\t\t\tmask._transform(ghostContext, resolution);\n\t\t\t\tmask._runPath(ghostContext);\n\t\t\t\tghostContext.clip();\n\t\t\t}\n\n\t\t\tthis._transform(ghostContext, resolution);\n\n\t\t\tthis._render(parentLayer);\n\n\t\t\tghostContext.restore();\n\n\t\t\t$array.each(layers, (layer) => {\n\t\t\t\tif (layer) {\n\t\t\t\t\tlayer.context.restore();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tif (this.exportable === false) {\n\t\t\tconst layer = this._layer || parentLayer;\n\t\t\tlayer.tainted = true;\n\t\t}\n\t}\n\n\thovering(): boolean {\n\t\treturn this._renderer._hovering.has(this);\n\t}\n\n\tdragging(): boolean {\n\t\treturn this._renderer._dragging.some((x) => x.value === this);\n\t}\n\n\tpublic dispose() {\n\t\tthis.getLayer().dirty = true;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasContainer extends CanvasDisplayObject implements IContainer {\n\tpublic interactiveChildren: boolean = true;\n\tprivate _childLayers?: CanvasLayer[];\n\n\tprotected _children: Array<CanvasDisplayObject> = [];\n\n\tprotected _isInteractiveMask(): boolean {\n\t\treturn this.interactiveChildren || super._isInteractiveMask();\n\t}\n\n\taddChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = this;\n\t\tthis._children.push(child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\taddChildAt(child: CanvasDisplayObject, index: number): void {\n\t\tchild._parent = this;\n\t\tthis._children.splice(index, 0, child);\n\t\tif (child._layer) {\n\t\t\tthis.registerChildLayer(child._layer);\n\t\t}\n\t}\n\n\tremoveChild(child: CanvasDisplayObject): void {\n\t\tchild._parent = undefined;\n\t\t$array.removeFirst(this._children, child);\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tconst renderer = this._renderer;\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t++renderer._forceInteractive;\n\t\t}\n\n\t\tconst layer = this._layer || parentLayer;\n\n\t\t$array.each(this._children, (child) => {\n\t\t\tchild.compoundAlpha = this.compoundAlpha * this.alpha;\n\t\t\tchild.render(layer);\n\t\t});\n\n\t\tif (this.interactive && this.interactiveChildren) {\n\t\t\t--renderer._forceInteractive;\n\t\t}\n\t}\n\n\tregisterChildLayer(layer: CanvasLayer): void {\n\t\tif (!this._childLayers) {\n\t\t\tthis._childLayers = [];\n\t\t}\n\t\t$array.pushOne(this._childLayers, layer);\n\t\tif (this._parent) {\n\t\t\tthis._parent.registerChildLayer(layer);\n\t\t}\n\t}\n\n\tpublic markDirtyLayer(deep: boolean = false): void {\n\t\tsuper.markDirtyLayer();\n\t\tif (deep && this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => layer.dirty = true);\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tsuper.dispose();\n\t\tif (this._childLayers) {\n\t\t\t$array.each(this._childLayers, (layer) => {\n\t\t\t\tlayer.dirty = true;\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nfunction setPoint(bounds: IBounds, point: IPoint): void {\n\tbounds.left = Math.min(bounds.left, point.x);\n\tbounds.top = Math.min(bounds.top, point.y);\n\tbounds.right = Math.max(bounds.right, point.x);\n\tbounds.bottom = Math.max(bounds.bottom, point.y);\n}\n\n/**\n * @ignore\n */\nabstract class Op {\n\tpublic colorize(_context: CanvasRenderingContext2D, _forceColor: string | undefined): void { }\n\n\tpublic path(_context: CanvasRenderingContext2D): void { }\n\n\tpublic addBounds(_bounds: IBounds): void { }\n}\n\n/**\n * @ignore\n */\nclass BeginFill extends Op {\n\tconstructor(public color: string | CanvasGradient | CanvasPattern) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.fillStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndFill extends Op {\n\tconstructor(public clearShadow: boolean) { super(); }\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.fill();\n\t\tif (this.clearShadow) {\n\t\t\tcontext.shadowColor = \"\";\n\t\t\tcontext.shadowBlur = 0;\n\t\t\tcontext.shadowOffsetX = 0;\n\t\t\tcontext.shadowOffsetY = 0;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\nclass EndStroke extends Op {\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.stroke();\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineStyle extends Op {\n\tconstructor(public width: number, public color: string | CanvasGradient | CanvasPattern) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, forceColor: string | undefined): void {\n\t\tif (forceColor !== undefined) {\n\t\t\tcontext.strokeStyle = forceColor;\n\n\t\t} else {\n\t\t\tcontext.strokeStyle = this.color;\n\t\t}\n\n\t\tcontext.lineWidth = this.width;\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDash extends Op {\n\tconstructor(public dash: number[]) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.setLineDash(this.dash);\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineDashOffset extends Op {\n\tconstructor(public dashOffset: number) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tcontext.lineDashOffset = this.dashOffset;\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawRect extends Op {\n\tconstructor(public x: number, public y: number, public width: number, public height: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.rect(this.x, this.y, this.width, this.height);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tconst l = this.x;\n\t\tconst t = this.y;\n\t\tconst r = l + this.width;\n\t\tconst b = t + this.height;\n\n\t\tsetPoint(bounds, { x: l, y: t });\n\t\tsetPoint(bounds, { x: r, y: t });\n\t\tsetPoint(bounds, { x: l, y: b });\n\t\tsetPoint(bounds, { x: r, y: b });\n\t}\n}\n\n/**\n * @ignore\n */\nclass DrawCircle extends Op {\n\tconstructor(public x: number, public y: number, public radius: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x + this.radius, this.y);\n\t\tcontext.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);\n\t}\n\n\t// TODO handle skewing and rotation\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x - this.radius, y: this.y - this.radius });\n\t\tsetPoint(bounds, { x: this.x + this.radius, y: this.y + this.radius });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Arc extends Op {\n\tconstructor(\n\t\tpublic cx: number,\n\t\tpublic cy: number,\n\t\tpublic radius: number,\n\t\tpublic startAngle: number,\n\t\tpublic endAngle: number,\n\t\tpublic anticlockwise: boolean,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);\n\t\t}\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tlet arcBounds = $math.getArcBounds(this.cx, this.cy, this.startAngle * $math.DEGREES, this.endAngle * $math.DEGREES, this.radius);\n\t\tsetPoint(bounds, { x: arcBounds.left, y: arcBounds.top });\n\t\tsetPoint(bounds, { x: arcBounds.right, y: arcBounds.bottom });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ArcTo extends Op {\n\tconstructor(\n\t\tpublic x1: number,\n\t\tpublic y1: number,\n\t\tpublic x2: number,\n\t\tpublic y2: number,\n\t\tpublic radius: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tif (this.radius > 0) {\n\t\t\tcontext.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);\n\t\t}\n\t}\n\n\t// TODO: add points\n\tpublic addBounds(_bounds: IBounds): void {\n\t\t/*\n\t\t// not finished\n\t\thttps://math.stackexchange.com/questions/1781438/finding-the-center-of-a-circle-given-two-points-and-a-radius-algebraically\n\n\t\tif (prevPoint) {\n\t\t\tlet x1 = prevPoint.x;\n\t\t\tlet y1 = prevPoint.y;\n\t\t\tlet x2 = this.x2;\n\t\t\tlet y2 = this.y2;\n\t\t\tlet r = this.radius;\n\n\t\t\tlet xa = (x2 - x1) / 2;\n\t\t\tlet ya = (y2 - y1) / 2;\n\n\t\t\tlet x0 = x1 + xa;\n\t\t\tlet y0 = y1 + ya;\n\n\t\t\tlet a = Math.hypot(xa, ya);\n\t\t\tlet b = Math.sqrt(r * r - a * a);\n\n\t\t\tlet cx = x0 + b * ya / a;\n\t\t\tlet cy = y0 - b * xa / a;\n\n\t\t\tconsole.log(cx, cy);\n\t\t}*/\n\t}\n}\n\n/**\n * @ignore\n */\nclass LineTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.lineTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass MoveTo extends Op {\n\tconstructor(public x: number, public y: number) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.moveTo(this.x, this.y);\n\t}\n\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.x, y: this.y });\n\t}\n}\n\n/**\n * @ignore\n */\nclass ClosePath extends Op {\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.closePath();\n\t}\n}\n\n/**\n * @ignore\n */\nclass BezierCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic cpX2: number,\n\t\tpublic cpY2: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.cpX2, y: this.cpY2 });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass QuadraticCurveTo extends Op {\n\tconstructor(\n\t\tpublic cpX: number,\n\t\tpublic cpY: number,\n\t\tpublic toX: number,\n\t\tpublic toY: number,\n\t) { super(); }\n\n\tpublic path(context: CanvasRenderingContext2D): void {\n\t\tcontext.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);\n\t}\n\n\t// TODO: OK?\n\tpublic addBounds(bounds: IBounds): void {\n\t\tsetPoint(bounds, { x: this.cpX, y: this.cpY });\n\t\tsetPoint(bounds, { x: this.toX, y: this.toY });\n\t}\n}\n\n/**\n * @ignore\n */\nclass Shadow extends Op {\n\tconstructor(\n\t\tpublic color: string,\n\t\tpublic blur?: number,\n\t\tpublic offsetX?: number,\n\t\tpublic offsetY?: number,\n\t\tpublic opacity?: number\n\t) { super(); }\n\n\tpublic colorize(context: CanvasRenderingContext2D, _forceColor: string | undefined): void {\n\t\tif (this.opacity) {\n\t\t\tcontext.fillStyle = this.color;\n\t\t}\n\t\tcontext.shadowColor = this.color;\n\t\tif (this.blur) {\n\t\t\tcontext.shadowBlur = this.blur;\n\t\t}\n\t\tif (this.offsetX) {\n\t\t\tcontext.shadowOffsetX = this.offsetX;\n\t\t}\n\t\tif (this.offsetY) {\n\t\t\tcontext.shadowOffsetY = this.offsetY;\n\t\t}\n\t}\n}\n\n\n/**\n * @ignore\n */\nexport class CanvasGraphics extends CanvasDisplayObject implements IGraphics {\n\tprotected _operations: Array<Op> = [];\n\n\tpublic blendMode: BlendMode = BlendMode.NORMAL;\n\n\tprotected _hasShadows: boolean = false;\n\tprotected _fillAlpha?: number;\n\tprotected _strokeAlpha?: number;\n\n\tclear(): void {\n\t\tsuper.clear();\n\t\tthis._operations.length = 0;\n\t}\n\n\tprotected _pushOp(op: Op): void {\n\t\tthis._operations.push(op);\n\t}\n\n\tbeginFill(color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1): void {\n\t\tthis._fillAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new BeginFill(color.toCSS(alpha)));\n\n\t\t\t} else {\n\t\t\t\tthis.isMeasured = true;\n\t\t\t\tthis._pushOp(new BeginFill(color));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new BeginFill(\"rgba(0, 0, 0, \" + alpha + \")\"));\n\t\t}\n\t}\n\n\tendFill(): void {\n\t\tthis._pushOp(new EndFill(this._hasShadows));\n\t}\n\n\tendStroke(): void {\n\t\tthis._pushOp(new EndStroke());\n\t}\n\n\tlineStyle(width: number = 0, color?: Color | CanvasGradient | CanvasPattern, alpha: number = 1): void {\n\t\tthis._strokeAlpha = alpha;\n\t\tif (color) {\n\t\t\tif (color instanceof Color) {\n\t\t\t\tthis._pushOp(new LineStyle(width, color.toCSS(alpha)));\n\t\t\t} else {\n\t\t\t\tthis._pushOp(new LineStyle(width, color));\n\t\t\t}\n\t\t} else {\n\t\t\tthis._pushOp(new LineStyle(width, \"rgba(0, 0, 0, \" + alpha + \")\"));\n\t\t}\n\t}\n\n\tsetLineDash(dash?: number[]): void {\n\t\tthis._pushOp(new LineDash(dash ? dash : []));\n\t}\n\n\tsetLineDashOffset(dashOffset?: number): void {\n\t\tthis._pushOp(new LineDashOffset(dashOffset || 0));\n\t}\n\n\tdrawRect(x: number, y: number, width: number, height: number): void {\n\t\tthis._pushOp(new DrawRect(x, y, width, height));\n\t}\n\n\tdrawCircle(x: number, y: number, radius: number): void {\n\t\tthis._pushOp(new DrawCircle(x, y, radius));\n\t}\n\n\tarc(cx: number, cy: number, radius: number, startAngle: number, endAngle: number, anticlockwise: boolean = false): void {\n\t\tthis._pushOp(new Arc(cx, cy, radius, startAngle, endAngle, anticlockwise));\n\t}\n\n\tarcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void {\n\t\tthis._pushOp(new ArcTo(x1, y1, x2, y2, radius));\n\t}\n\n\tlineTo(x: number, y: number): void {\n\t\tthis._pushOp(new LineTo(x, y));\n\t}\n\n\tmoveTo(x: number, y: number): void {\n\t\tthis._pushOp(new MoveTo(x, y));\n\t}\n\n\tbezierCurveTo(cpX: number, cpY: number, cpX2: number, cpY2: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new BezierCurveTo(cpX, cpY, cpX2, cpY2, toX, toY));\n\t}\n\n\tquadraticCurveTo(cpX: number, cpY: number, toX: number, toY: number): void {\n\t\tthis._pushOp(new QuadraticCurveTo(cpX, cpY, toX, toY));\n\t}\n\n\tclosePath(): void {\n\t\tthis._pushOp(new ClosePath());\n\t}\n\n\tshadow(color: Color, blur?: number, offsetX?: number, offsetY?: number, opacity?: number): void {\n\t\tthis._hasShadows = true;\n\t\tthis._pushOp(new Shadow(opacity ? color.toCSS(opacity) : color.toCSS(this._fillAlpha || this._strokeAlpha), blur, offsetX, offsetY));\n\t}\n\n\t// https://svgwg.org/svg2-draft/paths.html#DProperty\n\t// TODO better error checking\n\tsvgPath(path: string): void {\n\t\tlet x = 0;\n\t\tlet y = 0;\n\t\tlet cpx: number | null = null;\n\t\tlet cpy: number | null = null;\n\t\tlet qcpx: number | null = null;\n\t\tlet qcpy: number | null = null;\n\n\t\tconst SEGMENTS_REGEXP = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g;\n\t\tconst ARGS_REGEXP = /[\\u0009\\u0020\\u000A\\u000C\\u000D]*([\\+\\-]?[0-9]*\\.?[0-9]+(?:[eE][\\+\\-]?[0-9]+)?)[\\u0009\\u0020\\u000A\\u000C\\u000D]*,?/g;\n\n\t\tlet match;\n\n\t\twhile ((match = SEGMENTS_REGEXP.exec(path)) !== null) {\n\t\t\tconst name = match[1];\n\t\t\tconst rest = match[2];\n\n\t\t\tconst args = [];\n\n\t\t\twhile ((match = ARGS_REGEXP.exec(rest)) !== null) {\n\t\t\t\targs.push(+match[1]);\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"S\" && name !== \"s\" && name !== \"C\" && name !== \"c\") {\n\t\t\t\tcpx = null;\n\t\t\t\tcpy = null;\n\t\t\t}\n\n\t\t\t// Reset control point\n\t\t\tif (name !== \"Q\" && name !== \"q\" && name !== \"T\" && name !== \"t\") {\n\t\t\t\tqcpx = null;\n\t\t\t\tqcpy = null;\n\t\t\t}\n\n\t\t\tswitch (name) {\n\t\t\t\tcase \"M\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx = args[0];\n\t\t\t\t\ty = args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx = args[i];\n\t\t\t\t\t\ty = args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"m\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tx += args[0];\n\t\t\t\t\ty += args[1];\n\t\t\t\t\tthis.moveTo(x, y);\n\n\t\t\t\t\tfor (let i = 2; i < args.length; i += 2) {\n\t\t\t\t\t\tx += args[i];\n\t\t\t\t\t\ty += args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"L\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx = args[i];\n\t\t\t\t\t\ty = args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"l\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tx += args[i];\n\t\t\t\t\t\ty += args[i + 1];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"H\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx = args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"h\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\tx += args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"V\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty = args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"v\":\n\t\t\t\t\tcheckMinArgs(name, args.length, 1);\n\t\t\t\t\tfor (let i = 0; i < args.length; ++i) {\n\t\t\t\t\t\ty += args[i];\n\t\t\t\t\t\tthis.lineTo(x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"C\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = args[i];\n\t\t\t\t\t\tconst y1 = args[i + 1];\n\t\t\t\t\t\tcpx = args[i + 2];\n\t\t\t\t\t\tcpy = args[i + 3];\n\t\t\t\t\t\tx = args[i + 4];\n\t\t\t\t\t\ty = args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"c\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 6);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 6) {\n\t\t\t\t\t\tconst x1 = args[i] + x;\n\t\t\t\t\t\tconst y1 = args[i + 1] + y;\n\t\t\t\t\t\tcpx = args[i + 2] + x;\n\t\t\t\t\t\tcpy = args[i + 3] + y;\n\t\t\t\t\t\tx += args[i + 4];\n\t\t\t\t\t\ty += args[i + 5];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"S\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = args[i];\n\t\t\t\t\t\tcpy = args[i + 1];\n\t\t\t\t\t\tx = args[i + 2];\n\t\t\t\t\t\ty = args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"s\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tif (cpx === null || cpy === null) {\n\t\t\t\t\t\tcpx = x;\n\t\t\t\t\t\tcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tconst x1 = 2 * x - cpx;\n\t\t\t\t\t\tconst y1 = 2 * y - cpy;\n\t\t\t\t\t\tcpx = args[i] + x;\n\t\t\t\t\t\tcpy = args[i + 1] + y;\n\t\t\t\t\t\tx += args[i + 2];\n\t\t\t\t\t\ty += args[i + 3];\n\t\t\t\t\t\tthis.bezierCurveTo(x1, y1, cpx, cpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"Q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = args[i];\n\t\t\t\t\t\tqcpy = args[i + 1];\n\t\t\t\t\t\tx = args[i + 2];\n\t\t\t\t\t\ty = args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"q\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 4);\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 4) {\n\t\t\t\t\t\tqcpx = args[i] + x;\n\t\t\t\t\t\tqcpy = args[i + 1] + y;\n\t\t\t\t\t\tx += args[i + 2];\n\t\t\t\t\t\ty += args[i + 3];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"T\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx = args[i];\n\t\t\t\t\t\ty = args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"t\":\n\t\t\t\t\tcheckEvenArgs(name, args.length, 2);\n\t\t\t\t\tif (qcpx === null || qcpy === null) {\n\t\t\t\t\t\tqcpx = x;\n\t\t\t\t\t\tqcpy = y;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 2) {\n\t\t\t\t\t\tqcpx = 2 * x - qcpx;\n\t\t\t\t\t\tqcpy = 2 * y - qcpy;\n\t\t\t\t\t\tx += args[i];\n\t\t\t\t\t\ty += args[i + 1];\n\t\t\t\t\t\tthis.quadraticCurveTo(qcpx, qcpy, x, y);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase \"A\":\n\t\t\t\tcase \"a\":\n\t\t\t\t\tconst relative = (name === \"a\");\n\n\t\t\t\t\tcheckEvenArgs(name, args.length, 7);\n\n\t\t\t\t\tfor (let i = 0; i < args.length; i += 7) {\n\t\t\t\t\t\tlet cx = args[i + 5];\n\t\t\t\t\t\tlet cy = args[i + 6];\n\n\t\t\t\t\t\tif (relative) {\n\t\t\t\t\t\t\tcx += x;\n\t\t\t\t\t\t\tcy += y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst bs = arcToBezier({\n\t\t\t\t\t\t\tpx: x,\n\t\t\t\t\t\t\tpy: y,\n\t\t\t\t\t\t\trx: args[i],\n\t\t\t\t\t\t\try: args[i + 1],\n\t\t\t\t\t\t\txAxisRotation: args[i + 2],\n\t\t\t\t\t\t\tlargeArcFlag: assertBinary(args[i + 3]),\n\t\t\t\t\t\t\tsweepFlag: assertBinary(args[i + 4]),\n\t\t\t\t\t\t\tcx,\n\t\t\t\t\t\t\tcy,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t$array.each(bs, (b) => {\n\t\t\t\t\t\t\tthis.bezierCurveTo(b.x1, b.y1, b.x2, b.y2, b.x, b.y);\n\t\t\t\t\t\t\tx = b.x;\n\t\t\t\t\t\t\ty = b.y;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Z\":\n\t\t\t\tcase \"z\":\n\t\t\t\t\tcheckArgs(name, args.length, 0);\n\t\t\t\t\tthis.closePath();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _runPath(context: CanvasRenderingContext2D): void {\n\t\tcontext.beginPath();\n\n\t\t$array.each(this._operations, (op) => {\n\t\t\top.path(context);\n\t\t});\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tconst layer = this._layer || parentLayer;\n\n\t\tconst layerDirty = layer.dirty;\n\t\tconst interactive = this._isInteractive();\n\n\t\t// if (this.targetLayer) {\n\t\t// \tconsole.log(this._operations, layer)\n\t\t// }\n\n\t\tif (layerDirty || interactive) {\n\n\t\t\tconst context = layer.context;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t\tif (layerDirty) {\n\t\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\t\tcontext.beginPath();\n\t\t\t}\n\n\t\t\tlet color: string | undefined;\n\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.beginPath();\n\t\t\t\tcolor = this._getColorId();\n\t\t\t}\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\tif (layerDirty) {\n\t\t\t\t\top.path(context);\n\t\t\t\t\top.colorize(context, undefined);\n\t\t\t\t}\n\n\t\t\t\tif (interactive) {\n\t\t\t\t\top.path(ghostContext);\n\t\t\t\t\top.colorize(ghostContext, color);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic renderDetached(context: CanvasRenderingContext2D): void {\n\t\tif (this.visible) {\n\t\t\tthis._setMatrix();\n\n\t\t\tcontext.save();\n\n\t\t\t// We must apply the mask before we transform the element\n\t\t\tconst mask = this.mask;\n\t\t\tif (mask) {\n\t\t\t\tmask._setMatrix();\n\t\t\t\tmask._transform(context, 1);\n\t\t\t\tmask._runPath(context);\n\t\t\t\tcontext.clip();\n\t\t\t}\n\n\t\t\t// TODO handle compoundAlpha somehow ?\n\t\t\tcontext.globalAlpha = this.compoundAlpha * this.alpha;\n\n\t\t\tthis._transform(context, 1);\n\n\t\t\tif (this.filter) {\n\t\t\t\tcontext.filter = this.filter;\n\t\t\t}\n\n\t\t\tcontext.globalCompositeOperation = this.blendMode;\n\n\t\t\tcontext.beginPath();\n\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.path(context);\n\t\t\t\top.colorize(context, undefined);\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t$array.each(this._operations, (op) => {\n\t\t\t\top.addBounds(bounds);\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface ILineChunk {\n\tstyle: string | undefined,\n\tfill: Color | undefined,\n\ttext: string,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\tascent: number,\n\toffsetX: number,\n\toffsetY: number,\n}\n\n/**\n * @ignore\n */\ninterface ILine {\n\toffsetY: number,\n\tascent: number,\n\twidth: number,\n\theight: number,\n\tleft: number,\n\tright: number,\n\ttextChunks: Array<ILineChunk>,\n}\n\n/**\n * @ignore\n */\nexport class CanvasText extends CanvasDisplayObject implements IText {\n\tpublic text: string;\n\tpublic style: CanvasTextStyle;\n\tpublic resolution: number = 1;\n\n\tprotected _textInfo: Array<ILine> | undefined;\n\tprotected _textVisible: boolean = true;\n\tprotected _originalScale?: number = 1;\n\n\tconstructor(renderer: CanvasRenderer, text: string, style: CanvasTextStyle) {\n\t\tsuper(renderer);\n\t\tthis.text = text;\n\t\tthis.style = style;\n\t}\n\n\tpublic invalidateBounds(): void {\n\t\tsuper.invalidateBounds();\n\t\tthis._textInfo = undefined;\n\t}\n\n\tprivate _shared(context: CanvasRenderingContext2D) {\n\t\tif (this.style.textAlign) {\n\t\t\tcontext.textAlign = this.style.textAlign;\n\t\t}\n\n\t\tif (this.style.direction) {\n\t\t\tcontext.direction = this.style.direction;\n\t\t}\n\n\t\tif (this.style.textBaseline) {\n\t\t\tcontext.textBaseline = this.style.textBaseline;\n\t\t}\n\n\t}\n\n\tprotected _prerender(layer: CanvasLayer, ignoreGhost = false, ignoreFontWeight = false): void {\n\t\tsuper._render(layer);\n\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Font style\n\n\t\tconst style = this.style;\n\t\tlet fontStyle = this._getFontStyle(undefined, ignoreFontWeight);\n\n\t\tcontext.font = fontStyle;\n\t\tif (this._isInteractive() && !ignoreGhost) {\n\t\t\tghostContext.font = fontStyle;\n\t\t}\n\n\t\t// Other parameters\n\t\tif (style.fill) {\n\t\t\tif (style.fill instanceof Color) {\n\t\t\t\tcontext.fillStyle = style.fill.toCSS();\n\t\t\t} else {\n\t\t\t\tcontext.fillStyle = style.fill;\n\t\t\t}\n\t\t}\n\n\t\tif (style.shadowColor) {\n\t\t\tlayer.context.shadowColor = style.shadowColor.toCSS(style.shadowOpacity || 1);\n\t\t}\n\t\tif (style.shadowBlur) {\n\t\t\tlayer.context.shadowBlur = style.shadowBlur;\n\t\t}\n\t\tif (style.shadowOffsetX) {\n\t\t\tlayer.context.shadowOffsetX = style.shadowOffsetX;\n\t\t}\n\t\tif (style.shadowOffsetY) {\n\t\t\tlayer.context.shadowOffsetY = style.shadowOffsetY;\n\t\t}\n\n\t\tthis._shared(context);\n\n\t\tif (this._isInteractive() && !ignoreGhost) {\n\t\t\tghostContext.fillStyle = this._getColorId();\n\t\t\tthis._shared(ghostContext);\n\t\t}\n\t}\n\n\tprotected _getFontStyle(style2?: ITextStyle, ignoreFontWeight = false): string {\n\n\t\t// Process defaults\n\t\tconst style = this.style;\n\t\tlet fontStyle: string[] = [];\n\n\t\tif (style2 && style2.fontVariant) {\n\t\t\tfontStyle.push(style2.fontVariant);\n\t\t}\n\t\telse if (style.fontVariant) {\n\t\t\tfontStyle.push(style.fontVariant);\n\t\t}\n\n\t\tif (!ignoreFontWeight) {\n\t\t\tif (style2 && style2.fontWeight) {\n\t\t\t\tfontStyle.push(style2.fontWeight);\n\t\t\t}\n\t\t\telse if (style.fontWeight) {\n\t\t\t\tfontStyle.push(style.fontWeight);\n\t\t\t}\n\t\t}\n\n\t\tif (style2 && style2.fontStyle) {\n\t\t\tfontStyle.push(style2.fontStyle);\n\t\t}\n\t\telse if (style.fontStyle) {\n\t\t\tfontStyle.push(style.fontStyle);\n\t\t}\n\n\t\tif (style2 && style2.fontSize) {\n\t\t\tif ($type.isNumber(style2.fontSize)) {\n\t\t\t\tstyle2.fontSize = style2.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style2.fontSize);\n\t\t}\n\t\telse if (style.fontSize) {\n\t\t\tif ($type.isNumber(style.fontSize)) {\n\t\t\t\tstyle.fontSize = style.fontSize + \"px\";\n\t\t\t}\n\t\t\tfontStyle.push(style.fontSize);\n\t\t}\n\n\t\tif (style2 && style2.fontFamily) {\n\t\t\tfontStyle.push(style2.fontFamily);\n\t\t}\n\t\telse if (style.fontFamily) {\n\t\t\tfontStyle.push(style.fontFamily);\n\t\t}\n\t\telse if (fontStyle.length) {\n\t\t\tfontStyle.push(\"Arial\");\n\t\t}\n\n\t\treturn fontStyle.join(\" \");\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tconst layer = this._layer || parentLayer;\n\n\t\t// We need measurements in order to properly position text for alignment\n\t\tif (!this._textInfo) {\n\t\t\tthis._measure(layer);\n\t\t}\n\n\t\tif (this._textVisible) {\n\n\t\t\tconst interactive = this._isInteractive();\n\t\t\tconst context = layer.context;\n\t\t\tconst layerDirty = layer.dirty;\n\t\t\tconst ghostContext = this._renderer._ghostContext;\n\n\n\t\t\t//console.log(\"interactive:\",  interactive, \"layerDirty:\", layerDirty);\n\n\t\t\tcontext.save();\n\t\t\tghostContext.save();\n\t\t\tthis._prerender(layer);\n\n\t\t\t// const lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\t\t// const x = this._localBounds && (this._localBounds.left < 0) ? Math.abs(this._localBounds.left) : 0;\n\n\n\n\t\t\t// Process text info produced by _measure()\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t\t// Set style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\t\tif (this._isInteractive()) {\n\t\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw text\n\t\t\t\t\tif (layerDirty) {\n\t\t\t\t\t\tcontext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (interactive && this.interactive) {\n\t\t\t\t\t\t// Draw text in ghost canvas ONLY if it is set as interactive\n\t\t\t\t\t\t// explicitly. This way we avoid hit test anomalies caused by anti\n\t\t\t\t\t\t// aliasing of text.\n\t\t\t\t\t\tghostContext.fillText(chunk.text, chunk.offsetX, line.offsetY + chunk.offsetY);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (chunk.fill) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset style\n\t\t\t\t\tif (chunk.style) {\n\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t}\n\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\t}\n\n\tpublic _addBounds(bounds: IBounds): void {\n\t\tif (this.visible && this.isMeasured) {\n\t\t\t//if (this._textVisible) {\n\t\t\tconst x = this._measure(this.getLayer());\n\t\t\tsetPoint(bounds, { x: x.left, y: x.top });\n\t\t\tsetPoint(bounds, { x: x.right, y: x.bottom });\n\t\t\t//}\n\t\t}\n\t}\n\n\tpublic _measure(layer: CanvasLayer): IBounds {\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Reset text info\n\t\tthis._textInfo = [];\n\n\t\t// Init\n\t\tconst oversizedBehavior = this.style.oversizedBehavior;\n\t\tconst maxWidth = this.style.maxWidth!;\n\n\t\tconst truncate = $type.isNumber(maxWidth) && oversizedBehavior == \"truncate\";\n\t\tconst wrap = $type.isNumber(maxWidth) && oversizedBehavior == \"wrap\";\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(layer, true, true);\n\n\t\t// Get default font metrix\n\t\tconst refText = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 \";\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\t\tlet minX = 0;\n\t\tlet maxX = 0;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks: ITextChunk[];\n\t\t\tif (line == \"\") {\n\t\t\t\tchunks = [{\n\t\t\t\t\ttype: \"value\",\n\t\t\t\t\ttext: \"\"\n\t\t\t\t}];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\t\t\t}\n\n\t\t\twhile (chunks.length > 0) {\n\n\t\t\t\t// Init line object\n\t\t\t\tlet lineInfo: ILine = {\n\t\t\t\t\toffsetY: offsetY,\n\t\t\t\t\tascent: 0,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\theight: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttextChunks: []\n\t\t\t\t};\n\n\t\t\t\t// Measure reference text\n\t\t\t\tconst metrics = this._measureText(refText, context);\n\n\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\tlineInfo.height = height;\n\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\n\t\t\t\tlet currentStyle: string | undefined;\n\t\t\t\tlet currentFormat: string;\n\t\t\t\tlet currentFill: Color | undefined;\n\t\t\t\tlet currentChunkWidth: number | undefined;\n\t\t\t\tlet skipFurtherText = false;\n\t\t\t\tlet firstTextChunk = true;\n\t\t\t\tlet leftoverChunks: Array<ITextChunk> = [];\n\t\t\t\t//let offsetX = 0;\n\t\t\t\t//let chunk;\n\n\t\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t\t$array.eachContinue(chunks, (chunk, index) => {\n\n\t\t\t\t\t// Format chunk\n\t\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\t\tcurrentFormat = chunk.text;\n\t\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstyleRestored = false;\n\n\t\t\t\t\t\t\t// Measure reference text after change of format\n\t\t\t\t\t\t\tconst metrics = this._measureText(refText, context);\n\t\t\t\t\t\t\tconst height = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\t\tif (height > lineInfo.height) {\n\t\t\t\t\t\t\t\tlineInfo.height = height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Text chunk\n\t\t\t\t\telse if (chunk.type == \"value\" && !skipFurtherText) {\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(chunk.text, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t// Check for fit\n\t\t\t\t\t\tif (truncate) {\n\n\t\t\t\t\t\t\t// Break words?\n\t\t\t\t\t\t\tlet breakWords = firstTextChunk || this.style.breakWords || false;\n\n\t\t\t\t\t\t\t// Measure ellipsis and check if it fits\n\t\t\t\t\t\t\tconst ellipsis = this.style.ellipsis || \"\";\n\t\t\t\t\t\t\tconst ellipsisMetrics = this._measureText(ellipsis, context);\n\t\t\t\t\t\t\tconst ellipsisWidth = ellipsisMetrics.actualBoundingBoxLeft + ellipsisMetrics.actualBoundingBoxRight;\n\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width - ellipsisWidth;\n\t\t\t\t\t\t\t\tchunk.text = this._truncateText(context, chunk.text, excessWidth, breakWords);\n\t\t\t\t\t\t\t\tchunk.text += ellipsis;\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (wrap) {\n\t\t\t\t\t\t\t// Check fit\n\t\t\t\t\t\t\tif ((lineInfo.width + chunkWidth) > maxWidth) {\n\t\t\t\t\t\t\t\tconst excessWidth = maxWidth - lineInfo.width;\n\t\t\t\t\t\t\t\tconst tmpText = this._truncateText(context, chunk.text, excessWidth, false, firstTextChunk);\n\n\t\t\t\t\t\t\t\tif (tmpText == \"\") {\n\t\t\t\t\t\t\t\t\t// Unable to fit a single letter - hide the whole label\n\t\t\t\t\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//skipFurtherText = true;\n\n\t\t\t\t\t\t\t\t//Add remaining chunks for the next line\n\t\t\t\t\t\t\t\tleftoverChunks = chunks.slice(index + 1);\n\n\t\t\t\t\t\t\t\t//Add remaining text of current chunk if it was forced-cut\n\t\t\t\t\t\t\t\tif ($utils.trim(tmpText) != $utils.trim(chunk.text)) {\n\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\ttype: \"value\",\n\t\t\t\t\t\t\t\t\t\ttext: chunk.text.substr(tmpText.length)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tif (currentFormat) {\n\t\t\t\t\t\t\t\t\t\tleftoverChunks.unshift({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"format\",\n\t\t\t\t\t\t\t\t\t\t\ttext: currentFormat\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Set current chunk (truncated)\n\t\t\t\t\t\t\t\tchunk.text = tmpText;\n\n\t\t\t\t\t\t\t\tchunks = [];\n\t\t\t\t\t\t\t\tskipFurtherText = true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tlet leftBoundMod = 1;\n\t\t\t\t\t\tlet rightBoundMod = 1;\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\t// increase horizontal bounding boxes accordingly\n\t\t\t\t\t\t\tconst boundsMod = chunkWidth / currentChunkWidth\n\t\t\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\t\t\tleftBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\trightBoundMod = boundsMod;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\n\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft / leftBoundMod;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight / rightBoundMod;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: chunk.text,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: 0\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t//offsetX += chunkWidth;\n\n\t\t\t\t\t\tfirstTextChunk = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif (leftoverChunks) {\n\t\t\t\t\t\t//return false;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t\t//}\n\t\t\t\t});\n\n\t\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight.value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t\t\tlineInfo.ascent *= this.style.lineHeight || 1.2;\n\t\t\t\t}\n\n\t\t\t\tif (minX < lineInfo.left) {\n\t\t\t\t\tminX = lineInfo.left;\n\t\t\t\t}\n\n\t\t\t\tif (maxX < lineInfo.right) {\n\t\t\t\t\tmaxX = lineInfo.right;\n\t\t\t\t}\n\n\t\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\t\toffsetY += lineInfo.height;\n\n\t\t\t\t// Reset chunks so that it can proceed to the next line\n\t\t\t\tchunks = leftoverChunks || [];\n\t\t\t}\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo, _index: number) => {\n\t\t\tlet currentChunkOffset = 0\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetX = currentChunkOffset + chunk.left - lineInfo.left;\n\t\t\t\tchunk.offsetY += lineInfo.height - lineInfo.height * (this.style.baselineRatio || 0.19);\n\t\t\t\tcurrentChunkOffset += chunk.width;\n\t\t\t});\n\t\t});\n\n\t\tconst bounds = {\n\t\t\tleft: -minX,\n\t\t\ttop: 0,\n\t\t\tright: maxX,\n\t\t\tbottom: offsetY,\n\t\t};\n\n\t\t// We need to fit?\n\t\tif (oversizedBehavior !== \"none\") {\n\t\t\tconst ratio = this._fitRatio(bounds);\n\t\t\tif (ratio < 1) {\n\t\t\t\tif (oversizedBehavior == \"fit\") {\n\t\t\t\t\tif ($type.isNumber(this.style.minScale) && (ratio < this.style.minScale)) {\n\t\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!this._originalScale || this._originalScale == 1) {\n\t\t\t\t\t\t\tthis._originalScale = this.scale;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.scale = ratio;\n\t\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (oversizedBehavior == \"hide\") {\n\t\t\t\t\tthis._textVisible = false;\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\tswitch (this.style.textAlign) {\n\t\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\tcase \"end\":\n\t\t\t\t\t\t\tbounds.left = maxWidth;\n\t\t\t\t\t\t\tbounds.right = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\t\tbounds.left = -maxWidth / 2;\n\t\t\t\t\t\t\tbounds.right = maxWidth / 2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbounds.left = 0;\n\t\t\t\t\t\t\tbounds.right = maxWidth;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\t\tthis._originalScale = undefined;\n\t\t\t\t\tthis._textVisible = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.scale = this._originalScale || 1;\n\t\t\t\tthis._originalScale = undefined;\n\t\t\t\tthis._textVisible = true;\n\t\t\t}\n\t\t}\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn bounds;\n\t}\n\n\tprotected _fitRatio(bounds: IBounds): number {\n\t\tconst maxW = this.style.maxWidth;\n\t\tconst maxH = this.style.maxHeight;\n\t\tif (!$type.isNumber(maxW) && !$type.isNumber(maxH)) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst w = bounds.right - bounds.left;\n\t\tconst h = bounds.bottom - bounds.top;\n\t\treturn Math.min(maxW! / w || 1, maxH! / h || 1);\n\t}\n\n\tprotected _truncateText(context: CanvasRenderingContext2D, text: string, maxWidth: number, breakWords: boolean = false, fallbackBreakWords: boolean = true): string {\n\t\tlet width: number;\n\t\tdo {\n\t\t\tif (breakWords) {\n\t\t\t\ttext = text.slice(0, -1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet tmp = text.replace(/[^,;:!?\\\\\\/\\.\\s]+[,;:!?\\\\\\/\\.\\s]*$/g, \"\");\n\t\t\t\tif (tmp == \"\" && fallbackBreakWords) {\n\t\t\t\t\tbreakWords = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttext = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst metrics = this._measureText(text, context);\n\t\t\twidth = metrics.actualBoundingBoxLeft + metrics.actualBoundingBoxRight;\n\t\t} while ((width > maxWidth) && text != \"\");\n\t\treturn text;\n\t}\n\n\tprotected _measureText(text: string, context: CanvasRenderingContext2D): TextMetrics {\n\t\tlet metrics = context.measureText(text);\n\t\tlet fakeMetrics: any = {};\n\t\tif (metrics.actualBoundingBoxAscent == null) {\n\t\t\tconst div = document.createElement(\"div\");\n\t\t\tdiv.innerText = text;\n\t\t\tdiv.style.visibility = \"hidden\";\n\t\t\tdiv.style.position = \"absolute\";\n\t\t\tdiv.style.top = \"-1000000px;\"\n\t\t\tdiv.style.fontFamily = this.style.fontFamily || \"\";\n\t\t\tdiv.style.fontSize = this.style.fontSize + \"\";\n\t\t\tdocument.body.appendChild(div);\n\t\t\tconst bbox = div.getBoundingClientRect();\n\t\t\tdocument.body.removeChild(div);\n\t\t\tconst h = bbox.height;\n\t\t\tconst w = metrics.width;\n\t\t\tlet left = 0;\n\t\t\tlet right = w;\n\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: h,\n\t\t\t\tactualBoundingBoxDescent: 0,\n\t\t\t\tactualBoundingBoxLeft: left,\n\t\t\t\tactualBoundingBoxRight: right,\n\t\t\t\tfontBoundingBoxAscent: h,\n\t\t\t\tfontBoundingBoxDescent: 0,\n\t\t\t\twidth: w\n\t\t\t}\n\t\t\t//return fake;\n\t\t}\n\t\telse {\n\t\t\tfakeMetrics = {\n\t\t\t\tactualBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tactualBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\tactualBoundingBoxLeft: metrics.actualBoundingBoxLeft,\n\t\t\t\tactualBoundingBoxRight: metrics.actualBoundingBoxRight,\n\t\t\t\tfontBoundingBoxAscent: metrics.actualBoundingBoxAscent,\n\t\t\t\tfontBoundingBoxDescent: metrics.actualBoundingBoxDescent,\n\t\t\t\twidth: metrics.width\n\t\t\t}\n\t\t}\n\n\t\tconst w = metrics.width;\n\t\tswitch (this.style.textAlign) {\n\t\t\tcase \"right\":\n\t\t\tcase \"end\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = 0;\n\t\t\t\tbreak;\n\t\t\tcase \"center\":\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = w / 2;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w / 2;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tfakeMetrics.actualBoundingBoxLeft = 0;\n\t\t\t\tfakeMetrics.actualBoundingBoxRight = w;\n\t\t}\n\n\t\treturn fakeMetrics;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasTextStyle implements ITextStyle {\n\t//public wordWrapWidth: number = 100;\n\tpublic fill?: Color | CanvasGradient | CanvasPattern;\n\tpublic textAlign?: \"start\" | \"end\" | \"left\" | \"right\" | \"center\";\n\tpublic fontFamily?: string;\n\tpublic fontSize?: string | number;\n\tpublic fontWeight?: 'normal' | 'bold' | 'bolder' | 'lighter' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'\n\tpublic fontStyle?: 'normal' | 'italic' | 'oblique';\n\tpublic fontVariant?: \"normal\" | \"small-caps\";\n\tpublic shadowColor?: Color | null;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\t// leading?: number;\n\t// letterSpacing?: number;\n\tpublic lineHeight?: number | Percent = percent(120);\n\tpublic baselineRatio?: number = 0.19;\n\t// padding?: number;\n\t// stroke?: number;\n\t// strokeThickness?: number;\n\t// trim?: number;\n\t// wordWrap?: boolean;\n\tpublic direction?: \"ltr\" | \"rtl\";\n\tpublic textBaseline?: \"top\" | \"hanging\" | \"middle\" | \"alphabetic\" | \"ideographic\" | \"bottom\";\n\tpublic oversizedBehavior?: \"none\" | \"hide\" | \"fit\" | \"wrap\" | \"truncate\" = \"none\";\n\tpublic breakWords?: boolean = false;\n\tpublic ellipsis?: string = \"…\";\n\tpublic maxWidth?: number;\n\tpublic maxHeight?: number;\n\tpublic minScale?: number;\n\tpublic ignoreFormatting?: boolean = false;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRadialText extends CanvasText implements IRadialText {\n\tpublic textType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\" = \"circular\";\n\tpublic radius?: number;\n\tpublic startAngle?: number;\n\tpublic inside?: boolean = false;\n\tpublic orientation?: \"inward\" | \"outward\" | \"auto\" = \"auto\";\n\tpublic kerning?: number = 0;\n\n\tprivate _textReversed: boolean = false;\n\n\tpublic _render(parentLayer: CanvasLayer): void {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\tthis._renderCircular(parentLayer);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tsuper._render(parentLayer);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic _renderCircular(parentLayer: CanvasLayer): void {\n\t\tconst layer = this._layer || parentLayer;\n\n\t\tthis._prerender(layer);\n\n\t\tconst interactive = this._isInteractive();\n\t\tconst context = layer.context;\n\t\tconst layerDirty = layer.dirty;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Savepoint\n\t\tcontext.save();\n\t\tif (interactive) {\n\t\t\tghostContext.save();\n\t\t}\n\n\t\t// Init\n\t\tlet radius = (this.radius || 0);\n\t\tlet startAngle = (this.startAngle || 0);\n\t\tlet deltaAngle = 0;\n\t\tlet orientation = this.orientation;\n\t\tlet inward = orientation == \"auto\" ? \"auto\" : orientation == \"inward\";\n\t\tconst inside = this.inside;\n\t\tconst align = this.style.textAlign || \"left\";\n\t\tconst kerning = this.kerning || 0;\n\t\tlet clockwise = align == \"left\" ? 1 : -1;\n\t\tconst shouldReverse = !this._textReversed;\n\n\t\t// We need measurements in order to properly position text for alignment\n\t\tif (!this._textInfo) {\n\t\t\tthis._measure(layer);\n\t\t}\n\n\t\t// Check if we need to invert the whole stuff\n\t\tif (inward == \"auto\") {\n\t\t\t// Calc max angle so we know whether we need to flip it\n\t\t\tlet maxAngle = 0;\n\t\t\tlet midAngle = 0;\n\t\t\t$array.each(this._textInfo!, (line, _index) => {\n\t\t\t\tconst deltaAngle = startAngle + (line.width / (radius - line.height)) / 2 * -clockwise;\n\t\t\t\tif (deltaAngle > maxAngle) {\n\t\t\t\t\tmaxAngle = deltaAngle;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (align == \"left\") {\n\t\t\t\tmidAngle = (maxAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t}\n\t\t\telse if (align == \"right\") {\n\t\t\t\tmidAngle = (maxAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmidAngle = startAngle * $math.DEGREES;\n\t\t\t}\n\t\t\tmidAngle = $math.normalizeAngle(midAngle);\n\t\t\tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t}\n\n\t\tif (inward == true && shouldReverse) {\n\t\t\tthis._textInfo!.reverse();\n\t\t\tthis._textReversed = true;\n\t\t}\n\n\t\t// if ((inward == false && align == \"left\") || (inward == true && align == \"right\")) {\n\t\t// \tclockwise *= -1;\n\t\t// }\n\n\t\t// Process text info produced by _measure()\n\t\t$array.each(this._textInfo!, (line, _index) => {\n\n\t\t\tconst textHeight = line.height;\n\n\t\t\t// Adjust radius (for `inside = false`)\n\t\t\t// Radius adjustment for `inside = false` is below the line calculation\n\t\t\tif (!inside) {\n\t\t\t\tradius += textHeight;\n\t\t\t}\n\n\t\t\t// Reverse letters if we're painting them counter-clockwise\n\t\t\tif (((clockwise == -1 && inward) || (clockwise == 1 && !inward)) && shouldReverse) {\n\t\t\t\tline.textChunks.reverse();\n\t\t\t}\n\n\t\t\t// Init angles\n\t\t\tlet lineStartAngle = startAngle;\n\t\t\tdeltaAngle = 0;\n\n\t\t\t// Adjust for center-align\n\t\t\tif (align == \"center\") {\n\t\t\t\tlineStartAngle += (line.width / (radius - textHeight)) / 2 * -clockwise;\n\t\t\t\tdeltaAngle = lineStartAngle - startAngle;\n\t\t\t}\n\n\t\t\t// if (inward == \"auto\") {\n\t\t\t// \tlet midAngle;\n\t\t\t// \tif (align == \"left\") {\n\t\t\t// \t\tmidAngle = (lineStartAngle + deltaAngle / 2) * $math.DEGREES;\n\t\t\t// \t}\n\t\t\t// \telse if () {\n\t\t\t// \t\tmidAngle = (lineStartAngle - deltaAngle / 2) * $math.DEGREES;\n\t\t\t// \t}\n\t\t\t// \tinward = (midAngle >= 270) || (midAngle <= 90);\n\t\t\t// }\n\n\t\t\t// Rotate letters if they are facing outward\n\t\t\tlineStartAngle += (Math.PI * (inward ? 0 : 1)); // Rotate 180 if outward\n\n\t\t\t// Savepoint\n\t\t\tcontext.save();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.save();\n\t\t\t}\n\n\t\t\t// Assume starting angle\n\t\t\tcontext.rotate(lineStartAngle);\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.rotate(lineStartAngle);\n\t\t\t}\n\n\t\t\tlet angleShift = 0;\n\t\t\t$array.each(line.textChunks, (chunk, _index) => {\n\n\t\t\t\t// Draw the letter\n\t\t\t\tconst char = chunk.text;\n\t\t\t\tconst charWidth = chunk.width;\n\n\t\t\t\t// Rotate half a letter\n\t\t\t\tangleShift = (charWidth / 2) / (radius - textHeight) * clockwise;\n\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t}\n\n\t\t\t\t// Set style\n\t\t\t\tif (chunk.style) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tghostContext.save();\n\n\t\t\t\t\tcontext.font = chunk.style;\n\t\t\t\t\tif (interactive) {\n\t\t\t\t\t\tghostContext.font = chunk.style;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (chunk.fill) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.fillStyle = chunk.fill.toCSS();\n\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t}\n\n\t\t\t\t// Center letters\n\t\t\t\tcontext.textBaseline = \"middle\";\n\t\t\t\tcontext.textAlign = \"center\";\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.textBaseline = \"middle\";\n\t\t\t\t\tghostContext.textAlign = \"center\";\n\t\t\t\t}\n\n\t\t\t\t// Plop the letter\n\t\t\t\tif (layerDirty) {\n\t\t\t\t\tcontext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t}\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.fillText(char, 0, (inward ? 1 : -1) * (0 - radius + textHeight / 2));\n\t\t\t\t}\n\n\t\t\t\tif (chunk.fill) {\n\t\t\t\t\tcontext.restore();\n\t\t\t\t\t// Color does not affect ghostContext so we not set it\n\t\t\t\t}\n\n\t\t\t\t// Reset style\n\t\t\t\tif (chunk.style) {\n\t\t\t\t\tcontext.restore();\n\t\t\t\t\tghostContext.restore();\n\t\t\t\t}\n\n\t\t\t\t// Rotate half a letter and add spacing\n\t\t\t\tangleShift = (charWidth / 2 + kerning) / (radius - textHeight) * clockwise;\n\t\t\t\tcontext.rotate(angleShift);\n\t\t\t\tif (interactive) {\n\t\t\t\t\tghostContext.rotate(angleShift);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// Restore angle\n\t\t\tcontext.restore();\n\t\t\tif (interactive) {\n\t\t\t\tghostContext.restore();\n\t\t\t}\n\n\t\t\t// Adjust radius (for `inside = true`)\n\t\t\tif (inside) {\n\t\t\t\tradius -= textHeight;\n\t\t\t}\n\n\t\t});\n\n\t\t// Restore\n\t\tcontext.restore();\n\t\tif (interactive) {\n\t\t\tghostContext.restore();\n\t\t}\n\t}\n\n\tpublic _measure(layer: CanvasLayer): IBounds {\n\t\tswitch (this.textType) {\n\t\t\tcase \"circular\":\n\t\t\t\treturn this._measureCircular(layer);\n\t\t\tdefault:\n\t\t\t\treturn super._measure(layer);\n\t\t}\n\t}\n\n\tpublic _measureCircular(layer: CanvasLayer): IBounds {\n\t\tconst context = layer.context;\n\t\tconst ghostContext = this._renderer._ghostContext;\n\n\t\t// Reset text info\n\t\tthis._textInfo = [];\n\t\tthis._textReversed = false;\n\n\t\t// Pre-render\n\t\tcontext.save();\n\t\tghostContext.save();\n\t\tthis._prerender(layer, true);\n\n\t\t// Split up text into lines\n\t\tconst lines = this.text.toString().replace(/\\r/g, \"\").split(/\\n/);\n\t\tlet styleRestored = true;\n\n\t\t// Iterate through the lines\n\t\tlet offsetY = 0;\n\t\t$array.each(lines, (line, _index) => {\n\n\t\t\t// Split up line into format/value chunks\n\t\t\tlet chunks = TextFormatter.chunk(line, false, this.style.ignoreFormatting);\n\n\t\t\t// Init line object\n\t\t\tlet lineInfo: ILine = {\n\t\t\t\toffsetY: offsetY,\n\t\t\t\tascent: 0,\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttextChunks: []\n\t\t\t};\n\n\t\t\tlet currentStyle: string | undefined;\n\t\t\tlet currentFill: Color | undefined;\n\t\t\tlet currentChunkWidth: number | undefined;\n\n\t\t\t//while(chunk = chunks.shift()) {\n\t\t\t$array.each(chunks, (chunk, _index) => {\n\n\t\t\t\t// Format chunk\n\t\t\t\tif (chunk.type == \"format\") {\n\t\t\t\t\tif (chunk.text == \"[/]\") {\n\t\t\t\t\t\tif (!styleRestored) {\n\t\t\t\t\t\t\tcontext.restore();\n\t\t\t\t\t\t\tghostContext.restore();\n\t\t\t\t\t\t\tstyleRestored = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurrentFill = undefined;\n\t\t\t\t\t\tcurrentStyle = undefined;\n\t\t\t\t\t\tcurrentChunkWidth = undefined;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet format = TextFormatter.getTextStyle(chunk.text);\n\t\t\t\t\t\tconst fontStyle = this._getFontStyle(format);\n\t\t\t\t\t\tcontext.save();\n\t\t\t\t\t\tghostContext.save();\n\t\t\t\t\t\tcontext.font = fontStyle;\n\t\t\t\t\t\tcurrentStyle = fontStyle;\n\t\t\t\t\t\tif (format.fill) {\n\t\t\t\t\t\t\tcurrentFill = <Color>format.fill;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((<any>format).width) {\n\t\t\t\t\t\t\tcurrentChunkWidth = $type.toNumber((<any>format).width);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyleRestored = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Text format\n\t\t\t\telse if (chunk.type == \"value\") {\n\n\t\t\t\t\t// Measure each letter\n\t\t\t\t\tfor (let i = 0; i < chunk.text.length; i++) {\n\n\t\t\t\t\t\tconst char = chunk.text[i];\n\n\t\t\t\t\t\t// Measure\n\t\t\t\t\t\tconst metrics = this._measureText(char, context);\n\t\t\t\t\t\tlet chunkWidth = metrics.width;\n\n\t\t\t\t\t\t// Chunk width?\n\t\t\t\t\t\tif (currentStyle && currentChunkWidth && (currentChunkWidth > chunkWidth)) {\n\t\t\t\t\t\t\tchunkWidth = currentChunkWidth;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst chunkHeight = metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent;\n\t\t\t\t\t\tif (chunkHeight > lineInfo.height) {\n\t\t\t\t\t\t\tlineInfo.height = chunkHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (metrics.actualBoundingBoxAscent > lineInfo.ascent) {\n\t\t\t\t\t\t\tlineInfo.ascent = metrics.actualBoundingBoxAscent;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlineInfo.width += chunkWidth;\n\t\t\t\t\t\tlineInfo.left += metrics.actualBoundingBoxLeft;\n\t\t\t\t\t\tlineInfo.right += metrics.actualBoundingBoxRight;\n\t\t\t\t\t\tlineInfo.textChunks.push({\n\t\t\t\t\t\t\tstyle: currentStyle,\n\t\t\t\t\t\t\tfill: currentFill,\n\t\t\t\t\t\t\ttext: char,\n\t\t\t\t\t\t\twidth: chunkWidth,\n\t\t\t\t\t\t\theight: chunkHeight + metrics.actualBoundingBoxDescent,\n\t\t\t\t\t\t\tleft: metrics.actualBoundingBoxLeft,\n\t\t\t\t\t\t\tright: metrics.actualBoundingBoxRight,\n\t\t\t\t\t\t\tascent: metrics.actualBoundingBoxAscent,\n\t\t\t\t\t\t\toffsetX: 0,\n\t\t\t\t\t\t\toffsetY: chunkHeight\n\t\t\t\t\t\t});\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.style.lineHeight instanceof Percent) {\n\t\t\t\tlineInfo.height *= this.style.lineHeight.value;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineInfo.height *= this.style.lineHeight || 1.2;\n\t\t\t}\n\n\t\t\tthis._textInfo!.push(lineInfo);\n\n\t\t\t//lineInfo.offsetY += lineInfo.ascent;\n\t\t\toffsetY += lineInfo.height;\n\n\n\t\t});\n\n\t\tif (!styleRestored) {\n\t\t\tcontext.restore();\n\t\t\tghostContext.restore();\n\t\t}\n\n\t\t// Adjust chunk internal offsets\n\t\t$array.each(this._textInfo, (lineInfo) => {\n\t\t\t$array.each(lineInfo.textChunks, (chunk) => {\n\t\t\t\tchunk.offsetY += Math.round((lineInfo.height - chunk.height + (lineInfo.ascent - chunk.ascent)) / 2);\n\t\t\t});\n\t\t});\n\n\t\tcontext.restore();\n\t\tghostContext.restore();\n\n\t\treturn {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t};\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasImage extends CanvasDisplayObject implements IPicture {\n\tpublic width: number | undefined;\n\tpublic height: number | undefined;\n\tpublic image: HTMLImageElement | undefined;\n\tpublic tainted?: boolean;\n\n\tpublic shadowColor?: Color;\n\tpublic shadowBlur?: number;\n\tpublic shadowOffsetX?: number;\n\tpublic shadowOffsetY?: number;\n\tpublic shadowOpacity?: number;\n\n\tprotected _imageMask: HTMLCanvasElement | undefined;\n\n\tconstructor(renderer: CanvasRenderer, image: HTMLImageElement | undefined) {\n\t\tsuper(renderer);\n\t\tthis.image = image;\n\t}\n\n\tgetLocalBounds(): IBounds {\n\t\tif (!this._localBounds) {\n\n\n\t\t\tlet w = 0;\n\t\t\tlet h = 0;\n\n\t\t\tif (this.width) {\n\t\t\t\tw = this.width;\n\t\t\t}\n\t\t\tif (this.height) {\n\t\t\t\th = this.height;\n\t\t\t}\n\n\t\t\tthis._localBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tright: w,\n\t\t\t\tbottom: h\n\t\t\t};\n\n\t\t\tthis._addBounds(this._localBounds);\n\t\t}\n\t\treturn this._localBounds;\n\t}\n\n\tprotected _render(parentLayer: CanvasLayer): void {\n\t\tsuper._render(parentLayer);\n\n\t\tif (this.image) {\n\t\t\tconst layer = this._layer || parentLayer;\n\n\t\t\tif (this.tainted === undefined) {\n\t\t\t\tthis.tainted = isTainted(this.image);\n\t\t\t\tlayer.tainted = true;\n\t\t\t}\n\n\t\t\tif (this.tainted && this._renderer._omitTainted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (layer.dirty) {\n\n\t\t\t\tif (this.shadowColor) {\n\t\t\t\t\tlayer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1);\n\t\t\t\t}\n\t\t\t\tif (this.shadowBlur) {\n\t\t\t\t\tlayer.context.shadowBlur = this.shadowBlur;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetX) {\n\t\t\t\t\tlayer.context.shadowOffsetX = this.shadowOffsetX;\n\t\t\t\t}\n\t\t\t\tif (this.shadowOffsetY) {\n\t\t\t\t\tlayer.context.shadowOffsetY = this.shadowOffsetY;\n\t\t\t\t}\n\n\t\t\t\tconst width = this.width || this.image.naturalWidth;\n\t\t\t\tconst height = this.height || this.image.naturalHeight;\n\n\t\t\t\tlayer.context.drawImage(this.image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tif (this.interactive && this._isInteractive()) {\n\t\t\t\tconst mask = this._getMask(this.image);\n\n\t\t\t\tthis._renderer._ghostContext.drawImage(mask, 0, 0);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic clear(): void {\n\t\tsuper.clear();\n\t\tthis.image = undefined;\n\t\tthis._imageMask = undefined;\n\t}\n\n\tprotected _getMask(image: HTMLImageElement): HTMLCanvasElement {\n\t\tif (this._imageMask === undefined) {\n\t\t\tconst width = this.width || image.naturalWidth;\n\t\t\tconst height = this.height || image.naturalHeight;\n\n\t\t\t// We need to create a second canvas because destination-in clears out the entire canvas\n\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\t\tcontext.imageSmoothingEnabled = false;\n\n\t\t\tcontext.fillStyle = this._getColorId();\n\t\t\tcontext.fillRect(0, 0, width, height);\n\n\t\t\tif (!isTainted(image)) {\n\t\t\t\tcontext.globalCompositeOperation = \"destination-in\";\n\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t}\n\n\t\t\tthis._imageMask = canvas;\n\t\t}\n\n\t\treturn this._imageMask;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport class CanvasRendererEvent<A> implements IRendererEvent<A> {\n\tpublic id: Id;\n\tpublic simulated: boolean = false;\n\tpublic native: boolean = true;\n\n\tconstructor(public event: A, public point: IPoint) {\n\t\tif ($utils.supports(\"touchevents\") && event instanceof Touch) {\n\t\t\tthis.id = event.identifier;\n\n\t\t} else {\n\t\t\tthis.id = null;\n\t\t}\n\t}\n}\n\n/**\n * @ignore\n */\ninterface Event<Key extends keyof IRendererEvents> {\n\tobject: CanvasDisplayObject;\n\tcontext: unknown;\n\tcallback: (event: IRendererEvents[Key]) => void;\n\tdisposed: boolean;\n}\n\n/**\n * @ignore\n */\ninterface Events<Key extends keyof IRendererEvents> {\n\tdisposer: IDisposer;\n\tcallbacks: Array<Event<Key>>;\n\tdispatching: boolean;\n\tcleanup: boolean;\n}\n\n/**\n * @ignore\n */\nexport class CanvasRenderer extends Disposer implements IRenderer, IDisposer {\n\tpublic view: HTMLElement = document.createElement(\"div\");\n\tprotected _layerDom: HTMLElement = document.createElement(\"div\");\n\n\tpublic layers: Array<CanvasLayer> = [];\n\tpublic _dirtyLayers: Array<CanvasLayer> = [];\n\tpublic defaultLayer: CanvasLayer = this.getLayer(0);\n\n\tprotected _ghostView: HTMLCanvasElement;\n\tpublic _ghostContext: CanvasRenderingContext2D;\n\n\tprotected _patternCanvas: HTMLCanvasElement = document.createElement(\"canvas\");\n\tprotected _patternContext: CanvasRenderingContext2D = this._patternCanvas.getContext(\"2d\")!;\n\n\tprotected _width: number = 0;\n\tprotected _height: number = 0;\n\n\tprotected _clientWidth: number = 0;\n\tprotected _clientHeight: number = 0;\n\n\tpublic resolution: number = window.devicePixelRatio;\n\tpublic interactionsEnabled: boolean = true;;\n\n\tprotected _listeners: { [key: string]: CounterDisposer } = {};\n\tprotected _events: { [Key in keyof IRendererEvents]?: Events<Key> } = {};\n\n\tprotected _colorId: number = 0;\n\tprotected _colorMap: { [color: string]: CanvasDisplayObject } = {};\n\n\tpublic _forceInteractive: number = 0;\n\tpublic _omitTainted: boolean = false;\n\n\t// TODO this should store the Id as well\n\tpublic _hovering: Set<CanvasDisplayObject> = new Set();\n\tpublic _dragging: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\tpublic _mousedown: Array<{ id: Id, value: CanvasDisplayObject }> = [];\n\n\tprotected _lastPointerMoveEvent!: IPointerEvent;\n\tprotected _mouseMoveThrottler: Throttler = new Throttler(() => {\n\t\tthis._dispatchGlobalMousemove(this._lastPointerMoveEvent);\n\t});\n\n\tconstructor() {\n\t\tsuper(() => {\n\t\t});\n\n\t\tthis.view.appendChild(this._layerDom);\n\n\t\t// @todo : do the same for ghost\n\t\tthis._ghostView = document.createElement(\"canvas\");\n\t\tthis._ghostContext = this._ghostView.getContext(\"2d\", { alpha: false })!;\n\t\tthis._ghostContext.imageSmoothingEnabled = false;\n\n\t\t// Monitor for possible pixel ratio changes (when page is zoomed)\n\t\twindow.addEventListener(\"resize\", (_ev) => {\n\t\t\tthis.resolution = window.devicePixelRatio;\n\t\t});\n\n\t\t// We need this in order top prevent default touch gestures when dragging\n\t\t// draggable elements\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tdocument.addEventListener(\"touchstart\", (ev) => {\n\t\t\t\tif (this._dragging.length !== 0) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}, { passive: false });\n\t\t}\n\n\t\t// Prevent scrolling of the window when hovering on \"wheelable\" object\n\t\tif ($utils.supports(\"wheelevents\")) {\n\t\t\tthis.view.addEventListener(\"wheel\", (ev) => {\n\t\t\t\tlet prevent = false;\n\t\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\t\tif (obj.wheelable) {\n\t\t\t\t\t\tprevent = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (prevent) {\n\t\t\t\t\tev.preventDefault();\n\t\t\t\t}\n\t\t\t}, { passive: false });\n\t\t}\n\n\t}\n\n\tcreateLinearGradient(x1: number, y1: number, x2: number, y2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createLinearGradient(x1, y1, x2, y2);\n\t}\n\n\tcreateRadialGradient(x1: number, y1: number, radius1: number, x2: number, y2: number, radius2: number): CanvasGradient {\n\t\treturn this.defaultLayer.context.createRadialGradient(x1, y1, radius1, x2, y2, radius2);\n\t}\n\n\tcreatePattern(graphics: CanvasGraphics, background: CanvasGraphics, repetition: string, width: number, height: number): CanvasPattern {\n\t\t// const patternCanvas = document.createElement(\"canvas\");\n\t\t// const patternContext = patternCanvas.getContext(\"2d\")!;\n\t\t// patternCanvas.width = width;\n\t\t// patternCanvas.height = height;\n\t\t// if (fill) {\n\t\t// \tpatternContext.fillStyle = fill.toCSS();\n\t\t// \tpatternContext.fillRect(0, 0, patternCanvas.width, patternCanvas.height);\n\t\t// }\n\n\t\t// const layer = {\n\t\t// \tview: patternCanvas,\n\t\t// \tcontext: patternContext,\n\t\t// \tvisible: true,\n\t\t// \torder: 0,\n\t\t// \twidth: width,\n\t\t// \theight: height,\n\t\t// \tdirty: true\n\t\t// };\n\n\t\t// // patternContext.arc(0, 0, 50, 0, .5 * Math.PI);\n\t\t// // patternContext.stroke();\n\n\t\t// image.targetLayer = layer;\n\t\t// image.render(layer);\n\n\t\t//this._layerDom.appendChild(patternCanvas);\n\n\t\tthis._patternCanvas.width = width;\n\t\tthis._patternCanvas.height = height;\n\n\t\tthis._patternContext.clearRect(0, 0, width, height);\n\n\t\t// patternCanvas.style.width = width * this.resolution + \"px\";\n\t\t// patternCanvas.style.height = height * this.resolution + \"px\";\n\n\t\tbackground.renderDetached(this._patternContext);\n\t\tgraphics.renderDetached(this._patternContext);\n\n\t\treturn this._patternContext.createPattern(this._patternCanvas, repetition)!;\n\t}\n\n\tmakeContainer(): CanvasContainer {\n\t\treturn new CanvasContainer(this);\n\t}\n\n\tmakeGraphics(): CanvasGraphics {\n\t\treturn new CanvasGraphics(this);\n\t}\n\n\tmakeText(text: string, style: CanvasTextStyle): CanvasText {\n\t\treturn new CanvasText(this, text, style);\n\t}\n\n\tmakeTextStyle(): CanvasTextStyle {\n\t\treturn new CanvasTextStyle();\n\t}\n\n\tmakeRadialText(text: string, style: CanvasTextStyle): CanvasRadialText {\n\t\treturn new CanvasRadialText(this, text, style);\n\t}\n\n\tmakePicture(image: HTMLImageElement | undefined): CanvasImage {\n\t\treturn new CanvasImage(this, image);\n\t}\n\n\tresize(width: number, height: number): void {\n\t\tthis._clientWidth = width;\n\t\tthis._clientHeight = height;\n\t\tthis._width = Math.floor(width * this.resolution);\n\t\tthis._height = Math.floor(height * this.resolution);\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\t\t\t\tlayer.dirty = true;\n\n\t\t\t\tif (layer.width != null) {\n\t\t\t\t\tlayer.view.width = layer.width;\n\t\t\t\t\tlayer.view.style.width = layer.width + \"px\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlayer.view.width = this._width;\n\t\t\t\t\tlayer.view.style.width = width + \"px\";\n\t\t\t\t}\n\n\t\t\t\tif (layer.height != null) {\n\t\t\t\t\tlayer.view.height = layer.height;\n\t\t\t\t\tlayer.view.style.height = layer.height + \"px\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlayer.view.height = this._height;\n\t\t\t\t\tlayer.view.style.height = height + \"px\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// @todo: do the same for ghost canvases\n\t\tthis._ghostView.width = this._width;\n\t\tthis._ghostView.height = this._height;\n\t\tthis._ghostView.style.width = width + \"px\";\n\t\tthis._ghostView.style.height = height + \"px\";\n\t}\n\n\tcreateDetachedLayer(): CanvasLayer {\n\t\tconst view = document.createElement(\"canvas\");\n\t\tconst context = view.getContext(\"2d\")!;\n\t\tconst layer = {\n\t\t\tview: view,\n\t\t\tcontext: context,\n\t\t\torder: 0,\n\t\t\tvisible: true,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tdirty: true,\n\t\t\ttainted: false\n\t\t};\n\n\t\tview.style.position = \"absolute\";\n\t\tview.style.top = \"0px\";\n\t\tview.style.left = \"0px\";\n\n\t\treturn layer;\n\t}\n\n\tgetLayerByOrder(order: number): CanvasLayer | undefined {\n\t\tconst layers = this.layers;\n\t\tconst length = layers.length;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst layer = layers[i];\n\t\t\tif (layer.order == order) {\n\t\t\t\treturn layer;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetLayer(order: number, visible: boolean = true): CanvasLayer {\n\t\tconst layers = this.layers;\n\n\t\tlet existingLayer = this.getLayerByOrder(order);\n\t\tif (existingLayer) {\n\t\t\treturn existingLayer;\n\t\t}\n\n\t\tconst layer = this.createDetachedLayer();\n\t\tlayer.order = order;\n\t\tlayer.visible = visible;\n\n\t\tif (layer.visible && this._width) {\n\t\t\tlayer.view.width = this._width;\n\t\t\tlayer.view.style.width = this._clientWidth + \"px\";\n\t\t\tlayer.view.height = this._height;\n\t\t\tlayer.view.style.height = this._clientHeight + \"px\";\n\t\t}\n\n\t\tlayers.push(layer);\n\n\t\tlayers.sort((a, b) => {\n\t\t\tif (a.order > b.order) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\telse if (a.order < b.order) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tconst length = layers.length;\n\t\tconst layerIndex = $array.indexOf(layers, layer);\n\t\tlet next;\n\n\t\tfor (let i = layerIndex + 1; i < length; i++) {\n\t\t\tif (layers[i].visible) {\n\t\t\t\tnext = layers[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (visible) {\n\t\t\tif (next === undefined) {\n\t\t\t\tthis._layerDom.appendChild(layer.view);\n\n\t\t\t} else {\n\t\t\t\tthis._layerDom.insertBefore(layer.view, next.view);\n\t\t\t}\n\t\t}\n\n\t\treturn layer;\n\t}\n\n\trender(root: CanvasDisplayObject): void {\n\n\t\tthis._dirtyLayers.length = 0;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer) {\n\n\t\t\t\tif (layer.dirty && layer.visible) {\n\t\t\t\t\tthis._dirtyLayers.push(layer);\n\n\t\t\t\t\tlayer.context.save();\n\t\t\t\t\tlayer.context.clearRect(0, 0, this._width, this._height);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis._ghostContext.save();\n\t\t//this._ghostContext.clearRect(0, 0, this._width, this._height);\n\t\t//this._ghostContext.beginPath();\n\t\tthis._ghostContext.fillStyle = '#000';\n\t\tthis._ghostContext.fillRect(0, 0, this._width, this._height);\n\n\t\troot.render(this.defaultLayer);\n\n\t\tthis._ghostContext.restore();\n\n\t\t//setTimeout(() => {\n\n\t\t$array.each(this._dirtyLayers, (layer) => {\n\t\t\tlayer.context.restore();\n\t\t\tlayer.dirty = false;\n\t\t});\n\t\t//}, 100)\n\n\t\tif (this._hovering.size && this._lastPointerMoveEvent) {\n\t\t\tthis._mouseMoveThrottler.run();\n\t\t}\n\t}\n\n\tpaintId(obj: CanvasDisplayObject): string {\n\t\tconst id = distributeId(++this._colorId);\n\t\tconst color = Color.fromHex(id).toCSS();\n\t\tthis._colorMap[color] = obj;\n\t\treturn color;\n\t}\n\n\t_removeObject(obj: CanvasDisplayObject): void {\n\t\tif (obj._colorId !== undefined) {\n\t\t\tdelete this._colorMap[obj._colorId];\n\t\t}\n\t}\n\n\t// protected _identifyObjectByColor(colorId: number): CanvasDisplayObject | undefined {\n\t// \treturn this._colorMap[colorId];\n\t// }\n\n\tpublic getEvent<A extends IPointerEvent>(originalEvent: A, adjustPoint: boolean = true): CanvasRendererEvent<A> {\n\t\tconst bbox = adjustPoint ? this.view.getBoundingClientRect() : { left: 0, top: 0 };\n\n\t\treturn new CanvasRendererEvent(originalEvent, originalEvent.clientX || originalEvent.clientY ? {\n\t\t\tx: originalEvent.clientX - (originalEvent.clientX ? bbox.left : 0),\n\t\t\ty: originalEvent.clientY - (originalEvent.clientY ? bbox.top : 0),\n\t\t} : {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t});\n\t}\n\n\t_getHitTarget(point: IPoint): CanvasDisplayObject | undefined | false {\n\t\tif (point.x < 0 || point.x > this._width / this.resolution || point.y < 0 || point.y > this._height / this.resolution) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tconst pixel = this._ghostContext.getImageData(\n\t\t\t\t// TODO should this round ?\n\t\t\t\tMath.round(point.x * this.resolution),\n\t\t\t\tMath.round(point.y * this.resolution),\n\t\t\t\t1,\n\t\t\t\t1\n\t\t\t);\n\n\t\t\tif (pixel.data[0] === 0 && pixel.data[1] === 0 && pixel.data[2] === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst colorId = Color.fromRGB(pixel.data[0], pixel.data[1], pixel.data[2]).toCSS();\n\t\t\tconst hit = this._colorMap[colorId];\n\n\t\t\treturn hit;\n\t\t}\n\t}\n\n\t_withEvents<Key extends keyof IRendererEvents>(key: Key, f: (events: Events<Key>) => void): void {\n\t\tconst events = this._events[key] as Events<Key> | undefined;\n\n\t\tif (events !== undefined) {\n\t\t\tevents.dispatching = true;\n\n\t\t\ttry {\n\t\t\t\tf(events);\n\n\t\t\t} finally {\n\t\t\t\tevents.dispatching = false;\n\n\t\t\t\tif (events.cleanup) {\n\t\t\t\t\tevents.cleanup = false;\n\n\t\t\t\t\t$array.keepIf(events.callbacks, (callback) => {\n\t\t\t\t\t\treturn !callback.disposed;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (events.callbacks.length === 0) {\n\t\t\t\t\t\tevents.disposer.dispose();\n\t\t\t\t\t\tdelete this._events[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t_dispatchEventAll<Key extends keyof IRendererEvents>(key: Key, event: IRendererEvents[Key]): void {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t_dispatchEvent<Key extends keyof IRendererEvents>(key: Key, target: CanvasDisplayObject, event: IRendererEvents[Key]): boolean {\n\t\tif (!this.interactionsEnabled) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet dispatched = false;\n\n\t\tthis._withEvents(key, (events) => {\n\t\t\t$array.each(events.callbacks, (callback) => {\n\t\t\t\tif (!callback.disposed && callback.object === target) {\n\t\t\t\t\tcallback.callback.call(callback.context, event);\n\t\t\t\t\tdispatched = true;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn dispatched;\n\t}\n\n\t_dispatchMousedown(originalEvent: IPointerEvent): void {\n\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tif (button != 0 && button != 2 && button != 1) {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point);\n\n\t\tif (target) {\n\t\t\tconst id = event.id;\n\n\t\t\tlet dragged = false;\n\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tconst info = { id: id, value: obj };\n\n\t\t\t\tthis._mousedown.push(info);\n\n\t\t\t\tif (!dragged && this._dispatchEvent(\"pointerdown\", obj, event)) {\n\t\t\t\t\t// Only dispatch the first element which matches\n\t\t\t\t\tdragged = true;\n\n\t\t\t\t\tconst has = this._dragging.some((x) => {\n\t\t\t\t\t\treturn x.value === obj && x.id === id;\n\t\t\t\t\t});\n\n\t\t\t\t\tif (!has) {\n\t\t\t\t\t\tthis._dragging.push(info);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchGlobalMousemove(originalEvent: IPointerEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\n\t\tconst target = this._getHitTarget(event.point);\n\t\tevent.native = this._isNativeEvent(originalEvent);\n\n\t\tif (target) {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (!obj.contains(target)) {\n\t\t\t\t\tthis._hovering.delete(obj);\n\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t\t}\n\t\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (event.native) {\n\t\t\t\teachTargets(target, (obj) => {\n\t\t\t\t\tif (!this._hovering.has(obj)) {\n\t\t\t\t\t\tthis._hovering.add(obj);\n\t\t\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t\t\tobj._replacedCursorStyle = $utils.getStyle(document.body, \"cursor\");\n\t\t\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj.cursorOverStyle);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(\"pointerover\", obj, event);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//} else if (target === false) {\n\t\t} else {\n\t\t\tthis._hovering.forEach((obj) => {\n\t\t\t\tif (obj.cursorOverStyle) {\n\t\t\t\t\t$utils.setStyle(document.body, \"cursor\", obj._replacedCursorStyle!);\n\t\t\t\t}\n\t\t\t\tthis._dispatchEvent(\"pointerout\", obj, event);\n\t\t\t});\n\n\t\t\tthis._hovering.clear();\n\t\t}\n\t\tthis._dispatchEventAll(\"globalpointermove\", event);\n\t}\n\n\t_isNativeEvent(event: IPointerEvent): boolean {\n\t\tif (event.target) {\n\t\t\treturn (<any>event.target).parentNode === this._layerDom;\n\t\t}\n\t\treturn true;\n\t}\n\n\t_dispatchGlobalMouseup(originalEvent: IPointerEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\t//const target = this._getHitTarget(event.point);\n\t\tthis._dispatchEventAll(\"globalpointerup\", event);\n\t}\n\n\t_dispatchDragMove(originalEvent: IPointerEvent): void {\n\t\tif (this._dragging.length !== 0) {\n\t\t\tconst event = this.getEvent(originalEvent);\n\t\t\tconst id = event.id;\n\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointermove\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchDragEnd(originalEvent: IPointerEvent): void {\n\n\t\tconst button = (<PointerEvent>originalEvent).button;\n\t\tlet clickevent: \"click\" | \"rightclick\" | \"middleclick\";\n\t\tif (button == 0) {\n\t\t\tclickevent = \"click\";\n\t\t}\n\t\telse if (button == 2) {\n\t\t\tclickevent = \"rightclick\";\n\t\t}\n\t\telse if (button == 1) {\n\t\t\tclickevent = \"middleclick\";\n\t\t}\n\t\telse {\n\t\t\t// Ignore non-primary mouse buttons\n\t\t\treturn;\n\t\t}\n\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst id = event.id;\n\n\t\tif (this._mousedown.length !== 0) {\n\t\t\tconst target = this._getHitTarget(event.point);\n\n\t\t\tif (target) {\n\t\t\t\tthis._mousedown.forEach((obj) => {\n\t\t\t\t\tif (obj.id === id && obj.value.contains(target)) {\n\t\t\t\t\t\tthis._dispatchEvent(clickevent, obj.value, event);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis._mousedown.length = 0;\n\t\t}\n\n\t\tif (this._dragging.length !== 0) {\n\t\t\tthis._dragging.forEach((obj) => {\n\t\t\t\tif (obj.id === id) {\n\t\t\t\t\tthis._dispatchEvent(\"pointerup\", obj.value, event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._dragging.length = 0;\n\t\t}\n\t}\n\n\t_dispatchDoubleClick(originalEvent: IPointerEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tconst target = this._getHitTarget(event.point);\n\n\t\tif (target) {\n\t\t\teachTargets(target, (obj) => {\n\t\t\t\tif (this._dispatchEvent(\"dblclick\", obj, event)) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t_dispatchWheel(originalEvent: WheelEvent): void {\n\t\tconst event = this.getEvent(originalEvent);\n\t\tthis._hovering.forEach((obj) => {\n\t\t\tthis._dispatchEvent(\"wheel\", obj, event);\n\t\t});\n\t}\n\n\t_makeSharedEvent(key: string, f: () => IDisposer): IDisposer {\n\t\tif (this._listeners[key] === undefined) {\n\t\t\tconst listener = f();\n\n\t\t\tthis._listeners[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._listeners[key];\n\t\t\t\tlistener.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn this._listeners[key].increment();\n\t}\n\n\t// This ensures that only a single DOM event is added (e.g. only a single mousemove event listener)\n\t_initEvent(key: keyof IRendererEvents): IDisposer | undefined {\n\t\tswitch (key) {\n\t\t\tcase \"globalpointermove\":\n\t\t\tcase \"pointerover\":\n\t\t\tcase \"pointerout\":\n\t\t\t\treturn this._makeSharedEvent(\"pointermove\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\treturn onPointerEvent(window, \"pointermove\", (ev) => {\n\t\t\t\t\t\tthis._lastPointerMoveEvent = ev;\n\t\t\t\t\t\tthis._mouseMoveThrottler.run();\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"globalpointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerup\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\treturn onPointerEvent(window, \"pointerup\", (ev) => {\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\tthis._dispatchGlobalMouseup(ev);\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"click\":\n\t\t\tcase \"rightclick\":\n\t\t\tcase \"middleclick\":\n\t\t\tcase \"pointerdown\":\n\t\t\tcase \"pointermove\":\n\t\t\tcase \"pointerup\":\n\t\t\t\treturn this._makeSharedEvent(\"pointerdown\", () => {\n\t\t\t\t\t//const throttler = new Throttler();\n\n\t\t\t\t\tconst mousedown = onPointerEvent(this.view, \"pointerdown\", (ev: IPointerEvent) => {\n\t\t\t\t\t\tthis._dispatchMousedown(ev);\n\t\t\t\t\t});\n\n\t\t\t\t\t// TODO handle throttling properly for multitouch\n\t\t\t\t\tconst mousemove = onPointerEvent(window, \"pointermove\", (ev: IPointerEvent) => {\n\t\t\t\t\t\t//throttler.throttle(() => {\n\t\t\t\t\t\tthis._dispatchDragMove(ev);\n\t\t\t\t\t\t//});\n\t\t\t\t\t});\n\n\t\t\t\t\tconst mouseup = onPointerEvent(window, \"pointerup\", (ev: IPointerEvent) => {\n\t\t\t\t\t\tthis._dispatchDragEnd(ev);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn new Disposer(() => {\n\t\t\t\t\t\tmousedown.dispose();\n\t\t\t\t\t\tmousemove.dispose();\n\t\t\t\t\t\tmouseup.dispose();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"dblclick\":\n\t\t\t\treturn this._makeSharedEvent(\"dblclick\", () => {\n\t\t\t\t\treturn onPointerEvent(window, \"dblclick\", (ev) => {\n\t\t\t\t\t\tthis._dispatchDoubleClick(ev);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\tcase \"wheel\":\n\t\t\t\treturn this._makeSharedEvent(\"wheel\", () => {\n\t\t\t\t\treturn $utils.addEventListener(window, $utils.getRendererEvent(\"wheel\"), (event: WheelEvent) => {\n\t\t\t\t\t\tthis._dispatchWheel(event);\n\t\t\t\t\t}, { passive: false });\n\t\t\t\t});\n\t\t}\n\t}\n\n\t_addEvent<C, Key extends keyof IRendererEvents>(object: CanvasDisplayObject, key: Key, callback: (this: C, event: IRendererEvents[Key]) => void, context?: C): IDisposer {\n\t\tlet events: Events<Key> | undefined = this._events[key] as any;\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._events[key] = {\n\t\t\t\tdisposer: this._initEvent(key)!,\n\t\t\t\tcallbacks: [],\n\t\t\t\tdispatching: false,\n\t\t\t\tcleanup: false,\n\t\t\t};\n\t\t}\n\n\t\tconst listener = { object, context, callback, disposed: false };\n\n\t\tevents!.callbacks.push(listener);\n\n\t\treturn new Disposer(() => {\n\t\t\tlistener.disposed = true;\n\n\t\t\tif (events!.dispatching) {\n\t\t\t\tevents!.cleanup = true;\n\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(events!.callbacks, listener);\n\n\t\t\t\tif (events!.callbacks.length === 0) {\n\t\t\t\t\tevents!.disposer.dispose();\n\t\t\t\t\tdelete this._events[key];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic getCanvas(root: CanvasDisplayObject, options?: ICanvasOptions): HTMLCanvasElement {\n\n\t\t// Make sure everything is rendered\n\t\tthis.render(root);\n\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tlet scale: number = this.resolution;\n\n\t\t// Check if we need to scale\n\t\tif (options.minWidth && (options.minWidth > this._width)) {\n\t\t\tlet minScale = options.minWidth / this._width;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.minHeight && (options.minHeight > this._height)) {\n\t\t\tlet minScale = options.minHeight / this._height;\n\t\t\tif (minScale > scale) {\n\t\t\t\tscale = minScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxWidth && (options.maxWidth < this._width)) {\n\t\t\tlet maxScale = options.maxWidth / this._width;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\tif (options.maxHeight && (options.maxHeight > this._height)) {\n\t\t\tlet maxScale = options.maxHeight / this._height;\n\t\t\tif (maxScale < scale) {\n\t\t\t\tscale = maxScale * this.resolution;\n\t\t\t}\n\t\t}\n\n\t\t// Check if we need to compensate for pixel ratio\n\t\tif (options.maintainPixelRatio) {\n\t\t\tscale /= this.resolution;\n\t\t}\n\n\t\t// Set up new canvas for export\n\t\tlet forceRender = false;\n\t\tlet canvasWidth = this._width;\n\t\tlet canvasHeight = this._height;\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tif (scale != this.resolution) {\n\t\t\tforceRender = true;\n\t\t\tcanvasWidth = this._width * scale / this.resolution;\n\t\t\tcanvasHeight = this._height * scale / this.resolution;\n\t\t}\n\n\t\tcanvas.width = canvasWidth;\n\t\tcanvas.height = canvasHeight;\n\n\t\t// Context\n\t\tconst context = canvas.getContext(\"2d\")!;\n\n\t\tlet width = 0;\n\t\tlet height = 0;\n\t\tlet needRerender = false;\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\t\t\t\tif (layer.tainted || forceRender) {\n\t\t\t\t\tneedRerender = true;\n\n\t\t\t\t\tlayer.exportableView = layer.view;\n\t\t\t\t\tlayer.exportableContext = layer.context;\n\n\t\t\t\t\tlayer.view = document.createElement(\"canvas\");\n\t\t\t\t\tlayer.view.width = canvasWidth;\n\t\t\t\t\tlayer.view.height = canvasHeight;\n\n\t\t\t\t\tlayer.context = layer.view.getContext(\"2d\")!;\n\n\t\t\t\t\tlayer.dirty = true;\n\t\t\t\t\tlayer.scale = scale;\n\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (needRerender) {\n\t\t\tthis._omitTainted = true;\n\t\t\tthis.render(root);\n\t\t\tthis._omitTainted = false;\n\t\t}\n\n\t\t$array.each(this.layers, (layer) => {\n\t\t\tif (layer && layer.visible) {\n\n\t\t\t\t// Layer is fine. Just plop it into our target canvas\n\t\t\t\tcontext.drawImage(layer.view, 0, 0);\n\n\t\t\t\t// Restore layer original canvas\n\t\t\t\tif (layer.exportableView) {\n\t\t\t\t\tlayer.view = layer.exportableView;\n\t\t\t\t\tlayer.exportableView = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (layer.exportableContext) {\n\t\t\t\t\tlayer.context = layer.exportableContext;\n\t\t\t\t\tlayer.exportableContext = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (width < layer.view.clientWidth) {\n\t\t\t\t\twidth = layer.view.clientWidth;\n\t\t\t\t}\n\t\t\t\tif (height < layer.view.clientHeight) {\n\t\t\t\t\theight = layer.view.clientHeight;\n\t\t\t\t}\n\n\t\t\t\tlayer.scale = undefined;\n\t\t\t}\n\t\t});\n\n\t\tcanvas.style.width = width + \"px\";\n\t\tcanvas.style.height = height + \"px\";\n\n\t\treturn canvas;\n\t}\n\n}\n\n/**\n * @ignore\n */\nexport interface CanvasLayer extends ILayer {\n\tview: HTMLCanvasElement;\n\tcontext: CanvasRenderingContext2D;\n\ttainted?: boolean;\n\texportableView?: HTMLCanvasElement;\n\texportableContext?: CanvasRenderingContext2D;\n\tscale?: number;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}