{"ast":null,"code":"import { EventDispatcher } from \"./EventDispatcher\";\nimport { Disposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\nvar TemplateState = /** @class */function () {\n  function TemplateState(name, template, settings) {\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._name = name;\n    this._template = template;\n    this._settings = settings;\n  }\n  Object.defineProperty(TemplateState.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._settings[key];\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._settings[key] = value;\n      // TODO maybe only do this if the value changed ?\n      this._template._stateChanged(this._name);\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      delete this._settings[key];\n      // TODO maybe only do this if the value changed ?\n      this._template._stateChanged(this._name);\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"setAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (settings) {\n      var _this = this;\n      $object.keys(settings).forEach(function (key) {\n        _this._settings[key] = settings[key];\n      });\n      this._template._stateChanged(this._name);\n    }\n  });\n  Object.defineProperty(TemplateState.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (other, seen) {\n      $object.each(this._settings, function (key, value) {\n        if (!seen[key] && !other._userSettings[key]) {\n          seen[key] = true;\n          other.setRaw(key, value);\n        }\n      });\n    }\n  });\n  return TemplateState;\n}();\nexport { TemplateState };\nvar TemplateStates = /** @class */function () {\n  function TemplateStates(template) {\n    Object.defineProperty(this, \"_template\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    this._template = template;\n  }\n  Object.defineProperty(TemplateStates.prototype, \"lookup\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      return this._states[name];\n    }\n  });\n  Object.defineProperty(TemplateStates.prototype, \"create\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name, settings) {\n      var state = this._states[name];\n      if (state) {\n        state.setAll(settings);\n        return state;\n      } else {\n        var state_1 = new TemplateState(name, this._template, settings);\n        this._states[name] = state_1;\n        this._template._stateChanged(name);\n        return state_1;\n      }\n    }\n  });\n  Object.defineProperty(TemplateStates.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      delete this._states[name];\n      this._template._stateChanged(name);\n    }\n  });\n  Object.defineProperty(TemplateStates.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity, state) {\n      $object.each(this._states, function (key, value) {\n        var seen = state.states[key];\n        if (seen == null) {\n          seen = state.states[key] = {};\n        }\n        var other = entity.states.create(key, {});\n        value._apply(other, seen);\n      });\n    }\n  });\n  return TemplateStates;\n}();\nexport { TemplateStates };\nvar TemplateAdapters = /** @class */function () {\n  function TemplateAdapters() {\n    Object.defineProperty(this, \"_callbacks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n  }\n  Object.defineProperty(TemplateAdapters.prototype, \"add\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var callbacks = this._callbacks[key];\n      if (callbacks === undefined) {\n        callbacks = this._callbacks[key] = [];\n      }\n      callbacks.push(callback);\n    }\n  });\n  Object.defineProperty(TemplateAdapters.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity) {\n      var disposers = [];\n      $object.each(this._callbacks, function (key, callbacks) {\n        $array.each(callbacks, function (callback) {\n          disposers.push(entity.adapters.add(key, callback));\n        });\n      });\n      return new MultiDisposer(disposers);\n    }\n  });\n  return TemplateAdapters;\n}();\nexport { TemplateAdapters };\n// TODO maybe extend from Properties ?\nvar Template = /** @class */function () {\n  function Template(settings, isReal) {\n    Object.defineProperty(this, \"_settings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_privateSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    // TODO code duplication with Properties\n    Object.defineProperty(this, \"_settingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_privateSettingEvents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, \"_entities\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"states\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new TemplateStates(this)\n    });\n    Object.defineProperty(this, \"adapters\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new TemplateAdapters()\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    Object.defineProperty(this, \"setup\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    if (!isReal) {\n      throw new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n    }\n    this._settings = settings;\n  }\n  /**\r\n   * Use this method to create an instance of this class.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\r\n   * @param   root      Root element\r\n   * @param   settings  Settings\r\n   * @param   template  Template\r\n   * @return            Instantiated object\r\n   */\n  Object.defineProperty(Template, \"new\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (settings) {\n      return new Template(settings, true);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"get\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._settings[key];\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._settings[key] = value;\n    }\n  });\n  Object.defineProperty(Template.prototype, \"set\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n      if (this._settings[key] !== value) {\n        this.setRaw(key, value);\n        this._entities.forEach(function (entity) {\n          entity._setTemplateProperty(_this, key, value);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"remove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._settings) {\n        delete this._settings[key];\n        this._entities.forEach(function (entity) {\n          entity._removeTemplateProperty(key);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"removeAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      $object.each(this._settings, function (key, _value) {\n        _this.remove(key);\n      });\n    }\n  });\n  Object.defineProperty(Template.prototype, \"getPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, fallback) {\n      var value = this._privateSettings[key];\n      if (value !== undefined) {\n        return value;\n      } else {\n        return fallback;\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setPrivateRaw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      this._privateSettings[key] = value;\n      return value;\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var _this = this;\n      if (this._privateSettings[key] !== value) {\n        this.setPrivateRaw(key, value);\n        this._entities.forEach(function (entity) {\n          entity._setTemplatePrivateProperty(_this, key, value);\n        });\n      }\n      return value;\n    }\n  });\n  Object.defineProperty(Template.prototype, \"removePrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      if (key in this._privateSettings) {\n        delete this._privateSettings[key];\n        this._entities.forEach(function (entity) {\n          entity._removeTemplatePrivateProperty(key);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Template.prototype, \"setAll\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      var _this = this;\n      $object.each(value, function (key, value) {\n        _this.set(key, value);\n      });\n    }\n  });\n  // TODO code duplication with Properties\n  Object.defineProperty(Template.prototype, \"on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n      var events = this._settingEvents[key];\n      if (events === undefined) {\n        events = this._settingEvents[key] = [];\n      }\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n        if (events.length === 0) {\n          delete _this._settingEvents[key];\n        }\n      });\n    }\n  });\n  // TODO code duplication with Properties\n  Object.defineProperty(Template.prototype, \"onPrivate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, callback) {\n      var _this = this;\n      var events = this._privateSettingEvents[key];\n      if (events === undefined) {\n        events = this._privateSettingEvents[key] = [];\n      }\n      events.push(callback);\n      return new Disposer(function () {\n        $array.removeFirst(events, callback);\n        if (events.length === 0) {\n          delete _this._privateSettingEvents[key];\n        }\n      });\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_apply\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity, state) {\n      var disposers = [];\n      $object.each(this._settingEvents, function (key, events) {\n        $array.each(events, function (event) {\n          disposers.push(entity.on(key, event));\n        });\n      });\n      $object.each(this._privateSettingEvents, function (key, events) {\n        $array.each(events, function (event) {\n          disposers.push(entity.onPrivate(key, event));\n        });\n      });\n      this.states._apply(entity, state);\n      disposers.push(this.adapters._apply(entity));\n      disposers.push(entity.events.copyFrom(this.events));\n      return new MultiDisposer(disposers);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_setObjectTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity) {\n      this._entities.push(entity);\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_removeObjectTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (entity) {\n      $array.keepIf(this._entities, function (x) {\n        return x !== entity;\n      });\n    }\n  });\n  Object.defineProperty(Template.prototype, \"_stateChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      this._entities.forEach(function (entity) {\n        entity._applyStateByKey(name);\n      });\n    }\n  });\n  return Template;\n}();\nexport { Template };","map":{"version":3,"names":["EventDispatcher","Disposer","MultiDisposer","$array","$object","TemplateState","name","template","settings","Object","defineProperty","_name","_template","_settings","value","key","fallback","undefined","_stateChanged","_this","keys","forEach","other","seen","each","_userSettings","setRaw","TemplateStates","_states","state","setAll","state_1","entity","states","create","_apply","TemplateAdapters","callback","callbacks","_callbacks","push","disposers","adapters","add","Template","isReal","Error","_entities","_setTemplateProperty","_removeTemplateProperty","_value","remove","_privateSettings","setPrivateRaw","_setTemplatePrivateProperty","_removeTemplatePrivateProperty","set","events","_settingEvents","removeFirst","length","_privateSettingEvents","event","on","onPrivate","copyFrom","keepIf","x","_applyStateByKey"],"sources":["../../../../../src/.internal/core/util/Template.ts"],"sourcesContent":["import type { Entity, Dirty } from \"./Entity\";\nimport type { State } from \"./States\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport { IDisposer, Disposer, MultiDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\nimport * as $object from \"./Object\";\n\nexport class TemplateState<E extends Entity> {\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\n\tprivate _name: string;\n\tprivate _template: Template<E>;\n\n\tconstructor(name: string, template: Template<E>, settings: Partial<E[\"_settings\"]>) {\n\t\tthis._name = name;\n\t\tthis._template = template;\n\t\tthis._settings = settings;\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic set<Key extends keyof E[\"_settings\"]>(key: Key, value: E[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tdelete this._settings[key];\n\t\t// TODO maybe only do this if the value changed ?\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic setAll(settings: this[\"_settings\"]) {\n\t\t$object.keys(settings).forEach((key) => {\n\t\t\tthis._settings[key] = settings[key];\n\t\t});\n\n\t\tthis._template._stateChanged(this._name);\n\t}\n\n\tpublic _apply(other: State<E>, seen: Dirty<E[\"_settings\"]>): void {\n\t\t$object.each(this._settings, (key, value) => {\n\t\t\tif (!seen[key] && !other._userSettings[key]) {\n\t\t\t\tseen[key] = true;\n\t\t\t\tother.setRaw(key, value);\n\t\t\t}\n\t\t});\n\t}\n}\n\n\nexport class TemplateStates<E extends Entity> {\n\tprivate _template: Template<E>;\n\tprivate _states: { [key: string]: TemplateState<E> } = {};\n\n\tconstructor(template: Template<E>) {\n\t\tthis._template = template;\n\t}\n\n\tpublic lookup(name: string): TemplateState<E> | undefined {\n\t\treturn this._states[name];\n\t}\n\n\tpublic create(name: string, settings: Partial<E[\"_settings\"]>): TemplateState<E> {\n\t\tconst state = this._states[name];\n\n\t\tif (state) {\n\t\t\tstate.setAll(settings);\n\t\t\treturn state;\n\n\t\t} else {\n\t\t\tconst state = new TemplateState(name, this._template, settings);\n\t\t\tthis._states[name] = state;\n\t\t\tthis._template._stateChanged(name);\n\t\t\treturn state;\n\t\t}\n\t}\n\n\tpublic remove(name: string) {\n\t\tdelete this._states[name];\n\t\tthis._template._stateChanged(name);\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): void {\n\t\t$object.each(this._states, (key, value) => {\n\t\t\tlet seen = state.states[key];\n\n\t\t\tif (seen == null) {\n\t\t\t\tseen = state.states[key] = {};\n\t\t\t}\n\n\t\t\tconst other = entity.states.create(key as string, {});\n\t\t\tvalue._apply(other, seen);\n\t\t});\n\t}\n}\n\n\nexport class TemplateAdapters<E extends Entity> {\n\tprivate _callbacks: { [K in keyof E[\"_settings\"]]?: Array<<O extends E[\"_settings\"]>(value: O[K], target?: O, key?: K) => O[K]> } = {};\n\n\tpublic add<Key extends keyof E[\"_settings\"]>(key: Key, callback: <O extends E[\"_settings\"]>(value: O[Key], target?: O, key?: Key) => O[Key]) {\n\t\tlet callbacks = this._callbacks[key];\n\n\t\tif (callbacks === undefined) {\n\t\t\tcallbacks = this._callbacks[key] = [];\n\t\t}\n\n\t\tcallbacks.push(callback);\n\t}\n\n\tpublic _apply(entity: E): IDisposer {\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._callbacks, (key, callbacks) => {\n\t\t\t$array.each(callbacks, (callback) => {\n\t\t\t\tdisposers.push(entity.adapters.add(key, callback));\n\t\t\t});\n\t\t});\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n}\n\n\nexport interface ApplyState<E extends Entity> {\n\tsettings: Dirty<E[\"_settings\"]>;\n\tprivateSettings: Dirty<E[\"_privateSettings\"]>;\n\tstates: { [name: string]: Dirty<E[\"_settings\"]> };\n}\n\n\n// TODO maybe extend from Properties ?\nexport class Template<E extends Entity> {\n\tpublic _settings: Partial<E[\"_settings\"]>;\n\tpublic _privateSettings: E[\"_privateSettings\"] = {};\n\n\t// TODO code duplication with Properties\n\tpublic _settingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\tpublic _privateSettingEvents: { [K in keyof this[\"_settings\"]]?: Array<<V extends this[\"_settings\"][K]>(value: V) => void> } = {};\n\n\tpublic _entities: Array<E> = [];\n\n\tpublic readonly states: TemplateStates<E> = new TemplateStates(this);\n\n\tpublic readonly adapters: TemplateAdapters<E> = new TemplateAdapters();\n\tpublic readonly events: EventDispatcher<Events<E, E[\"_events\"]>> = new EventDispatcher();\n\n\tpublic setup: (<O extends E>(entity: O) => void) | undefined;\n\n\t/**\n\t * Use this method to create an instance of this class.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/getting-started/#New_element_syntax} for more info\n\t * @param   root      Root element\n\t * @param   settings  Settings\n\t * @param   template  Template\n\t * @return            Instantiated object\n\t */\n\tpublic static new<E extends Entity>(settings: E[\"_settings\"]): Template<E> {\n\t\treturn new Template<E>(settings, true);\n\t}\n\n\tconstructor(settings: E[\"_settings\"], isReal: boolean) {\n\t\tif (!isReal) {\n\t\t\tthrow new Error(\"You cannot use `new Class()`, instead use `Class.new()`\");\n\t\t}\n\n\t\tthis._settings = settings;\n\t}\n\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key): this[\"_settings\"][Key];\n\tpublic get<Key extends keyof this[\"_settings\"], F>(key: Key, fallback: F): NonNullable<this[\"_settings\"][Key]> | F;\n\tpublic get<Key extends keyof this[\"_settings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._settings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setRaw<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tthis._settings[key] = value;\n\t}\n\n\tpublic set<Key extends keyof this[\"_settings\"]>(key: Key, value: this[\"_settings\"][Key]) {\n\t\tif (this._settings[key] !== value) {\n\t\t\tthis.setRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic remove<Key extends keyof this[\"_settings\"]>(key: Key): void {\n\t\tif (key in this._settings) {\n\t\t\tdelete this._settings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic removeAll(): void {\n\t\t$object.each(this._settings, (key, _value) => {\n\t\t\tthis.remove(key);\n\t\t});\n\t}\n\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"], F>(key: Key, fallback: F): NonNullable<this[\"_privateSettings\"][Key]> | F;\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): this[\"_privateSettings\"][Key];\n\tpublic getPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, fallback?: any): any {\n\t\tconst value = this._privateSettings[key];\n\n\t\tif (value !== undefined) {\n\t\t\treturn value;\n\n\t\t} else {\n\t\t\treturn fallback;\n\t\t}\n\t}\n\n\tpublic setPrivateRaw<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tthis._privateSettings[key] = value;\n\t\treturn value;\n\t}\n\n\tpublic setPrivate<Key extends keyof this[\"_privateSettings\"], Value extends this[\"_privateSettings\"][Key]>(key: Key, value: Value): Value {\n\t\tif (this._privateSettings[key] !== value) {\n\t\t\tthis.setPrivateRaw(key, value);\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._setTemplatePrivateProperty(this, key, value);\n\t\t\t});\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tpublic removePrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key): void {\n\t\tif (key in this._privateSettings) {\n\t\t\tdelete this._privateSettings[key];\n\n\t\t\tthis._entities.forEach((entity) => {\n\t\t\t\tentity._removeTemplatePrivateProperty(key);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic setAll(value: this[\"_settings\"]) {\n\t\t$object.each(value, (key, value) => {\n\t\t\tthis.set(key, value);\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic on<Key extends keyof this[\"_settings\"]>(key: Key, callback: (value: this[\"_settings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tlet events = this._settingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._settingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._settingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\t// TODO code duplication with Properties\n\tpublic onPrivate<Key extends keyof this[\"_privateSettings\"]>(key: Key, callback: (value: this[\"_privateSettings\"][Key], target?: E, key?: Key) => void): IDisposer {\n\t\tlet events = this._privateSettingEvents[key];\n\n\t\tif (events === undefined) {\n\t\t\tevents = this._privateSettingEvents[key] = [];\n\t\t}\n\n\t\tevents.push(callback);\n\n\t\treturn new Disposer(() => {\n\t\t\t$array.removeFirst(events!, callback);\n\n\t\t\tif (events!.length === 0) {\n\t\t\t\tdelete this._privateSettingEvents[key];\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic _apply(entity: E, state: ApplyState<E>): IDisposer {\n\t\tconst disposers: Array<IDisposer> = [];\n\n\t\t$object.each(this._settingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.on(key, event));\n\t\t\t});\n\t\t});\n\n\t\t$object.each(this._privateSettingEvents, (key, events) => {\n\t\t\t$array.each(events, (event) => {\n\t\t\t\tdisposers.push(entity.onPrivate(key, event));\n\t\t\t});\n\t\t});\n\n\t\tthis.states._apply(entity, state);\n\n\t\tdisposers.push(this.adapters._apply(entity));\n\t\tdisposers.push(entity.events.copyFrom(this.events));\n\n\t\treturn new MultiDisposer(disposers);\n\t}\n\n\tpublic _setObjectTemplate(entity: E) {\n\t\tthis._entities.push(entity);\n\t}\n\n\tpublic _removeObjectTemplate(entity: E) {\n\t\t$array.keepIf(this._entities, (x) => x !== entity);\n\t}\n\n\tpublic _stateChanged(name: string): void {\n\t\tthis._entities.forEach((entity) => {\n\t\t\tentity._applyStateByKey(name);\n\t\t});\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}