{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Container } from \"./Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { Tooltip } from \"../../core/render/Tooltip\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\n/**\r\n * Heat legend.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\r\n */\nvar HeatLegend = /** @class */function (_super) {\n  __extends(HeatLegend, _super);\n  function HeatLegend() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[Container]] that all labels are placed in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"labelContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A [[Container]] that all markers are placed in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"markerContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A start [[Label]].\r\n     *\r\n     * @default Label.new()\r\n     */\n    Object.defineProperty(_this, \"startLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.labelContainer.children.push(Label.new(_this._root, {\n        themeTags: [\"start\"]\n      }))\n    });\n    /**\r\n     * An end [[Label]].\r\n     *\r\n     * @default Label.new()\r\n     */\n    Object.defineProperty(_this, \"endLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.labelContainer.children.push(Label.new(_this._root, {\n        themeTags: [\"end\"]\n      }))\n    });\n    /**\r\n     * List of rectangle elements used for default legend markers.\r\n     *\r\n     * @default new ListTemplate<RoundedRectangle>\r\n     */\n    Object.defineProperty(_this, \"markers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.markers.template.get(\"themeTags\", []), [_this.get(\"orientation\"), \"heatlegend\", \"marker\"])\n        }, [_this.markers.template]);\n      })\n    });\n    return _this;\n  }\n  Object.defineProperty(HeatLegend.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\n      _super.prototype._afterNew.call(this);\n      this.set(\"tooltip\", Tooltip.new(this._root, {\n        themeTags: [\"heatlegend\"]\n      }));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(HeatLegend.prototype, \"makeMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var marker = this.markers.make();\n      marker.states.create(\"disabled\", {});\n      return marker;\n    }\n  });\n  /**\r\n   * Moves and shows tooltip at specific value.\r\n   *\r\n   * Can also specify optional text to show in tooltip, as well as the color.\r\n   *\r\n   * @param  value  Value\r\n   * @param  text   Text\r\n   * @param  color  Color\r\n   */\n  Object.defineProperty(HeatLegend.prototype, \"showValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value, text, color) {\n      var tooltip = this.getTooltip();\n      if (tooltip && $type.isNumber(value)) {\n        var startValue = this.get(\"startValue\", 0);\n        var endValue = this.get(\"endValue\", 1);\n        var c = (value - startValue) / (endValue - startValue);\n        var startColor = this.get(\"startColor\");\n        var endColor = this.get(\"endColor\");\n        if (!text) {\n          text = this.getNumberFormatter().format(value);\n        }\n        if (!color) {\n          color = Color.interpolate(c, startColor, endColor);\n        }\n        tooltip.label.set(\"text\", text);\n        var p = void 0;\n        if (this.get(\"orientation\") == \"vertical\") {\n          p = this.markerContainer.toGlobal({\n            x: 0,\n            y: this.innerHeight() * (1 - c)\n          });\n        } else {\n          p = this.markerContainer.toGlobal({\n            x: this.innerWidth() * c,\n            y: 0\n          });\n        }\n        var background = tooltip.get(\"background\");\n        if (background) {\n          background.set(\"fill\", Color.interpolate(c, startColor, endColor));\n        }\n        tooltip.set(\"pointTo\", p);\n        tooltip.show();\n      }\n    }\n  });\n  Object.defineProperty(HeatLegend.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._prepareChildren.call(this);\n      var labelContainer = this.labelContainer;\n      var orientation = this.get(\"orientation\");\n      var startLabel = this.startLabel;\n      var endLabel = this.endLabel;\n      var tooltip = this.getTooltip();\n      if (this.isDirty(\"orientation\")) {\n        if (orientation == \"vertical\") {\n          this.markerContainer.setAll({\n            layout: this._root.verticalLayout,\n            height: p100\n          });\n          this.set(\"layout\", this._root.horizontalLayout);\n          startLabel.setAll({\n            y: p100,\n            x: undefined,\n            centerY: p100,\n            centerX: p100\n          });\n          endLabel.setAll({\n            y: 0,\n            x: undefined,\n            centerY: 0,\n            centerX: p100\n          });\n          labelContainer.setAll({\n            height: p100,\n            width: undefined\n          });\n          if (tooltip) {\n            tooltip.set(\"pointerOrientation\", \"horizontal\");\n          }\n        } else {\n          this.markerContainer.setAll({\n            layout: this._root.horizontalLayout,\n            width: p100\n          });\n          this.set(\"layout\", this._root.verticalLayout);\n          startLabel.setAll({\n            x: 0,\n            y: undefined,\n            centerX: 0,\n            centerY: 0\n          });\n          endLabel.setAll({\n            x: p100,\n            y: undefined,\n            centerX: p100,\n            centerY: 0\n          });\n          labelContainer.setAll({\n            width: p100,\n            height: undefined\n          });\n          if (tooltip) {\n            tooltip.set(\"pointerOrientation\", \"vertical\");\n          }\n        }\n      }\n      if (this.isDirty(\"stepCount\")) {\n        var stepCount = this.get(\"stepCount\", 1);\n        var startColor = this.get(\"startColor\");\n        var endColor = this.get(\"endColor\");\n        this.markerContainer.children.clear();\n        if (stepCount > 1) {\n          for (var i = 0; i < stepCount; i++) {\n            var marker = this.makeMarker();\n            if (orientation == \"vertical\") {\n              this.markerContainer.children.moveValue(marker, 0);\n            } else {\n              this.markerContainer.children.push(marker);\n            }\n            if (startColor && endColor) {\n              marker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\n            }\n          }\n        } else if (stepCount == 1) {\n          var marker = this.makeMarker();\n          this.markerContainer.children.push(marker);\n          var gradient = LinearGradient.new(this._root, {\n            stops: [{\n              color: startColor\n            }, {\n              color: endColor\n            }]\n          });\n          if (orientation == \"vertical\") {\n            gradient.set(\"rotation\", 90);\n            var stops = gradient.get(\"stops\");\n            if (stops) {\n              stops.reverse();\n            }\n          } else {\n            gradient.set(\"rotation\", 0);\n          }\n          if (startColor && endColor) {\n            marker.set(\"fillGradient\", gradient);\n          }\n        }\n      }\n      if (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\n        startLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\n      }\n      if (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\n        endLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))));\n      }\n    }\n  });\n  Object.defineProperty(HeatLegend, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"HeatLegend\"\n  });\n  Object.defineProperty(HeatLegend, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([HeatLegend.className])\n  });\n  return HeatLegend;\n}(Container);\nexport { HeatLegend };","map":{"version":3,"names":["Container","Label","p100","RoundedRectangle","Template","ListTemplate","Color","Tooltip","LinearGradient","$utils","$type","HeatLegend","_super","__extends","_this","apply","arguments","Object","defineProperty","children","push","new","_root","labelContainer","themeTags","_new","mergeTags","markers","template","get","value","_settings","orientation","prototype","_afterNew","call","set","marker","make","states","create","text","color","tooltip","getTooltip","isNumber","startValue","endValue","c","startColor","endColor","getNumberFormatter","format","interpolate","label","p","markerContainer","toGlobal","x","y","innerHeight","innerWidth","background","show","_prepareChildren","startLabel","endLabel","isDirty","setAll","layout","verticalLayout","height","horizontalLayout","undefined","centerY","centerX","width","stepCount","clear","i","makeMarker","moveValue","gradient","stops","reverse","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/HeatLegend.ts"],"sourcesContent":["import type { IPoint } from \"../../core/util/IPoint\";\n\nimport { Container, IContainerSettings, IContainerPrivate } from \"./Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { Tooltip } from \"../../core/render/Tooltip\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\n\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IHeatLegendSettings extends IContainerSettings {\n\n\t/**\n\t * Starting (lowest value) color.\n\t */\n\tstartColor: Color;\n\n\t/**\n\t * Ending (highest value) color.\n\t */\n\tendColor: Color;\n\n\t/**\n\t * Start (lowest) value.\n\t */\n\tstartValue?: number;\n\n\t/**\n\t * End (highest) value.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * Text for start label.\n\t */\n\tstartText?: string;\n\n\t/**\n\t * Text for end label.\n\t */\n\tendText?: string;\n\n\t/**\n\t * Number of steps\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/#Gradient_or_steps} for more info\n\t */\n\tstepCount?: number;\n\n\t/**\n\t * Orientation of the heat legend.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/#Orientation} for more info\n\t */\n\torientation: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IHeatLegendPrivate extends IContainerPrivate {\n}\n\n/**\n * Heat legend.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\n */\nexport class HeatLegend extends Container {\n\n\t/**\n\t * A [[Container]] that all labels are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that all markers are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly markerContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A start [[Label]].\n\t *\n\t * @default Label.new()\n\t */\n\tpublic readonly startLabel: Label = this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"start\"] }));\n\n\t/**\n\t * An end [[Label]].\n\t *\n\t * @default Label.new()\n\t */\n\tpublic readonly endLabel: Label = this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"end\"] }));\n\n\tpublic static className: string = \"HeatLegend\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HeatLegend.className]);\n\n\tdeclare public _settings: IHeatLegendSettings;\n\tdeclare public _privateSettings: IHeatLegendPrivate;\n\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\n\t\tsuper._afterNew();\n\t\tthis.set(\"tooltip\", Tooltip.new(this._root, {\n\t\t\tthemeTags: [\"heatlegend\"]\n\t\t}));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarker(): RoundedRectangle {\n\t\tconst marker = this.markers.make();\n\t\tmarker.states.create(\"disabled\", {});\n\t\treturn marker;\n\t}\n\n\t/**\n\t * List of rectangle elements used for default legend markers.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly markers: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [this.get(\"orientation\"), \"heatlegend\", \"marker\"])\n\t\t}, [this.markers.template])\n\t);\n\n\n\t/**\n\t * Moves and shows tooltip at specific value.\n\t *\n\t * Can also specify optional text to show in tooltip, as well as the color.\n\t *\n\t * @param  value  Value\n\t * @param  text   Text\n\t * @param  color  Color\n\t */\n\tpublic showValue(value: number, text?: string, color?: Color) {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip && $type.isNumber(value)) {\n\n\t\t\tconst startValue = this.get(\"startValue\", 0);\n\t\t\tconst endValue = this.get(\"endValue\", 1);\n\n\t\t\tconst c = (value - startValue) / (endValue - startValue);\n\t\t\tconst startColor = this.get(\"startColor\")!;\n\t\t\tconst endColor = this.get(\"endColor\")!;\n\n\t\t\tif (!text) {\n\t\t\t\ttext = this.getNumberFormatter().format(value);\n\t\t\t}\n\n\t\t\tif (!color) {\n\t\t\t\tcolor = Color.interpolate(c, startColor, endColor);\n\t\t\t}\n\n\t\t\ttooltip.label.set(\"text\", text);\n\t\t\tlet p:IPoint;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tp = this.markerContainer.toGlobal({ x: 0, y: this.innerHeight() * (1 - c) });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp = this.markerContainer.toGlobal({ x: this.innerWidth() * c, y: 0 });\n\t\t\t}\n\n\t\t\tlet background = tooltip.get(\"background\");\n\t\t\tif (background) {\n\t\t\t\tbackground.set(\"fill\", Color.interpolate(c, startColor, endColor))\n\t\t\t}\n\t\t\ttooltip.set(\"pointTo\", p);\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst labelContainer = this.labelContainer;\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst startLabel = this.startLabel;\n\t\tconst endLabel = this.endLabel;\n\t\tconst tooltip = this.getTooltip();\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tif (orientation == \"vertical\") {\n\t\t\t\tthis.markerContainer.setAll({ layout: this._root.verticalLayout, height: p100 });\n\t\t\t\tthis.set(\"layout\", this._root.horizontalLayout);\n\t\t\t\tstartLabel.setAll({ y: p100, x: undefined, centerY: p100, centerX: p100 });\n\t\t\t\tendLabel.setAll({ y: 0, x: undefined, centerY: 0, centerX: p100 });\n\t\t\t\tlabelContainer.setAll({ height: p100, width: undefined });\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip.set(\"pointerOrientation\", \"horizontal\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.markerContainer.setAll({ layout: this._root.horizontalLayout, width: p100 });\n\t\t\t\tthis.set(\"layout\", this._root.verticalLayout);\n\t\t\t\tstartLabel.setAll({ x: 0, y: undefined, centerX: 0, centerY: 0 });\n\t\t\t\tendLabel.setAll({ x: p100, y: undefined, centerX: p100, centerY: 0 });\n\t\t\t\tlabelContainer.setAll({ width: p100, height: undefined });\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip.set(\"pointerOrientation\", \"vertical\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stepCount\")) {\n\t\t\tconst stepCount = this.get(\"stepCount\", 1);\n\t\t\tconst startColor = this.get(\"startColor\")!;\n\t\t\tconst endColor = this.get(\"endColor\")!;\n\t\t\tthis.markerContainer.children.clear();\n\t\t\tif (stepCount > 1) {\n\t\t\t\tfor (let i = 0; i < stepCount; i++) {\n\t\t\t\t\tconst marker = this.makeMarker();\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tthis.markerContainer.children.moveValue(marker, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.markerContainer.children.push(marker);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (startColor && endColor) {\n\t\t\t\t\t\tmarker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (stepCount == 1) {\n\t\t\t\tconst marker = this.makeMarker();\n\t\t\t\tthis.markerContainer.children.push(marker);\n\t\t\t\tconst gradient = LinearGradient.new(this._root, { stops: [{ color: startColor }, { color: endColor }] });\n\n\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\tgradient.set(\"rotation\", 90);\n\t\t\t\t\tlet stops = gradient.get(\"stops\");\n\t\t\t\t\tif (stops) {\n\t\t\t\t\t\tstops.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgradient.set(\"rotation\", 0);\n\t\t\t\t}\n\t\t\t\tif (startColor && endColor) {\n\t\t\t\t\tmarker.set(\"fillGradient\", gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\n\t\t\tstartLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\n\t\t}\n\n\t\tif (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\n\t\t\tendLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))))\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}