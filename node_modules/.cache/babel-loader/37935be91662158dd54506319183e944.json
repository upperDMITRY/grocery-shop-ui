{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/users/InputSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, InputBase, InputAdornment, IconButton } from '@mui/material';\nimport { setFilters } from '../../../redux/slices/adminUsers';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputSearchContainerStyle = {\n  display: 'flex',\n  flexGrow: 1,\n  minWidth: '400px',\n  maxWidth: '600px'\n};\nconst inputBaseContainerStyle = {\n  flexGrow: 1,\n  border: '1px solid rgba(0,0,0,0.2)',\n  borderRadius: '50px',\n  transition: 'all 0.3s linear',\n  '&:hover': {\n    border: '1px solid',\n    borderColor: 'primary.main'\n  }\n};\nconst inputBaseStyle = {\n  padding: 1,\n  paddingLeft: 2\n};\n\nconst debounce = (func, timeout = 500) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n};\n\nconst InputSearch = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const email = useSelector(state => state.adminUsers.filters.email);\n  const [inputState, setInputState] = useState(email);\n  useEffect(() => {\n    setInputState(email);\n  }, [email]);\n  const handleSearchChange = debounce(e => {\n    const trimmedEmail = e.target.value.trim().toLowerCase();\n\n    if (email !== trimmedEmail) {\n      dispatch(setFilters({\n        pageNumber: 1,\n        email: trimmedEmail\n      }));\n    }\n  });\n\n  const clearSearchInput = () => {\n    dispatch(setFilters({\n      email: ''\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: inputSearchContainerStyle,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: inputBaseContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(InputBase, {\n        fullWidth: true,\n        sx: inputBaseStyle,\n        placeholder: \"Search by email address...\",\n        onChange: e => {\n          setInputState(e.target.value);\n          handleSearchChange(e);\n        },\n        value: inputState,\n        endAdornment: email && /*#__PURE__*/_jsxDEV(InputAdornment, {\n          sx: {\n            marginRight: 1\n          },\n          position: \"end\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: clearSearchInput,\n            edge: \"end\",\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputSearch, \"RRP0sZXSuKnjx/6Nggxk/wntaEs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = InputSearch;\nexport default InputSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSearch\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/users/InputSearch.jsx"],"names":["useState","useEffect","useSelector","useDispatch","Box","InputBase","InputAdornment","IconButton","setFilters","CloseIcon","inputSearchContainerStyle","display","flexGrow","minWidth","maxWidth","inputBaseContainerStyle","border","borderRadius","transition","borderColor","inputBaseStyle","padding","paddingLeft","debounce","func","timeout","timer","args","clearTimeout","setTimeout","apply","InputSearch","dispatch","email","state","adminUsers","filters","inputState","setInputState","handleSearchChange","e","trimmedEmail","target","value","trim","toLowerCase","pageNumber","clearSearchInput","marginRight"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, InputBase, InputAdornment, IconButton } from '@mui/material';\nimport { setFilters } from '../../../redux/slices/adminUsers';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst inputSearchContainerStyle = {\n  display: 'flex',\n  flexGrow: 1,\n  minWidth: '400px',\n  maxWidth: '600px',\n};\n\nconst inputBaseContainerStyle = {\n  flexGrow: 1,\n  border: '1px solid rgba(0,0,0,0.2)',\n  borderRadius: '50px',\n  transition: 'all 0.3s linear',\n  '&:hover': {\n    border: '1px solid',\n    borderColor: 'primary.main',\n  },\n};\n\nconst inputBaseStyle = {\n  padding: 1,\n  paddingLeft: 2,\n};\n\nconst debounce = (func, timeout = 500) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n};\n\nconst InputSearch = () => {\n  const dispatch = useDispatch();\n\n  const email = useSelector((state) => state.adminUsers.filters.email);\n\n  const [inputState, setInputState] = useState(email);\n\n  useEffect(() => {\n    setInputState(email);\n  }, [email]);\n\n  const handleSearchChange = debounce((e) => {\n    const trimmedEmail = e.target.value.trim().toLowerCase();\n    if (email !== trimmedEmail) {\n      dispatch(\n        setFilters({\n          pageNumber: 1,\n          email: trimmedEmail,\n        })\n      );\n    }\n  });\n\n  const clearSearchInput = () => {\n    dispatch(setFilters({ email: '' }));\n  };\n\n  return (\n    <Box sx={inputSearchContainerStyle}>\n      <Box sx={inputBaseContainerStyle}>\n        <InputBase\n          fullWidth\n          sx={inputBaseStyle}\n          placeholder=\"Search by email address...\"\n          onChange={(e) => {\n            setInputState(e.target.value);\n            handleSearchChange(e);\n          }}\n          value={inputState}\n          endAdornment={\n            email && (\n              <InputAdornment sx={{ marginRight: 1 }} position=\"end\">\n                <IconButton onClick={clearSearchInput} edge=\"end\">\n                  <CloseIcon />\n                </IconButton>\n              </InputAdornment>\n            )\n          }\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default InputSearch;\n"]},"metadata":{},"sourceType":"module"}