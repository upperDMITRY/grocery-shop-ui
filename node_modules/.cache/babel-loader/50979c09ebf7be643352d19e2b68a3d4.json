{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Entity } from \"../../util/Entity\";\n/**\r\n * Base class for gradients.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\nvar Gradient = /** @class */function (_super) {\n  __extends(Gradient, _super);\n  function Gradient() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(Gradient.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      // Applying themes because gradient will not have parent\n      _super.prototype._afterNewApplyThemes.call(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Gradient.prototype, \"getFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_target) {\n      return {\n        addColorStop: function (_offset, _color) {}\n      };\n    }\n  });\n  Object.defineProperty(Gradient.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n      //if (this.isDirty(\"target\") && this.get(\"target\")) {\n      //\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\n      //\t});\n      //}\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Gradient.prototype, \"getBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target) {\n      var gradientTarget = this.get(\"target\");\n      if (gradientTarget) {\n        var bounds = gradientTarget.globalBounds();\n        var p0 = target.toLocal({\n          x: bounds.left,\n          y: bounds.top\n        });\n        var p1 = target.toLocal({\n          x: bounds.right,\n          y: bounds.top\n        });\n        var p2 = target.toLocal({\n          x: bounds.right,\n          y: bounds.bottom\n        });\n        var p3 = target.toLocal({\n          x: bounds.left,\n          y: bounds.bottom\n        });\n        return {\n          left: Math.min(p0.x, p1.x, p2.x, p3.x),\n          top: Math.min(p0.y, p1.y, p2.y, p3.y),\n          right: Math.max(p0.x, p1.x, p2.x, p3.x),\n          bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n        };\n      }\n      return target._display.getLocalBounds();\n    }\n  });\n  Object.defineProperty(Gradient, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Gradient\"\n  });\n  Object.defineProperty(Gradient, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Entity.classNames.concat([Gradient.className])\n  });\n  return Gradient;\n}(Entity);\nexport { Gradient };","map":{"version":3,"names":["Entity","Gradient","_super","__extends","value","prototype","_afterNewApplyThemes","call","_target","addColorStop","_offset","_color","_changed","target","gradientTarget","get","bounds","globalBounds","p0","toLocal","x","left","y","top","p1","right","p2","bottom","p3","Math","min","max","_display","getLocalBounds","Object","defineProperty","classNames","concat","className"],"sources":["../../../../../../src/.internal/core/render/gradients/Gradient.ts"],"sourcesContent":["import type { IBounds } from \"../../util/IBounds\"\nimport type { IGradient, IGradientStop } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\n\nimport { Entity, IEntitySettings, IEntityPrivate } from \"../../util/Entity\"\n\n\nexport interface IGradientSettings extends IEntitySettings {\n\n\t/**\n\t * A list of color steps for the gradient.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n\t */\n\tstops?: Array<IGradientStop>;\n\n\t/**\n\t * Gradient target.\n\t */\n\ttarget?: Sprite;\n\n}\n\nexport interface IGradientPrivate extends IEntityPrivate {\n}\n\n/**\n * Base class for gradients.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport abstract class Gradient extends Entity {\n\n\tdeclare public _settings: IGradientSettings;\n\tdeclare public _privateSettings: IGradientPrivate;\n\n\tpublic static className: string = \"Gradient\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Gradient.className]);\n\n\tprotected _afterNew() {\n\t\t// Applying themes because gradient will not have parent\n\t\tsuper._afterNewApplyThemes();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(_target: Sprite): IGradient {\n\t\treturn {\n\t\t\taddColorStop: (_offset: number, _color: string) => { }\n\t\t};\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\t//if (this.isDirty(\"target\") && this.get(\"target\")) {\n\t\t//\tthis.get(\"target\")!.events.on(\"boundschanged\", () => {\n\n\t\t//\t});\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getBounds(target: Sprite): IBounds {\n\t\tconst gradientTarget = this.get(\"target\");\n\t\tif (gradientTarget) {\n\t\t\tlet bounds = gradientTarget.globalBounds();\n\n\t\t\tconst p0 = target.toLocal({ x: bounds.left, y: bounds.top });\n\t\t\tconst p1 = target.toLocal({ x: bounds.right, y: bounds.top });\n\t\t\tconst p2 = target.toLocal({ x: bounds.right, y: bounds.bottom });\n\t\t\tconst p3 = target.toLocal({ x: bounds.left, y: bounds.bottom });\n\n\t\t\treturn {\n\t\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t\t}\n\t\t}\n\t\treturn target._display.getLocalBounds();\n\t}\n\n}\n"],"mappings":";AAIA,SAASA,MAAM,QAAyC,mBAAmB;AAsB3E;;;;;AAKA,IAAAC,QAAA,0BAAAC,MAAA;EAAuCC,SAAA,CAAAF,QAAA,EAAAC,MAAA;EAAvC,SAAAD,SAAA;;EAuDA;;;;;WA/CC,SAAAG,CAAA;MACC;MACAF,MAAA,CAAAG,SAAA,CAAMC,oBAAoB,CAAAC,IAAA,MAAE;IAC7B;;EAEA;;;;;;;WAGA,SAAAH,CAAeI,OAAe;MAC7B,OAAO;QACNC,YAAY,EAAE,SAAAA,CAACC,OAAe,EAAEC,MAAc,GAAO;OACrD;IACF;;;;;;WAEA,SAAAP,CAAA;MACCF,MAAA,CAAAG,SAAA,CAAMO,QAAQ,CAAAL,IAAA,MAAE;MAEhB;MACA;MAEA;MACA;IACD;;EAEA;;;;;;;WAGA,SAAAH,CAAiBS,MAAc;MAC9B,IAAMC,cAAc,GAAG,IAAI,CAACC,GAAG,CAAC,QAAQ,CAAC;MACzC,IAAID,cAAc,EAAE;QACnB,IAAIE,MAAM,GAAGF,cAAc,CAACG,YAAY,EAAE;QAE1C,IAAMC,EAAE,GAAGL,MAAM,CAACM,OAAO,CAAC;UAAEC,CAAC,EAAEJ,MAAM,CAACK,IAAI;UAAEC,CAAC,EAAEN,MAAM,CAACO;QAAG,CAAE,CAAC;QAC5D,IAAMC,EAAE,GAAGX,MAAM,CAACM,OAAO,CAAC;UAAEC,CAAC,EAAEJ,MAAM,CAACS,KAAK;UAAEH,CAAC,EAAEN,MAAM,CAACO;QAAG,CAAE,CAAC;QAC7D,IAAMG,EAAE,GAAGb,MAAM,CAACM,OAAO,CAAC;UAAEC,CAAC,EAAEJ,MAAM,CAACS,KAAK;UAAEH,CAAC,EAAEN,MAAM,CAACW;QAAM,CAAE,CAAC;QAChE,IAAMC,EAAE,GAAGf,MAAM,CAACM,OAAO,CAAC;UAAEC,CAAC,EAAEJ,MAAM,CAACK,IAAI;UAAEC,CAAC,EAAEN,MAAM,CAACW;QAAM,CAAE,CAAC;QAE/D,OAAO;UACNN,IAAI,EAAEQ,IAAI,CAACC,GAAG,CAACZ,EAAE,CAACE,CAAC,EAAEI,EAAE,CAACJ,CAAC,EAAEM,EAAE,CAACN,CAAC,EAAEQ,EAAE,CAACR,CAAC,CAAC;UACtCG,GAAG,EAAEM,IAAI,CAACC,GAAG,CAACZ,EAAE,CAACI,CAAC,EAAEE,EAAE,CAACF,CAAC,EAAEI,EAAE,CAACJ,CAAC,EAAEM,EAAE,CAACN,CAAC,CAAC;UACrCG,KAAK,EAAEI,IAAI,CAACE,GAAG,CAACb,EAAE,CAACE,CAAC,EAAEI,EAAE,CAACJ,CAAC,EAAEM,EAAE,CAACN,CAAC,EAAEQ,EAAE,CAACR,CAAC,CAAC;UACvCO,MAAM,EAAEE,IAAI,CAACE,GAAG,CAACb,EAAE,CAACI,CAAC,EAAEE,EAAE,CAACF,CAAC,EAAEI,EAAE,CAACJ,CAAC,EAAEM,EAAE,CAACN,CAAC;SACvC;;MAEF,OAAOT,MAAM,CAACmB,QAAQ,CAACC,cAAc,EAAE;IACxC;;EAhDAC,MAAA,CAAAC,cAAA,CAAAlC,QAAA;;;;WAAkC;;EAClCiC,MAAA,CAAAC,cAAA,CAAAlC,QAAA;;;;WAA0CD,MAAM,CAACoC,UAAU,CAACC,MAAM,CAAC,CAACpC,QAAQ,CAACqC,SAAS,CAAC;;EAiDxF,OAAArC,QAAC;CAAA,CAvDsCD,MAAM;SAAvBC,QAAQ"},"metadata":{},"sourceType":"module"}