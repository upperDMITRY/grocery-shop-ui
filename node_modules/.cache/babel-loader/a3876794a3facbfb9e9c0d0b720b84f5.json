{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Label } from \"../render/Label\";\nimport { PointedRectangle } from \"../render/PointedRectangle\";\nimport { Container } from \"./Container\";\nimport { Percent } from \"../util/Percent\";\nimport { Color } from \"../util/Color\";\nimport * as $math from \"../util/Math\";\nimport * as $array from \"../util/Array\";\nimport * as $utils from \"../util/Utils\";\n/**\r\n * Creates a tooltip.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\r\n * @important\r\n */\nvar Tooltip = /** @class */function (_super) {\n  __extends(Tooltip, _super);\n  function Tooltip() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_arrangeDisposer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_fx\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_fy\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_label\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_fillDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_strokeDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_labelDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_w\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_h\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    return _this;\n  }\n  Object.defineProperty(Tooltip.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\n      _super.prototype._afterNew.call(this);\n      this.set(\"background\", PointedRectangle.new(this._root, {\n        themeTags: [\"tooltip\", \"background\"]\n      }));\n      this._label = this.children.push(Label.new(this._root, {}));\n      this._disposers.push(this._label.events.on(\"boundschanged\", function () {\n        _this._updateBackground();\n      }));\n      this.on(\"bounds\", function () {\n        _this._updateBackground();\n      });\n      this._updateTextColor();\n      this._root.tooltipContainer.children.push(this);\n      this.hide(0);\n      this._root._tooltips.push(this);\n    }\n  });\n  Object.defineProperty(Tooltip.prototype, \"label\", {\n    /**\r\n     * A [[Label]] element for the tooltip.\r\n     *\r\n     * @readonly\r\n     * @return Label\r\n     */\n    get: function () {\n      return this._label;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Permanently disposes the tooltip.\r\n   */\n  Object.defineProperty(Tooltip.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.dispose.call(this);\n      $array.remove(this._root._tooltips, this);\n    }\n  });\n  Object.defineProperty(Tooltip.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateChildren.call(this);\n      var labelText = this.get(\"labelText\");\n      if (labelText != null) {\n        this.label.set(\"text\", this.get(\"labelText\"));\n      }\n    }\n  });\n  Object.defineProperty(Tooltip.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n      if (this.isDirty(\"pointTo\")) {\n        // can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\n        this._updateBackground();\n      }\n      if (this.isDirty(\"tooltipTarget\")) {\n        this.updateBackgroundColor();\n      }\n    }\n  });\n  Object.defineProperty(Tooltip.prototype, \"_onShow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._onShow.call(this);\n      this.updateBackgroundColor();\n    }\n  });\n  Object.defineProperty(Tooltip.prototype, \"updateBackgroundColor\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      var tooltipTarget = this.get(\"tooltipTarget\");\n      var background = this.get(\"background\");\n      var fill;\n      var stroke;\n      if (tooltipTarget && background) {\n        fill = tooltipTarget.get(\"fill\");\n        stroke = tooltipTarget.get(\"stroke\");\n        if (fill == null) {\n          fill = stroke;\n        }\n        if (this.get(\"getFillFromSprite\")) {\n          if (this._fillDp) {\n            this._fillDp.dispose();\n          }\n          if (fill != null) {\n            background.set(\"fill\", fill);\n          }\n          this._fillDp = tooltipTarget.on(\"fill\", function (fill) {\n            if (fill != null) {\n              background.set(\"fill\", fill);\n              _this._updateTextColor(fill);\n            }\n          });\n        }\n        if (this.get(\"getStrokeFromSprite\")) {\n          if (this._strokeDp) {\n            this._strokeDp.dispose();\n          }\n          if (fill != null) {\n            background.set(\"stroke\", fill);\n          }\n          this._strokeDp = tooltipTarget.on(\"fill\", function (fill) {\n            if (fill != null) {\n              background.set(\"stroke\", fill);\n            }\n          });\n        }\n        if (this.get(\"getLabelFillFromSprite\")) {\n          if (this._labelDp) {\n            this._labelDp.dispose();\n          }\n          if (fill != null) {\n            this.label.set(\"fill\", fill);\n          }\n          this._labelDp = tooltipTarget.on(\"fill\", function (fill) {\n            if (fill != null) {\n              _this.label.set(\"fill\", fill);\n            }\n          });\n        }\n      }\n      this._updateTextColor(fill);\n    }\n  });\n  Object.defineProperty(Tooltip.prototype, \"_updateTextColor\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fill) {\n      if (this.get(\"autoTextColor\")) {\n        if (fill == null) {\n          fill = this.get(\"background\").get(\"fill\");\n        }\n        if (fill == null) {\n          fill = this._root.interfaceColors.get(\"background\");\n        }\n        if (fill instanceof Color) {\n          this.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\n        }\n      }\n    }\n  });\n  Object.defineProperty(Tooltip.prototype, \"_setDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype._setDataItem.call(this, dataItem);\n      this.label._setDataItem(dataItem);\n    }\n  });\n  Object.defineProperty(Tooltip.prototype, \"_updateBackground\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.updateBackground.call(this);\n      var parent = this._root.container;\n      if (parent) {\n        var cw = 0.5;\n        var ch = 0.5;\n        var centerX = this.get(\"centerX\");\n        if (centerX instanceof Percent) {\n          cw = centerX.value;\n        }\n        var centerY = this.get(\"centerY\");\n        if (centerY instanceof Percent) {\n          ch = centerY.value;\n        }\n        var parentW = parent.width();\n        var parentH = parent.height();\n        var bounds = this.get(\"bounds\", {\n          left: 0,\n          top: 0,\n          right: parentW,\n          bottom: parentH\n        });\n        this._updateBounds();\n        var w = this.width();\n        var h = this.height();\n        // use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\n        if (w === 0) {\n          w = this._w;\n        }\n        if (h === 0) {\n          h = this._h;\n        }\n        var pointTo = this.get(\"pointTo\", {\n          x: parentW / 2,\n          y: parentH / 2\n        });\n        var x = pointTo.x;\n        var y = pointTo.y;\n        var pointerOrientation = this.get(\"pointerOrientation\");\n        var background = this.get(\"background\");\n        var pointerLength = 0;\n        if (background instanceof PointedRectangle) {\n          pointerLength = background.get(\"pointerLength\", 0);\n        }\n        var pointerX = 0;\n        var pointerY = 0;\n        var boundsW = bounds.right - bounds.left;\n        var boundsH = bounds.bottom - bounds.top;\n        // horizontal\n        if (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\n          if (pointerOrientation == \"horizontal\") {\n            if (x > bounds.left + boundsW / 2) {\n              x -= w * (1 - cw) + pointerLength;\n            } else {\n              x += w * cw + pointerLength;\n            }\n          } else if (pointerOrientation == \"left\") {\n            x += w * (1 - cw) + pointerLength;\n          } else {\n            x -= w * cw + pointerLength;\n          }\n        }\n        // vertical pointer\n        else {\n          if (pointerOrientation == \"vertical\") {\n            if (y > bounds.top + h / 2 + pointerLength) {\n              y -= h * (1 - ch) + pointerLength;\n            } else {\n              y += h * ch + pointerLength;\n            }\n          } else if (pointerOrientation == \"down\") {\n            y -= h * (1 - ch) + pointerLength;\n          } else {\n            y += h * ch + pointerLength;\n          }\n        }\n        x = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw));\n        y = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch));\n        pointerX = pointTo.x - x + w * cw;\n        pointerY = pointTo.y - y + h * ch;\n        this._fx = x;\n        this._fy = y;\n        var animationDuration = this.get(\"animationDuration\", 0);\n        if (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\n          var animationEasing = this.get(\"animationEasing\");\n          this.animate({\n            key: \"x\",\n            to: x,\n            duration: animationDuration,\n            easing: animationEasing\n          });\n          this.animate({\n            key: \"y\",\n            to: y,\n            duration: animationDuration,\n            easing: animationEasing\n          });\n        } else {\n          this.set(\"x\", x);\n          this.set(\"y\", y);\n        }\n        if (background instanceof PointedRectangle) {\n          background.set(\"pointerX\", pointerX);\n          background.set(\"pointerY\", pointerY);\n        }\n        if (w > 0) {\n          this._w = w;\n        }\n        if (h > 0) {\n          this._h = h;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Tooltip, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Tooltip\"\n  });\n  Object.defineProperty(Tooltip, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([Tooltip.className])\n  });\n  return Tooltip;\n}(Container);\nexport { Tooltip };","map":{"version":3,"names":["Label","PointedRectangle","Container","Percent","Color","$math","$array","$utils","Tooltip","_super","__extends","_this","apply","arguments","Object","defineProperty","value","_settings","themeTags","mergeTags","prototype","_afterNew","call","set","new","_root","_label","children","push","_disposers","events","on","_updateBackground","_updateTextColor","tooltipContainer","hide","_tooltips","get","dispose","remove","_updateChildren","labelText","label","_changed","isDirty","updateBackgroundColor","_onShow","tooltipTarget","background","fill","stroke","_fillDp","_strokeDp","_labelDp","interfaceColors","alternative","dataItem","_setDataItem","updateBackground","parent","container","cw","ch","centerX","centerY","parentW","width","parentH","height","bounds","left","top","right","bottom","_updateBounds","w","h","_w","_h","pointTo","x","y","pointerOrientation","pointerLength","pointerX","pointerY","boundsW","boundsH","fitToRange","_fx","_fy","animationDuration","animationEasing","animate","key","to","duration","easing","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/Tooltip.ts"],"sourcesContent":["import type { IBounds } from \"../util/IBounds\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { Pattern } from \"../render/patterns/Pattern\";\nimport type { Time } from \"../util/Animation\";\nimport type { Sprite } from \"../render/Sprite\";\nimport type { MultiDisposer, IDisposer } from \"../util/Disposer\";\n\nimport { Label } from \"../render/Label\";\nimport { PointedRectangle } from \"../render/PointedRectangle\";\nimport { Container, IContainerPrivate, IContainerSettings } from \"./Container\";\nimport { Percent } from \"../util/Percent\";\nimport { Color } from \"../util/Color\";\n\nimport * as $math from \"../util/Math\";\nimport * as $array from \"../util/Array\";\nimport * as $utils from \"../util/Utils\";\n//import * as $utils from \"../util/Utils\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\n\n\nexport interface ITooltipSettings extends IContainerSettings {\n\n\t/**\n\t * Text to use for tooltip's label.\n\t */\n\tlabelText?: string\n\n\t/**\n\t * A direction of the tooltip pointer.\n\t *\n\t * https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Orientation\n\t */\n\tpointerOrientation?: \"left\" | \"right\" | \"up\" | \"down\" | \"vertical\" | \"horizontal\";\n\n\t/**\n\t * If set to `true` will use the same `fill` color for its background as\n\t * its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @defaul false\n\t */\n\tgetFillFromSprite?: boolean;\n\n\t/**\n\t * If set to `true` will use the same `fill` color as its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @defaul false\n\t */\n\tgetLabelFillFromSprite?: boolean;\n\n\t/**\n\t * If set to `true` will use the same `stroke` color as its `tooltipTarget`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/#Colors} for more info\n\t * @default false\n\t */\n\tgetStrokeFromSprite?: boolean;\n\n\t/**\n\t * Scree bounds to constring tooltip within.\n\t */\n\tbounds?: IBounds;\n\n\t/**\n\t * If set to `true` tooltip will adjust its text color for better visibility\n\t * on its background.\n\t *\n\t * @default true\n\t */\n\tautoTextColor?: boolean;\n\n\t/**\n\t * Screen coordinates the tooltip show point to.\n\t */\n\tpointTo?: IPoint;\n\n\t/**\n\t * Duration in milliseconds for tooltip position change, e.g. when tooltip\n\t * is jumping from one target to another.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function for tooltip animation.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\t/**\n\t * A target element tooltip is shown fow.\n\t */\n\ttooltipTarget?: Sprite;\n\n}\n\nexport interface ITooltipPrivate extends IContainerPrivate {\n}\n\n/**\n * Creates a tooltip.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/tooltips/} for more info\n * @important\n */\nexport class Tooltip extends Container {\n\n\tprotected _arrangeDisposer: MultiDisposer | undefined;\n\n\tpublic _fx: number = 0;\n\tpublic _fy: number = 0;\n\n\tdeclare public _settings: ITooltipSettings;\n\tdeclare public _privateSettings: ITooltipPrivate;\n\n\tprotected _label!: Label;\n\tpublic static className: string = \"Tooltip\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Tooltip.className]);\n\n\tprotected _fillDp: IDisposer | undefined;\n\tprotected _strokeDp: IDisposer | undefined;\n\tprotected _labelDp: IDisposer | undefined;\n\n\tprotected _w: number = 0;\n\tprotected _h: number = 0;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"tooltip\"]);\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"background\", PointedRectangle.new(this._root, {\n\t\t\tthemeTags: [\"tooltip\", \"background\"]\n\t\t}));\n\n\t\tthis._label = this.children.push(Label.new(this._root, {}));\n\n\t\tthis._disposers.push(this._label.events.on(\"boundschanged\", () => {\n\t\t\tthis._updateBackground();\n\t\t}))\n\n\t\tthis.on(\"bounds\", () => {\n\t\t\tthis._updateBackground();\n\t\t})\n\n\t\tthis._updateTextColor();\n\n\t\tthis._root.tooltipContainer.children.push(this);\n\t\tthis.hide(0);\n\n\t\tthis._root._tooltips.push(this);\n\t}\n\n\t/**\n\t * A [[Label]] element for the tooltip.\n\t *\n\t * @readonly\n\t * @return Label\n\t */\n\tpublic get label(): Label {\n\t\treturn this._label;\n\t}\n\n\t/**\n\t * Permanently disposes the tooltip.\n\t */\n\tpublic dispose() {\n\t\tsuper.dispose();\n\t\t$array.remove(this._root._tooltips, this);\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tconst labelText = this.get(\"labelText\");\n\t\tif (labelText != null) {\n\t\t\tthis.label.set(\"text\", this.get(\"labelText\"));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pointTo\")) {\n\t\t\t// can't compare to previous, as sometimes pointTo is set twice (when pointer moves, so the position won't be udpated)\n\t\t\tthis._updateBackground();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipTarget\")) {\n\t\t\tthis.updateBackgroundColor();\n\t\t}\n\t}\n\n\tprotected _onShow() {\n\t\tsuper._onShow();\n\t\tthis.updateBackgroundColor();\n\t}\n\n\n\tpublic updateBackgroundColor() {\n\t\tlet tooltipTarget = this.get(\"tooltipTarget\");\n\t\tconst background = this.get(\"background\");\n\t\tlet fill: Color | undefined;\n\t\tlet stroke: Color | undefined;\n\n\n\t\tif (tooltipTarget && background) {\n\n\t\t\tfill = tooltipTarget.get(\"fill\" as any);\n\t\t\tstroke = tooltipTarget.get(\"stroke\" as any);\n\n\t\t\tif (fill == null) {\n\t\t\t\tfill = stroke;\n\t\t\t}\n\n\t\t\tif (this.get(\"getFillFromSprite\")) {\n\n\t\t\t\tif (this._fillDp) {\n\t\t\t\t\tthis._fillDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tbackground.set(\"fill\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._fillDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tbackground.set(\"fill\", fill as any);\n\t\t\t\t\t\tthis._updateTextColor(fill);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (this.get(\"getStrokeFromSprite\")) {\n\n\t\t\t\tif (this._strokeDp) {\n\t\t\t\t\tthis._strokeDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tbackground.set(\"stroke\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._strokeDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tbackground.set(\"stroke\", fill as any);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (this.get(\"getLabelFillFromSprite\")) {\n\n\t\t\t\tif (this._labelDp) {\n\t\t\t\t\tthis._labelDp.dispose();\n\t\t\t\t}\n\n\t\t\t\tif (fill != null) {\n\t\t\t\t\tthis.label.set(\"fill\", fill as any);\n\t\t\t\t}\n\n\t\t\t\tthis._labelDp = tooltipTarget.on(\"fill\" as any, (fill) => {\n\t\t\t\t\tif (fill != null) {\n\t\t\t\t\t\tthis.label.set(\"fill\", fill as any);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tthis._updateTextColor(fill);\n\t}\n\n\n\tprotected _updateTextColor(fill?: Color | Pattern) {\n\t\tif (this.get(\"autoTextColor\")) {\n\t\t\tif (fill == null) {\n\t\t\t\tfill = this.get(\"background\")!.get(\"fill\") as Color;\n\t\t\t}\n\n\t\t\tif (fill == null) {\n\t\t\t\tfill = this._root.interfaceColors.get(\"background\");\n\t\t\t}\n\n\t\t\tif (fill instanceof Color) {\n\t\t\t\tthis.label.set(\"fill\", Color.alternative(fill, this._root.interfaceColors.get(\"alternativeText\"), this._root.interfaceColors.get(\"text\")));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tsuper._setDataItem(dataItem);\n\t\tthis.label._setDataItem(dataItem);\n\t}\t\n\n\n\tprotected _updateBackground() {\n\t\tsuper.updateBackground();\n\t\tconst parent = this._root.container;\n\n\t\tif (parent) {\n\n\t\t\tlet cw = 0.5;\n\t\t\tlet ch = 0.5;\n\n\t\t\tlet centerX = this.get(\"centerX\");\n\t\t\tif (centerX instanceof Percent) {\n\t\t\t\tcw = centerX.value;\n\t\t\t}\n\n\t\t\tlet centerY = this.get(\"centerY\");\n\t\t\tif (centerY instanceof Percent) {\n\t\t\t\tch = centerY.value;\n\t\t\t}\n\n\t\t\tlet parentW = parent.width();\n\t\t\tlet parentH = parent.height();\n\n\t\t\tconst bounds = this.get(\"bounds\", { left: 0, top: 0, right: parentW, bottom: parentH });\n\n\t\t\tthis._updateBounds();\n\n\t\t\tlet w = this.width();\n\t\t\tlet h = this.height();\n\n\t\t\t// use old w and h,as when tooltip is hidden, these are 0 and unneeded animation happens\n\t\t\tif (w === 0) {\n\t\t\t\tw = this._w;\n\t\t\t}\n\n\t\t\tif (h === 0) {\n\t\t\t\th = this._h;\n\t\t\t}\n\n\t\t\tlet pointTo = this.get(\"pointTo\", { x: parentW / 2, y: parentH / 2 });\n\t\t\tlet x = pointTo.x;\n\t\t\tlet y = pointTo.y;\n\n\t\t\tlet pointerOrientation = this.get(\"pointerOrientation\");\n\n\t\t\tlet background = this.get(\"background\");\n\t\t\tlet pointerLength = 0;\n\t\t\tif (background instanceof PointedRectangle) {\n\t\t\t\tpointerLength = background.get(\"pointerLength\", 0);\n\t\t\t}\n\n\t\t\tlet pointerX = 0;\n\t\t\tlet pointerY = 0;\n\n\t\t\tlet boundsW = bounds.right - bounds.left;\n\t\t\tlet boundsH = bounds.bottom - bounds.top;\n\n\t\t\t// horizontal\n\t\t\tif (pointerOrientation == \"horizontal\" || pointerOrientation == \"left\" || pointerOrientation == \"right\") {\n\t\t\t\tif (pointerOrientation == \"horizontal\") {\n\t\t\t\t\tif (x > bounds.left + boundsW / 2) {\n\t\t\t\t\t\tx -= (w * (1 - cw) + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tx += (w * cw + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pointerOrientation == \"left\") {\n\t\t\t\t\tx += (w * (1 - cw) + pointerLength);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx -= (w * cw + pointerLength);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// vertical pointer\n\t\t\telse {\n\t\t\t\tif (pointerOrientation == \"vertical\") {\n\t\t\t\t\tif (y > bounds.top + h / 2 + pointerLength) {\n\t\t\t\t\t\ty -= (h * (1 - ch) + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ty += (h * ch + pointerLength);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (pointerOrientation == \"down\") {\n\t\t\t\t\ty -= (h * (1 - ch) + pointerLength);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ty += (h * ch + pointerLength);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = $math.fitToRange(x, bounds.left + w * cw, bounds.left + boundsW - w * (1 - cw));\n\t\t\ty = $math.fitToRange(y, bounds.top + h * ch, bounds.top + boundsH - h * (1 - ch));\n\n\t\t\tpointerX = pointTo.x - x + w * cw;\n\t\t\tpointerY = pointTo.y - y + h * ch;\n\n\t\t\tthis._fx = x;\n\t\t\tthis._fy = y;\n\n\t\t\tconst animationDuration = this.get(\"animationDuration\", 0);\n\n\t\t\tif (animationDuration > 0 && this.get(\"visible\") && this.get(\"opacity\") > 0.1) {\n\t\t\t\tconst animationEasing = this.get(\"animationEasing\");\n\t\t\t\tthis.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\n\t\t\t\tthis.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"x\", x);\n\t\t\t\tthis.set(\"y\", y);\n\t\t\t}\n\n\t\t\tif (background instanceof PointedRectangle) {\n\t\t\t\tbackground.set(\"pointerX\", pointerX);\n\t\t\t\tbackground.set(\"pointerY\", pointerY);\n\t\t\t}\n\n\t\t\tif (w > 0) {\n\t\t\t\tthis._w = w;\n\t\t\t}\n\t\t\tif (h > 0) {\n\t\t\t\tthis._h = h;\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}