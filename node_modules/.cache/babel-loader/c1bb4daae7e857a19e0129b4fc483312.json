{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Theme } from \"../../core/Theme\";\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\nimport { ColorSet } from \"../../core/util/ColorSet\";\nimport { setColor } from \"../../themes/DefaultTheme\";\nimport * as $time from \"../../core/util/Time\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $array from \"../../core/util/Array\";\n/**\r\n * @ignore\r\n */\n\nvar XYChartDefaultTheme =\n/** @class */\nfunction (_super) {\n  __extends(XYChartDefaultTheme, _super);\n\n  function XYChartDefaultTheme() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(XYChartDefaultTheme.prototype, \"setupDefaultRules\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      _super.prototype.setupDefaultRules.call(this);\n\n      var ic = this._root.interfaceColors;\n      var language = this._root.language;\n      var r = this.rule.bind(this);\n      /**\r\n       * ========================================================================\r\n       * charts/xy\r\n       * ========================================================================\r\n       */\n\n      r(\"XYChart\").setAll({\n        colors: ColorSet.new(this._root, {}),\n        paddingLeft: 20,\n        paddingRight: 20,\n        paddingTop: 16,\n        paddingBottom: 16,\n        panX: false,\n        panY: false,\n        wheelStep: 0.25,\n        arrangeTooltips: true\n      });\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * charts/xy: XYChartScrollbar\r\n       * ------------------------------------------------------------------------\r\n       */\n\n      r(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingTop: 0,\n        paddingRight: 0,\n        colors: ColorSet.new(this._root, {\n          saturation: 0\n        })\n      });\n      {\n        var rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\n        rule.setAll({\n          fillOpacity: 0.5\n        });\n        setColor(rule, \"fill\", ic, \"background\");\n      } // Class: RoundedRectangle\n\n      r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\n        cornerRadiusTR: 0,\n        cornerRadiusTL: 0,\n        cornerRadiusBR: 0,\n        cornerRadiusBL: 0,\n        fillOpacity: 0,\n        focusable: true\n      });\n      r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", {\n        fillOpacity: 0.4\n      });\n      r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\n        cornerRadiusTL: 0,\n        cornerRadiusBL: 0,\n        cornerRadiusTR: 0,\n        cornerRadiusBR: 0\n      });\n      r(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\n        cornerRadiusBL: 40,\n        cornerRadiusBR: 40,\n        cornerRadiusTL: 40,\n        cornerRadiusTR: 40\n      });\n      r(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\n        strokeOpacity: 0,\n        inside: true\n      });\n      r(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\n        strokeOpacity: 0,\n        inside: true,\n        minGridDistance: 5\n      });\n      r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\n        opacity: 0.5,\n        centerY: p100,\n        minPosition: 0.01,\n        maxPosition: 0.99,\n        fontSize: \"0.8em\"\n      });\n      r(\"AxisLabel\", [\"category\"]).setAll({\n        text: \"{category}\",\n        populateText: true\n      });\n      r(\"AxisLabel\", [\"x\"]).setAll({\n        centerY: 0\n      });\n      r(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\n        centerY: p100\n      });\n      r(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\n        centerY: 0\n      });\n      r(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\n        centerY: p100\n      });\n      r(\"AxisLabel\", [\"y\"]).setAll({\n        centerX: p100\n      });\n      r(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\n        centerX: 0\n      });\n      r(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\n        centerX: p100\n      });\n      r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\n        centerX: 0\n      });\n      r(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\n        visible: false\n      }); // Class: Grid\n\n      r(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\n        visible: false\n      }); // Class: Grid\n\n      r(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\n        opacity: 0.5\n      });\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * charts/xy: Cursor\r\n       * ------------------------------------------------------------------------\r\n       */\n\n      r(\"XYCursor\").setAll({\n        behavior: \"none\",\n        layer: 20,\n        exportable: false,\n        snapToSeriesBy: \"xy\"\n      });\n      {\n        var rule = r(\"Grid\", [\"cursor\", \"x\"]);\n        rule.setAll({\n          strokeOpacity: 0.8,\n          strokeDasharray: [2, 2]\n        });\n        setColor(rule, \"stroke\", ic, \"alternativeBackground\");\n      }\n      {\n        var rule = r(\"Grid\", [\"cursor\", \"y\"]);\n        rule.setAll({\n          strokeOpacity: 0.8,\n          strokeDasharray: [2, 2]\n        });\n        setColor(rule, \"stroke\", ic, \"alternativeBackground\");\n      }\n      {\n        var rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\n        rule.setAll({\n          fillOpacity: 0.15\n        });\n        setColor(rule, \"fill\", ic, \"alternativeBackground\");\n      }\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * charts/xy: Axes\r\n       * ------------------------------------------------------------------------\r\n       */\n\n      r(\"Axis\").setAll({\n        start: 0,\n        end: 1,\n        minZoomCount: 1,\n        maxZoomCount: Infinity,\n        maxZoomFactor: 1000,\n        maxDeviation: 0.1,\n        snapTooltip: true,\n        tooltipLocation: 0.5,\n        panX: true,\n        panY: true,\n        zoomX: true,\n        zoomY: true,\n        fixAxisSize: true\n      });\n      r(\"AxisLabel\").setAll({\n        location: 0.5,\n        multiLocation: 0,\n        centerX: p50,\n        centerY: p50,\n        paddingTop: 3,\n        paddingBottom: 3,\n        paddingLeft: 5,\n        paddingRight: 5\n      }); // The following is deprecated following text measuring updates in 5.0.5\n      // r(\"AxisLabel\", [\"y\"]).setAll({\n      // \ttextAlign: \"right\"\n      // });\n      // r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\n      // \ttextAlign: \"left\"\n      // });\n\n      r(\"Container\", [\"axis\", \"header\"]).setAll({\n        layer: 30\n      });\n      {\n        var rule = r(\"AxisRenderer\");\n        rule.setAll({\n          strokeOpacity: 0\n        });\n        setColor(rule, \"stroke\", ic, \"grid\");\n      }\n      r(\"AxisRendererX\").setAll({\n        minGridDistance: 120,\n        opposite: false,\n        inversed: false,\n        cellStartLocation: 0,\n        cellEndLocation: 1,\n        width: p100\n      });\n      r(\"AxisRendererY\").setAll({\n        minGridDistance: 40,\n        opposite: false,\n        inversed: false,\n        cellStartLocation: 0,\n        cellEndLocation: 1,\n        height: p100\n      });\n      {\n        var rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\n        rule.setAll({\n          fillOpacity: 0\n        });\n        setColor(rule, \"fill\", ic, \"alternativeBackground\");\n        rule.states.create(\"hover\", {\n          fillOpacity: 0.1\n        });\n      }\n      r(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\n        cursorOverStyle: \"ew-resize\"\n      });\n      r(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\n        cursorOverStyle: \"ns-resize\"\n      });\n      {\n        var rule = r(\"Grid\");\n        rule.setAll({\n          location: 0,\n          strokeOpacity: 0.15\n        });\n        setColor(rule, \"stroke\", ic, \"grid\");\n      }\n      r(\"Grid\", [\"base\"]).setAll({\n        strokeOpacity: 0.3\n      });\n      {\n        var rule = r(\"Graphics\", [\"axis\", \"fill\"]);\n        rule.setAll({\n          visible: false,\n          isMeasured: false,\n          position: \"absolute\",\n          fillOpacity: 0.05\n        });\n        setColor(rule, \"fill\", ic, \"alternativeBackground\");\n      }\n      r(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\n        isMeasured: true\n      }); // hides all elements of series axis range\n\n      r(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\n        visible: false,\n        isMeasured: true\n      });\n      r(\"Grid\", [\"series\", \"range\"]).setAll({\n        visible: false\n      });\n      r(\"AxisTick\", [\"series\", \"range\"]).setAll({\n        visible: false\n      });\n      r(\"AxisLabel\", [\"series\", \"range\"]).setAll({\n        visible: false\n      });\n      {\n        var rule = r(\"AxisTick\");\n        rule.setAll({\n          location: 0.5,\n          multiLocation: 0,\n          strokeOpacity: 1,\n          isMeasured: false,\n          position: \"absolute\",\n          visible: false\n        });\n        setColor(rule, \"stroke\", ic, \"grid\");\n      }\n      r(\"CategoryAxis\").setAll({\n        startLocation: 0,\n        endLocation: 1,\n        fillRule: function fillRule(dataItem, index) {\n          var axisFill = dataItem.get(\"axisFill\");\n\n          if (axisFill) {\n            if (!$type.isNumber(index) || index % 2 == 0) {\n              axisFill.setPrivate(\"visible\", true);\n            } else {\n              axisFill.setPrivate(\"visible\", false);\n            }\n          }\n        }\n      });\n      var gridIntervals = [{\n        timeUnit: \"millisecond\",\n        count: 1\n      }, {\n        timeUnit: \"millisecond\",\n        count: 5\n      }, {\n        timeUnit: \"millisecond\",\n        count: 10\n      }, {\n        timeUnit: \"millisecond\",\n        count: 50\n      }, {\n        timeUnit: \"millisecond\",\n        count: 100\n      }, {\n        timeUnit: \"millisecond\",\n        count: 500\n      }, {\n        timeUnit: \"second\",\n        count: 1\n      }, {\n        timeUnit: \"second\",\n        count: 5\n      }, {\n        timeUnit: \"second\",\n        count: 10\n      }, {\n        timeUnit: \"second\",\n        count: 30\n      }, {\n        timeUnit: \"minute\",\n        count: 1\n      }, {\n        timeUnit: \"minute\",\n        count: 5\n      }, {\n        timeUnit: \"minute\",\n        count: 10\n      }, {\n        timeUnit: \"minute\",\n        count: 15\n      }, {\n        timeUnit: \"minute\",\n        count: 30\n      }, {\n        timeUnit: \"hour\",\n        count: 1\n      }, {\n        timeUnit: \"hour\",\n        count: 3\n      }, {\n        timeUnit: \"hour\",\n        count: 6\n      }, {\n        timeUnit: \"hour\",\n        count: 12\n      }, {\n        timeUnit: \"day\",\n        count: 1\n      }, {\n        timeUnit: \"day\",\n        count: 2\n      }, {\n        timeUnit: \"day\",\n        count: 3\n      }, {\n        timeUnit: \"day\",\n        count: 4\n      }, {\n        timeUnit: \"day\",\n        count: 5\n      }, {\n        timeUnit: \"week\",\n        count: 1\n      }, {\n        timeUnit: \"month\",\n        count: 1\n      }, {\n        timeUnit: \"month\",\n        count: 2\n      }, {\n        timeUnit: \"month\",\n        count: 3\n      }, {\n        timeUnit: \"month\",\n        count: 6\n      }, {\n        timeUnit: \"year\",\n        count: 1\n      }, {\n        timeUnit: \"year\",\n        count: 2\n      }, {\n        timeUnit: \"year\",\n        count: 5\n      }, {\n        timeUnit: \"year\",\n        count: 10\n      }, {\n        timeUnit: \"year\",\n        count: 50\n      }, {\n        timeUnit: \"year\",\n        count: 100\n      }, {\n        timeUnit: \"year\",\n        count: 200\n      }, {\n        timeUnit: \"year\",\n        count: 500\n      }, {\n        timeUnit: \"year\",\n        count: 1000\n      }, {\n        timeUnit: \"year\",\n        count: 2000\n      }, {\n        timeUnit: \"year\",\n        count: 5000\n      }, {\n        timeUnit: \"year\",\n        count: 10000\n      }, {\n        timeUnit: \"year\",\n        count: 100000\n      }];\n      var dateFormats = {\n        \"millisecond\": language.translate(\"_date_millisecond\"),\n        \"second\": language.translate(\"_date_second\"),\n        \"minute\": language.translate(\"_date_minute\"),\n        \"hour\": language.translate(\"_date_hour\"),\n        \"day\": language.translate(\"_date_day\"),\n        \"week\": language.translate(\"_date_day\"),\n        \"month\": language.translate(\"_date_month\"),\n        \"year\": language.translate(\"_date_year\")\n      };\n      var periodChangeDateFormats = {\n        \"millisecond\": language.translate(\"_date_millisecond\"),\n        \"second\": language.translate(\"_date_second\"),\n        \"minute\": language.translate(\"_date_minute\"),\n        \"hour\": language.translate(\"_date_day\"),\n        \"day\": language.translate(\"_date_day\"),\n        \"week\": language.translate(\"_date_day\"),\n        \"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\n        \"year\": language.translate(\"_date_year\")\n      };\n      r(\"CategoryDateAxis\").setAll({\n        markUnitChange: true,\n        gridIntervals: $array.copy(gridIntervals),\n        dateFormats: $object.copy(dateFormats),\n        periodChangeDateFormats: $object.copy(periodChangeDateFormats)\n      });\n      r(\"DateAxis\").setAll({\n        strictMinMax: true,\n        startLocation: 0,\n        endLocation: 1,\n        markUnitChange: true,\n        groupData: false,\n        groupCount: 500,\n        gridIntervals: $array.copy(gridIntervals),\n        dateFormats: $object.copy(dateFormats),\n        periodChangeDateFormats: $object.copy(periodChangeDateFormats),\n        groupIntervals: [{\n          timeUnit: \"millisecond\",\n          count: 1\n        }, {\n          timeUnit: \"millisecond\",\n          count: 10\n        }, {\n          timeUnit: \"millisecond\",\n          count: 100\n        }, {\n          timeUnit: \"second\",\n          count: 1\n        }, {\n          timeUnit: \"second\",\n          count: 10\n        }, {\n          timeUnit: \"minute\",\n          count: 1\n        }, {\n          timeUnit: \"minute\",\n          count: 10\n        }, {\n          timeUnit: \"hour\",\n          count: 1\n        }, {\n          timeUnit: \"day\",\n          count: 1\n        }, {\n          timeUnit: \"week\",\n          count: 1\n        }, {\n          timeUnit: \"month\",\n          count: 1\n        }, {\n          timeUnit: \"year\",\n          count: 1\n        }],\n        fillRule: function fillRule(dataItem) {\n          var axisFill = dataItem.get(\"axisFill\");\n\n          if (axisFill) {\n            var axis = dataItem.component;\n            var value = dataItem.get(\"value\");\n            var endValue = dataItem.get(\"endValue\");\n            var intervalDuration = axis.intervalDuration();\n            var baseInterval = axis.getPrivate(\"baseInterval\");\n            var min = axis.getPrivate(\"min\", 0);\n            min = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count).getTime();\n\n            if (value != null && endValue != null) {\n              var val = Math.round((value - min) / intervalDuration) / 2;\n\n              if (val == Math.round(val)) {\n                axisFill.setPrivate(\"visible\", true);\n              } else {\n                axisFill.setPrivate(\"visible\", false);\n              }\n            }\n          }\n        }\n      });\n      r(\"ValueAxis\").setAll({\n        baseValue: 0,\n        logarithmic: false,\n        extraMin: 0,\n        extraMax: 0,\n        strictMinMax: false,\n        fillRule: function fillRule(dataItem) {\n          var axisFill = dataItem.get(\"axisFill\");\n\n          if (axisFill) {\n            var axis = dataItem.component;\n            var value = dataItem.get(\"value\");\n            var step = axis.getPrivate(\"step\");\n\n            if ($type.isNumber(value) && $type.isNumber(step)) {\n              if ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\n                axisFill.setPrivate(\"visible\", false);\n              } else {\n                axisFill.setPrivate(\"visible\", true);\n              }\n            }\n          }\n        }\n      });\n      r(\"DurationAxis\").setAll({\n        baseUnit: \"second\"\n      });\n      /**\r\n       * ------------------------------------------------------------------------\r\n       * charts/xy: Series\r\n       * ------------------------------------------------------------------------\r\n       */\n\n      r(\"XYSeries\").setAll({\n        maskBullets: true,\n        stackToNegative: true,\n        locationX: 0.5,\n        locationY: 0.5,\n        snapTooltip: false,\n        openValueXGrouped: \"open\",\n        openValueYGrouped: \"open\",\n        valueXGrouped: \"close\",\n        valueYGrouped: \"close\",\n        seriesTooltipTarget: \"series\"\n      });\n      r(\"BaseColumnSeries\").setAll({\n        adjustBulletPosition: true\n      });\n      r(\"ColumnSeries\").setAll({\n        clustered: true\n      });\n      r(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\n        position: \"absolute\",\n        isMeasured: false,\n        width: percent(70),\n        height: percent(70),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        cornerRadiusBL: 0,\n        cornerRadiusTL: 0,\n        cornerRadiusBR: 0,\n        cornerRadiusTR: 0,\n        fillOpacity: 1,\n        role: \"figure\"\n      });\n      r(\"LineSeries\").setAll({\n        connect: true,\n        autoGapCount: 1.1,\n        stackToNegative: false\n      });\n      r(\"Graphics\", [\"series\", \"stroke\"]).setAll({\n        position: \"absolute\",\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        isMeasured: false\n      });\n      r(\"Graphics\", [\"series\", \"fill\"]).setAll({\n        visible: false,\n        fillOpacity: 0,\n        position: \"absolute\",\n        strokeWidth: 0,\n        strokeOpacity: 0,\n        isMeasured: false\n      });\n      r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\n        draw: function draw(display, sprite) {\n          var parent = sprite.parent;\n\n          if (parent) {\n            var h = parent.height();\n            var w = parent.width();\n            display.moveTo(0, h / 2);\n            display.lineTo(w, h / 2);\n          }\n        }\n      });\n      {\n        var rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\n        setColor(rule, \"stroke\", ic, \"disabled\");\n      }\n      r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\n        draw: function draw(display, sprite) {\n          var parent = sprite.parent;\n\n          if (parent) {\n            var h = parent.height();\n            var w = parent.width();\n            display.moveTo(0, 0);\n            display.lineTo(w, 0);\n            display.lineTo(w, h);\n            display.lineTo(0, h);\n            display.lineTo(0, 0);\n          }\n        }\n      });\n      {\n        var rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\n        setColor(rule, \"stroke\", ic, \"disabled\");\n      }\n      r(\"SmoothedXYLineSeries\").setAll({\n        tension: 0.5\n      });\n      r(\"SmoothedXLineSeries\").setAll({\n        tension: 0.5\n      });\n      r(\"SmoothedYLineSeries\").setAll({\n        tension: 0.5\n      });\n      r(\"Candlestick\").setAll({\n        position: \"absolute\",\n        isMeasured: false,\n        width: percent(50),\n        height: percent(50),\n        strokeWidth: 1,\n        strokeOpacity: 1,\n        cornerRadiusBL: 0,\n        cornerRadiusTL: 0,\n        cornerRadiusBR: 0,\n        cornerRadiusTR: 0,\n        fillOpacity: 1,\n        role: \"figure\"\n      });\n      r(\"OHLC\").setAll({\n        width: percent(80),\n        height: percent(80)\n      });\n      r(\"CandlestickSeries\").setAll({\n        lowValueXGrouped: \"low\",\n        lowValueYGrouped: \"low\",\n        highValueXGrouped: \"high\",\n        highValueYGrouped: \"high\",\n        openValueXGrouped: \"open\",\n        openValueYGrouped: \"open\",\n        valueXGrouped: \"close\",\n        valueYGrouped: \"close\"\n      }); // These rules can be used for regular columns, too\n\n      {\n        var rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\n        setColor(rule, \"fill\", ic, \"positive\");\n        setColor(rule, \"stroke\", ic, \"positive\");\n      }\n      {\n        var rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\n        setColor(rule, \"fill\", ic, \"negative\");\n        setColor(rule, \"stroke\", ic, \"negative\");\n      }\n      r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {\n        fillOpacity: 1\n      });\n      r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {\n        fillOpacity: 0\n      });\n    }\n  });\n  return XYChartDefaultTheme;\n}(Theme);\n\nexport { XYChartDefaultTheme };","map":{"version":3,"sources":["../../../../../src/.internal/charts/xy/XYChartDefaultTheme.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 20,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\"\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2]\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\"),\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\t\t\t\t\t\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), baseInterval.timeUnit, baseInterval.count).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round((value - min) / intervalDuration) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\textraMin: 0,\r\n\t\t\textraMax: 0,\r\n\t\t\tstrictMinMax: false,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", { fillOpacity: 1 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", { fillOpacity: 0 });\r\n\r\n\t}\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}