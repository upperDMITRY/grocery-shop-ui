{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\nvar Container = /** @class */function (_super) {\n  __extends(Container, _super);\n  function Container() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._root._renderer.makeContainer()\n    });\n    Object.defineProperty(_this, \"_childrenDisplay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._root._renderer.makeContainer()\n    });\n    /**\r\n     * List of Container's child elements.\r\n     */\n    Object.defineProperty(_this, \"children\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Children(_this)\n    });\n    Object.defineProperty(_this, \"_percentageSizeChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_percentagePositionChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_prevWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_prevHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  Object.defineProperty(Container.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterNew.call(this);\n      this._display.addChild(this._childrenDisplay);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      $array.each(this.allChildren(), function (child) {\n        child.dispose();\n      });\n      var mask = this.get(\"mask\");\n      if (mask) {\n        mask.dispose();\n      }\n      var background = this.get(\"background\");\n      if (background) {\n        background.dispose();\n      }\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n      if (this.isDirty(\"interactiveChildren\")) {\n        this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n      }\n      if (this.isDirty(\"layout\")) {\n        this.markDirtyBounds();\n        if (this._prevSettings.layout) {\n          this.children.each(function (child) {\n            child.removePrivate(\"x\");\n            child.removePrivate(\"y\");\n          });\n        }\n      }\n      if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n        this.children.each(function (child) {\n          child.markDirtyPosition();\n        });\n      }\n      if (this.isDirty(\"maskContent\")) {\n        var childrenDisplay = this._childrenDisplay;\n        var contentMask = this._contentMask;\n        if (this.get(\"maskContent\")) {\n          if (!contentMask) {\n            contentMask = Rectangle.new(this._root, {\n              width: this.width(),\n              height: this.height()\n            });\n            this._contentMask = contentMask;\n            childrenDisplay.addChildAt(contentMask._display, 0);\n            childrenDisplay.mask = contentMask._display;\n          }\n        } else {\n          if (contentMask) {\n            childrenDisplay.removeChild(contentMask._display);\n            childrenDisplay.mask = null;\n            contentMask.dispose();\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateSize.call(this);\n      $array.each(this._percentageSizeChildren, function (child) {\n        child._updateSize();\n      });\n      $array.each(this._percentagePositionChildren, function (child) {\n        child.markDirtyPosition();\n        child._updateSize();\n      });\n      this.updateBackground();\n    }\n  });\n  Object.defineProperty(Container.prototype, \"updateBackground\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var background = this.get(\"background\");\n      var bounds = this._localBounds;\n      if (bounds && !this.isHidden()) {\n        var x = bounds.left;\n        var y = bounds.top;\n        var w = bounds.right - x;\n        var h = bounds.bottom - y;\n        var width = this.width();\n        var height = this.height();\n        if (background) {\n          background.setAll({\n            width: w,\n            height: h,\n            x: x,\n            y: y\n          });\n          if (this._display.interactive) {\n            background._display.interactive = true;\n          }\n        }\n        var contentMask = this._contentMask;\n        if (contentMask) {\n          contentMask.setAll({\n            width: width,\n            height: height\n          });\n        }\n        var verticalScrollbar = this.get(\"verticalScrollbar\");\n        if (verticalScrollbar) {\n          verticalScrollbar.set(\"height\", height);\n          verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n          verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n          var bg = verticalScrollbar.get(\"background\");\n          if (bg) {\n            bg.setAll({\n              width: verticalScrollbar.width(),\n              height: height\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyThemes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (_super.prototype._applyThemes.call(this)) {\n        this.eachChildren(function (child) {\n          child._applyThemes();\n        });\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyState\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      _super.prototype._applyState.call(this, name);\n      if (this.get(\"setStateOnChildren\")) {\n        this.eachChildren(function (child) {\n          child.states.apply(name);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyStateAnimated\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name, duration) {\n      _super.prototype._applyStateAnimated.call(this, name, duration);\n      if (this.get(\"setStateOnChildren\")) {\n        this.eachChildren(function (child) {\n          child.states.applyAnimate(name, duration);\n        });\n      }\n    }\n  });\n  /**\r\n   * Returns container's inner width (width without padding) in pixels.\r\n   *\r\n   * @return Inner width (px)\r\n   */\n  Object.defineProperty(Container.prototype, \"innerWidth\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n    }\n  });\n  /**\r\n   * Returns container's inner height (height without padding) in pixels.\r\n   *\r\n   * @return Inner height (px)\r\n   */\n  Object.defineProperty(Container.prototype, \"innerHeight\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_getBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var width = this.get(\"width\");\n      var height = this.get(\"height\");\n      var pWidth = this.getPrivate(\"width\");\n      var pHeight = this.getPrivate(\"height\");\n      var bounds = {\n        left: 0,\n        top: 0,\n        right: this.width(),\n        bottom: this.height()\n      };\n      var layout = this.get(\"layout\");\n      var horizontal = false;\n      var vertical = false;\n      if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n        horizontal = true;\n      }\n      if (layout instanceof VerticalLayout) {\n        vertical = true;\n      }\n      if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n        // void\n      } else {\n        var m = Number.MAX_VALUE;\n        var l_1 = m;\n        var r_1 = -m;\n        var t_1 = m;\n        var b_1 = -m;\n        var paddingLeft = this.get(\"paddingLeft\", 0);\n        var paddingTop = this.get(\"paddingTop\", 0);\n        var paddingRight = this.get(\"paddingRight\", 0);\n        var paddingBottom = this.get(\"paddingBottom\", 0);\n        this.children.each(function (child) {\n          if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n            var childBounds = child.adjustedLocalBounds();\n            var childX = child.x();\n            var childY = child.y();\n            var cl = childX + childBounds.left;\n            var cr = childX + childBounds.right;\n            var ct = childY + childBounds.top;\n            var cb = childY + childBounds.bottom;\n            if (horizontal) {\n              cl -= child.get(\"marginLeft\", 0);\n              cr += child.get(\"marginRight\", 0);\n            }\n            if (vertical) {\n              ct -= child.get(\"marginTop\", 0);\n              cb += child.get(\"marginBottom\", 0);\n            }\n            if (cl < l_1) {\n              l_1 = cl;\n            }\n            if (cr > r_1) {\n              r_1 = cr;\n            }\n            if (ct < t_1) {\n              t_1 = ct;\n            }\n            if (cb > b_1) {\n              b_1 = cb;\n            }\n          }\n        });\n        if (l_1 == m) {\n          l_1 = 0;\n        }\n        if (r_1 == -m) {\n          r_1 = 0;\n        }\n        if (t_1 == m) {\n          t_1 = 0;\n        }\n        if (b_1 == -m) {\n          b_1 = 0;\n        }\n        bounds.left = l_1 - paddingLeft;\n        bounds.top = t_1 - paddingTop;\n        bounds.right = r_1 + paddingRight;\n        bounds.bottom = b_1 + paddingBottom;\n      }\n      this._contentWidth = bounds.right - bounds.left;\n      this._contentHeight = bounds.bottom - bounds.top;\n      if ($type.isNumber(width)) {\n        bounds.left = 0;\n        bounds.right = width;\n      }\n      if ($type.isNumber(pWidth)) {\n        bounds.left = 0;\n        bounds.right = pWidth;\n      }\n      if ($type.isNumber(height)) {\n        bounds.top = 0;\n        bounds.bottom = height;\n      }\n      if ($type.isNumber(pHeight)) {\n        bounds.top = 0;\n        bounds.bottom = pHeight;\n      }\n      this._localBounds = bounds;\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var layout = this.get(\"layout\");\n      if (layout) {\n        layout.updateContainer(this);\n      }\n      _super.prototype._updateBounds.call(this);\n      this.updateBackground();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Container.prototype, \"markDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.markDirty.call(this);\n      this._root._addDirtyParent(this);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var innerWidth = this.innerWidth();\n      var innerHeight = this.innerHeight();\n      if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n        var layout = this.get(\"layout\");\n        var horizontal_1 = false;\n        var vertical_1 = false;\n        if (layout) {\n          if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n            horizontal_1 = true;\n          }\n          if (layout instanceof VerticalLayout) {\n            vertical_1 = true;\n          }\n        }\n        $array.each(this._percentageSizeChildren, function (child) {\n          if (!horizontal_1) {\n            var width = child.get(\"width\");\n            if (width instanceof Percent) {\n              child.setPrivate(\"width\", width.value * innerWidth);\n            }\n          }\n          if (!vertical_1) {\n            var height = child.get(\"height\");\n            if (height instanceof Percent) {\n              child.setPrivate(\"height\", height.value * innerHeight);\n            }\n          }\n        });\n        $array.each(this._percentagePositionChildren, function (child) {\n          child.markDirtyPosition();\n          child.markDirtyBounds();\n        });\n        this._prevWidth = innerWidth;\n        this._prevHeight = innerHeight;\n        this._sizeDirty = true;\n        this.updateBackground();\n      }\n      this._handleStates();\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      if (this.isDirty(\"verticalScrollbar\")) {\n        var verticalScrollbar_1 = this.get(\"verticalScrollbar\");\n        if (verticalScrollbar_1) {\n          verticalScrollbar_1._setParent(this);\n          verticalScrollbar_1.children.removeValue(verticalScrollbar_1.startGrip);\n          verticalScrollbar_1.children.removeValue(verticalScrollbar_1.endGrip);\n          this.set(\"maskContent\", true);\n          this.set(\"paddingRight\", verticalScrollbar_1.width() + verticalScrollbar_1.get(\"marginRight\", 0) + verticalScrollbar_1.get(\"marginLeft\", 0));\n          var background = this.get(\"background\");\n          if (!background) {\n            background = this.set(\"background\", Rectangle.new(this._root, {\n              themeTags: [\"background\"],\n              fillOpacity: 0,\n              fill: this._root.interfaceColors.get(\"alternativeBackground\")\n            }));\n          }\n          this._disposers.push(this.events.on(\"wheel\", function (event) {\n            var wheelEvent = event.originalEvent;\n            wheelEvent.preventDefault();\n            var shiftY = wheelEvent.deltaY / 5000;\n            var start = verticalScrollbar_1.get(\"start\", 0);\n            var end = verticalScrollbar_1.get(\"end\", 1);\n            if (start + shiftY > 0 && end + shiftY < 1) {\n              verticalScrollbar_1.set(\"start\", start + shiftY);\n              verticalScrollbar_1.set(\"end\", end + shiftY);\n            }\n          }));\n          this._disposers.push(verticalScrollbar_1.events.on(\"rangechanged\", function () {\n            var h = _this._contentHeight;\n            var childrenDisplay = _this._childrenDisplay;\n            var contentMask = _this._contentMask;\n            childrenDisplay.y = -verticalScrollbar_1.get(\"start\") * h;\n            childrenDisplay.markDirtyLayer();\n            if (contentMask) {\n              contentMask._display.y = -childrenDisplay.y;\n              childrenDisplay.mask = contentMask._display;\n            }\n          }));\n          this._display.addChild(verticalScrollbar_1._display);\n        }\n      }\n      if (this.isDirty(\"background\")) {\n        // TODO maybe this should dispose ?\n        var previous = this._prevSettings[\"background\"];\n        if (previous) {\n          this._display.removeChild(previous._display);\n        }\n        var background = this.get(\"background\");\n        if (background instanceof Sprite) {\n          background.set(\"isMeasured\", false);\n          background._setParent(this);\n          this._display.addChildAt(background._display, 0);\n        }\n      }\n      if (this.isDirty(\"mask\")) {\n        var mask = this.get(\"mask\");\n        var previous = this._prevSettings[\"mask\"];\n        if (previous) {\n          this._display.removeChild(previous._display);\n          if (previous != mask) {\n            previous.dispose();\n          }\n        }\n        if (mask) {\n          mask._setParent(this);\n          this._display.addChildAt(mask._display, 0);\n          this._childrenDisplay.mask = mask._display;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_processTemplateField\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._processTemplateField.call(this);\n      this.children.each(function (child) {\n        child._processTemplateField();\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Container.prototype, \"walkChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      this.children.each(function (child) {\n        if (child instanceof Container) {\n          child.walkChildren(f);\n        }\n        f(child);\n      });\n    }\n  });\n  Object.defineProperty(Container.prototype, \"eachChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      var background = this.get(\"background\");\n      if (background) {\n        f(background);\n      }\n      var verticalScrollbar = this.get(\"verticalScrollbar\");\n      if (verticalScrollbar) {\n        f(verticalScrollbar);\n      }\n      var mask = this.get(\"mask\");\n      if (mask) {\n        f(mask);\n      }\n      this.children.values.forEach(function (child) {\n        f(child);\n      });\n    }\n  });\n  Object.defineProperty(Container.prototype, \"allChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var output = [];\n      this.eachChildren(function (x) {\n        output.push(x);\n      });\n      return output;\n    }\n  });\n  Object.defineProperty(Container, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Container\"\n  });\n  Object.defineProperty(Container, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Sprite.classNames.concat([Container.className])\n  });\n  return Container;\n}(Sprite);\nexport { Container };","map":{"version":3,"names":["Children","Percent","Sprite","Rectangle","HorizontalLayout","VerticalLayout","GridLayout","$array","$type","Container","_super","__extends","_this","apply","arguments","Object","defineProperty","_root","_renderer","makeContainer","value","prototype","_afterNew","call","_display","addChild","_childrenDisplay","each","allChildren","child","dispose","mask","get","background","_dispose","_changed","isDirty","interactiveChildren","markDirtyBounds","_prevSettings","layout","children","removePrivate","markDirtyPosition","childrenDisplay","contentMask","_contentMask","new","width","height","addChildAt","removeChild","_updateSize","_percentageSizeChildren","_percentagePositionChildren","updateBackground","bounds","_localBounds","isHidden","x","left","y","top","w","right","h","bottom","setAll","interactive","verticalScrollbar","set","_contentHeight","bg","_applyThemes","eachChildren","name","_applyState","states","duration","_applyStateAnimated","applyAnimate","pWidth","getPrivate","pHeight","horizontal","vertical","m","Number","MAX_VALUE","l_1","r_1","t_1","b_1","paddingLeft","paddingTop","paddingRight","paddingBottom","childBounds","adjustedLocalBounds","childX","childY","cl","cr","ct","cb","_contentWidth","isNumber","updateContainer","_updateBounds","markDirty","_addDirtyParent","innerWidth","innerHeight","_prevWidth","_prevHeight","horizontal_1","vertical_1","setPrivate","_sizeDirty","_handleStates","verticalScrollbar_1","_setParent","removeValue","startGrip","endGrip","themeTags","fillOpacity","fill","interfaceColors","_disposers","push","events","on","event","wheelEvent","originalEvent","preventDefault","shiftY","deltaY","start","end","markDirtyLayer","previous","_processTemplateField","f","walkChildren","values","forEach","output","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/Container.ts"],"sourcesContent":["import type { Graphics } from \"./Graphics\";\nimport type { Layout } from \"./Layout\";\nimport type { IContainer } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Scrollbar } from \"./Scrollbar\";\n\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite, ISpriteSettings, ISpritePrivate, ISpriteEvents } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\n\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\n\nexport interface IContainerSettings extends ISpriteSettings {\n\n\t/**\n\t * Left padding in pixels.\n\t */\n\tpaddingLeft?: number;\n\n\t/**\n\t * Right padding in pixels.\n\t */\n\tpaddingRight?: number;\n\n\t/**\n\t * Top padding in pixels.\n\t */\n\tpaddingTop?: number;\n\n\t/**\n\t * Bottom padding in pixels.\n\t */\n\tpaddingBottom?: number;\n\n\t/**\n\t * Background element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Background} for more info\n\t */\n\tbackground?: Graphics;\n\n\t/**\n\t * A method to layout\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Layout} for more info\n\t */\n\tlayout?: Layout | null;\n\n\t/**\n\t * An element to use as a container's mask (clipping region).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Masks} for more info\n\t */\n\tmask?: Graphics | null;\n\n\t/**\n\t * If set to `true` all content going outside the bounds of the container\n\t * will be clipped.\n\t */\n\tmaskContent?: boolean;\n\n\t/**\n\t * If set to `true` all descendants - not just direct children, but every\n\t * element in it - will become \"interactive\".\n\t */\n\tinteractiveChildren?: boolean;\n\n\t/**\n\t * If set to `true`, applying a state on a container will also apply the same\n\t * state on its children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#States} for more info\n\t */\n\tsetStateOnChildren?: boolean;\n\n\t/**\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Scrollbar} for more info\n\t */\n\tverticalScrollbar?: Scrollbar;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\nexport interface IContainerPrivate extends ISpritePrivate {\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\n/**\n * A basic element that can have child elements, maintain their layout, and\n * have a background.\n *\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\n * full-fledged charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n * @important\n */\nexport class Container extends Sprite {\n\n\tdeclare public _settings: IContainerSettings;\n\tdeclare public _privateSettings: IContainerPrivate;\n\tdeclare public _events: IContainerEvents;\n\n\tpublic _display: IContainer = this._root._renderer.makeContainer();\n\n\tpublic _childrenDisplay: IContainer = this._root._renderer.makeContainer();\n\n\t/**\n\t * List of Container's child elements.\n\t */\n\tpublic children: Children<Sprite> = new Children(this);\n\n\tpublic _percentageSizeChildren: Array<Sprite> = [];\n\tpublic _percentagePositionChildren: Array<Sprite> = [];\n\n\tpublic static className: string = \"Container\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Container.className]);\n\n\tpublic _prevWidth: number = 0;\n\tpublic _prevHeight: number = 0;\n\n\tprotected _contentWidth: number = 0;\n\tprotected _contentHeight: number = 0;\n\n\tprotected _contentMask: Rectangle | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._display.addChild(this._childrenDisplay);\n\t}\n\n\tprotected _dispose() {\n\t\t$array.each(this.allChildren(), (child) => {\n\t\t\tchild.dispose();\n\t\t});\n\n\t\tconst mask = this.get(\"mask\");\n\t\tif (mask) {\n\t\t\tmask.dispose();\n\t\t}\n\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tbackground.dispose();\n\t\t}\n\t\tsuper._dispose();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"interactiveChildren\")) {\n\t\t\tthis._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"layout\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this._prevSettings.layout) {\n\t\t\t\tthis.children.each((child) => {\n\t\t\t\t\tchild.removePrivate(\"x\");\n\t\t\t\t\tchild.removePrivate(\"y\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n\t\t\tthis.children.each((child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"maskContent\")) {\n\n\t\t\tconst childrenDisplay = this._childrenDisplay;\n\n\t\t\tlet contentMask = this._contentMask;\n\t\t\tif (this.get(\"maskContent\")) {\n\t\t\t\tif (!contentMask) {\n\t\t\t\t\tcontentMask = Rectangle.new(this._root, {\n\t\t\t\t\t\twidth: this.width(),\n\t\t\t\t\t\theight: this.height()\n\t\t\t\t\t});\n\t\t\t\t\tthis._contentMask = contentMask;\n\t\t\t\t\tchildrenDisplay.addChildAt(contentMask._display, 0);\n\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (contentMask) {\n\t\t\t\t\tchildrenDisplay.removeChild(contentMask._display);\n\t\t\t\t\tchildrenDisplay.mask = null;\n\t\t\t\t\tcontentMask.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\tchild.markDirtyPosition();\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\tthis.updateBackground();\n\t}\n\n\tprotected updateBackground() {\n\t\tconst background = this.get(\"background\");\n\t\tlet bounds = this._localBounds;\n\n\t\tif (bounds && !this.isHidden()) {\n\t\t\tlet x = bounds.left;\n\t\t\tlet y = bounds.top;\n\t\t\tlet w = bounds.right - x;\n\t\t\tlet h = bounds.bottom - y;\n\n\t\t\tlet width = this.width();\n\t\t\tlet height = this.height();\n\n\t\t\tif (background) {\n\t\t\t\tbackground.setAll({ width: w, height: h, x: x, y: y });\n\t\t\t\tif (this._display.interactive) {\n\t\t\t\t\tbackground._display.interactive = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst contentMask = this._contentMask;\n\t\t\tif (contentMask) {\n\t\t\t\tcontentMask.setAll({ width, height });\n\t\t\t}\n\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar.set(\"height\", height);\n\t\t\t\tverticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n\t\t\t\tverticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n\n\t\t\t\tconst bg = verticalScrollbar.get(\"background\");\n\t\t\t\tif (bg) {\n\t\t\t\t\tbg.setAll({ width: verticalScrollbar.width(), height: height })\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _applyThemes(): boolean {\n\t\tif (super._applyThemes()) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild._applyThemes();\n\t\t\t});\n\n\t\t\treturn true;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic _applyState(name: string): void {\n\t\tsuper._applyState(name);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.apply(name);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _applyStateAnimated(name: string, duration?: number): void {\n\t\tsuper._applyStateAnimated(name, duration);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.applyAnimate(name, duration);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns container's inner width (width without padding) in pixels.\n\t *\n\t * @return Inner width (px)\n\t */\n\tpublic innerWidth(): number {\n\t\treturn this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n\t}\n\n\t/**\n\t * Returns container's inner height (height without padding) in pixels.\n\t *\n\t * @return Inner height (px)\n\t */\n\tpublic innerHeight(): number {\n\t\treturn this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n\t}\n\n\tprotected _getBounds() {\n\n\t\tlet width = this.get(\"width\");\n\t\tlet height = this.get(\"height\");\n\t\tlet pWidth = this.getPrivate(\"width\");\n\t\tlet pHeight = this.getPrivate(\"height\");\n\n\t\tlet bounds: IBounds = {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: this.width(),\n\t\t\tbottom: this.height(),\n\t\t};\n\n\t\tlet layout = this.get(\"layout\");\n\t\tlet horizontal = false;\n\t\tlet vertical = false;\n\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\thorizontal = true;\n\t\t}\n\n\t\tif (layout instanceof VerticalLayout) {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n\t\t\t// void\n\t\t}\n\t\telse {\n\t\t\tlet m = Number.MAX_VALUE;\n\n\t\t\tlet l = m;\n\t\t\tlet r = -m;\n\t\t\tlet t = m;\n\t\t\tlet b = -m;\n\n\t\t\tconst paddingLeft = this.get(\"paddingLeft\", 0);\n\t\t\tconst paddingTop = this.get(\"paddingTop\", 0);\n\t\t\tconst paddingRight = this.get(\"paddingRight\", 0);\n\t\t\tconst paddingBottom = this.get(\"paddingBottom\", 0);\n\n\t\t\tthis.children.each((child) => {\n\t\t\t\tif (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n\t\t\t\t\tlet childBounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet childX = child.x();\n\t\t\t\t\tlet childY = child.y();\n\t\t\t\t\tlet cl = childX + childBounds.left;\n\t\t\t\t\tlet cr = childX + childBounds.right;\n\t\t\t\t\tlet ct = childY + childBounds.top;\n\t\t\t\t\tlet cb = childY + childBounds.bottom;\n\n\t\t\t\t\tif (horizontal) {\n\t\t\t\t\t\tcl -= child.get(\"marginLeft\", 0);\n\t\t\t\t\t\tcr += child.get(\"marginRight\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\tct -= child.get(\"marginTop\", 0);\n\t\t\t\t\t\tcb += child.get(\"marginBottom\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cl < l) {\n\t\t\t\t\t\tl = cl;\n\t\t\t\t\t}\n\t\t\t\t\tif (cr > r) {\n\t\t\t\t\t\tr = cr;\n\t\t\t\t\t}\n\t\t\t\t\tif (ct < t) {\n\t\t\t\t\t\tt = ct;\n\t\t\t\t\t}\n\t\t\t\t\tif (cb > b) {\n\t\t\t\t\t\tb = cb;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (l == m) {\n\t\t\t\tl = 0;\n\t\t\t}\n\n\t\t\tif (r == -m) {\n\t\t\t\tr = 0;\n\t\t\t}\n\n\t\t\tif (t == m) {\n\t\t\t\tt = 0;\n\t\t\t}\n\n\t\t\tif (b == -m) {\n\t\t\t\tb = 0;\n\t\t\t}\n\n\t\t\tbounds.left = l - paddingLeft;\n\t\t\tbounds.top = t - paddingTop;\n\t\t\tbounds.right = r + paddingRight;\n\t\t\tbounds.bottom = b + paddingBottom;\n\t\t}\n\n\t\tthis._contentWidth = bounds.right - bounds.left;\n\t\tthis._contentHeight = bounds.bottom - bounds.top;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = width;\n\t\t}\n\n\t\tif ($type.isNumber(pWidth)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = pWidth;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = height;\n\t\t}\n\n\t\tif ($type.isNumber(pHeight)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = pHeight;\n\t\t}\n\n\t\tthis._localBounds = bounds;\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst layout = this.get(\"layout\");\n\n\t\tif (layout) {\n\t\t\tlayout.updateContainer(this);\n\t\t}\n\n\t\tsuper._updateBounds();\n\n\t\tthis.updateBackground();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tsuper.markDirty();\n\t\tthis._root._addDirtyParent(this);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst innerWidth = this.innerWidth();\n\t\tconst innerHeight = this.innerHeight();\n\n\t\tif (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n\t\t\tlet layout = this.get(\"layout\");\n\t\t\tlet horizontal = false;\n\t\t\tlet vertical = false;\n\t\t\tif (layout) {\n\t\t\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\t\t\thorizontal = true;\n\t\t\t\t}\n\t\t\t\tif (layout instanceof VerticalLayout) {\n\t\t\t\t\tvertical = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\t\tif (!horizontal) {\n\t\t\t\t\tlet width = child.get(\"width\");\n\t\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"width\", width.value * innerWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!vertical) {\n\t\t\t\t\tlet height = child.get(\"height\");\n\t\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"height\", height.value * innerHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t\tchild.markDirtyBounds();\n\t\t\t})\n\n\t\t\tthis._prevWidth = innerWidth;\n\t\t\tthis._prevHeight = innerHeight;\n\n\t\t\tthis._sizeDirty = true;\n\t\t\tthis.updateBackground();\n\t\t}\n\n\t\tthis._handleStates();\n\t}\n\n\tpublic _updateChildren() {\n\n\t\tif (this.isDirty(\"verticalScrollbar\")) {\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar._setParent(this);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.startGrip);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.endGrip);\n\n\t\t\t\tthis.set(\"maskContent\", true);\n\t\t\t\tthis.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\n\n\t\t\t\tlet background = this.get(\"background\");\n\n\t\t\t\tif (!background) {\n\t\t\t\t\tbackground = this.set(\"background\", Rectangle.new(this._root, {\n\t\t\t\t\t\tthemeTags: [\"background\"],\n\t\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\t\tfill: this._root.interfaceColors.get(\"alternativeBackground\")\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis._disposers.push(this.events.on(\"wheel\", (event) => {\n\t\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t\tconst shiftY = wheelEvent.deltaY / 5000;\n\t\t\t\t\tconst start = verticalScrollbar.get(\"start\", 0);\n\t\t\t\t\tconst end = verticalScrollbar.get(\"end\", 1);\n\t\t\t\t\tif (start + shiftY > 0 && end + shiftY < 1) {\n\t\t\t\t\t\tverticalScrollbar.set(\"start\", start + shiftY);\n\t\t\t\t\t\tverticalScrollbar.set(\"end\", end + shiftY);\n\t\t\t\t\t}\n\t\t\t\t}))\n\n\t\t\t\tthis._disposers.push(verticalScrollbar.events.on(\"rangechanged\", () => {\n\t\t\t\t\tlet h = this._contentHeight;\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tconst contentMask = this._contentMask;\n\n\t\t\t\t\tchildrenDisplay.y = -verticalScrollbar.get(\"start\") * h;\n\t\t\t\t\tchildrenDisplay.markDirtyLayer();\n\n\t\t\t\t\tif (contentMask) {\n\t\t\t\t\t\tcontentMask._display.y = -childrenDisplay.y;\n\t\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t\t}\n\t\t\t\t}))\n\n\t\t\t\tthis._display.addChild(verticalScrollbar._display);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"background\")) {\n\t\t\t// TODO maybe this should dispose ?\n\t\t\tconst previous = this._prevSettings[\"background\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t}\n\n\t\t\tconst background = this.get(\"background\");\n\t\t\tif (background instanceof Sprite) {\n\t\t\t\tbackground.set(\"isMeasured\", false);\n\t\t\t\tbackground._setParent(this);\n\t\t\t\tthis._display.addChildAt(background._display, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"mask\")) {\n\n\t\t\tconst mask = this.get(\"mask\");\n\n\t\t\tconst previous = this._prevSettings[\"mask\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\tif (previous != mask) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mask) {\n\t\t\t\tmask._setParent(this);\n\t\t\t\tthis._display.addChildAt(mask._display, 0);\n\t\t\t\tthis._childrenDisplay.mask = mask._display;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tsuper._processTemplateField();\n\t\tthis.children.each((child) => {\n\t\t\tchild._processTemplateField();\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic walkChildren(f: (child: Sprite) => void): void {\n\t\tthis.children.each((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tchild.walkChildren(f);\n\t\t\t}\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic eachChildren(f: (child: Sprite) => void): void {\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tf(background);\n\t\t}\n\n\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\");\n\t\tif (verticalScrollbar) {\n\t\t\tf(verticalScrollbar);\n\t\t}\n\n\t\tconst mask = this.get(\"mask\");\n\t\tif (mask) {\n\t\t\tf(mask);\n\t\t}\n\n\t\tthis.children.values.forEach((child) => {\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic allChildren(): Array<Sprite> {\n\t\tconst output: Array<Sprite> = [];\n\n\t\tthis.eachChildren((x) => {\n\t\t\toutput.push(x);\n\t\t});\n\n\t\treturn output;\n\t}\n}\n"],"mappings":";AAMA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,MAAM,QAAwD,UAAU;AACjF,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,UAAU,QAAQ,cAAc;AAEzC,OAAO,KAAKC,MAAM,MAAM,eAAe;AACvC,OAAO,KAAKC,KAAK,MAAM,cAAc;AAkFrC;;;;;;;;;;AAUA,IAAAC,SAAA,0BAAAC,MAAA;EAA+BC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAA/B,SAAAD,UAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IAMCC,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA8BA,KAAI,CAACK,KAAK,CAACC,SAAS,CAACC,aAAa;;IAEhEJ,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAsCA,KAAI,CAACK,KAAK,CAACC,SAAS,CAACC,aAAa;;IAExE;;;IAGAJ,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAoC,IAAIZ,QAAQ,CAACY,KAAI;;IAErDG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAgD;;IAChDG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAoD;;IAKpDG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA4B;;IAC5BG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA6B;;IAE7BG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAkC;;IAClCG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAmC;;IAEnCG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;;;;EAyfD;;;;;WAvfC,SAAAQ,CAAA;MACCV,MAAA,CAAAW,SAAA,CAAMC,SAAS,CAAAC,IAAA,MAAE;MACjB,IAAI,CAACC,QAAQ,CAACC,QAAQ,CAAC,IAAI,CAACC,gBAAgB,CAAC;IAC9C;;;;;;WAEA,SAAAN,CAAA;MACCb,MAAM,CAACoB,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE,EAAE,UAACC,KAAK;QACrCA,KAAK,CAACC,OAAO,EAAE;MAChB,CAAC,CAAC;MAEF,IAAMC,IAAI,GAAG,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC;MAC7B,IAAID,IAAI,EAAE;QACTA,IAAI,CAACD,OAAO,EAAE;;MAGf,IAAMG,UAAU,GAAG,IAAI,CAACD,GAAG,CAAC,YAAY,CAAC;MACzC,IAAIC,UAAU,EAAE;QACfA,UAAU,CAACH,OAAO,EAAE;;MAErBpB,MAAA,CAAAW,SAAA,CAAMa,QAAQ,CAAAX,IAAA,MAAE;IACjB;;;;;;WAEA,SAAAH,CAAA;MACCV,MAAA,CAAAW,SAAA,CAAMc,QAAQ,CAAAZ,IAAA,MAAE;MAEhB,IAAI,IAAI,CAACa,OAAO,CAAC,qBAAqB,CAAC,EAAE;QACxC,IAAI,CAACZ,QAAQ,CAACa,mBAAmB,GAAG,IAAI,CAACL,GAAG,CAAC,qBAAqB,EAAE,KAAK,CAAC;;MAG3E,IAAI,IAAI,CAACI,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACE,eAAe,EAAE;QACtB,IAAI,IAAI,CAACC,aAAa,CAACC,MAAM,EAAE;UAC9B,IAAI,CAACC,QAAQ,CAACd,IAAI,CAAC,UAACE,KAAK;YACxBA,KAAK,CAACa,aAAa,CAAC,GAAG,CAAC;YACxBb,KAAK,CAACa,aAAa,CAAC,GAAG,CAAC;UACzB,CAAC,CAAC;;;MAIJ,IAAI,IAAI,CAACN,OAAO,CAAC,YAAY,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,cAAc,CAAC,EAAE;QAC/H,IAAI,CAACK,QAAQ,CAACd,IAAI,CAAC,UAACE,KAAK;UACxBA,KAAK,CAACc,iBAAiB,EAAE;QAC1B,CAAC,CAAC;;MAGH,IAAI,IAAI,CAACP,OAAO,CAAC,aAAa,CAAC,EAAE;QAEhC,IAAMQ,eAAe,GAAG,IAAI,CAAClB,gBAAgB;QAE7C,IAAImB,WAAW,GAAG,IAAI,CAACC,YAAY;QACnC,IAAI,IAAI,CAACd,GAAG,CAAC,aAAa,CAAC,EAAE;UAC5B,IAAI,CAACa,WAAW,EAAE;YACjBA,WAAW,GAAG1C,SAAS,CAAC4C,GAAG,CAAC,IAAI,CAAC9B,KAAK,EAAE;cACvC+B,KAAK,EAAE,IAAI,CAACA,KAAK,EAAE;cACnBC,MAAM,EAAE,IAAI,CAACA,MAAM;aACnB,CAAC;YACF,IAAI,CAACH,YAAY,GAAGD,WAAW;YAC/BD,eAAe,CAACM,UAAU,CAACL,WAAW,CAACrB,QAAQ,EAAE,CAAC,CAAC;YACnDoB,eAAe,CAACb,IAAI,GAAGc,WAAW,CAACrB,QAAQ;;SAE5C,MACI;UACJ,IAAIqB,WAAW,EAAE;YAChBD,eAAe,CAACO,WAAW,CAACN,WAAW,CAACrB,QAAQ,CAAC;YACjDoB,eAAe,CAACb,IAAI,GAAG,IAAI;YAC3Bc,WAAW,CAACf,OAAO,EAAE;;;;IAIzB;;;;;;WAEA,SAAAV,CAAA;MACCV,MAAA,CAAAW,SAAA,CAAM+B,WAAW,CAAA7B,IAAA,MAAE;MAEnBhB,MAAM,CAACoB,IAAI,CAAC,IAAI,CAAC0B,uBAAuB,EAAE,UAACxB,KAAK;QAC/CA,KAAK,CAACuB,WAAW,EAAE;MACpB,CAAC,CAAC;MAEF7C,MAAM,CAACoB,IAAI,CAAC,IAAI,CAAC2B,2BAA2B,EAAE,UAACzB,KAAK;QACnDA,KAAK,CAACc,iBAAiB,EAAE;QACzBd,KAAK,CAACuB,WAAW,EAAE;MACpB,CAAC,CAAC;MAEF,IAAI,CAACG,gBAAgB,EAAE;IACxB;;;;;;WAEA,SAAAnC,CAAA;MACC,IAAMa,UAAU,GAAG,IAAI,CAACD,GAAG,CAAC,YAAY,CAAC;MACzC,IAAIwB,MAAM,GAAG,IAAI,CAACC,YAAY;MAE9B,IAAID,MAAM,IAAI,CAAC,IAAI,CAACE,QAAQ,EAAE,EAAE;QAC/B,IAAIC,CAAC,GAAGH,MAAM,CAACI,IAAI;QACnB,IAAIC,CAAC,GAAGL,MAAM,CAACM,GAAG;QAClB,IAAIC,CAAC,GAAGP,MAAM,CAACQ,KAAK,GAAGL,CAAC;QACxB,IAAIM,CAAC,GAAGT,MAAM,CAACU,MAAM,GAAGL,CAAC;QAEzB,IAAIb,KAAK,GAAG,IAAI,CAACA,KAAK,EAAE;QACxB,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;QAE1B,IAAIhB,UAAU,EAAE;UACfA,UAAU,CAACkC,MAAM,CAAC;YAAEnB,KAAK,EAAEe,CAAC;YAAEd,MAAM,EAAEgB,CAAC;YAAEN,CAAC,EAAEA,CAAC;YAAEE,CAAC,EAAEA;UAAC,CAAE,CAAC;UACtD,IAAI,IAAI,CAACrC,QAAQ,CAAC4C,WAAW,EAAE;YAC9BnC,UAAU,CAACT,QAAQ,CAAC4C,WAAW,GAAG,IAAI;;;QAIxC,IAAMvB,WAAW,GAAG,IAAI,CAACC,YAAY;QACrC,IAAID,WAAW,EAAE;UAChBA,WAAW,CAACsB,MAAM,CAAC;YAAEnB,KAAK,EAAAA,KAAA;YAAEC,MAAM,EAAAA;UAAA,CAAE,CAAC;;QAGtC,IAAMoB,iBAAiB,GAAG,IAAI,CAACrC,GAAG,CAAC,mBAAmB,CAAE;QACxD,IAAIqC,iBAAiB,EAAE;UACtBA,iBAAiB,CAACC,GAAG,CAAC,QAAQ,EAAErB,MAAM,CAAC;UACvCoB,iBAAiB,CAACC,GAAG,CAAC,GAAG,EAAEtB,KAAK,GAAGqB,iBAAiB,CAACrB,KAAK,EAAE,GAAGqB,iBAAiB,CAACrC,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;UACvGqC,iBAAiB,CAACC,GAAG,CAAC,KAAK,EAAED,iBAAiB,CAACrC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,GAAGiB,MAAM,GAAG,IAAI,CAACsB,cAAc,CAAC;UAE9F,IAAMC,EAAE,GAAGH,iBAAiB,CAACrC,GAAG,CAAC,YAAY,CAAC;UAC9C,IAAIwC,EAAE,EAAE;YACPA,EAAE,CAACL,MAAM,CAAC;cAAEnB,KAAK,EAAEqB,iBAAiB,CAACrB,KAAK,EAAE;cAAEC,MAAM,EAAEA;YAAM,CAAE,CAAC;;;;IAInE;;;;;;WAEA,SAAA7B,CAAA;MACC,IAAIV,MAAA,CAAAW,SAAA,CAAMoD,YAAY,CAAAlD,IAAA,MAAE,EAAE;QACzB,IAAI,CAACmD,YAAY,CAAC,UAAC7C,KAAK;UACvBA,KAAK,CAAC4C,YAAY,EAAE;QACrB,CAAC,CAAC;QAEF,OAAO,IAAI;OAEX,MAAM;QACN,OAAO,KAAK;;IAEd;;;;;;WAEA,SAAArD,CAAmBuD,IAAY;MAC9BjE,MAAA,CAAAW,SAAA,CAAMuD,WAAW,CAAArD,IAAA,OAACoD,IAAI,CAAC;MAEvB,IAAI,IAAI,CAAC3C,GAAG,CAAC,oBAAoB,CAAC,EAAE;QACnC,IAAI,CAAC0C,YAAY,CAAC,UAAC7C,KAAK;UACvBA,KAAK,CAACgD,MAAM,CAAChE,KAAK,CAAC8D,IAAI,CAAC;QACzB,CAAC,CAAC;;IAEJ;;;;;;WAEA,SAAAvD,CAA2BuD,IAAY,EAAEG,QAAiB;MACzDpE,MAAA,CAAAW,SAAA,CAAM0D,mBAAmB,CAAAxD,IAAA,OAACoD,IAAI,EAAEG,QAAQ,CAAC;MAEzC,IAAI,IAAI,CAAC9C,GAAG,CAAC,oBAAoB,CAAC,EAAE;QACnC,IAAI,CAAC0C,YAAY,CAAC,UAAC7C,KAAK;UACvBA,KAAK,CAACgD,MAAM,CAACG,YAAY,CAACL,IAAI,EAAEG,QAAQ,CAAC;QAC1C,CAAC,CAAC;;IAEJ;;EAEA;;;;;;;;;WAKA,SAAA1D,CAAA;MACC,OAAO,IAAI,CAAC4B,KAAK,EAAE,GAAG,IAAI,CAAChB,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,GAAG,IAAI,CAACA,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;IAC/E;;EAEA;;;;;;;;;WAKA,SAAAZ,CAAA;MACC,OAAO,IAAI,CAAC6B,MAAM,EAAE,GAAG,IAAI,CAACjB,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,GAAG,IAAI,CAACA,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;IAChF;;;;;;WAEA,SAAAZ,CAAA;MAEC,IAAI4B,KAAK,GAAG,IAAI,CAAChB,GAAG,CAAC,OAAO,CAAC;MAC7B,IAAIiB,MAAM,GAAG,IAAI,CAACjB,GAAG,CAAC,QAAQ,CAAC;MAC/B,IAAIiD,MAAM,GAAG,IAAI,CAACC,UAAU,CAAC,OAAO,CAAC;MACrC,IAAIC,OAAO,GAAG,IAAI,CAACD,UAAU,CAAC,QAAQ,CAAC;MAEvC,IAAI1B,MAAM,GAAY;QACrBI,IAAI,EAAE,CAAC;QACPE,GAAG,EAAE,CAAC;QACNE,KAAK,EAAE,IAAI,CAAChB,KAAK,EAAE;QACnBkB,MAAM,EAAE,IAAI,CAACjB,MAAM;OACnB;MAED,IAAIT,MAAM,GAAG,IAAI,CAACR,GAAG,CAAC,QAAQ,CAAC;MAC/B,IAAIoD,UAAU,GAAG,KAAK;MACtB,IAAIC,QAAQ,GAAG,KAAK;MACpB,IAAI7C,MAAM,YAAYpC,gBAAgB,IAAIoC,MAAM,YAAYlC,UAAU,EAAE;QACvE8E,UAAU,GAAG,IAAI;;MAGlB,IAAI5C,MAAM,YAAYnC,cAAc,EAAE;QACrCgF,QAAQ,GAAG,IAAI;;MAGhB,IAAI,CAACrC,KAAK,IAAI,IAAI,IAAIiC,MAAM,IAAI,IAAI,MAAMhC,MAAM,IAAI,IAAI,IAAIkC,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAACnD,GAAG,CAAC,mBAAmB,CAAC,EAAE;QAC/G;MAAA,CACA,MACI;QACJ,IAAIsD,CAAC,GAAGC,MAAM,CAACC,SAAS;QAExB,IAAIC,GAAC,GAAGH,CAAC;QACT,IAAII,GAAC,GAAG,CAACJ,CAAC;QACV,IAAIK,GAAC,GAAGL,CAAC;QACT,IAAIM,GAAC,GAAG,CAACN,CAAC;QAEV,IAAMO,WAAW,GAAG,IAAI,CAAC7D,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;QAC9C,IAAM8D,UAAU,GAAG,IAAI,CAAC9D,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;QAC5C,IAAM+D,YAAY,GAAG,IAAI,CAAC/D,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;QAChD,IAAMgE,aAAa,GAAG,IAAI,CAAChE,GAAG,CAAC,eAAe,EAAE,CAAC,CAAC;QAElD,IAAI,CAACS,QAAQ,CAACd,IAAI,CAAC,UAACE,KAAK;UACxB,IAAIA,KAAK,CAACG,GAAG,CAAC,UAAU,CAAC,IAAI,UAAU,IAAIH,KAAK,CAACG,GAAG,CAAC,YAAY,CAAC,EAAE;YACnE,IAAIiE,WAAW,GAAGpE,KAAK,CAACqE,mBAAmB,EAAE;YAC7C,IAAIC,MAAM,GAAGtE,KAAK,CAAC8B,CAAC,EAAE;YACtB,IAAIyC,MAAM,GAAGvE,KAAK,CAACgC,CAAC,EAAE;YACtB,IAAIwC,EAAE,GAAGF,MAAM,GAAGF,WAAW,CAACrC,IAAI;YAClC,IAAI0C,EAAE,GAAGH,MAAM,GAAGF,WAAW,CAACjC,KAAK;YACnC,IAAIuC,EAAE,GAAGH,MAAM,GAAGH,WAAW,CAACnC,GAAG;YACjC,IAAI0C,EAAE,GAAGJ,MAAM,GAAGH,WAAW,CAAC/B,MAAM;YAEpC,IAAIkB,UAAU,EAAE;cACfiB,EAAE,IAAIxE,KAAK,CAACG,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;cAChCsE,EAAE,IAAIzE,KAAK,CAACG,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC;;YAGlC,IAAIqD,QAAQ,EAAE;cACbkB,EAAE,IAAI1E,KAAK,CAACG,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;cAC/BwE,EAAE,IAAI3E,KAAK,CAACG,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;;YAGnC,IAAIqE,EAAE,GAAGZ,GAAC,EAAE;cACXA,GAAC,GAAGY,EAAE;;YAEP,IAAIC,EAAE,GAAGZ,GAAC,EAAE;cACXA,GAAC,GAAGY,EAAE;;YAEP,IAAIC,EAAE,GAAGZ,GAAC,EAAE;cACXA,GAAC,GAAGY,EAAE;;YAEP,IAAIC,EAAE,GAAGZ,GAAC,EAAE;cACXA,GAAC,GAAGY,EAAE;;;QAGT,CAAC,CAAC;QAEF,IAAIf,GAAC,IAAIH,CAAC,EAAE;UACXG,GAAC,GAAG,CAAC;;QAGN,IAAIC,GAAC,IAAI,CAACJ,CAAC,EAAE;UACZI,GAAC,GAAG,CAAC;;QAGN,IAAIC,GAAC,IAAIL,CAAC,EAAE;UACXK,GAAC,GAAG,CAAC;;QAGN,IAAIC,GAAC,IAAI,CAACN,CAAC,EAAE;UACZM,GAAC,GAAG,CAAC;;QAGNpC,MAAM,CAACI,IAAI,GAAG6B,GAAC,GAAGI,WAAW;QAC7BrC,MAAM,CAACM,GAAG,GAAG6B,GAAC,GAAGG,UAAU;QAC3BtC,MAAM,CAACQ,KAAK,GAAG0B,GAAC,GAAGK,YAAY;QAC/BvC,MAAM,CAACU,MAAM,GAAG0B,GAAC,GAAGI,aAAa;;MAGlC,IAAI,CAACS,aAAa,GAAGjD,MAAM,CAACQ,KAAK,GAAGR,MAAM,CAACI,IAAI;MAC/C,IAAI,CAACW,cAAc,GAAGf,MAAM,CAACU,MAAM,GAAGV,MAAM,CAACM,GAAG;MAEhD,IAAItD,KAAK,CAACkG,QAAQ,CAAC1D,KAAK,CAAC,EAAE;QAC1BQ,MAAM,CAACI,IAAI,GAAG,CAAC;QACfJ,MAAM,CAACQ,KAAK,GAAGhB,KAAK;;MAGrB,IAAIxC,KAAK,CAACkG,QAAQ,CAACzB,MAAM,CAAC,EAAE;QAC3BzB,MAAM,CAACI,IAAI,GAAG,CAAC;QACfJ,MAAM,CAACQ,KAAK,GAAGiB,MAAM;;MAGtB,IAAIzE,KAAK,CAACkG,QAAQ,CAACzD,MAAM,CAAC,EAAE;QAC3BO,MAAM,CAACM,GAAG,GAAG,CAAC;QACdN,MAAM,CAACU,MAAM,GAAGjB,MAAM;;MAGvB,IAAIzC,KAAK,CAACkG,QAAQ,CAACvB,OAAO,CAAC,EAAE;QAC5B3B,MAAM,CAACM,GAAG,GAAG,CAAC;QACdN,MAAM,CAACU,MAAM,GAAGiB,OAAO;;MAGxB,IAAI,CAAC1B,YAAY,GAAGD,MAAM;IAC3B;;;;;;WAEA,SAAApC,CAAA;MACC,IAAMoB,MAAM,GAAG,IAAI,CAACR,GAAG,CAAC,QAAQ,CAAC;MAEjC,IAAIQ,MAAM,EAAE;QACXA,MAAM,CAACmE,eAAe,CAAC,IAAI,CAAC;;MAG7BjG,MAAA,CAAAW,SAAA,CAAMuF,aAAa,CAAArF,IAAA,MAAE;MAErB,IAAI,CAACgC,gBAAgB,EAAE;IACxB;;EAEA;;;;;;;WAGA,SAAAnC,CAAA;MACCV,MAAA,CAAAW,SAAA,CAAMwF,SAAS,CAAAtF,IAAA,MAAE;MACjB,IAAI,CAACN,KAAK,CAAC6F,eAAe,CAAC,IAAI,CAAC;IACjC;;;;;;WAEA,SAAA1F,CAAA;MACC,IAAM2F,UAAU,GAAG,IAAI,CAACA,UAAU,EAAE;MACpC,IAAMC,WAAW,GAAG,IAAI,CAACA,WAAW,EAAE;MAEtC,IAAID,UAAU,IAAI,IAAI,CAACE,UAAU,IAAID,WAAW,IAAI,IAAI,CAACE,WAAW,EAAE;QACrE,IAAI1E,MAAM,GAAG,IAAI,CAACR,GAAG,CAAC,QAAQ,CAAC;QAC/B,IAAImF,YAAU,GAAG,KAAK;QACtB,IAAIC,UAAQ,GAAG,KAAK;QACpB,IAAI5E,MAAM,EAAE;UACX,IAAIA,MAAM,YAAYpC,gBAAgB,IAAIoC,MAAM,YAAYlC,UAAU,EAAE;YACvE6G,YAAU,GAAG,IAAI;;UAElB,IAAI3E,MAAM,YAAYnC,cAAc,EAAE;YACrC+G,UAAQ,GAAG,IAAI;;;QAIjB7G,MAAM,CAACoB,IAAI,CAAC,IAAI,CAAC0B,uBAAuB,EAAE,UAACxB,KAAK;UAC/C,IAAI,CAACsF,YAAU,EAAE;YAChB,IAAInE,KAAK,GAAGnB,KAAK,CAACG,GAAG,CAAC,OAAO,CAAC;YAC9B,IAAIgB,KAAK,YAAY/C,OAAO,EAAE;cAC7B4B,KAAK,CAACwF,UAAU,CAAC,OAAO,EAAErE,KAAK,CAAC5B,KAAK,GAAG2F,UAAU,CAAC;;;UAGrD,IAAI,CAACK,UAAQ,EAAE;YACd,IAAInE,MAAM,GAAGpB,KAAK,CAACG,GAAG,CAAC,QAAQ,CAAC;YAChC,IAAIiB,MAAM,YAAYhD,OAAO,EAAE;cAC9B4B,KAAK,CAACwF,UAAU,CAAC,QAAQ,EAAEpE,MAAM,CAAC7B,KAAK,GAAG4F,WAAW,CAAC;;;QAGzD,CAAC,CAAC;QAEFzG,MAAM,CAACoB,IAAI,CAAC,IAAI,CAAC2B,2BAA2B,EAAE,UAACzB,KAAK;UACnDA,KAAK,CAACc,iBAAiB,EAAE;UACzBd,KAAK,CAACS,eAAe,EAAE;QACxB,CAAC,CAAC;QAEF,IAAI,CAAC2E,UAAU,GAAGF,UAAU;QAC5B,IAAI,CAACG,WAAW,GAAGF,WAAW;QAE9B,IAAI,CAACM,UAAU,GAAG,IAAI;QACtB,IAAI,CAAC/D,gBAAgB,EAAE;;MAGxB,IAAI,CAACgE,aAAa,EAAE;IACrB;;;;;;WAEA,SAAAnG,CAAA;MAAA,IAAAR,KAAA;MAEC,IAAI,IAAI,CAACwB,OAAO,CAAC,mBAAmB,CAAC,EAAE;QACtC,IAAMoF,mBAAiB,GAAG,IAAI,CAACxF,GAAG,CAAC,mBAAmB,CAAE;QACxD,IAAIwF,mBAAiB,EAAE;UACtBA,mBAAiB,CAACC,UAAU,CAAC,IAAI,CAAC;UAClCD,mBAAiB,CAAC/E,QAAQ,CAACiF,WAAW,CAACF,mBAAiB,CAACG,SAAS,CAAC;UACnEH,mBAAiB,CAAC/E,QAAQ,CAACiF,WAAW,CAACF,mBAAiB,CAACI,OAAO,CAAC;UAEjE,IAAI,CAACtD,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;UAC7B,IAAI,CAACA,GAAG,CAAC,cAAc,EAAEkD,mBAAiB,CAACxE,KAAK,EAAE,GAAGwE,mBAAiB,CAACxF,GAAG,CAAC,aAAa,EAAE,CAAC,CAAC,GAAGwF,mBAAiB,CAACxF,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;UAEtI,IAAIC,UAAU,GAAG,IAAI,CAACD,GAAG,CAAC,YAAY,CAAC;UAEvC,IAAI,CAACC,UAAU,EAAE;YAChBA,UAAU,GAAG,IAAI,CAACqC,GAAG,CAAC,YAAY,EAAEnE,SAAS,CAAC4C,GAAG,CAAC,IAAI,CAAC9B,KAAK,EAAE;cAC7D4G,SAAS,EAAE,CAAC,YAAY,CAAC;cACzBC,WAAW,EAAE,CAAC;cACdC,IAAI,EAAE,IAAI,CAAC9G,KAAK,CAAC+G,eAAe,CAAChG,GAAG,CAAC,uBAAuB;aAC5D,CAAC,CAAC;;UAGJ,IAAI,CAACiG,UAAU,CAACC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACC,EAAE,CAAC,OAAO,EAAE,UAACC,KAAK;YAClD,IAAMC,UAAU,GAAGD,KAAK,CAACE,aAAa;YACtCD,UAAU,CAACE,cAAc,EAAE;YAC3B,IAAMC,MAAM,GAAGH,UAAU,CAACI,MAAM,GAAG,IAAI;YACvC,IAAMC,KAAK,GAAGnB,mBAAiB,CAACxF,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC/C,IAAM4G,GAAG,GAAGpB,mBAAiB,CAACxF,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;YAC3C,IAAI2G,KAAK,GAAGF,MAAM,GAAG,CAAC,IAAIG,GAAG,GAAGH,MAAM,GAAG,CAAC,EAAE;cAC3CjB,mBAAiB,CAAClD,GAAG,CAAC,OAAO,EAAEqE,KAAK,GAAGF,MAAM,CAAC;cAC9CjB,mBAAiB,CAAClD,GAAG,CAAC,KAAK,EAAEsE,GAAG,GAAGH,MAAM,CAAC;;UAE5C,CAAC,CAAC,CAAC;UAEH,IAAI,CAACR,UAAU,CAACC,IAAI,CAACV,mBAAiB,CAACW,MAAM,CAACC,EAAE,CAAC,cAAc,EAAE;YAChE,IAAInE,CAAC,GAAGrD,KAAI,CAAC2D,cAAc;YAC3B,IAAM3B,eAAe,GAAGhC,KAAI,CAACc,gBAAgB;YAC7C,IAAMmB,WAAW,GAAGjC,KAAI,CAACkC,YAAY;YAErCF,eAAe,CAACiB,CAAC,GAAG,CAAC2D,mBAAiB,CAACxF,GAAG,CAAC,OAAO,CAAC,GAAGiC,CAAC;YACvDrB,eAAe,CAACiG,cAAc,EAAE;YAEhC,IAAIhG,WAAW,EAAE;cAChBA,WAAW,CAACrB,QAAQ,CAACqC,CAAC,GAAG,CAACjB,eAAe,CAACiB,CAAC;cAC3CjB,eAAe,CAACb,IAAI,GAAGc,WAAW,CAACrB,QAAQ;;UAE7C,CAAC,CAAC,CAAC;UAEH,IAAI,CAACA,QAAQ,CAACC,QAAQ,CAAC+F,mBAAiB,CAAChG,QAAQ,CAAC;;;MAIpD,IAAI,IAAI,CAACY,OAAO,CAAC,YAAY,CAAC,EAAE;QAC/B;QACA,IAAM0G,QAAQ,GAAG,IAAI,CAACvG,aAAa,CAAC,YAAY,CAAC;QACjD,IAAIuG,QAAQ,EAAE;UACb,IAAI,CAACtH,QAAQ,CAAC2B,WAAW,CAAC2F,QAAQ,CAACtH,QAAQ,CAAC;;QAG7C,IAAMS,UAAU,GAAG,IAAI,CAACD,GAAG,CAAC,YAAY,CAAC;QACzC,IAAIC,UAAU,YAAY/B,MAAM,EAAE;UACjC+B,UAAU,CAACqC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC;UACnCrC,UAAU,CAACwF,UAAU,CAAC,IAAI,CAAC;UAC3B,IAAI,CAACjG,QAAQ,CAAC0B,UAAU,CAACjB,UAAU,CAACT,QAAQ,EAAE,CAAC,CAAC;;;MAIlD,IAAI,IAAI,CAACY,OAAO,CAAC,MAAM,CAAC,EAAE;QAEzB,IAAML,IAAI,GAAG,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC;QAE7B,IAAM8G,QAAQ,GAAG,IAAI,CAACvG,aAAa,CAAC,MAAM,CAAC;QAC3C,IAAIuG,QAAQ,EAAE;UACb,IAAI,CAACtH,QAAQ,CAAC2B,WAAW,CAAC2F,QAAQ,CAACtH,QAAQ,CAAC;UAC5C,IAAIsH,QAAQ,IAAI/G,IAAI,EAAE;YACrB+G,QAAQ,CAAChH,OAAO,EAAE;;;QAIpB,IAAIC,IAAI,EAAE;UACTA,IAAI,CAAC0F,UAAU,CAAC,IAAI,CAAC;UACrB,IAAI,CAACjG,QAAQ,CAAC0B,UAAU,CAACnB,IAAI,CAACP,QAAQ,EAAE,CAAC,CAAC;UAC1C,IAAI,CAACE,gBAAgB,CAACK,IAAI,GAAGA,IAAI,CAACP,QAAQ;;;IAG7C;;;;;;WAEA,SAAAJ,CAAA;MACCV,MAAA,CAAAW,SAAA,CAAM0H,qBAAqB,CAAAxH,IAAA,MAAE;MAC7B,IAAI,CAACkB,QAAQ,CAACd,IAAI,CAAC,UAACE,KAAK;QACxBA,KAAK,CAACkH,qBAAqB,EAAE;MAC9B,CAAC,CAAC;IACH;;EAEA;;;;;;;WAGA,SAAA3H,CAAoB4H,CAA0B;MAC7C,IAAI,CAACvG,QAAQ,CAACd,IAAI,CAAC,UAACE,KAAK;QACxB,IAAIA,KAAK,YAAYpB,SAAS,EAAE;UAC/BoB,KAAK,CAACoH,YAAY,CAACD,CAAC,CAAC;;QAEtBA,CAAC,CAACnH,KAAK,CAAC;MACT,CAAC,CAAC;IACH;;;;;;WAEA,SAAAT,CAAoB4H,CAA0B;MAC7C,IAAM/G,UAAU,GAAG,IAAI,CAACD,GAAG,CAAC,YAAY,CAAC;MACzC,IAAIC,UAAU,EAAE;QACf+G,CAAC,CAAC/G,UAAU,CAAC;;MAGd,IAAMoC,iBAAiB,GAAG,IAAI,CAACrC,GAAG,CAAC,mBAAmB,CAAC;MACvD,IAAIqC,iBAAiB,EAAE;QACtB2E,CAAC,CAAC3E,iBAAiB,CAAC;;MAGrB,IAAMtC,IAAI,GAAG,IAAI,CAACC,GAAG,CAAC,MAAM,CAAC;MAC7B,IAAID,IAAI,EAAE;QACTiH,CAAC,CAACjH,IAAI,CAAC;;MAGR,IAAI,CAACU,QAAQ,CAACyG,MAAM,CAACC,OAAO,CAAC,UAACtH,KAAK;QAClCmH,CAAC,CAACnH,KAAK,CAAC;MACT,CAAC,CAAC;IACH;;;;;;WAEA,SAAAT,CAAA;MACC,IAAMgI,MAAM,GAAkB,EAAE;MAEhC,IAAI,CAAC1E,YAAY,CAAC,UAACf,CAAC;QACnByF,MAAM,CAAClB,IAAI,CAACvE,CAAC,CAAC;MACf,CAAC,CAAC;MAEF,OAAOyF,MAAM;IACd;;EAjgBArI,MAAA,CAAAC,cAAA,CAAAP,SAAA;;;;WAAkC;;EAClCM,MAAA,CAAAC,cAAA,CAAAP,SAAA;;;;WAA0CP,MAAM,CAACmJ,UAAU,CAACC,MAAM,CAAC,CAAC7I,SAAS,CAAC8I,SAAS,CAAC;;EAigBzF,OAAA9I,SAAC;CAAA,CAphB8BP,MAAM;SAAxBO,SAAS"},"metadata":{},"sourceType":"module"}