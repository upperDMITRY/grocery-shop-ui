{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"./Graphics\";\n/**\r\n * Draws a rectangle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nvar Rectangle = /** @class */function (_super) {\n  __extends(Rectangle, _super);\n  function Rectangle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(Rectangle.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n      if (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n        this._clear = true;\n      }\n    }\n  });\n  Object.defineProperty(Rectangle.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n      if (this._clear && !this.get(\"draw\")) {\n        this._draw();\n      }\n    }\n  });\n  Object.defineProperty(Rectangle.prototype, \"_draw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._display.drawRect(0, 0, this.width(), this.height());\n    }\n  });\n  Object.defineProperty(Rectangle.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.markDirty();\n      this._clear = true;\n    }\n  });\n  Object.defineProperty(Rectangle, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Rectangle\"\n  });\n  Object.defineProperty(Rectangle, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([Rectangle.className])\n  });\n  return Rectangle;\n}(Graphics);\nexport { Rectangle };","map":{"version":3,"names":["Graphics","Rectangle","_super","__extends","value","prototype","_beforeChanged","call","isDirty","isPrivateDirty","_clear","_changed","get","_draw","_display","drawRect","width","height","markDirty","Object","defineProperty","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/Rectangle.ts"],"sourcesContent":["import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface IRectangleSettings extends IGraphicsSettings {\n}\n\nexport interface IRectanglePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a rectangle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Rectangle extends Graphics {\n\n\tdeclare public _settings: IRectangleSettings;\n\tdeclare public _privateSettings: IRectanglePrivate;\n\n\tpublic static className: string = \"Rectangle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Rectangle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear && !this.get(\"draw\")) {\n\t\t\tthis._draw();\n\t\t}\n\t}\n\n\tprotected _draw() {\n\t\tthis._display.drawRect(0, 0, this.width(), this.height());\n\t}\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAA6C,YAAY;AAQ1E;;;;;;AAMA,IAAAC,SAAA,0BAAAC,MAAA;EAA+BC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAA/B,SAAAD,UAAA;;EAgCA;;;;;WAxBC,SAAAG,CAAA;MACCF,MAAA,CAAAG,SAAA,CAAMC,cAAc,CAAAC,IAAA,MAAE;MAEtB,IAAI,IAAI,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,QAAQ,CAAC,IAAI,IAAI,CAACC,cAAc,CAAC,OAAO,CAAC,IAAI,IAAI,CAACA,cAAc,CAAC,QAAQ,CAAC,EAAE;QACrH,IAAI,CAACC,MAAM,GAAG,IAAI;;IAEpB;;;;;;WAEA,SAAAN,CAAA;MACCF,MAAA,CAAAG,SAAA,CAAMM,QAAQ,CAAAJ,IAAA,MAAE;MAEhB,IAAI,IAAI,CAACG,MAAM,IAAI,CAAC,IAAI,CAACE,GAAG,CAAC,MAAM,CAAC,EAAE;QACrC,IAAI,CAACC,KAAK,EAAE;;IAEd;;;;;;WAEA,SAAAT,CAAA;MACC,IAAI,CAACU,QAAQ,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACC,KAAK,EAAE,EAAE,IAAI,CAACC,MAAM,EAAE,CAAC;IAC1D;;;;;;WAEA,SAAAb,CAAA;MACC,IAAI,CAACc,SAAS,EAAE;MAChB,IAAI,CAACR,MAAM,GAAG,IAAI;IACnB;;EA1BAS,MAAA,CAAAC,cAAA,CAAAnB,SAAA;;;;WAAkC;;EAClCkB,MAAA,CAAAC,cAAA,CAAAnB,SAAA;;;;WAA0CD,QAAQ,CAACqB,UAAU,CAACC,MAAM,CAAC,CAACrB,SAAS,CAACsB,SAAS,CAAC;;EA0B3F,OAAAtB,SAAC;CAAA,CAhC8BD,QAAQ;SAA1BC,SAAS"},"metadata":{},"sourceType":"module"}