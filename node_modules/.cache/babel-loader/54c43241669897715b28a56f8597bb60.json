{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/Sizes.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, TextField, FormControl, MenuItem } from '@mui/material';\nimport { setSizes } from '../../../../redux/slices/adminProducts';\nimport { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NUMBER_OF_SIZES = [0, 1, 2];\nconst SIZE_OPTIONS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst sizesContainerStyle = {\n  display: 'flex',\n  gap: 3,\n  flexGrow: 1\n};\nconst sizeContainerStyle = {\n  width: 'calc(100% / 3)'\n};\nconst Sizes = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const sizes = useSelector(state => state.adminProducts.sizes);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: sizesContainerStyle,\n    children: NUMBER_OF_SIZES.map(i => /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: sizeContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        select: true,\n        label: `Size ${i + 1}`,\n        value: sizes[i],\n        onChange: e => {\n          const newSizes = [...sizes.slice(0, i), e.target.value, ...sizes.slice(i + 1)];\n          dispatch(setSizes(newSizes));\n        },\n        children: SIZE_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option,\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}, \"botiie+sV4qTt+I+gnr14eUxxf8=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n_c2 = Sizes;\nexport default Sizes;\nvar _c, _c2;\n$RefreshReg$(_c, \"Sizes$memo\");\n$RefreshReg$(_c2, \"Sizes\");","map":{"version":3,"names":["useSelector","useDispatch","Box","TextField","FormControl","MenuItem","setSizes","memo","jsxDEV","_jsxDEV","NUMBER_OF_SIZES","SIZE_OPTIONS","sizesContainerStyle","display","gap","flexGrow","sizeContainerStyle","width","Sizes","_c","_s","sizes","state","adminProducts","dispatch","sx","children","map","i","select","label","value","onChange","e","newSizes","slice","target","option","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/Sizes.jsx"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { Box, TextField, FormControl, MenuItem } from '@mui/material';\nimport { setSizes } from '../../../../redux/slices/adminProducts';\nimport { memo } from 'react';\n\nconst NUMBER_OF_SIZES = [0, 1, 2];\nconst SIZE_OPTIONS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst sizesContainerStyle = { display: 'flex', gap: 3, flexGrow: 1 };\n\nconst sizeContainerStyle = { width: 'calc(100% / 3)' };\n\nconst Sizes = memo(() => {\n  const sizes = useSelector((state) => state.adminProducts.sizes);\n  const dispatch = useDispatch();\n\n  return (\n    <Box sx={sizesContainerStyle}>\n      {NUMBER_OF_SIZES.map((i) => (\n        <FormControl key={i} sx={sizeContainerStyle}>\n          <TextField\n            select\n            label={`Size ${i + 1}`}\n            value={sizes[i]}\n            onChange={(e) => {\n              const newSizes = [\n                ...sizes.slice(0, i),\n                e.target.value,\n                ...sizes.slice(i + 1),\n              ];\n              dispatch(setSizes(newSizes));\n            }}\n          >\n            {SIZE_OPTIONS.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </FormControl>\n      ))}\n    </Box>\n  );\n});\n\nexport default Sizes;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,GAAG,EAAEC,SAAS,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,eAAe;AACrE,SAASC,QAAQ,QAAQ,wCAAwC;AACjE,SAASC,IAAI,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,eAAe,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACjC,MAAMC,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAEpD,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,MAAM;EAAEC,GAAG,EAAE,CAAC;EAAEC,QAAQ,EAAE;AAAE,CAAC;AAEpE,MAAMC,kBAAkB,GAAG;EAAEC,KAAK,EAAE;AAAiB,CAAC;AAEtD,MAAMC,KAAK,gBAAGX,IAAI,CAAAY,EAAA,GAAAC,EAAA,CAAC,MAAM;EAAAA,EAAA;EACvB,MAAMC,KAAK,GAAGrB,WAAW,CAAEsB,KAAK,IAAKA,KAAK,CAACC,aAAa,CAACF,KAAK,CAAC;EAC/D,MAAMG,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAE9B,oBACEQ,OAAA,CAACP,GAAG;IAACuB,EAAE,EAAEb,mBAAoB;IAAAc,QAAA,EAC1BhB,eAAe,CAACiB,GAAG,CAAEC,CAAC,iBACrBnB,OAAA,CAACL,WAAW;MAASqB,EAAE,EAAET,kBAAmB;MAAAU,QAAA,eAC1CjB,OAAA,CAACN,SAAS;QACR0B,MAAM;QACNC,KAAK,EAAG,QAAOF,CAAC,GAAG,CAAE,EAAE;QACvBG,KAAK,EAAEV,KAAK,CAACO,CAAC,CAAE;QAChBI,QAAQ,EAAGC,CAAC,IAAK;UACf,MAAMC,QAAQ,GAAG,CACf,GAAGb,KAAK,CAACc,KAAK,CAAC,CAAC,EAAEP,CAAC,CAAC,EACpBK,CAAC,CAACG,MAAM,CAACL,KAAK,EACd,GAAGV,KAAK,CAACc,KAAK,CAACP,CAAC,GAAG,CAAC,CAAC,CACtB;UACDJ,QAAQ,CAAClB,QAAQ,CAAC4B,QAAQ,CAAC,CAAC;QAC9B,CAAE;QAAAR,QAAA,EAEDf,YAAY,CAACgB,GAAG,CAAEU,MAAM,iBACvB5B,OAAA,CAACJ,QAAQ;UAAc0B,KAAK,EAAEM,MAAO;UAAAX,QAAA,EAClCW;QAAM,GADMA,MAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC,GAnBIb,CAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAoBN,CACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;EAAA,QA9BezC,WAAW,EACRC,WAAW;AAAA,EA6B7B,CAAC;AAACyC,GAAA,GA/BGxB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAC,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}