{"ast":null,"code":"/**\r\n * @ignore\r\n */\nvar MonotoneXTension =\n/** @class */\nfunction () {\n  function MonotoneXTension(context, tension) {\n    Object.defineProperty(this, \"_line\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_point\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_context\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_x0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_x1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_y1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_t0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_tension\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    this._context = context;\n    this._tension = tension;\n  }\n\n  Object.defineProperty(MonotoneXTension.prototype, \"areaStart\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._line = 0;\n    }\n  });\n  Object.defineProperty(MonotoneXTension.prototype, \"areaEnd\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._line = NaN;\n    }\n  });\n  Object.defineProperty(MonotoneXTension.prototype, \"lineStart\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;\n      this._point = 0;\n    }\n  });\n  Object.defineProperty(MonotoneXTension.prototype, \"lineEnd\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      switch (this._point) {\n        case 2:\n          this._context.lineTo(this._x1, this._y1);\n\n          break;\n\n        case 3:\n          point(this, this._t0, slope2(this, this._t0));\n          break;\n      }\n\n      if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();\n      this._line = 1 - this._line;\n    }\n  });\n  Object.defineProperty(MonotoneXTension.prototype, \"point\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (x, y) {\n      var t1 = NaN;\n      x = +x, y = +y;\n      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n\n      switch (this._point) {\n        case 0:\n          this._point = 1;\n          this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);\n          break;\n\n        case 1:\n          this._point = 2;\n          break;\n\n        case 2:\n          this._point = 3;\n          point(this, slope2(this, t1 = slope3(this, x, y)), t1);\n          break;\n\n        default:\n          point(this, this._t0, t1 = slope3(this, x, y));\n          break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n      this._t0 = t1;\n    }\n  });\n  return MonotoneXTension;\n}();\n\nexport { MonotoneXTension };\n/**\r\n * @ignore\r\n */\n\nexport function curveMonotoneXTension(tension) {\n  function monotoneXTension(context) {\n    return new MonotoneXTension(context, tension);\n  }\n\n  return monotoneXTension;\n}\n/**\r\n * @ignore\r\n */\n\nfunction sign(x) {\n  return x < 0 ? -1 : 1;\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0;\n  var h1 = x2 - that._x1;\n  var s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  var s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  var p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 1.5 * (1 - that._tension);\n\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}","map":{"version":3,"sources":["../../../../../src/.internal/core/render/MonotoneXTension.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @ignore\n */\nexport class MonotoneXTension {\n\n  constructor(context: CanvasRenderingContext2D, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneXTension(tension: number) {\n\n  function monotoneXTension(context: any) {\n    return new MonotoneXTension(context, tension);\n  }\n\n  return monotoneXTension;\n}\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneXTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneXTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneXTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}"],"sourceRoot":""},"metadata":{},"sourceType":"module"}