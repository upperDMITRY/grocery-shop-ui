{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { XYSeries } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n/**\r\n * Used to plot line and/or area series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\r\n * @important\r\n */\nvar LineSeries = /** @class */function (_super) {\n  __extends(LineSeries, _super);\n  function LineSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_endIndex\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_strokeGenerator\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: line()\n    });\n    Object.defineProperty(_this, \"_fillGenerator\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: area()\n    });\n    /**\r\n     * A [[TemplateList]] of all line segments in series.\r\n     *\r\n     * `strokes.template` can be used to set default settings for all line\r\n     * segments, or to change on existing ones.\r\n     *\r\n     * @default new ListTemplate<Graphics>\r\n     */\n    Object.defineProperty(_this, \"strokes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n        }, [_this.strokes.template]);\n      })\n    });\n    /**\r\n     * A [[TemplateList]] of all segment fills in series.\r\n     *\r\n     * `fills.template` can be used to set default settings for all segment\r\n     * fills, or to change on existing ones.\r\n     *\r\n     * @default new ListTemplate<Graphics>\r\n     */\n    Object.defineProperty(_this, \"fills\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n        }, [_this.fills.template]);\n      })\n    });\n    // custom set from data\n    Object.defineProperty(_this, \"_fillTemplate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_strokeTemplate\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  Object.defineProperty(LineSeries.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._fillGenerator.y0(function (p) {\n        return p[3];\n      });\n      this._fillGenerator.x0(function (p) {\n        return p[2];\n      });\n      this._fillGenerator.y1(function (p) {\n        return p[1];\n      });\n      this._fillGenerator.x1(function (p) {\n        return p[0];\n      });\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(LineSeries.prototype, \"makeStroke\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (strokes) {\n      var stroke = this.mainContainer.children.push(strokes.make());\n      strokes.push(stroke);\n      return stroke;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(LineSeries.prototype, \"makeFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fills) {\n      var fill = this.mainContainer.children.push(fills.make());\n      fills.push(fill);\n      return fill;\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._strokeTemplate = undefined;\n      this._fillTemplate = undefined;\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      if (this.isDirty(\"stroke\")) {\n        this.strokes.template.set(\"stroke\", this.get(\"stroke\"));\n      }\n      if (this.isDirty(\"fill\")) {\n        this.fills.template.set(\"fill\", this.get(\"fill\"));\n      }\n      if (this.isDirty(\"curveFactory\")) {\n        var curveFactory = this.get(\"curveFactory\");\n        if (curveFactory) {\n          this._strokeGenerator.curve(curveFactory);\n          this._fillGenerator.curve(curveFactory);\n        }\n      }\n      if (xAxis.inited && yAxis.inited) {\n        if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n          this.fills.each(function (fill) {\n            fill.setPrivate(\"visible\", false);\n          });\n          this.strokes.each(function (fill) {\n            fill.setPrivate(\"visible\", false);\n          });\n          this.axisRanges.each(function (axisRange) {\n            var fills = axisRange.fills;\n            if (fills) {\n              fills.each(function (fill) {\n                fill.setPrivate(\"visible\", false);\n              });\n            }\n            var strokes = axisRange.strokes;\n            if (strokes) {\n              strokes.each(function (stroke) {\n                stroke.setPrivate(\"visible\", false);\n              });\n            }\n          });\n          var startIndex = this.getPrivate(\"startIndex\", 0);\n          var strokeTemplateField = this.strokes.template.get(\"templateField\");\n          var fillTemplateField = this.fills.template.get(\"templateField\");\n          var strokeTemplateFound = true;\n          var fillTemplateFound = true;\n          if (strokeTemplateField) {\n            strokeTemplateFound = false;\n          }\n          if (fillTemplateField) {\n            fillTemplateFound = false;\n          }\n          var _loop_1 = function (i) {\n            var dataItem = this_1.dataItems[i];\n            var hasValues = true;\n            var dataContext = dataItem.dataContext;\n            if (strokeTemplateField) {\n              if (dataContext[strokeTemplateField]) {\n                strokeTemplateFound = true;\n              }\n            }\n            if (fillTemplateField) {\n              if (dataContext[fillTemplateField]) {\n                fillTemplateFound = true;\n              }\n            }\n            $array.each(this_1._valueFields, function (field) {\n              if (!$type.isNumber(dataItem.get(field))) {\n                hasValues = false;\n              }\n            });\n            if (hasValues && strokeTemplateFound && fillTemplateFound) {\n              startIndex = i;\n              return \"break\";\n            }\n          };\n          var this_1 = this;\n          for (var i = startIndex - 1; i >= 0; i--) {\n            var state_1 = _loop_1(i);\n            if (state_1 === \"break\") break;\n          }\n          var len = this.dataItems.length;\n          var endIndex = this.getPrivate(\"endIndex\", len);\n          if (endIndex < len) {\n            endIndex++;\n            var _loop_2 = function (i) {\n              var dataItem = this_2.dataItems[i];\n              var hasValues = true;\n              $array.each(this_2._valueFields, function (field) {\n                if (!$type.isNumber(dataItem.get(field))) {\n                  hasValues = false;\n                }\n              });\n              if (hasValues) {\n                endIndex = i + 1;\n                return \"break\";\n              }\n            };\n            var this_2 = this;\n            for (var i = endIndex; i < len; i++) {\n              var state_2 = _loop_2(i);\n              if (state_2 === \"break\") break;\n            }\n          }\n          this._endIndex = endIndex;\n          this.strokes.clear();\n          this.fills.clear();\n          this._startSegment(0, startIndex);\n        }\n      } else {\n        this._skipped = true;\n      }\n      _super.prototype._updateChildren.call(this);\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_startSegment\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (segmentIndex, dataItemIndex) {\n      var _this = this;\n      var endIndex = this._endIndex;\n      var currentEndIndex = endIndex;\n      var autoGapCount = this.get(\"autoGapCount\");\n      var connect = this.get(\"connect\");\n      var fill = this.makeFill(this.fills);\n      var fillTemplate = this._fillTemplate;\n      var originalTemplate = this.fills.template;\n      if (fillTemplate && fillTemplate != originalTemplate) {\n        fill.template = fillTemplate;\n      }\n      fill.setPrivate(\"visible\", true);\n      var stroke = this.makeStroke(this.strokes);\n      var strokeTemplate = this._strokeTemplate;\n      if (strokeTemplate && strokeTemplate != this.strokes.template) {\n        stroke.template = strokeTemplate;\n      }\n      stroke.setPrivate(\"visible\", true);\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var baseAxis = this.get(\"baseAxis\");\n      var vcx = this.get(\"vcx\", 1);\n      var vcy = this.get(\"vcy\", 1);\n      var xField = this._xField;\n      var yField = this._yField;\n      var xOpenField = this._xOpenField;\n      var yOpenField = this._yOpenField;\n      var xOpenFieldValue = this.get(\"openValueXField\");\n      var yOpenFieldValue = this.get(\"openValueYField\");\n      if (!xOpenFieldValue) {\n        xOpenField = this._xField;\n      }\n      if (!yOpenFieldValue) {\n        yOpenField = this._yField;\n      }\n      var stacked = this.get(\"stacked\");\n      var basePosX = xAxis.basePosition();\n      var basePosY = yAxis.basePosition();\n      var baseField;\n      if (baseAxis === yAxis) {\n        baseField = this._yField;\n      } else {\n        baseField = this._xField;\n      }\n      var segments = [];\n      var points = [];\n      segments.push(points);\n      var strokeTemplateField = this.strokes.template.get(\"templateField\");\n      var fillTemplateField = this.fills.template.get(\"templateField\");\n      var locationX = this.get(\"locationX\", 0.5);\n      var locationY = this.get(\"locationY\", 0.5);\n      var openLocationX = this.get(\"openLocationX\", locationX);\n      var openLocationY = this.get(\"openLocationY\", locationY);\n      var i;\n      var fillVisible = this.fills.template.get(\"visible\");\n      if (this.axisRanges.length > 0) {\n        fillVisible = true;\n      }\n      var getOpen = false;\n      if (stacked || xOpenFieldValue || yOpenFieldValue) {\n        getOpen = true;\n      }\n      var o = {\n        points: points,\n        segments: segments,\n        stacked: stacked,\n        getOpen: getOpen,\n        basePosX: basePosX,\n        basePosY: basePosY,\n        fillVisible: fillVisible,\n        xField: xField,\n        yField: yField,\n        xOpenField: xOpenField,\n        yOpenField: yOpenField,\n        vcx: vcx,\n        vcy: vcy,\n        baseAxis: baseAxis,\n        xAxis: xAxis,\n        yAxis: yAxis,\n        locationX: locationX,\n        locationY: locationY,\n        openLocationX: openLocationX,\n        openLocationY: openLocationY\n      };\n      for (i = dataItemIndex; i < currentEndIndex; i++) {\n        var dataItem = this._dataItems[i];\n        var valueX = dataItem.get(xField);\n        var valueY = dataItem.get(yField);\n        if (valueX == null || valueY == null) {\n          if (!connect) {\n            points = [];\n            segments.push(points);\n            o.points = points;\n          }\n        } else {\n          this._getPoints(dataItem, o);\n        }\n        if (strokeTemplateField) {\n          var strokeTemplate_1 = dataItem.dataContext[strokeTemplateField];\n          if (strokeTemplate_1) {\n            if (!(strokeTemplate_1 instanceof Template)) {\n              strokeTemplate_1 = Template.new(strokeTemplate_1);\n            }\n            this._strokeTemplate = strokeTemplate_1;\n            if (i > dataItemIndex) {\n              currentEndIndex = i;\n              break;\n            } else {\n              stroke.template = strokeTemplate_1;\n            }\n          }\n        }\n        if (fillTemplateField) {\n          var fillTemplate_1 = dataItem.dataContext[fillTemplateField];\n          if (fillTemplate_1) {\n            if (!(fillTemplate_1 instanceof Template)) {\n              fillTemplate_1 = Template.new(fillTemplate_1);\n            }\n            this._fillTemplate = fillTemplate_1;\n            if (i > dataItemIndex) {\n              currentEndIndex = i;\n              break;\n            } else {\n              fill.template = fillTemplate_1;\n            }\n          }\n        }\n        if (!connect) {\n          var nextItem = this.dataItems[i + 1];\n          if (nextItem) {\n            if (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n              points = [];\n              segments.push(points);\n              o.points = points;\n            }\n          }\n        }\n      }\n      if (i === endIndex) {\n        this._endLine(points, segments[0][0]);\n      }\n      if (stroke) {\n        this._drawStroke(stroke, segments);\n      }\n      if (fill) {\n        this._drawFill(fill, segments);\n      }\n      this.axisRanges.each(function (axisRange) {\n        var container = axisRange.container;\n        var fills = axisRange.fills;\n        var fill = _this.makeFill(fills);\n        if (container) {\n          container.children.push(fill);\n        }\n        fill.setPrivate(\"visible\", true);\n        _this._drawFill(fill, segments);\n        var strokes = axisRange.strokes;\n        var stroke = _this.makeStroke(strokes);\n        if (container) {\n          container.children.push(stroke);\n        }\n        stroke.setPrivate(\"visible\", true);\n        _this._drawStroke(stroke, segments);\n      });\n      if (currentEndIndex < endIndex) {\n        this._startSegment(segmentIndex + 1, currentEndIndex);\n      }\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_getPoints\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, o) {\n      var points = o.points;\n      var itemLocationX = dataItem.get(\"locationX\", o.locationX);\n      var itemLocationY = dataItem.get(\"locationY\", o.locationY);\n      var xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n      var yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n      if (this._shouldInclude(xPos)) {\n        var iPoint = this.getPoint(xPos, yPos);\n        var point = [iPoint.x, iPoint.y];\n        iPoint.x += this._x;\n        iPoint.y += this._y;\n        dataItem.set(\"point\", iPoint);\n        if (o.fillVisible) {\n          var xPos0 = xPos;\n          var yPos0 = yPos;\n          if (o.baseAxis === o.xAxis) {\n            yPos0 = o.basePosY;\n          } else if (o.baseAxis === o.yAxis) {\n            xPos0 = o.basePosX;\n          }\n          if (o.getOpen) {\n            var valueX = dataItem.get(o.xOpenField);\n            var valueY = dataItem.get(o.yOpenField);\n            if (valueX != null && valueY != null) {\n              var itemLocationX_1 = dataItem.get(\"openLocationX\", o.openLocationX);\n              var itemLocationY_1 = dataItem.get(\"openLocationY\", o.openLocationY);\n              if (o.stacked) {\n                var stackToItemX = dataItem.get(\"stackToItemX\");\n                var stackToItemY = dataItem.get(\"stackToItemY\");\n                if (stackToItemX) {\n                  xPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX_1, stackToItemX.component.get(\"vcx\"));\n                  if ($type.isNaN(xPos0)) {\n                    xPos0 = o.basePosX;\n                  }\n                } else {\n                  if (o.yAxis === o.baseAxis) {\n                    xPos0 = o.basePosX;\n                  } else {\n                    xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX_1, o.vcx);\n                  }\n                }\n                if (stackToItemY) {\n                  yPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY_1, stackToItemY.component.get(\"vcy\"));\n                  if ($type.isNaN(yPos0)) {\n                    yPos0 = o.basePosY;\n                  }\n                } else {\n                  if (o.xAxis === o.baseAxis) {\n                    yPos0 = o.basePosY;\n                  } else {\n                    yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY_1, o.vcy);\n                  }\n                }\n              } else {\n                xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX_1, o.vcx);\n                yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY_1, o.vcy);\n              }\n            }\n          }\n          var closeIPoint = this.getPoint(xPos0, yPos0);\n          point[2] = closeIPoint.x;\n          point[3] = closeIPoint.y;\n        }\n        points.push(point);\n      }\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_endLine\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_points, _firstPoint) {}\n  });\n  Object.defineProperty(LineSeries.prototype, \"_drawStroke\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (graphics, segments) {\n      var _this = this;\n      if (graphics.get(\"visible\")) {\n        graphics.set(\"draw\", function (display) {\n          $array.each(segments, function (segment) {\n            _this._strokeGenerator.context(display);\n            _this._strokeGenerator(segment);\n          });\n        });\n      }\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_drawFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (graphics, segments) {\n      var _this = this;\n      if (graphics.get(\"visible\")) {\n        graphics.set(\"draw\", function (display) {\n          $array.each(segments, function (segment) {\n            _this._fillGenerator.context(display);\n            _this._fillGenerator(segment);\n          });\n        });\n      }\n    }\n  });\n  Object.defineProperty(LineSeries.prototype, \"_processAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisRange) {\n      var _this = this;\n      _super.prototype._processAxisRange.call(this, axisRange);\n      axisRange.fills = new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(axisRange.fills.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n        }, [_this.fills.template, axisRange.fills.template]);\n      });\n      axisRange.strokes = new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(axisRange.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n        }, [_this.strokes.template, axisRange.strokes.template]);\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(LineSeries.prototype, \"createLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {\n      var legendDataItem = this.get(\"legendDataItem\");\n      if (legendDataItem) {\n        var marker = legendDataItem.get(\"marker\");\n        var markerRectangle = legendDataItem.get(\"markerRectangle\");\n        if (markerRectangle) {\n          markerRectangle.setPrivate(\"visible\", false);\n        }\n        var legendStroke = marker.children.push(Graphics._new(this._root, {\n          themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n        }, [this.strokes.template]));\n        var legendFill = marker.children.push(Graphics._new(this._root, {\n          themeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n        }, [this.fills.template]));\n        var disabledColor = this._root.interfaceColors.get(\"disabled\");\n        legendStroke.states.create(\"disabled\", {\n          fill: disabledColor,\n          stroke: disabledColor\n        });\n        legendFill.states.create(\"disabled\", {\n          fill: disabledColor,\n          stroke: disabledColor\n        });\n        if (this.bullets.length > 0) {\n          var bulletFunction = this.bullets.getIndex(0);\n          if (bulletFunction) {\n            var bullet = bulletFunction(this._root, this, new DataItem(this, {}, {}));\n            if (bullet) {\n              var sprite = bullet.get(\"sprite\");\n              if (sprite instanceof Graphics) {\n                sprite.states.create(\"disabled\", {\n                  fill: disabledColor,\n                  stroke: disabledColor\n                });\n              }\n              if (sprite) {\n                sprite.set(\"tooltipText\", undefined);\n                marker.children.push(sprite);\n                sprite.setAll({\n                  x: marker.width() / 2,\n                  y: marker.height() / 2\n                });\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(LineSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"LineSeries\"\n  });\n  Object.defineProperty(LineSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: XYSeries.classNames.concat([LineSeries.className])\n  });\n  return LineSeries;\n}(XYSeries);\nexport { LineSeries };","map":{"version":3,"names":["XYSeries","Graphics","$type","$array","line","area","Template","ListTemplate","DataItem","$utils","LineSeries","_super","__extends","_this","apply","arguments","Object","defineProperty","new","_new","_root","themeTags","mergeTags","strokes","template","get","fills","value","_fillGenerator","y0","p","x0","y1","x1","prototype","_afterNew","call","stroke","mainContainer","children","push","make","fill","_strokeTemplate","undefined","_fillTemplate","xAxis","yAxis","isDirty","set","curveFactory","_strokeGenerator","curve","inited","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","each","setPrivate","axisRanges","axisRange","startIndex","getPrivate","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","i","dataItem","this_1","dataItems","hasValues","dataContext","_valueFields","field","isNumber","len","length","endIndex","this_2","_endIndex","clear","_startSegment","_skipped","_updateChildren","segmentIndex","dataItemIndex","currentEndIndex","autoGapCount","connect","makeFill","fillTemplate","originalTemplate","makeStroke","strokeTemplate","baseAxis","vcx","vcy","xField","_xField","yField","_yField","xOpenField","_xOpenField","yOpenField","_yOpenField","xOpenFieldValue","yOpenFieldValue","stacked","basePosX","basePosition","basePosY","baseField","segments","points","locationX","locationY","openLocationX","openLocationY","fillVisible","getOpen","o","_dataItems","valueX","valueY","_getPoints","strokeTemplate_1","fillTemplate_1","nextItem","shouldGap","_endLine","_drawStroke","_drawFill","container","itemLocationX","itemLocationY","xPos","getDataItemPositionX","yPos","getDataItemPositionY","_shouldInclude","iPoint","getPoint","point","x","y","_x","_y","xPos0","yPos0","itemLocationX_1","itemLocationY_1","stackToItemX","stackToItemY","component","isNaN","closeIPoint","_points","_firstPoint","graphics","display","segment","context","_processAxisRange","_dataItem","legendDataItem","marker","markerRectangle","legendStroke","legendFill","disabledColor","interfaceColors","states","create","bullets","bulletFunction","getIndex","bullet","sprite","setAll","width","height","classNames","concat","className"],"sources":["../../../../../../src/.internal/charts/xy/series/LineSeries.ts"],"sourcesContent":["import { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.strokes.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.fills.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.getPrivate(\"endIndex\", len);\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis.strokes.clear();\n\t\t\t\tthis.fills.clear();\n\n\t\t\t\tthis._startSegment(0, startIndex);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _startSegment(segmentIndex: number, dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY\n\t\t}\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tlet fill = this.makeFill(fills);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tlet stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t})\n\n\t\tif (currentEndIndex < endIndex) {\n\t\t\tthis._startSegment(segmentIndex + 1, currentEndIndex);\n\t\t}\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif($type.isNaN(xPos0)){\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif($type.isNaN(yPos0)){\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tpoints.push(point);\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(this._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(this._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(this._root, this, new DataItem(this, {}, {}));\n\t\t\t\t\tif(bullet){\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}