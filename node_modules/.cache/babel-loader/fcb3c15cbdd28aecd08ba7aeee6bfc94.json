{"ast":null,"code":"import React from 'react';\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\n\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n\n    provider = colonSeparated.shift().slice(1);\n  }\n\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n\n  return null;\n};\n\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze({\n  left: 0,\n  top: 0,\n  width: 16,\n  height: 16\n});\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({ ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({ ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n\n  if (rotate) {\n    result.rotate = rotate;\n  }\n\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  const resolved = /* @__PURE__ */Object.create(null);\n\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n\n    return resolved[name];\n  }\n\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n  let currentProps = {};\n\n  function parse(name2) {\n    currentProps = mergeIconData(icons[name2] || aliases[name2], currentProps);\n  }\n\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach(name => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n\n  const tree = getIconsTree(data);\n\n  for (const name in tree) {\n    const item = tree[name];\n\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\n\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n\n  const data = obj;\n\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n\n  const icons = data.icons;\n\n  for (const name in icons) {\n    const icon = icons[name];\n\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(icon, defaultExtendedIconProps)) {\n      return null;\n    }\n  }\n\n  const aliases = data.aliases || /* @__PURE__ */Object.create(null);\n\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(icon, defaultExtendedIconProps)) {\n      return null;\n    }\n  }\n\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */Object.create(null);\n\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */Object.create(null),\n    missing: /* @__PURE__ */new Set()\n  };\n}\n\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\n\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\n\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon\n      };\n      return true;\n    }\n  } catch (err) {}\n\n  return false;\n}\n\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach(provider2 => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach(prefix2 => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(Object.keys(storage.icons).map(name => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name));\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\n\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n\n  return simpleNames;\n}\n\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\n\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n\n  if (!icon) {\n    return false;\n  }\n\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\n\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n\n    return added;\n  }\n\n  const prefix = data.prefix;\n\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\n\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\n\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? { ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({ ...defaultIconSizeCustomisations,\n  ...defaultIconTransformations\n});\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\n\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n\n  precision = precision || 100;\n\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n\n  if (typeof size !== \"string\") {\n    return size;\n  }\n\n  const oldParts = size.split(unitsSplit);\n\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n\n    code = oldParts.shift();\n\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = value => value === \"unset\" || value === \"undefined\" || value === \"none\";\n\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = { ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = { ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach(props => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\");\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\");\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n\n    let tempValue;\n\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n\n    rotation = rotation % 4;\n\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n\n      case 2:\n        transformations.unshift(\"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\");\n        break;\n\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\");\n        break;\n    }\n\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n\n  const attributes = {};\n\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\n\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n\n  if (!ids.length) {\n    return body;\n  }\n\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach(id => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"), \"$1\" + newID + suffix + \"$3\");\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */Object.create(null);\n\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\n\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n\n  const result = {\n    resources,\n    path: source.path || \"/\",\n    maxURL: source.maxURL || 500,\n    rotate: source.rotate || 750,\n    timeout: source.timeout || 5e3,\n    random: source.random === true,\n    index: source.index || 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\n\nconst configStorage = /* @__PURE__ */Object.create(null);\nconst fallBackAPISources = [\"https://api.simplesvg.com\", \"https://api.unisvg.com\"];\nconst fallBackAPI = [];\n\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\n\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\n\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n\n  if (config === null) {\n    return false;\n  }\n\n  configStorage[provider] = config;\n  return true;\n}\n\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\n\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n\n  try {\n    callback = fetch;\n\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {}\n};\n\nlet fetchModule = detectFetch();\n\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\n\nfunction getFetch() {\n  return fetchModule;\n}\n\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n\n  if (!config) {\n    return 0;\n  }\n\n  let result;\n\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach(item => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n\n  return result;\n}\n\nfunction shouldAbort(status) {\n  return status === 404;\n}\n\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\n\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n\n    if (config) {\n      return config.path;\n    }\n  }\n\n  return \"/\";\n}\n\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n\n  let path = getPath(params.provider);\n\n  switch (params.type) {\n    case \"icons\":\n      {\n        const prefix = params.prefix;\n        const icons = params.icons;\n        const iconsList = icons.join(\",\");\n        const urlParams = new URLSearchParams({\n          icons: iconsList\n        });\n        path += prefix + \".json?\" + urlParams.toString();\n        break;\n      }\n\n    case \"custom\":\n      {\n        const uri = params.uri;\n        path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n        break;\n      }\n\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n\n  let defaultError = 503;\n  fetchModule(host + path).then(response => {\n    const status = response.status;\n\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n\n    defaultError = 501;\n    return response.json();\n  }).then(data => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\n\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach(icon => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach(storage => {\n    const items = storage.loaderCallbacks;\n\n    if (items) {\n      storage.loaderCallbacks = items.filter(row => row.id !== id);\n    }\n  });\n}\n\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n\n      if (!items.length) {\n        return;\n      }\n\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach(item => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter(icon => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n\n          const name = icon.name;\n\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n\n          item.callback(icons.loaded.slice(0), icons.missing.slice(0), icons.pending.slice(0), item.abort);\n        }\n      });\n    });\n  }\n}\n\nlet idCounter = 0;\n\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n\n  if (!icons.pending.length) {\n    return abort;\n  }\n\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach(storage => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach(item => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n} // src/config.ts\n\n\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n}; // src/query.ts\n\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n\n    resetTimer();\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach(callback => {\n      callback(void 0, lastError);\n    });\n  }\n\n  function clearQueue() {\n    queue.forEach(item => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter(queued => queued !== item);\n\n    switch (status) {\n      case \"pending\":\n        break;\n\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n\n        break;\n\n      default:\n        return;\n    }\n\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n\n    if (isError) {\n      lastError = data;\n\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n\n      return;\n    }\n\n    resetTimer();\n    clearQueue();\n\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n\n    status = \"completed\";\n    doneCallbacks.forEach(callback => {\n      callback(data);\n    });\n  }\n\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n\n    resetTimer();\n    const resource = resources.shift();\n\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n\n      failQuery();\n      return;\n    }\n\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n\n  setTimeout(execNext);\n  return getQueryStatus;\n} // src/index.ts\n\n\nfunction initRedundancy(cfg) {\n  const config = { ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n\n  function cleanup() {\n    queries = queries.filter(item => item().status === \"pending\");\n  }\n\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(config, payload, queryCallback, (data, error) => {\n      cleanup();\n\n      if (doneCallback) {\n        doneCallback(data, error);\n      }\n    });\n    queries.push(query2);\n    return query2;\n  }\n\n  function find(callback) {\n    return queries.find(value => {\n      return callback(value);\n    }) || null;\n  }\n\n  const instance = {\n    query,\n    find,\n    setIndex: index => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {}\n\nconst redundancyCache = /* @__PURE__ */Object.create(null);\n\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n\n    if (!config) {\n      return;\n    }\n\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n\n  return redundancyCache[provider];\n}\n\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n\n    send = api.send;\n    const cached = getRedundancyCache(target);\n\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {}\n}\n\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {}\n}\n\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {}\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\n\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */new Set(),\n  session: /* @__PURE__ */new Set()\n};\nlet browserStorageStatus = false;\n\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\n\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {}\n\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n\n  if (!func) {\n    return;\n  }\n\n  const version = getStoredItem(func, browserCacheVersionKey);\n\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n\n  const parseItem = index => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n\n    if (typeof item !== \"string\") {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(item);\n\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && callback(data, index)) {\n        return true;\n      }\n    } catch (err) {}\n\n    removeStoredItem(func, name);\n  };\n\n  let total = getBrowserStorageItemsCount(func);\n\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n\n  setBrowserStorageStatus(true);\n\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, item => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(provider, prefix);\n\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n\n  if (lastValue && lastValue >= lastModified) {\n    return lastValue === lastModified;\n  }\n\n  storage.lastModifiedCached = lastModified;\n\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, item => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n\n  return true;\n}\n\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n\n  function store(key) {\n    let func;\n\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n\n    const set = browserStorageEmptyItems[key];\n    let index;\n\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(func, browserCachePrefix + index.toString(), JSON.stringify(item));\n  }\n\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {}\n\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\n\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const {\n        provider,\n        prefix\n      } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach(item => {\n        sendAPIQuery(provider, item, data => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach(name => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(storage, data);\n\n              if (!parsed.length) {\n                return;\n              }\n\n              const pending = storage.pendingIcons;\n\n              if (pending) {\n                parsed.forEach(name => {\n                  pending.delete(name);\n                });\n              }\n\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\n\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(sortedIcons.loaded, sortedIcons.missing, sortedIcons.pending, emptyCallback);\n        }\n      });\n    }\n\n    return () => {\n      callCallback = false;\n    };\n  }\n\n  const newIcons = /* @__PURE__ */Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix\n    } = icon;\n\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */Object.create(null));\n\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach(icon => {\n    const {\n      provider,\n      prefix,\n      name\n    } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */new Set());\n\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach(storage => {\n    const {\n      provider,\n      prefix\n    } = storage;\n\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\n\nconst loadIcon = icon => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n\n    loadIcons([iconObj || icon], loaded => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n\n        if (data) {\n          fulfill({ ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = { ...defaults\n  };\n\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n\n  return result;\n}\n\nconst separator = /[\\s,]+/;\n\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach(str => {\n    const value = str.trim();\n\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n\n    return value2 % 4;\n  }\n\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n\n      case \"deg\":\n        split = 90;\n    }\n\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n\n      if (isNaN(num)) {\n        return 0;\n      }\n\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\n\nfunction svgToURL(svg) {\n  return 'url(\"data:image/svg+xml,' + encodeSVGforURL(svg) + '\")';\n}\n\nconst defaultExtendedIconCustomisations = { ...defaultIconCustomisations,\n  inline: false\n};\n/**\n * Default SVG attributes\n */\n\nconst svgDefaults = {\n  'xmlns': 'http://www.w3.org/2000/svg',\n  'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n  'aria-hidden': true,\n  'role': 'img'\n};\n/**\n * Style modes\n */\n\nconst commonProps = {\n  display: 'inline-block'\n};\nconst monotoneProps = {\n  backgroundColor: 'currentColor'\n};\nconst coloredProps = {\n  backgroundColor: 'transparent'\n}; // Dynamically add common props to variables above\n\nconst propsToAdd = {\n  Image: 'var(--svg)',\n  Repeat: 'no-repeat',\n  Size: '100% 100%'\n};\nconst propsToAddTo = {\n  webkitMask: monotoneProps,\n  mask: monotoneProps,\n  background: coloredProps\n};\n\nfor (const prefix in propsToAddTo) {\n  const list = propsToAddTo[prefix];\n\n  for (const prop in propsToAdd) {\n    list[prefix + prop] = propsToAdd[prop];\n  }\n}\n/**\n * Default values for customisations for inline icon\n */\n\n\nconst inlineDefaults = { ...defaultExtendedIconCustomisations,\n  inline: true\n};\n/**\n * Fix size: add 'px' to numbers\n */\n\nfunction fixSize(value) {\n  return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\n\n\nconst render = ( // Icon must be validated before calling this function\nicon, // Partial properties\nprops, // True if icon should have vertical-align added\ninline, // Optional reference for SVG/SPAN, extracted by React.forwardRef()\nref) => {\n  // Get default properties\n  const defaultProps = inline ? inlineDefaults : defaultExtendedIconCustomisations; // Get all customisations\n\n  const customisations = mergeCustomisations(defaultProps, props); // Check mode\n\n  const mode = props.mode || 'svg'; // Create style\n\n  const style = {};\n  const customStyle = props.style || {}; // Create SVG component properties\n\n  const componentProps = { ...(mode === 'svg' ? svgDefaults : {}),\n    ref\n  }; // Get element properties\n\n  for (let key in props) {\n    const value = props[key];\n\n    if (value === void 0) {\n      continue;\n    }\n\n    switch (key) {\n      // Properties to ignore\n      case 'icon':\n      case 'style':\n      case 'children':\n      case 'onLoad':\n      case 'mode':\n      case '_ref':\n      case '_inline':\n        break;\n      // Boolean attributes\n\n      case 'inline':\n      case 'hFlip':\n      case 'vFlip':\n        customisations[key] = value === true || value === 'true' || value === 1;\n        break;\n      // Flip as string: 'horizontal,vertical'\n\n      case 'flip':\n        if (typeof value === 'string') {\n          flipFromString(customisations, value);\n        }\n\n        break;\n      // Color: copy to style\n\n      case 'color':\n        style.color = value;\n        break;\n      // Rotation as string\n\n      case 'rotate':\n        if (typeof value === 'string') {\n          customisations[key] = rotateFromString(value);\n        } else if (typeof value === 'number') {\n          customisations[key] = value;\n        }\n\n        break;\n      // Remove aria-hidden\n\n      case 'ariaHidden':\n      case 'aria-hidden':\n        if (value !== true && value !== 'true') {\n          delete componentProps['aria-hidden'];\n        }\n\n        break;\n      // Copy missing property if it does not exist in customisations\n\n      default:\n        if (defaultProps[key] === void 0) {\n          componentProps[key] = value;\n        }\n\n    }\n  } // Generate icon\n\n\n  const item = iconToSVG(icon, customisations);\n  const renderAttribs = item.attributes; // Inline display\n\n  if (customisations.inline) {\n    style.verticalAlign = '-0.125em';\n  }\n\n  if (mode === 'svg') {\n    // Add style\n    componentProps.style = { ...style,\n      ...customStyle\n    }; // Add icon stuff\n\n    Object.assign(componentProps, renderAttribs); // Counter for ids based on \"id\" property to render icons consistently on server and client\n\n    let localCounter = 0;\n    let id = props.id;\n\n    if (typeof id === 'string') {\n      // Convert '-' to '_' to avoid errors in animations\n      id = id.replace(/-/g, '_');\n    } // Add icon stuff\n\n\n    componentProps.dangerouslySetInnerHTML = {\n      __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact')\n    };\n    return React.createElement('svg', componentProps);\n  } // Render <span> with style\n\n\n  const {\n    body,\n    width,\n    height\n  } = icon;\n  const useMask = mode === 'mask' || (mode === 'bg' ? false : body.indexOf('currentColor') !== -1); // Generate SVG\n\n  const html = iconToHTML(body, { ...renderAttribs,\n    width: width + '',\n    height: height + ''\n  }); // Generate style\n\n  componentProps.style = { ...style,\n    '--svg': svgToURL(html),\n    'width': fixSize(renderAttribs.width),\n    'height': fixSize(renderAttribs.height),\n    ...commonProps,\n    ...(useMask ? monotoneProps : coloredProps),\n    ...customStyle\n  };\n  return React.createElement('span', componentProps);\n};\n/**\n * Enable cache\n */\n\n\nfunction enableCache(storage) {\n  toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\n\n\nfunction disableCache(storage) {\n  toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\n\n\nallowSimpleNames(true); // Set API module\n\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // Set cache and load existing cache\n  initBrowserStorage();\n  const _window = window; // Load icons from global \"IconifyPreload\"\n\n  if (_window.IconifyPreload !== void 0) {\n    const preload = _window.IconifyPreload;\n    const err = 'Invalid IconifyPreload syntax.';\n\n    if (typeof preload === 'object' && preload !== null) {\n      (preload instanceof Array ? preload : [preload]).forEach(item => {\n        try {\n          if ( // Check if item is an object and not null/array\n          typeof item !== 'object' || item === null || item instanceof Array || // Check for 'icons' and 'prefix'\n          typeof item.icons !== 'object' || typeof item.prefix !== 'string' || // Add icon set\n          !addCollection(item)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      });\n    }\n  } // Set API from global \"IconifyProviders\"\n\n\n  if (_window.IconifyProviders !== void 0) {\n    const providers = _window.IconifyProviders;\n\n    if (typeof providers === 'object' && providers !== null) {\n      for (let key in providers) {\n        const err = 'IconifyProviders[' + key + '] is invalid.';\n\n        try {\n          const value = providers[key];\n\n          if (typeof value !== 'object' || !value || value.resources === void 0) {\n            continue;\n          }\n\n          if (!addAPIProvider(key, value)) {\n            console.error(err);\n          }\n        } catch (e) {\n          console.error(err);\n        }\n      }\n    }\n  }\n}\n\nclass IconComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Render placeholder before component is mounted\n      icon: null\n    };\n  }\n  /**\n   * Abort loading icon\n   */\n\n\n  _abortLoading() {\n    if (this._loading) {\n      this._loading.abort();\n\n      this._loading = null;\n    }\n  }\n  /**\n   * Update state\n   */\n\n\n  _setData(icon) {\n    if (this.state.icon !== icon) {\n      this.setState({\n        icon\n      });\n    }\n  }\n  /**\n   * Check if icon should be loaded\n   */\n\n\n  _checkIcon(changed) {\n    const state = this.state;\n    const icon = this.props.icon; // Icon is an object\n\n    if (typeof icon === 'object' && icon !== null && typeof icon.body === 'string') {\n      // Stop loading\n      this._icon = '';\n\n      this._abortLoading();\n\n      if (changed || state.icon === null) {\n        // Set data if it was changed\n        this._setData({\n          data: icon\n        });\n      }\n\n      return;\n    } // Invalid icon?\n\n\n    let iconName;\n\n    if (typeof icon !== 'string' || (iconName = stringToIcon(icon, false, true)) === null) {\n      this._abortLoading();\n\n      this._setData(null);\n\n      return;\n    } // Load icon\n\n\n    const data = getIconData(iconName);\n\n    if (!data) {\n      // Icon data is not available\n      if (!this._loading || this._loading.name !== icon) {\n        // New icon to load\n        this._abortLoading();\n\n        this._icon = '';\n\n        this._setData(null);\n\n        if (data !== null) {\n          // Icon was not loaded\n          this._loading = {\n            name: icon,\n            abort: loadIcons([iconName], this._checkIcon.bind(this, false))\n          };\n        }\n      }\n\n      return;\n    } // Icon data is available\n\n\n    if (this._icon !== icon || state.icon === null) {\n      // New icon or icon has been loaded\n      this._abortLoading();\n\n      this._icon = icon; // Add classes\n\n      const classes = ['iconify'];\n\n      if (iconName.prefix !== '') {\n        classes.push('iconify--' + iconName.prefix);\n      }\n\n      if (iconName.provider !== '') {\n        classes.push('iconify--' + iconName.provider);\n      } // Set data\n\n\n      this._setData({\n        data,\n        classes\n      });\n\n      if (this.props.onLoad) {\n        this.props.onLoad(icon);\n      }\n    }\n  }\n  /**\n   * Component mounted\n   */\n\n\n  componentDidMount() {\n    this._checkIcon(false);\n  }\n  /**\n   * Component updated\n   */\n\n\n  componentDidUpdate(oldProps) {\n    if (oldProps.icon !== this.props.icon) {\n      this._checkIcon(true);\n    }\n  }\n  /**\n   * Abort loading\n   */\n\n\n  componentWillUnmount() {\n    this._abortLoading();\n  }\n  /**\n   * Render\n   */\n\n\n  render() {\n    const props = this.props;\n    const icon = this.state.icon;\n\n    if (icon === null) {\n      // Render placeholder\n      return props.children ? props.children : React.createElement('span', {});\n    } // Add classes\n\n\n    let newProps = props;\n\n    if (icon.classes) {\n      newProps = { ...props,\n        className: (typeof props.className === 'string' ? props.className + ' ' : '') + icon.classes.join(' ')\n      };\n    } // Render icon\n\n\n    return render({ ...defaultIconProps,\n      ...icon.data\n    }, newProps, props._inline, props._ref);\n  }\n\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\n\n\nconst Icon = React.forwardRef(function Icon(props, ref) {\n  const newProps = { ...props,\n    _ref: ref,\n    _inline: false\n  };\n  return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\n\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n  const newProps = { ...props,\n    _ref: ref,\n    _inline: true\n  };\n  return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\n\nconst _api = {\n  getAPIConfig,\n  setAPIModule,\n  sendAPIQuery,\n  setFetch,\n  getFetch,\n  listAPIProviders\n};\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs };","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/node_modules/@iconify/react/dist/iconify.mjs"],"names":["React","matchIconName","stringToIcon","value","validate","allowSimpleName","provider","colonSeparated","split","slice","length","shift","name2","pop","prefix","result","name","validateIconName","dashSeparated","join","icon","match","defaultIconDimensions","Object","freeze","left","top","width","height","defaultIconTransformations","rotate","vFlip","hFlip","defaultIconProps","defaultExtendedIconProps","body","hidden","mergeIconTransformations","obj1","obj2","mergeIconData","parent","child","key","getIconsTree","data","names","icons","aliases","create","resolved","resolve","concat","keys","forEach","internalGetIconData","tree","currentProps","parse","parseIconSet","callback","not_found","Array","push","item","optionalPropertyDefaults","checkOptionalProps","defaults","prop","quicklyValidateIconSet","obj","dataStorage","newStorage","missing","Set","getStorage","providerStorage","addIconSet","storage","add","addIconToStorage","err","listIcons","allIcons","providers","provider2","prefixes","prefix2","map","simpleNames","allowSimpleNames","allow","getIconData","iconName","has","addIcon","addCollection","added","iconExists","getIcon","defaultIconSizeCustomisations","defaultIconCustomisations","unitsSplit","unitsTest","calculateSize","size","ratio","precision","Math","ceil","oldParts","newParts","code","isNumber","test","num","parseFloat","isNaN","isUnsetKeyword","iconToSVG","customisations","fullIcon","fullCustomisations","box","props","transformations","rotation","toString","tempValue","floor","unshift","customisationsWidth","customisationsHeight","boxWidth","boxHeight","attributes","setAttr","viewBox","regex","randomPrefix","Date","now","random","counter","replaceIDs","ids","exec","suffix","id","newID","escapedID","replace","RegExp","setAPIModule","getAPIModule","createAPIConfig","source","resources","path","maxURL","timeout","index","dataAfterTimeout","configStorage","fallBackAPISources","fallBackAPI","addAPIProvider","customConfig","config","getAPIConfig","listAPIProviders","detectFetch","fetch","fetchModule","setFetch","fetch2","getFetch","calculateMaxLength","maxHostLength","host","max","url","shouldAbort","status","prepare","results","maxLength","type","getPath","send","params","iconsList","urlParams","URLSearchParams","uri","defaultError","then","response","setTimeout","json","catch","fetchAPIModule","sortIcons","loaded","pending","sort","a","b","localeCompare","lastIcon","localStorage","list","removeCallback","storages","items","loaderCallbacks","filter","row","updateCallbacks","pendingCallbacksFlag","hasPending","oldLength","abort","idCounter","storeCallback","pendingSources","bind","listToIcons","defaultConfig","sendQuery","payload","query","done","resourcesCount","startIndex","nextIndex","startTime","queriesSent","lastError","timer","queue","doneCallbacks","resetTimer","clearTimeout","subscribe","overwrite","getQueryStatus","queriesPending","failQuery","clearQueue","moduleResponse","isError","queued","execNext","indexOf","resource","status2","initRedundancy","cfg","queries","cleanup","queryCallback","doneCallback","query2","error","find","instance","setIndex","getIndex","emptyCallback$1","redundancyCache","getRedundancyCache","redundancy","cachedReundancy","sendAPIQuery","target","api","cached","moduleKey","browserCacheVersion","browserCachePrefix","browserCacheCountKey","browserCacheVersionKey","browserStorageHour","browserStorageCacheExpiration","getStoredItem","func","getItem","setStoredItem","setItem","removeStoredItem","removeItem","setBrowserStorageItemsCount","getBrowserStorageItemsCount","parseInt","browserStorageConfig","local","session","browserStorageEmptyItems","browserStorageStatus","setBrowserStorageStatus","_window","window","getBrowserStorage","attr","iterateBrowserStorage","version","total2","i","minTime","parseItem","JSON","total","initBrowserStorage","iconSet","lastModified","lastModifiedCached","min","updateLastModified","lastValue","storeInBrowserStorage","store","set","delete","from","stringify","assign","emptyCallback","loadedNewIcons","iconsLoaderFlag","loadNewIcons","iconsToLoad","iconsQueueFlag","icons2","parsed","pendingIcons","console","loadIcons","cleanedIcons","sortedIcons","callCallback","newIcons","sources","lastProvider","lastPrefix","providerNewIcons","pendingQueue","loadIcon","Promise","fulfill","reject","iconObj","toggleBrowserCache","mergeCustomisations","valueType","separator","flipFromString","custom","flip","str","trim","rotateFromString","defaultValue","units","value2","iconToHTML","renderAttribsHTML","encodeSVGforURL","svg","svgToURL","defaultExtendedIconCustomisations","inline","svgDefaults","commonProps","display","monotoneProps","backgroundColor","coloredProps","propsToAdd","Image","Repeat","Size","propsToAddTo","webkitMask","mask","background","inlineDefaults","fixSize","render","ref","defaultProps","mode","style","customStyle","componentProps","color","renderAttribs","verticalAlign","localCounter","dangerouslySetInnerHTML","__html","createElement","useMask","html","enableCache","disableCache","document","IconifyPreload","preload","e","IconifyProviders","IconComponent","Component","constructor","state","_abortLoading","_loading","_setData","setState","_checkIcon","changed","_icon","classes","onLoad","componentDidMount","componentDidUpdate","oldProps","componentWillUnmount","children","newProps","className","_inline","_ref","Icon","forwardRef","InlineIcon","_api","buildIcon"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst matchIconName = /^[a-z0-9]+(-[a-z0-9]+)*$/;\nconst stringToIcon = (value, validate, allowSimpleName, provider = \"\") => {\n  const colonSeparated = value.split(\":\");\n  if (value.slice(0, 1) === \"@\") {\n    if (colonSeparated.length < 2 || colonSeparated.length > 3) {\n      return null;\n    }\n    provider = colonSeparated.shift().slice(1);\n  }\n  if (colonSeparated.length > 3 || !colonSeparated.length) {\n    return null;\n  }\n  if (colonSeparated.length > 1) {\n    const name2 = colonSeparated.pop();\n    const prefix = colonSeparated.pop();\n    const result = {\n      provider: colonSeparated.length > 0 ? colonSeparated[0] : provider,\n      prefix,\n      name: name2\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  const name = colonSeparated[0];\n  const dashSeparated = name.split(\"-\");\n  if (dashSeparated.length > 1) {\n    const result = {\n      provider,\n      prefix: dashSeparated.shift(),\n      name: dashSeparated.join(\"-\")\n    };\n    return validate && !validateIconName(result) ? null : result;\n  }\n  if (allowSimpleName && provider === \"\") {\n    const result = {\n      provider,\n      prefix: \"\",\n      name\n    };\n    return validate && !validateIconName(result, allowSimpleName) ? null : result;\n  }\n  return null;\n};\nconst validateIconName = (icon, allowSimpleName) => {\n  if (!icon) {\n    return false;\n  }\n  return !!((icon.provider === \"\" || icon.provider.match(matchIconName)) && (allowSimpleName && icon.prefix === \"\" || icon.prefix.match(matchIconName)) && icon.name.match(matchIconName));\n};\n\nconst defaultIconDimensions = Object.freeze(\n  {\n    left: 0,\n    top: 0,\n    width: 16,\n    height: 16\n  }\n);\nconst defaultIconTransformations = Object.freeze({\n  rotate: 0,\n  vFlip: false,\n  hFlip: false\n});\nconst defaultIconProps = Object.freeze({\n  ...defaultIconDimensions,\n  ...defaultIconTransformations\n});\nconst defaultExtendedIconProps = Object.freeze({\n  ...defaultIconProps,\n  body: \"\",\n  hidden: false\n});\n\nfunction mergeIconTransformations(obj1, obj2) {\n  const result = {};\n  if (!obj1.hFlip !== !obj2.hFlip) {\n    result.hFlip = true;\n  }\n  if (!obj1.vFlip !== !obj2.vFlip) {\n    result.vFlip = true;\n  }\n  const rotate = ((obj1.rotate || 0) + (obj2.rotate || 0)) % 4;\n  if (rotate) {\n    result.rotate = rotate;\n  }\n  return result;\n}\n\nfunction mergeIconData(parent, child) {\n  const result = mergeIconTransformations(parent, child);\n  for (const key in defaultExtendedIconProps) {\n    if (key in defaultIconTransformations) {\n      if (key in parent && !(key in result)) {\n        result[key] = defaultIconTransformations[key];\n      }\n    } else if (key in child) {\n      result[key] = child[key];\n    } else if (key in parent) {\n      result[key] = parent[key];\n    }\n  }\n  return result;\n}\n\nfunction getIconsTree(data, names) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  const resolved = /* @__PURE__ */ Object.create(null);\n  function resolve(name) {\n    if (icons[name]) {\n      return resolved[name] = [];\n    }\n    if (!(name in resolved)) {\n      resolved[name] = null;\n      const parent = aliases[name] && aliases[name].parent;\n      const value = parent && resolve(parent);\n      if (value) {\n        resolved[name] = [parent].concat(value);\n      }\n    }\n    return resolved[name];\n  }\n  (names || Object.keys(icons).concat(Object.keys(aliases))).forEach(resolve);\n  return resolved;\n}\n\nfunction internalGetIconData(data, name, tree) {\n  const icons = data.icons;\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  let currentProps = {};\n  function parse(name2) {\n    currentProps = mergeIconData(\n      icons[name2] || aliases[name2],\n      currentProps\n    );\n  }\n  parse(name);\n  tree.forEach(parse);\n  return mergeIconData(data, currentProps);\n}\n\nfunction parseIconSet(data, callback) {\n  const names = [];\n  if (typeof data !== \"object\" || typeof data.icons !== \"object\") {\n    return names;\n  }\n  if (data.not_found instanceof Array) {\n    data.not_found.forEach((name) => {\n      callback(name, null);\n      names.push(name);\n    });\n  }\n  const tree = getIconsTree(data);\n  for (const name in tree) {\n    const item = tree[name];\n    if (item) {\n      callback(name, internalGetIconData(data, name, item));\n      names.push(name);\n    }\n  }\n  return names;\n}\n\nconst optionalPropertyDefaults = {\n  provider: \"\",\n  aliases: {},\n  not_found: {},\n  ...defaultIconDimensions\n};\nfunction checkOptionalProps(item, defaults) {\n  for (const prop in defaults) {\n    if (prop in item && typeof item[prop] !== typeof defaults[prop]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction quicklyValidateIconSet(obj) {\n  if (typeof obj !== \"object\" || obj === null) {\n    return null;\n  }\n  const data = obj;\n  if (typeof data.prefix !== \"string\" || !obj.icons || typeof obj.icons !== \"object\") {\n    return null;\n  }\n  if (!checkOptionalProps(obj, optionalPropertyDefaults)) {\n    return null;\n  }\n  const icons = data.icons;\n  for (const name in icons) {\n    const icon = icons[name];\n    if (!name.match(matchIconName) || typeof icon.body !== \"string\" || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  const aliases = data.aliases || /* @__PURE__ */ Object.create(null);\n  for (const name in aliases) {\n    const icon = aliases[name];\n    const parent = icon.parent;\n    if (!name.match(matchIconName) || typeof parent !== \"string\" || !icons[parent] && !aliases[parent] || !checkOptionalProps(\n      icon,\n      defaultExtendedIconProps\n    )) {\n      return null;\n    }\n  }\n  return data;\n}\n\nconst dataStorage = /* @__PURE__ */ Object.create(null);\nfunction newStorage(provider, prefix) {\n  return {\n    provider,\n    prefix,\n    icons: /* @__PURE__ */ Object.create(null),\n    missing: /* @__PURE__ */ new Set()\n  };\n}\nfunction getStorage(provider, prefix) {\n  const providerStorage = dataStorage[provider] || (dataStorage[provider] = /* @__PURE__ */ Object.create(null));\n  return providerStorage[prefix] || (providerStorage[prefix] = newStorage(provider, prefix));\n}\nfunction addIconSet(storage, data) {\n  if (!quicklyValidateIconSet(data)) {\n    return [];\n  }\n  return parseIconSet(data, (name, icon) => {\n    if (icon) {\n      storage.icons[name] = icon;\n    } else {\n      storage.missing.add(name);\n    }\n  });\n}\nfunction addIconToStorage(storage, name, icon) {\n  try {\n    if (typeof icon.body === \"string\") {\n      storage.icons[name] = { ...icon };\n      return true;\n    }\n  } catch (err) {\n  }\n  return false;\n}\nfunction listIcons(provider, prefix) {\n  let allIcons = [];\n  const providers = typeof provider === \"string\" ? [provider] : Object.keys(dataStorage);\n  providers.forEach((provider2) => {\n    const prefixes = typeof provider2 === \"string\" && typeof prefix === \"string\" ? [prefix] : Object.keys(dataStorage[provider2] || {});\n    prefixes.forEach((prefix2) => {\n      const storage = getStorage(provider2, prefix2);\n      allIcons = allIcons.concat(\n        Object.keys(storage.icons).map(\n          (name) => (provider2 !== \"\" ? \"@\" + provider2 + \":\" : \"\") + prefix2 + \":\" + name\n        )\n      );\n    });\n  });\n  return allIcons;\n}\n\nlet simpleNames = false;\nfunction allowSimpleNames(allow) {\n  if (typeof allow === \"boolean\") {\n    simpleNames = allow;\n  }\n  return simpleNames;\n}\nfunction getIconData(name) {\n  const icon = typeof name === \"string\" ? stringToIcon(name, true, simpleNames) : name;\n  if (icon) {\n    const storage = getStorage(icon.provider, icon.prefix);\n    const iconName = icon.name;\n    return storage.icons[iconName] || (storage.missing.has(iconName) ? null : void 0);\n  }\n}\nfunction addIcon(name, data) {\n  const icon = stringToIcon(name, true, simpleNames);\n  if (!icon) {\n    return false;\n  }\n  const storage = getStorage(icon.provider, icon.prefix);\n  return addIconToStorage(storage, icon.name, data);\n}\nfunction addCollection(data, provider) {\n  if (typeof data !== \"object\") {\n    return false;\n  }\n  if (typeof provider !== \"string\") {\n    provider = data.provider || \"\";\n  }\n  if (simpleNames && !provider && !data.prefix) {\n    let added = false;\n    if (quicklyValidateIconSet(data)) {\n      data.prefix = \"\";\n      parseIconSet(data, (name, icon) => {\n        if (icon && addIcon(name, icon)) {\n          added = true;\n        }\n      });\n    }\n    return added;\n  }\n  const prefix = data.prefix;\n  if (!validateIconName({\n    provider,\n    prefix,\n    name: \"a\"\n  })) {\n    return false;\n  }\n  const storage = getStorage(provider, prefix);\n  return !!addIconSet(storage, data);\n}\nfunction iconExists(name) {\n  return !!getIconData(name);\n}\nfunction getIcon(name) {\n  const result = getIconData(name);\n  return result ? {\n    ...defaultIconProps,\n    ...result\n  } : null;\n}\n\nconst defaultIconSizeCustomisations = Object.freeze({\n  width: null,\n  height: null\n});\nconst defaultIconCustomisations = Object.freeze({\n  ...defaultIconSizeCustomisations,\n  ...defaultIconTransformations\n});\n\nconst unitsSplit = /(-?[0-9.]*[0-9]+[0-9.]*)/g;\nconst unitsTest = /^-?[0-9.]*[0-9]+[0-9.]*$/g;\nfunction calculateSize(size, ratio, precision) {\n  if (ratio === 1) {\n    return size;\n  }\n  precision = precision || 100;\n  if (typeof size === \"number\") {\n    return Math.ceil(size * ratio * precision) / precision;\n  }\n  if (typeof size !== \"string\") {\n    return size;\n  }\n  const oldParts = size.split(unitsSplit);\n  if (oldParts === null || !oldParts.length) {\n    return size;\n  }\n  const newParts = [];\n  let code = oldParts.shift();\n  let isNumber = unitsTest.test(code);\n  while (true) {\n    if (isNumber) {\n      const num = parseFloat(code);\n      if (isNaN(num)) {\n        newParts.push(code);\n      } else {\n        newParts.push(Math.ceil(num * ratio * precision) / precision);\n      }\n    } else {\n      newParts.push(code);\n    }\n    code = oldParts.shift();\n    if (code === void 0) {\n      return newParts.join(\"\");\n    }\n    isNumber = !isNumber;\n  }\n}\n\nconst isUnsetKeyword = (value) => value === \"unset\" || value === \"undefined\" || value === \"none\";\nfunction iconToSVG(icon, customisations) {\n  const fullIcon = {\n    ...defaultIconProps,\n    ...icon\n  };\n  const fullCustomisations = {\n    ...defaultIconCustomisations,\n    ...customisations\n  };\n  const box = {\n    left: fullIcon.left,\n    top: fullIcon.top,\n    width: fullIcon.width,\n    height: fullIcon.height\n  };\n  let body = fullIcon.body;\n  [fullIcon, fullCustomisations].forEach((props) => {\n    const transformations = [];\n    const hFlip = props.hFlip;\n    const vFlip = props.vFlip;\n    let rotation = props.rotate;\n    if (hFlip) {\n      if (vFlip) {\n        rotation += 2;\n      } else {\n        transformations.push(\n          \"translate(\" + (box.width + box.left).toString() + \" \" + (0 - box.top).toString() + \")\"\n        );\n        transformations.push(\"scale(-1 1)\");\n        box.top = box.left = 0;\n      }\n    } else if (vFlip) {\n      transformations.push(\n        \"translate(\" + (0 - box.left).toString() + \" \" + (box.height + box.top).toString() + \")\"\n      );\n      transformations.push(\"scale(1 -1)\");\n      box.top = box.left = 0;\n    }\n    let tempValue;\n    if (rotation < 0) {\n      rotation -= Math.floor(rotation / 4) * 4;\n    }\n    rotation = rotation % 4;\n    switch (rotation) {\n      case 1:\n        tempValue = box.height / 2 + box.top;\n        transformations.unshift(\n          \"rotate(90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n      case 2:\n        transformations.unshift(\n          \"rotate(180 \" + (box.width / 2 + box.left).toString() + \" \" + (box.height / 2 + box.top).toString() + \")\"\n        );\n        break;\n      case 3:\n        tempValue = box.width / 2 + box.left;\n        transformations.unshift(\n          \"rotate(-90 \" + tempValue.toString() + \" \" + tempValue.toString() + \")\"\n        );\n        break;\n    }\n    if (rotation % 2 === 1) {\n      if (box.left !== box.top) {\n        tempValue = box.left;\n        box.left = box.top;\n        box.top = tempValue;\n      }\n      if (box.width !== box.height) {\n        tempValue = box.width;\n        box.width = box.height;\n        box.height = tempValue;\n      }\n    }\n    if (transformations.length) {\n      body = '<g transform=\"' + transformations.join(\" \") + '\">' + body + \"</g>\";\n    }\n  });\n  const customisationsWidth = fullCustomisations.width;\n  const customisationsHeight = fullCustomisations.height;\n  const boxWidth = box.width;\n  const boxHeight = box.height;\n  let width;\n  let height;\n  if (customisationsWidth === null) {\n    height = customisationsHeight === null ? \"1em\" : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n    width = calculateSize(height, boxWidth / boxHeight);\n  } else {\n    width = customisationsWidth === \"auto\" ? boxWidth : customisationsWidth;\n    height = customisationsHeight === null ? calculateSize(width, boxHeight / boxWidth) : customisationsHeight === \"auto\" ? boxHeight : customisationsHeight;\n  }\n  const attributes = {};\n  const setAttr = (prop, value) => {\n    if (!isUnsetKeyword(value)) {\n      attributes[prop] = value.toString();\n    }\n  };\n  setAttr(\"width\", width);\n  setAttr(\"height\", height);\n  attributes.viewBox = box.left.toString() + \" \" + box.top.toString() + \" \" + boxWidth.toString() + \" \" + boxHeight.toString();\n  return {\n    attributes,\n    body\n  };\n}\n\nconst regex = /\\sid=\"(\\S+)\"/g;\nconst randomPrefix = \"IconifyId\" + Date.now().toString(16) + (Math.random() * 16777216 | 0).toString(16);\nlet counter = 0;\nfunction replaceIDs(body, prefix = randomPrefix) {\n  const ids = [];\n  let match;\n  while (match = regex.exec(body)) {\n    ids.push(match[1]);\n  }\n  if (!ids.length) {\n    return body;\n  }\n  const suffix = \"suffix\" + (Math.random() * 16777216 | Date.now()).toString(16);\n  ids.forEach((id) => {\n    const newID = typeof prefix === \"function\" ? prefix(id) : prefix + (counter++).toString();\n    const escapedID = id.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    body = body.replace(\n      new RegExp('([#;\"])(' + escapedID + ')([\")]|\\\\.[a-z])', \"g\"),\n      \"$1\" + newID + suffix + \"$3\"\n    );\n  });\n  body = body.replace(new RegExp(suffix, \"g\"), \"\");\n  return body;\n}\n\nconst storage = /* @__PURE__ */ Object.create(null);\nfunction setAPIModule(provider, item) {\n  storage[provider] = item;\n}\nfunction getAPIModule(provider) {\n  return storage[provider] || storage[\"\"];\n}\n\nfunction createAPIConfig(source) {\n  let resources;\n  if (typeof source.resources === \"string\") {\n    resources = [source.resources];\n  } else {\n    resources = source.resources;\n    if (!(resources instanceof Array) || !resources.length) {\n      return null;\n    }\n  }\n  const result = {\n    resources,\n    path: source.path || \"/\",\n    maxURL: source.maxURL || 500,\n    rotate: source.rotate || 750,\n    timeout: source.timeout || 5e3,\n    random: source.random === true,\n    index: source.index || 0,\n    dataAfterTimeout: source.dataAfterTimeout !== false\n  };\n  return result;\n}\nconst configStorage = /* @__PURE__ */ Object.create(null);\nconst fallBackAPISources = [\n  \"https://api.simplesvg.com\",\n  \"https://api.unisvg.com\"\n];\nconst fallBackAPI = [];\nwhile (fallBackAPISources.length > 0) {\n  if (fallBackAPISources.length === 1) {\n    fallBackAPI.push(fallBackAPISources.shift());\n  } else {\n    if (Math.random() > 0.5) {\n      fallBackAPI.push(fallBackAPISources.shift());\n    } else {\n      fallBackAPI.push(fallBackAPISources.pop());\n    }\n  }\n}\nconfigStorage[\"\"] = createAPIConfig({\n  resources: [\"https://api.iconify.design\"].concat(fallBackAPI)\n});\nfunction addAPIProvider(provider, customConfig) {\n  const config = createAPIConfig(customConfig);\n  if (config === null) {\n    return false;\n  }\n  configStorage[provider] = config;\n  return true;\n}\nfunction getAPIConfig(provider) {\n  return configStorage[provider];\n}\nfunction listAPIProviders() {\n  return Object.keys(configStorage);\n}\n\nconst detectFetch = () => {\n  let callback;\n  try {\n    callback = fetch;\n    if (typeof callback === \"function\") {\n      return callback;\n    }\n  } catch (err) {\n  }\n};\nlet fetchModule = detectFetch();\nfunction setFetch(fetch2) {\n  fetchModule = fetch2;\n}\nfunction getFetch() {\n  return fetchModule;\n}\nfunction calculateMaxLength(provider, prefix) {\n  const config = getAPIConfig(provider);\n  if (!config) {\n    return 0;\n  }\n  let result;\n  if (!config.maxURL) {\n    result = 0;\n  } else {\n    let maxHostLength = 0;\n    config.resources.forEach((item) => {\n      const host = item;\n      maxHostLength = Math.max(maxHostLength, host.length);\n    });\n    const url = prefix + \".json?icons=\";\n    result = config.maxURL - maxHostLength - config.path.length - url.length;\n  }\n  return result;\n}\nfunction shouldAbort(status) {\n  return status === 404;\n}\nconst prepare = (provider, prefix, icons) => {\n  const results = [];\n  const maxLength = calculateMaxLength(provider, prefix);\n  const type = \"icons\";\n  let item = {\n    type,\n    provider,\n    prefix,\n    icons: []\n  };\n  let length = 0;\n  icons.forEach((name, index) => {\n    length += name.length + 1;\n    if (length >= maxLength && index > 0) {\n      results.push(item);\n      item = {\n        type,\n        provider,\n        prefix,\n        icons: []\n      };\n      length = name.length;\n    }\n    item.icons.push(name);\n  });\n  results.push(item);\n  return results;\n};\nfunction getPath(provider) {\n  if (typeof provider === \"string\") {\n    const config = getAPIConfig(provider);\n    if (config) {\n      return config.path;\n    }\n  }\n  return \"/\";\n}\nconst send = (host, params, callback) => {\n  if (!fetchModule) {\n    callback(\"abort\", 424);\n    return;\n  }\n  let path = getPath(params.provider);\n  switch (params.type) {\n    case \"icons\": {\n      const prefix = params.prefix;\n      const icons = params.icons;\n      const iconsList = icons.join(\",\");\n      const urlParams = new URLSearchParams({\n        icons: iconsList\n      });\n      path += prefix + \".json?\" + urlParams.toString();\n      break;\n    }\n    case \"custom\": {\n      const uri = params.uri;\n      path += uri.slice(0, 1) === \"/\" ? uri.slice(1) : uri;\n      break;\n    }\n    default:\n      callback(\"abort\", 400);\n      return;\n  }\n  let defaultError = 503;\n  fetchModule(host + path).then((response) => {\n    const status = response.status;\n    if (status !== 200) {\n      setTimeout(() => {\n        callback(shouldAbort(status) ? \"abort\" : \"next\", status);\n      });\n      return;\n    }\n    defaultError = 501;\n    return response.json();\n  }).then((data) => {\n    if (typeof data !== \"object\" || data === null) {\n      setTimeout(() => {\n        if (data === 404) {\n          callback(\"abort\", data);\n        } else {\n          callback(\"next\", defaultError);\n        }\n      });\n      return;\n    }\n    setTimeout(() => {\n      callback(\"success\", data);\n    });\n  }).catch(() => {\n    callback(\"next\", defaultError);\n  });\n};\nconst fetchAPIModule = {\n  prepare,\n  send\n};\n\nfunction sortIcons(icons) {\n  const result = {\n    loaded: [],\n    missing: [],\n    pending: []\n  };\n  const storage = /* @__PURE__ */ Object.create(null);\n  icons.sort((a, b) => {\n    if (a.provider !== b.provider) {\n      return a.provider.localeCompare(b.provider);\n    }\n    if (a.prefix !== b.prefix) {\n      return a.prefix.localeCompare(b.prefix);\n    }\n    return a.name.localeCompare(b.name);\n  });\n  let lastIcon = {\n    provider: \"\",\n    prefix: \"\",\n    name: \"\"\n  };\n  icons.forEach((icon) => {\n    if (lastIcon.name === icon.name && lastIcon.prefix === icon.prefix && lastIcon.provider === icon.provider) {\n      return;\n    }\n    lastIcon = icon;\n    const provider = icon.provider;\n    const prefix = icon.prefix;\n    const name = icon.name;\n    const providerStorage = storage[provider] || (storage[provider] = /* @__PURE__ */ Object.create(null));\n    const localStorage = providerStorage[prefix] || (providerStorage[prefix] = getStorage(provider, prefix));\n    let list;\n    if (name in localStorage.icons) {\n      list = result.loaded;\n    } else if (prefix === \"\" || localStorage.missing.has(name)) {\n      list = result.missing;\n    } else {\n      list = result.pending;\n    }\n    const item = {\n      provider,\n      prefix,\n      name\n    };\n    list.push(item);\n  });\n  return result;\n}\n\nfunction removeCallback(storages, id) {\n  storages.forEach((storage) => {\n    const items = storage.loaderCallbacks;\n    if (items) {\n      storage.loaderCallbacks = items.filter((row) => row.id !== id);\n    }\n  });\n}\nfunction updateCallbacks(storage) {\n  if (!storage.pendingCallbacksFlag) {\n    storage.pendingCallbacksFlag = true;\n    setTimeout(() => {\n      storage.pendingCallbacksFlag = false;\n      const items = storage.loaderCallbacks ? storage.loaderCallbacks.slice(0) : [];\n      if (!items.length) {\n        return;\n      }\n      let hasPending = false;\n      const provider = storage.provider;\n      const prefix = storage.prefix;\n      items.forEach((item) => {\n        const icons = item.icons;\n        const oldLength = icons.pending.length;\n        icons.pending = icons.pending.filter((icon) => {\n          if (icon.prefix !== prefix) {\n            return true;\n          }\n          const name = icon.name;\n          if (storage.icons[name]) {\n            icons.loaded.push({\n              provider,\n              prefix,\n              name\n            });\n          } else if (storage.missing.has(name)) {\n            icons.missing.push({\n              provider,\n              prefix,\n              name\n            });\n          } else {\n            hasPending = true;\n            return true;\n          }\n          return false;\n        });\n        if (icons.pending.length !== oldLength) {\n          if (!hasPending) {\n            removeCallback([storage], item.id);\n          }\n          item.callback(\n            icons.loaded.slice(0),\n            icons.missing.slice(0),\n            icons.pending.slice(0),\n            item.abort\n          );\n        }\n      });\n    });\n  }\n}\nlet idCounter = 0;\nfunction storeCallback(callback, icons, pendingSources) {\n  const id = idCounter++;\n  const abort = removeCallback.bind(null, pendingSources, id);\n  if (!icons.pending.length) {\n    return abort;\n  }\n  const item = {\n    id,\n    icons,\n    callback,\n    abort\n  };\n  pendingSources.forEach((storage) => {\n    (storage.loaderCallbacks || (storage.loaderCallbacks = [])).push(item);\n  });\n  return abort;\n}\n\nfunction listToIcons(list, validate = true, simpleNames = false) {\n  const result = [];\n  list.forEach((item) => {\n    const icon = typeof item === \"string\" ? stringToIcon(item, validate, simpleNames) : item;\n    if (icon) {\n      result.push(icon);\n    }\n  });\n  return result;\n}\n\n// src/config.ts\nvar defaultConfig = {\n  resources: [],\n  index: 0,\n  timeout: 2e3,\n  rotate: 750,\n  random: false,\n  dataAfterTimeout: false\n};\n\n// src/query.ts\nfunction sendQuery(config, payload, query, done) {\n  const resourcesCount = config.resources.length;\n  const startIndex = config.random ? Math.floor(Math.random() * resourcesCount) : config.index;\n  let resources;\n  if (config.random) {\n    let list = config.resources.slice(0);\n    resources = [];\n    while (list.length > 1) {\n      const nextIndex = Math.floor(Math.random() * list.length);\n      resources.push(list[nextIndex]);\n      list = list.slice(0, nextIndex).concat(list.slice(nextIndex + 1));\n    }\n    resources = resources.concat(list);\n  } else {\n    resources = config.resources.slice(startIndex).concat(config.resources.slice(0, startIndex));\n  }\n  const startTime = Date.now();\n  let status = \"pending\";\n  let queriesSent = 0;\n  let lastError;\n  let timer = null;\n  let queue = [];\n  let doneCallbacks = [];\n  if (typeof done === \"function\") {\n    doneCallbacks.push(done);\n  }\n  function resetTimer() {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  }\n  function abort() {\n    if (status === \"pending\") {\n      status = \"aborted\";\n    }\n    resetTimer();\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function subscribe(callback, overwrite) {\n    if (overwrite) {\n      doneCallbacks = [];\n    }\n    if (typeof callback === \"function\") {\n      doneCallbacks.push(callback);\n    }\n  }\n  function getQueryStatus() {\n    return {\n      startTime,\n      payload,\n      status,\n      queriesSent,\n      queriesPending: queue.length,\n      subscribe,\n      abort\n    };\n  }\n  function failQuery() {\n    status = \"failed\";\n    doneCallbacks.forEach((callback) => {\n      callback(void 0, lastError);\n    });\n  }\n  function clearQueue() {\n    queue.forEach((item) => {\n      if (item.status === \"pending\") {\n        item.status = \"aborted\";\n      }\n    });\n    queue = [];\n  }\n  function moduleResponse(item, response, data) {\n    const isError = response !== \"success\";\n    queue = queue.filter((queued) => queued !== item);\n    switch (status) {\n      case \"pending\":\n        break;\n      case \"failed\":\n        if (isError || !config.dataAfterTimeout) {\n          return;\n        }\n        break;\n      default:\n        return;\n    }\n    if (response === \"abort\") {\n      lastError = data;\n      failQuery();\n      return;\n    }\n    if (isError) {\n      lastError = data;\n      if (!queue.length) {\n        if (!resources.length) {\n          failQuery();\n        } else {\n          execNext();\n        }\n      }\n      return;\n    }\n    resetTimer();\n    clearQueue();\n    if (!config.random) {\n      const index = config.resources.indexOf(item.resource);\n      if (index !== -1 && index !== config.index) {\n        config.index = index;\n      }\n    }\n    status = \"completed\";\n    doneCallbacks.forEach((callback) => {\n      callback(data);\n    });\n  }\n  function execNext() {\n    if (status !== \"pending\") {\n      return;\n    }\n    resetTimer();\n    const resource = resources.shift();\n    if (resource === void 0) {\n      if (queue.length) {\n        timer = setTimeout(() => {\n          resetTimer();\n          if (status === \"pending\") {\n            clearQueue();\n            failQuery();\n          }\n        }, config.timeout);\n        return;\n      }\n      failQuery();\n      return;\n    }\n    const item = {\n      status: \"pending\",\n      resource,\n      callback: (status2, data) => {\n        moduleResponse(item, status2, data);\n      }\n    };\n    queue.push(item);\n    queriesSent++;\n    timer = setTimeout(execNext, config.rotate);\n    query(resource, payload, item.callback);\n  }\n  setTimeout(execNext);\n  return getQueryStatus;\n}\n\n// src/index.ts\nfunction initRedundancy(cfg) {\n  const config = {\n    ...defaultConfig,\n    ...cfg\n  };\n  let queries = [];\n  function cleanup() {\n    queries = queries.filter((item) => item().status === \"pending\");\n  }\n  function query(payload, queryCallback, doneCallback) {\n    const query2 = sendQuery(\n      config,\n      payload,\n      queryCallback,\n      (data, error) => {\n        cleanup();\n        if (doneCallback) {\n          doneCallback(data, error);\n        }\n      }\n    );\n    queries.push(query2);\n    return query2;\n  }\n  function find(callback) {\n    return queries.find((value) => {\n      return callback(value);\n    }) || null;\n  }\n  const instance = {\n    query,\n    find,\n    setIndex: (index) => {\n      config.index = index;\n    },\n    getIndex: () => config.index,\n    cleanup\n  };\n  return instance;\n}\n\nfunction emptyCallback$1() {\n}\nconst redundancyCache = /* @__PURE__ */ Object.create(null);\nfunction getRedundancyCache(provider) {\n  if (!redundancyCache[provider]) {\n    const config = getAPIConfig(provider);\n    if (!config) {\n      return;\n    }\n    const redundancy = initRedundancy(config);\n    const cachedReundancy = {\n      config,\n      redundancy\n    };\n    redundancyCache[provider] = cachedReundancy;\n  }\n  return redundancyCache[provider];\n}\nfunction sendAPIQuery(target, query, callback) {\n  let redundancy;\n  let send;\n  if (typeof target === \"string\") {\n    const api = getAPIModule(target);\n    if (!api) {\n      callback(void 0, 424);\n      return emptyCallback$1;\n    }\n    send = api.send;\n    const cached = getRedundancyCache(target);\n    if (cached) {\n      redundancy = cached.redundancy;\n    }\n  } else {\n    const config = createAPIConfig(target);\n    if (config) {\n      redundancy = initRedundancy(config);\n      const moduleKey = target.resources ? target.resources[0] : \"\";\n      const api = getAPIModule(moduleKey);\n      if (api) {\n        send = api.send;\n      }\n    }\n  }\n  if (!redundancy || !send) {\n    callback(void 0, 424);\n    return emptyCallback$1;\n  }\n  return redundancy.query(query, send, callback)().abort;\n}\n\nconst browserCacheVersion = \"iconify2\";\nconst browserCachePrefix = \"iconify\";\nconst browserCacheCountKey = browserCachePrefix + \"-count\";\nconst browserCacheVersionKey = browserCachePrefix + \"-version\";\nconst browserStorageHour = 36e5;\nconst browserStorageCacheExpiration = 168;\n\nfunction getStoredItem(func, key) {\n  try {\n    return func.getItem(key);\n  } catch (err) {\n  }\n}\nfunction setStoredItem(func, key, value) {\n  try {\n    func.setItem(key, value);\n    return true;\n  } catch (err) {\n  }\n}\nfunction removeStoredItem(func, key) {\n  try {\n    func.removeItem(key);\n  } catch (err) {\n  }\n}\n\nfunction setBrowserStorageItemsCount(storage, value) {\n  return setStoredItem(storage, browserCacheCountKey, value.toString());\n}\nfunction getBrowserStorageItemsCount(storage) {\n  return parseInt(getStoredItem(storage, browserCacheCountKey)) || 0;\n}\n\nconst browserStorageConfig = {\n  local: true,\n  session: true\n};\nconst browserStorageEmptyItems = {\n  local: /* @__PURE__ */ new Set(),\n  session: /* @__PURE__ */ new Set()\n};\nlet browserStorageStatus = false;\nfunction setBrowserStorageStatus(status) {\n  browserStorageStatus = status;\n}\n\nlet _window = typeof window === \"undefined\" ? {} : window;\nfunction getBrowserStorage(key) {\n  const attr = key + \"Storage\";\n  try {\n    if (_window && _window[attr] && typeof _window[attr].length === \"number\") {\n      return _window[attr];\n    }\n  } catch (err) {\n  }\n  browserStorageConfig[key] = false;\n}\n\nfunction iterateBrowserStorage(key, callback) {\n  const func = getBrowserStorage(key);\n  if (!func) {\n    return;\n  }\n  const version = getStoredItem(func, browserCacheVersionKey);\n  if (version !== browserCacheVersion) {\n    if (version) {\n      const total2 = getBrowserStorageItemsCount(func);\n      for (let i = 0; i < total2; i++) {\n        removeStoredItem(func, browserCachePrefix + i.toString());\n      }\n    }\n    setStoredItem(func, browserCacheVersionKey, browserCacheVersion);\n    setBrowserStorageItemsCount(func, 0);\n    return;\n  }\n  const minTime = Math.floor(Date.now() / browserStorageHour) - browserStorageCacheExpiration;\n  const parseItem = (index) => {\n    const name = browserCachePrefix + index.toString();\n    const item = getStoredItem(func, name);\n    if (typeof item !== \"string\") {\n      return;\n    }\n    try {\n      const data = JSON.parse(item);\n      if (typeof data === \"object\" && typeof data.cached === \"number\" && data.cached > minTime && typeof data.provider === \"string\" && typeof data.data === \"object\" && typeof data.data.prefix === \"string\" && callback(data, index)) {\n        return true;\n      }\n    } catch (err) {\n    }\n    removeStoredItem(func, name);\n  };\n  let total = getBrowserStorageItemsCount(func);\n  for (let i = total - 1; i >= 0; i--) {\n    if (!parseItem(i)) {\n      if (i === total - 1) {\n        total--;\n        setBrowserStorageItemsCount(func, total);\n      } else {\n        browserStorageEmptyItems[key].add(i);\n      }\n    }\n  }\n}\n\nfunction initBrowserStorage() {\n  if (browserStorageStatus) {\n    return;\n  }\n  setBrowserStorageStatus(true);\n  for (const key in browserStorageConfig) {\n    iterateBrowserStorage(key, (item) => {\n      const iconSet = item.data;\n      const provider = item.provider;\n      const prefix = iconSet.prefix;\n      const storage = getStorage(\n        provider,\n        prefix\n      );\n      if (!addIconSet(storage, iconSet).length) {\n        return false;\n      }\n      const lastModified = iconSet.lastModified || -1;\n      storage.lastModifiedCached = storage.lastModifiedCached ? Math.min(storage.lastModifiedCached, lastModified) : lastModified;\n      return true;\n    });\n  }\n}\n\nfunction updateLastModified(storage, lastModified) {\n  const lastValue = storage.lastModifiedCached;\n  if (lastValue && lastValue >= lastModified) {\n    return lastValue === lastModified;\n  }\n  storage.lastModifiedCached = lastModified;\n  if (lastValue) {\n    for (const key in browserStorageConfig) {\n      iterateBrowserStorage(key, (item) => {\n        const iconSet = item.data;\n        return item.provider !== storage.provider || iconSet.prefix !== storage.prefix || iconSet.lastModified === lastModified;\n      });\n    }\n  }\n  return true;\n}\nfunction storeInBrowserStorage(storage, data) {\n  if (!browserStorageStatus) {\n    initBrowserStorage();\n  }\n  function store(key) {\n    let func;\n    if (!browserStorageConfig[key] || !(func = getBrowserStorage(key))) {\n      return;\n    }\n    const set = browserStorageEmptyItems[key];\n    let index;\n    if (set.size) {\n      set.delete(index = Array.from(set).shift());\n    } else {\n      index = getBrowserStorageItemsCount(func);\n      if (!setBrowserStorageItemsCount(func, index + 1)) {\n        return;\n      }\n    }\n    const item = {\n      cached: Math.floor(Date.now() / browserStorageHour),\n      provider: storage.provider,\n      data\n    };\n    return setStoredItem(\n      func,\n      browserCachePrefix + index.toString(),\n      JSON.stringify(item)\n    );\n  }\n  if (data.lastModified && !updateLastModified(storage, data.lastModified)) {\n    return;\n  }\n  if (!Object.keys(data.icons).length) {\n    return;\n  }\n  if (data.not_found) {\n    data = Object.assign({}, data);\n    delete data.not_found;\n  }\n  if (!store(\"local\")) {\n    store(\"session\");\n  }\n}\n\nfunction emptyCallback() {\n}\nfunction loadedNewIcons(storage) {\n  if (!storage.iconsLoaderFlag) {\n    storage.iconsLoaderFlag = true;\n    setTimeout(() => {\n      storage.iconsLoaderFlag = false;\n      updateCallbacks(storage);\n    });\n  }\n}\nfunction loadNewIcons(storage, icons) {\n  if (!storage.iconsToLoad) {\n    storage.iconsToLoad = icons;\n  } else {\n    storage.iconsToLoad = storage.iconsToLoad.concat(icons).sort();\n  }\n  if (!storage.iconsQueueFlag) {\n    storage.iconsQueueFlag = true;\n    setTimeout(() => {\n      storage.iconsQueueFlag = false;\n      const { provider, prefix } = storage;\n      const icons2 = storage.iconsToLoad;\n      delete storage.iconsToLoad;\n      let api;\n      if (!icons2 || !(api = getAPIModule(provider))) {\n        return;\n      }\n      const params = api.prepare(provider, prefix, icons2);\n      params.forEach((item) => {\n        sendAPIQuery(provider, item, (data) => {\n          if (typeof data !== \"object\") {\n            item.icons.forEach((name) => {\n              storage.missing.add(name);\n            });\n          } else {\n            try {\n              const parsed = addIconSet(\n                storage,\n                data\n              );\n              if (!parsed.length) {\n                return;\n              }\n              const pending = storage.pendingIcons;\n              if (pending) {\n                parsed.forEach((name) => {\n                  pending.delete(name);\n                });\n              }\n              storeInBrowserStorage(storage, data);\n            } catch (err) {\n              console.error(err);\n            }\n          }\n          loadedNewIcons(storage);\n        });\n      });\n    });\n  }\n}\nconst loadIcons = (icons, callback) => {\n  const cleanedIcons = listToIcons(icons, true, allowSimpleNames());\n  const sortedIcons = sortIcons(cleanedIcons);\n  if (!sortedIcons.pending.length) {\n    let callCallback = true;\n    if (callback) {\n      setTimeout(() => {\n        if (callCallback) {\n          callback(\n            sortedIcons.loaded,\n            sortedIcons.missing,\n            sortedIcons.pending,\n            emptyCallback\n          );\n        }\n      });\n    }\n    return () => {\n      callCallback = false;\n    };\n  }\n  const newIcons = /* @__PURE__ */ Object.create(null);\n  const sources = [];\n  let lastProvider, lastPrefix;\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix } = icon;\n    if (prefix === lastPrefix && provider === lastProvider) {\n      return;\n    }\n    lastProvider = provider;\n    lastPrefix = prefix;\n    sources.push(getStorage(provider, prefix));\n    const providerNewIcons = newIcons[provider] || (newIcons[provider] = /* @__PURE__ */ Object.create(null));\n    if (!providerNewIcons[prefix]) {\n      providerNewIcons[prefix] = [];\n    }\n  });\n  sortedIcons.pending.forEach((icon) => {\n    const { provider, prefix, name } = icon;\n    const storage = getStorage(provider, prefix);\n    const pendingQueue = storage.pendingIcons || (storage.pendingIcons = /* @__PURE__ */ new Set());\n    if (!pendingQueue.has(name)) {\n      pendingQueue.add(name);\n      newIcons[provider][prefix].push(name);\n    }\n  });\n  sources.forEach((storage) => {\n    const { provider, prefix } = storage;\n    if (newIcons[provider][prefix].length) {\n      loadNewIcons(storage, newIcons[provider][prefix]);\n    }\n  });\n  return callback ? storeCallback(callback, sortedIcons, sources) : emptyCallback;\n};\nconst loadIcon = (icon) => {\n  return new Promise((fulfill, reject) => {\n    const iconObj = typeof icon === \"string\" ? stringToIcon(icon, true) : icon;\n    if (!iconObj) {\n      reject(icon);\n      return;\n    }\n    loadIcons([iconObj || icon], (loaded) => {\n      if (loaded.length && iconObj) {\n        const data = getIconData(iconObj);\n        if (data) {\n          fulfill({\n            ...defaultIconProps,\n            ...data\n          });\n          return;\n        }\n      }\n      reject(icon);\n    });\n  });\n};\n\nfunction toggleBrowserCache(storage, value) {\n  switch (storage) {\n    case \"local\":\n    case \"session\":\n      browserStorageConfig[storage] = value;\n      break;\n    case \"all\":\n      for (const key in browserStorageConfig) {\n        browserStorageConfig[key] = value;\n      }\n      break;\n  }\n}\n\nfunction mergeCustomisations(defaults, item) {\n  const result = {\n    ...defaults\n  };\n  for (const key in item) {\n    const value = item[key];\n    const valueType = typeof value;\n    if (key in defaultIconSizeCustomisations) {\n      if (value === null || value && (valueType === \"string\" || valueType === \"number\")) {\n        result[key] = value;\n      }\n    } else if (valueType === typeof result[key]) {\n      result[key] = key === \"rotate\" ? value % 4 : value;\n    }\n  }\n  return result;\n}\n\nconst separator = /[\\s,]+/;\nfunction flipFromString(custom, flip) {\n  flip.split(separator).forEach((str) => {\n    const value = str.trim();\n    switch (value) {\n      case \"horizontal\":\n        custom.hFlip = true;\n        break;\n      case \"vertical\":\n        custom.vFlip = true;\n        break;\n    }\n  });\n}\n\nfunction rotateFromString(value, defaultValue = 0) {\n  const units = value.replace(/^-?[0-9.]*/, \"\");\n  function cleanup(value2) {\n    while (value2 < 0) {\n      value2 += 4;\n    }\n    return value2 % 4;\n  }\n  if (units === \"\") {\n    const num = parseInt(value);\n    return isNaN(num) ? 0 : cleanup(num);\n  } else if (units !== value) {\n    let split = 0;\n    switch (units) {\n      case \"%\":\n        split = 25;\n        break;\n      case \"deg\":\n        split = 90;\n    }\n    if (split) {\n      let num = parseFloat(value.slice(0, value.length - units.length));\n      if (isNaN(num)) {\n        return 0;\n      }\n      num = num / split;\n      return num % 1 === 0 ? cleanup(num) : 0;\n    }\n  }\n  return defaultValue;\n}\n\nfunction iconToHTML(body, attributes) {\n  let renderAttribsHTML = body.indexOf(\"xlink:\") === -1 ? \"\" : ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n  for (const attr in attributes) {\n    renderAttribsHTML += \" \" + attr + '=\"' + attributes[attr] + '\"';\n  }\n  return '<svg xmlns=\"http://www.w3.org/2000/svg\"' + renderAttribsHTML + \">\" + body + \"</svg>\";\n}\n\nfunction encodeSVGforURL(svg) {\n  return svg.replace(/\"/g, \"'\").replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/</g, \"%3C\").replace(/>/g, \"%3E\").replace(/\\s+/g, \" \");\n}\nfunction svgToURL(svg) {\n  return 'url(\"data:image/svg+xml,' + encodeSVGforURL(svg) + '\")';\n}\n\nconst defaultExtendedIconCustomisations = {\n    ...defaultIconCustomisations,\n    inline: false,\n};\n\n/**\n * Default SVG attributes\n */\nconst svgDefaults = {\n    'xmlns': 'http://www.w3.org/2000/svg',\n    'xmlnsXlink': 'http://www.w3.org/1999/xlink',\n    'aria-hidden': true,\n    'role': 'img',\n};\n/**\n * Style modes\n */\nconst commonProps = {\n    display: 'inline-block',\n};\nconst monotoneProps = {\n    backgroundColor: 'currentColor',\n};\nconst coloredProps = {\n    backgroundColor: 'transparent',\n};\n// Dynamically add common props to variables above\nconst propsToAdd = {\n    Image: 'var(--svg)',\n    Repeat: 'no-repeat',\n    Size: '100% 100%',\n};\nconst propsToAddTo = {\n    webkitMask: monotoneProps,\n    mask: monotoneProps,\n    background: coloredProps,\n};\nfor (const prefix in propsToAddTo) {\n    const list = propsToAddTo[prefix];\n    for (const prop in propsToAdd) {\n        list[prefix + prop] = propsToAdd[prop];\n    }\n}\n/**\n * Default values for customisations for inline icon\n */\nconst inlineDefaults = {\n    ...defaultExtendedIconCustomisations,\n    inline: true,\n};\n/**\n * Fix size: add 'px' to numbers\n */\nfunction fixSize(value) {\n    return value + (value.match(/^[-0-9.]+$/) ? 'px' : '');\n}\n/**\n * Render icon\n */\nconst render = (\n// Icon must be validated before calling this function\nicon, \n// Partial properties\nprops, \n// True if icon should have vertical-align added\ninline, \n// Optional reference for SVG/SPAN, extracted by React.forwardRef()\nref) => {\n    // Get default properties\n    const defaultProps = inline\n        ? inlineDefaults\n        : defaultExtendedIconCustomisations;\n    // Get all customisations\n    const customisations = mergeCustomisations(defaultProps, props);\n    // Check mode\n    const mode = props.mode || 'svg';\n    // Create style\n    const style = {};\n    const customStyle = props.style || {};\n    // Create SVG component properties\n    const componentProps = {\n        ...(mode === 'svg' ? svgDefaults : {}),\n        ref,\n    };\n    // Get element properties\n    for (let key in props) {\n        const value = props[key];\n        if (value === void 0) {\n            continue;\n        }\n        switch (key) {\n            // Properties to ignore\n            case 'icon':\n            case 'style':\n            case 'children':\n            case 'onLoad':\n            case 'mode':\n            case '_ref':\n            case '_inline':\n                break;\n            // Boolean attributes\n            case 'inline':\n            case 'hFlip':\n            case 'vFlip':\n                customisations[key] =\n                    value === true || value === 'true' || value === 1;\n                break;\n            // Flip as string: 'horizontal,vertical'\n            case 'flip':\n                if (typeof value === 'string') {\n                    flipFromString(customisations, value);\n                }\n                break;\n            // Color: copy to style\n            case 'color':\n                style.color = value;\n                break;\n            // Rotation as string\n            case 'rotate':\n                if (typeof value === 'string') {\n                    customisations[key] = rotateFromString(value);\n                }\n                else if (typeof value === 'number') {\n                    customisations[key] = value;\n                }\n                break;\n            // Remove aria-hidden\n            case 'ariaHidden':\n            case 'aria-hidden':\n                if (value !== true && value !== 'true') {\n                    delete componentProps['aria-hidden'];\n                }\n                break;\n            // Copy missing property if it does not exist in customisations\n            default:\n                if (defaultProps[key] === void 0) {\n                    componentProps[key] = value;\n                }\n        }\n    }\n    // Generate icon\n    const item = iconToSVG(icon, customisations);\n    const renderAttribs = item.attributes;\n    // Inline display\n    if (customisations.inline) {\n        style.verticalAlign = '-0.125em';\n    }\n    if (mode === 'svg') {\n        // Add style\n        componentProps.style = {\n            ...style,\n            ...customStyle,\n        };\n        // Add icon stuff\n        Object.assign(componentProps, renderAttribs);\n        // Counter for ids based on \"id\" property to render icons consistently on server and client\n        let localCounter = 0;\n        let id = props.id;\n        if (typeof id === 'string') {\n            // Convert '-' to '_' to avoid errors in animations\n            id = id.replace(/-/g, '_');\n        }\n        // Add icon stuff\n        componentProps.dangerouslySetInnerHTML = {\n            __html: replaceIDs(item.body, id ? () => id + 'ID' + localCounter++ : 'iconifyReact'),\n        };\n        return React.createElement('svg', componentProps);\n    }\n    // Render <span> with style\n    const { body, width, height } = icon;\n    const useMask = mode === 'mask' ||\n        (mode === 'bg' ? false : body.indexOf('currentColor') !== -1);\n    // Generate SVG\n    const html = iconToHTML(body, {\n        ...renderAttribs,\n        width: width + '',\n        height: height + '',\n    });\n    // Generate style\n    componentProps.style = {\n        ...style,\n        '--svg': svgToURL(html),\n        'width': fixSize(renderAttribs.width),\n        'height': fixSize(renderAttribs.height),\n        ...commonProps,\n        ...(useMask ? monotoneProps : coloredProps),\n        ...customStyle,\n    };\n    return React.createElement('span', componentProps);\n};\n\n/**\n * Enable cache\n */\nfunction enableCache(storage) {\n    toggleBrowserCache(storage, true);\n}\n/**\n * Disable cache\n */\nfunction disableCache(storage) {\n    toggleBrowserCache(storage, false);\n}\n/**\n * Initialise stuff\n */\n// Enable short names\nallowSimpleNames(true);\n// Set API module\nsetAPIModule('', fetchAPIModule);\n/**\n * Browser stuff\n */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n    // Set cache and load existing cache\n    initBrowserStorage();\n    const _window = window;\n    // Load icons from global \"IconifyPreload\"\n    if (_window.IconifyPreload !== void 0) {\n        const preload = _window.IconifyPreload;\n        const err = 'Invalid IconifyPreload syntax.';\n        if (typeof preload === 'object' && preload !== null) {\n            (preload instanceof Array ? preload : [preload]).forEach((item) => {\n                try {\n                    if (\n                    // Check if item is an object and not null/array\n                    typeof item !== 'object' ||\n                        item === null ||\n                        item instanceof Array ||\n                        // Check for 'icons' and 'prefix'\n                        typeof item.icons !== 'object' ||\n                        typeof item.prefix !== 'string' ||\n                        // Add icon set\n                        !addCollection(item)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            });\n        }\n    }\n    // Set API from global \"IconifyProviders\"\n    if (_window.IconifyProviders !== void 0) {\n        const providers = _window.IconifyProviders;\n        if (typeof providers === 'object' && providers !== null) {\n            for (let key in providers) {\n                const err = 'IconifyProviders[' + key + '] is invalid.';\n                try {\n                    const value = providers[key];\n                    if (typeof value !== 'object' ||\n                        !value ||\n                        value.resources === void 0) {\n                        continue;\n                    }\n                    if (!addAPIProvider(key, value)) {\n                        console.error(err);\n                    }\n                }\n                catch (e) {\n                    console.error(err);\n                }\n            }\n        }\n    }\n}\nclass IconComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Render placeholder before component is mounted\n            icon: null,\n        };\n    }\n    /**\n     * Abort loading icon\n     */\n    _abortLoading() {\n        if (this._loading) {\n            this._loading.abort();\n            this._loading = null;\n        }\n    }\n    /**\n     * Update state\n     */\n    _setData(icon) {\n        if (this.state.icon !== icon) {\n            this.setState({\n                icon,\n            });\n        }\n    }\n    /**\n     * Check if icon should be loaded\n     */\n    _checkIcon(changed) {\n        const state = this.state;\n        const icon = this.props.icon;\n        // Icon is an object\n        if (typeof icon === 'object' &&\n            icon !== null &&\n            typeof icon.body === 'string') {\n            // Stop loading\n            this._icon = '';\n            this._abortLoading();\n            if (changed || state.icon === null) {\n                // Set data if it was changed\n                this._setData({\n                    data: icon,\n                });\n            }\n            return;\n        }\n        // Invalid icon?\n        let iconName;\n        if (typeof icon !== 'string' ||\n            (iconName = stringToIcon(icon, false, true)) === null) {\n            this._abortLoading();\n            this._setData(null);\n            return;\n        }\n        // Load icon\n        const data = getIconData(iconName);\n        if (!data) {\n            // Icon data is not available\n            if (!this._loading || this._loading.name !== icon) {\n                // New icon to load\n                this._abortLoading();\n                this._icon = '';\n                this._setData(null);\n                if (data !== null) {\n                    // Icon was not loaded\n                    this._loading = {\n                        name: icon,\n                        abort: loadIcons([iconName], this._checkIcon.bind(this, false)),\n                    };\n                }\n            }\n            return;\n        }\n        // Icon data is available\n        if (this._icon !== icon || state.icon === null) {\n            // New icon or icon has been loaded\n            this._abortLoading();\n            this._icon = icon;\n            // Add classes\n            const classes = ['iconify'];\n            if (iconName.prefix !== '') {\n                classes.push('iconify--' + iconName.prefix);\n            }\n            if (iconName.provider !== '') {\n                classes.push('iconify--' + iconName.provider);\n            }\n            // Set data\n            this._setData({\n                data,\n                classes,\n            });\n            if (this.props.onLoad) {\n                this.props.onLoad(icon);\n            }\n        }\n    }\n    /**\n     * Component mounted\n     */\n    componentDidMount() {\n        this._checkIcon(false);\n    }\n    /**\n     * Component updated\n     */\n    componentDidUpdate(oldProps) {\n        if (oldProps.icon !== this.props.icon) {\n            this._checkIcon(true);\n        }\n    }\n    /**\n     * Abort loading\n     */\n    componentWillUnmount() {\n        this._abortLoading();\n    }\n    /**\n     * Render\n     */\n    render() {\n        const props = this.props;\n        const icon = this.state.icon;\n        if (icon === null) {\n            // Render placeholder\n            return props.children\n                ? props.children\n                : React.createElement('span', {});\n        }\n        // Add classes\n        let newProps = props;\n        if (icon.classes) {\n            newProps = {\n                ...props,\n                className: (typeof props.className === 'string'\n                    ? props.className + ' '\n                    : '') + icon.classes.join(' '),\n            };\n        }\n        // Render icon\n        return render({\n            ...defaultIconProps,\n            ...icon.data,\n        }, newProps, props._inline, props._ref);\n    }\n}\n/**\n * Block icon\n *\n * @param props - Component properties\n */\nconst Icon = React.forwardRef(function Icon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: false,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Inline icon (has negative verticalAlign that makes it behave like icon font)\n *\n * @param props - Component properties\n */\nconst InlineIcon = React.forwardRef(function InlineIcon(props, ref) {\n    const newProps = {\n        ...props,\n        _ref: ref,\n        _inline: true,\n    };\n    return React.createElement(IconComponent, newProps);\n});\n/**\n * Internal API\n */\nconst _api = {\n    getAPIConfig,\n    setAPIModule,\n    sendAPIQuery,\n    setFetch,\n    getFetch,\n    listAPIProviders,\n};\n\nexport { Icon, InlineIcon, _api, addAPIProvider, addCollection, addIcon, iconToSVG as buildIcon, calculateSize, disableCache, enableCache, getIcon, iconExists, listIcons, loadIcon, loadIcons, replaceIDs };\n"]},"metadata":{},"sourceType":"module"}