{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Layout } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\n/**\r\n * A vertical children layout for [[Container]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\r\n */\nvar VerticalLayout = /** @class */function (_super) {\n  __extends(VerticalLayout, _super);\n  function VerticalLayout() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(VerticalLayout.prototype, \"updateContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (container) {\n      var paddingTop = container.get(\"paddingTop\", 0);\n      var availableHeight = container.innerHeight();\n      var totalPercent = 0;\n      container.children.each(function (child) {\n        if (child.get(\"position\") == \"relative\") {\n          var childHeight = child.get(\"height\");\n          if (childHeight instanceof Percent) {\n            totalPercent += childHeight.value;\n          } else {\n            if (!$type.isNumber(childHeight)) {\n              childHeight = child.height();\n            }\n            availableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\n          }\n        }\n      });\n      if (availableHeight > 0) {\n        container.children.each(function (child) {\n          if (child.get(\"position\") == \"relative\") {\n            var childHeight = child.get(\"height\");\n            if (childHeight instanceof Percent) {\n              var privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\n              child.setPrivate(\"height\", privateHeight);\n            }\n          }\n        });\n      }\n      var prevY = paddingTop;\n      container.children.each(function (child) {\n        if (child.get(\"position\") == \"relative\") {\n          var bounds = child.adjustedLocalBounds();\n          var marginTop = child.get(\"marginTop\", 0);\n          var marginBottom = child.get(\"marginBottom\", 0);\n          var y = prevY + marginTop - bounds.top;\n          child.setPrivate(\"y\", y);\n          prevY = y + bounds.bottom + marginBottom;\n        }\n      });\n    }\n  });\n  Object.defineProperty(VerticalLayout, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"VerticalLayout\"\n  });\n  Object.defineProperty(VerticalLayout, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Layout.classNames.concat([VerticalLayout.className])\n  });\n  return VerticalLayout;\n}(Layout);\nexport { VerticalLayout };","map":{"version":3,"names":["Layout","$type","Percent","VerticalLayout","_super","__extends","value","container","paddingTop","get","availableHeight","innerHeight","totalPercent","children","each","child","childHeight","isNumber","height","privateHeight","setPrivate","prevY","bounds","adjustedLocalBounds","marginTop","marginBottom","y","top","bottom","Object","defineProperty","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/VerticalLayout.ts"],"sourcesContent":["import { Layout } from \"./Layout\";\nimport * as $type from \"../util/Type\";\nimport { Percent } from \"../util/Percent\";\nimport type { Container } from \"./Container\";\n\n\n/**\n * A vertical children layout for [[Container]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/#Layout} for more info\n */\nexport class VerticalLayout extends Layout {\n\n\tpublic static className: string = \"VerticalLayout\";\n\tpublic static classNames: Array<string> = Layout.classNames.concat([VerticalLayout.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateContainer(container: Container): void {\n\t\tlet paddingTop = container.get(\"paddingTop\", 0);\n\n\t\tlet availableHeight = container.innerHeight();\n\t\tlet totalPercent = 0;\n\n\t\tcontainer.children.each((child) => {\n\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\tlet childHeight = child.get(\"height\");\n\t\t\t\tif (childHeight instanceof Percent) {\n\t\t\t\t\ttotalPercent += childHeight.value;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!$type.isNumber(childHeight)) {\n\t\t\t\t\t\tchildHeight = child.height();\n\t\t\t\t\t}\n\t\t\t\t\tavailableHeight -= childHeight + child.get(\"marginTop\", 0) + child.get(\"marginBottom\", 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tif(availableHeight > 0){\n\t\t\tcontainer.children.each((child) => {\n\t\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\t\tlet childHeight = child.get(\"height\");\n\n\t\t\t\t\tif (childHeight instanceof Percent) {\n\t\t\t\t\t\tlet privateHeight = availableHeight * childHeight.value / totalPercent - child.get(\"marginTop\", 0) - child.get(\"marginBottom\", 0);\n\t\t\t\t\t\tchild.setPrivate(\"height\", privateHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tlet prevY = paddingTop;\n\n\t\tcontainer.children.each((child) => {\n\t\t\tif (child.get(\"position\") == \"relative\") {\n\t\t\t\tlet bounds = child.adjustedLocalBounds();\n\t\t\t\tlet marginTop = child.get(\"marginTop\", 0);\n\t\t\t\tlet marginBottom = child.get(\"marginBottom\", 0);\n\t\t\t\tlet y = prevY + marginTop - bounds.top;\n\t\t\t\tchild.setPrivate(\"y\", y);\n\t\t\t\tprevY = y + bounds.bottom + marginBottom;\n\t\t\t}\n\t\t});\n\t}\n}\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,UAAU;AACjC,OAAO,KAAKC,KAAK,MAAM,cAAc;AACrC,SAASC,OAAO,QAAQ,iBAAiB;AAIzC;;;;;AAKA,IAAAC,cAAA,0BAAAC,MAAA;EAAoCC,SAAA,CAAAF,cAAA,EAAAC,MAAA;EAApC,SAAAD,eAAA;;EAsDA;EAjDC;;;;;;;WAGA,SAAAG,CAAuBC,SAAoB;MAC1C,IAAIC,UAAU,GAAGD,SAAS,CAACE,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;MAE/C,IAAIC,eAAe,GAAGH,SAAS,CAACI,WAAW,EAAE;MAC7C,IAAIC,YAAY,GAAG,CAAC;MAEpBL,SAAS,CAACM,QAAQ,CAACC,IAAI,CAAC,UAACC,KAAK;QAC7B,IAAIA,KAAK,CAACN,GAAG,CAAC,UAAU,CAAC,IAAI,UAAU,EAAE;UACxC,IAAIO,WAAW,GAAGD,KAAK,CAACN,GAAG,CAAC,QAAQ,CAAC;UACrC,IAAIO,WAAW,YAAYd,OAAO,EAAE;YACnCU,YAAY,IAAII,WAAW,CAACV,KAAK;WACjC,MACI;YACJ,IAAI,CAACL,KAAK,CAACgB,QAAQ,CAACD,WAAW,CAAC,EAAE;cACjCA,WAAW,GAAGD,KAAK,CAACG,MAAM,EAAE;;YAE7BR,eAAe,IAAIM,WAAW,GAAGD,KAAK,CAACN,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,GAAGM,KAAK,CAACN,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;;;MAG5F,CAAC,CAAC;MACF,IAAGC,eAAe,GAAG,CAAC,EAAC;QACtBH,SAAS,CAACM,QAAQ,CAACC,IAAI,CAAC,UAACC,KAAK;UAC7B,IAAIA,KAAK,CAACN,GAAG,CAAC,UAAU,CAAC,IAAI,UAAU,EAAE;YACxC,IAAIO,WAAW,GAAGD,KAAK,CAACN,GAAG,CAAC,QAAQ,CAAC;YAErC,IAAIO,WAAW,YAAYd,OAAO,EAAE;cACnC,IAAIiB,aAAa,GAAGT,eAAe,GAAGM,WAAW,CAACV,KAAK,GAAGM,YAAY,GAAGG,KAAK,CAACN,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,GAAGM,KAAK,CAACN,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;cACjIM,KAAK,CAACK,UAAU,CAAC,QAAQ,EAAED,aAAa,CAAC;;;QAG5C,CAAC,CAAC;;MAGH,IAAIE,KAAK,GAAGb,UAAU;MAEtBD,SAAS,CAACM,QAAQ,CAACC,IAAI,CAAC,UAACC,KAAK;QAC7B,IAAIA,KAAK,CAACN,GAAG,CAAC,UAAU,CAAC,IAAI,UAAU,EAAE;UACxC,IAAIa,MAAM,GAAGP,KAAK,CAACQ,mBAAmB,EAAE;UACxC,IAAIC,SAAS,GAAGT,KAAK,CAACN,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;UACzC,IAAIgB,YAAY,GAAGV,KAAK,CAACN,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC;UAC/C,IAAIiB,CAAC,GAAGL,KAAK,GAAGG,SAAS,GAAGF,MAAM,CAACK,GAAG;UACtCZ,KAAK,CAACK,UAAU,CAAC,GAAG,EAAEM,CAAC,CAAC;UACxBL,KAAK,GAAGK,CAAC,GAAGJ,MAAM,CAACM,MAAM,GAAGH,YAAY;;MAE1C,CAAC,CAAC;IACH;;EAnDAI,MAAA,CAAAC,cAAA,CAAA3B,cAAA;;;;WAAkC;;EAClC0B,MAAA,CAAAC,cAAA,CAAA3B,cAAA;;;;WAA0CH,MAAM,CAAC+B,UAAU,CAACC,MAAM,CAAC,CAAC7B,cAAc,CAAC8B,SAAS,CAAC;;EAmD9F,OAAA9B,cAAC;CAAA,CAtDmCH,MAAM;SAA7BG,cAAc"},"metadata":{},"sourceType":"module"}