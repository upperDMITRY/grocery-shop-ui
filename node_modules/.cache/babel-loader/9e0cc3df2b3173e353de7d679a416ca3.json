{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Line } from \"./Line\";\n/**\r\n * Draws a tick element (mostly used on axes).\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n */\nvar Tick = /** @class */function (_super) {\n  __extends(Tick, _super);\n  function Tick() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(Tick, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Tick\"\n  });\n  Object.defineProperty(Tick, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Line.classNames.concat([Tick.className])\n  });\n  return Tick;\n}(Line);\nexport { Tick };","map":{"version":3,"names":["Line","Tick","_super","__extends","Object","defineProperty","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/Tick.ts"],"sourcesContent":["import { Line, ILineSettings, ILinePrivate } from \"./Line\";\n\n\nexport interface ITickSettings extends ILineSettings {\n\n\t/**\n\t * Length in pixels.\n\t */\n\tlength?: number;\n\n\t/**\n\t * Location within target space. 0 - beginning, 1 - end.\n\t */\n\tlocation?: number;\n\n}\n\nexport interface ITickPrivate extends ILinePrivate {\n}\n\n/**\n * Draws a tick element (mostly used on axes).\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n */\nexport class Tick extends Line {\n\n\tdeclare public _settings: ITickSettings;\n\tdeclare public _privateSettings: ITickPrivate;\n\n\tpublic static className: string = \"Tick\";\n\tpublic static classNames: Array<string> = Line.classNames.concat([Tick.className]);\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAqC,QAAQ;AAoB1D;;;;;AAKA,IAAAC,IAAA,0BAAAC,MAAA;EAA0BC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EAA1B,SAAAD,KAAA;;EAOA;EAFCG,MAAA,CAAAC,cAAA,CAAAJ,IAAA;;;;WAAkC;;EAClCG,MAAA,CAAAC,cAAA,CAAAJ,IAAA;;;;WAA0CD,IAAI,CAACM,UAAU,CAACC,MAAM,CAAC,CAACN,IAAI,CAACO,SAAS,CAAC;;EAClF,OAAAP,IAAC;CAAA,CAPyBD,IAAI;SAAjBC,IAAI"},"metadata":{},"sourceType":"module"}