{"ast":null,"code":"import { __extends, __read } from \"tslib\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n/**\r\n * A base class for all axes.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\r\n */\nvar Axis = /** @class */function (_super) {\n  __extends(Axis, _super);\n  function Axis() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_series\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_isPanning\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    /**\r\n     * A [[Container]] that holds all the axis label elements.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"labelsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A [[Container]] that holds all the axis grid and fill elements.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"gridContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        width: p100,\n        height: p100\n      })\n    });\n    /**\r\n     * A [[Container]] that holds axis grid elements which goes above the series.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"topGridContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        width: p100,\n        height: p100\n      })\n    });\n    /**\r\n     * A [[Container]] that holds all the axis bullet elements.\r\n     *\r\n     * @default new Container\r\n     */\n    Object.defineProperty(_this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {\n        isMeasured: false,\n        width: p100,\n        height: p100,\n        position: \"absolute\"\n      }))\n    });\n    /**\r\n     * A referenece to the the chart the axis belongs to.\r\n     */\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_rangesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_panStart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_panEnd\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_sAnimation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_eAnimation\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A list of axis ranges.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     * @default new List()\r\n     */\n    Object.defineProperty(_this, \"axisRanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    Object.defineProperty(_this, \"_seriesAxisRanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    /**\r\n     * A control label that is invisible but is used to keep width the width of\r\n     * the axis constant.\r\n     */\n    Object.defineProperty(_this, \"ghostLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_cursorPosition\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: -1\n    });\n    Object.defineProperty(_this, \"_snapToSeries\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A container above the axis that can be used to add additional stuff into\r\n     * it. For example a legend, label, or an icon.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n     * @default new Container\r\n     */\n    Object.defineProperty(_this, \"axisHeader\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {\n        themeTags: [\"axis\", \"header\"],\n        position: \"absolute\",\n        background: Rectangle.new(_this._root, {\n          themeTags: [\"header\", \"background\"],\n          fill: _this._root.interfaceColors.get(\"background\")\n        })\n      }))\n    });\n    return _this;\n  }\n  Object.defineProperty(Axis.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      // these could be in other parents, so disposing just in case\n      this.gridContainer.dispose();\n      this.topGridContainer.dispose();\n      this.bulletsContainer.dispose();\n      this.labelsContainer.dispose();\n      this.axisHeader.dispose();\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._afterNew.call(this);\n      this.setPrivate(\"updateScrollbar\", true);\n      this._disposers.push(this.axisRanges.events.onAll(function (change) {\n        if (change.type === \"clear\") {\n          _this.axisRanges.each(function (dataItem) {\n            dataItem.dispose();\n          });\n        } else if (change.type === \"push\") {\n          _this._processAxisRange(change.newValue, [\"range\"]);\n        } else if (change.type === \"setIndex\") {\n          _this._processAxisRange(change.newValue, [\"range\"]);\n        } else if (change.type === \"insertIndex\") {\n          _this._processAxisRange(change.newValue, [\"range\"]);\n        } else if (change.type === \"removeIndex\") {\n          change.oldValue.dispose();\n        } else {\n          throw new Error(\"Unknown IStreamEvent type\");\n        }\n      }));\n      var renderer = this.get(\"renderer\");\n      if (renderer) {\n        renderer.axis = this;\n        renderer.processAxis();\n      }\n      this.children.push(renderer);\n      this.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n      this.ghostLabel.set(\"opacity\", 0);\n    }\n  });\n  /**\r\n   * Zooms the axis to relative locations.\r\n   *\r\n   * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\r\n   *\r\n   * @param   start     Relative start\r\n   * @param   end       Relative end\r\n   * @param   duration  Duration of the zoom animation in milliseconds\r\n   * @return            Zoom animation\r\n   */\n  Object.defineProperty(Axis.prototype, \"zoom\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (start, end, duration) {\n      var _a;\n      if (this.get(\"start\") !== start || this.get(\"end\") != end) {\n        var sAnimation = this._sAnimation;\n        var eAnimation = this._eAnimation;\n        var maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, end - start);\n        if (start < -maxDeviation) {\n          start = -maxDeviation;\n        }\n        if (end > 1 + maxDeviation) {\n          end = 1 + maxDeviation;\n        }\n        if (start > end) {\n          _a = __read([end, start], 2), start = _a[0], end = _a[1];\n        }\n        if (!$type.isNumber(duration)) {\n          duration = this.get(\"interpolationDuration\", 0);\n        }\n        var priority = \"end\";\n        var maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n        if (end === 1 && start !== 0) {\n          if (start < this.get(\"start\")) {\n            priority = \"start\";\n          } else {\n            priority = \"end\";\n          }\n        }\n        if (start === 0 && end !== 1) {\n          if (end > this.get(\"end\")) {\n            priority = \"end\";\n          } else {\n            priority = \"start\";\n          }\n        }\n        var minZoomCount = this.get(\"minZoomCount\");\n        var maxZoomCount = this.get(\"maxZoomCount\");\n        if ($type.isNumber(minZoomCount)) {\n          maxZoomFactor = maxZoomFactor / minZoomCount;\n        }\n        var minZoomFactor = 1;\n        if ($type.isNumber(maxZoomCount)) {\n          minZoomFactor = maxZoomFactor / maxZoomCount;\n        }\n        // most likely we are dragging left scrollbar grip here, so we tend to modify end\n        if (priority === \"start\") {\n          if (maxZoomCount > 0) {\n            // add to the end\n            if (1 / (end - start) < minZoomFactor) {\n              end = start + 1 / minZoomFactor;\n            }\n          }\n          // add to the end\n          if (1 / (end - start) > maxZoomFactor) {\n            end = start + 1 / maxZoomFactor;\n          }\n          //unless end is > 0\n          if (end > 1 && end - start < 1 / maxZoomFactor) {\n            //end = 1;\n            start = end - 1 / maxZoomFactor;\n          }\n        }\n        // most likely we are dragging right, so we modify left\n        else {\n          if (maxZoomCount > 0) {\n            // add to the end\n            if (1 / (end - start) < minZoomFactor) {\n              start = end - 1 / minZoomFactor;\n            }\n          }\n          // remove from start\n          if (1 / (end - start) > maxZoomFactor) {\n            start = end - 1 / maxZoomFactor;\n          }\n          if (start < 0 && end - start < 1 / maxZoomFactor) {\n            //start = 0;\n            end = start + 1 / maxZoomFactor;\n          }\n        }\n        if (1 / (end - start) > maxZoomFactor) {\n          end = start + 1 / maxZoomFactor;\n        }\n        if (1 / (end - start) > maxZoomFactor) {\n          start = end - 1 / maxZoomFactor;\n        }\n        if ((sAnimation && sAnimation.playing && sAnimation.to == start || this.get(\"start\") == start) && (eAnimation && eAnimation.playing && eAnimation.to == end || this.get(\"end\") == end)) {\n          return;\n        }\n        if (duration > 0) {\n          var easing = this.get(\"interpolationEasing\");\n          var sAnimation_1 = this.animate({\n            key: \"start\",\n            to: start,\n            duration: duration,\n            easing: easing\n          });\n          var eAnimation_1 = this.animate({\n            key: \"end\",\n            to: end,\n            duration: duration,\n            easing: easing\n          });\n          this._sAnimation = sAnimation_1;\n          this._eAnimation = eAnimation_1;\n          if (sAnimation_1) {\n            return sAnimation_1;\n          } else if (eAnimation_1) {\n            return eAnimation_1;\n          }\n        } else {\n          this.set(\"start\", start);\n          this.set(\"end\", end);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"series\", {\n    /**\r\n     * A list of series using this axis.\r\n     *\r\n     * @return Series\r\n     */\n    get: function () {\n      return this._series;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"_processAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      dataItem.setRaw(\"isRange\", true);\n      this._createAssets(dataItem, themeTags);\n      this._rangesDirty = true;\n      this._prepareDataItem(dataItem);\n      var above = dataItem.get(\"above\");\n      var container = this.topGridContainer;\n      var grid = dataItem.get(\"grid\");\n      if (above && grid) {\n        container.children.moveValue(grid);\n      }\n      var fill = dataItem.get(\"axisFill\");\n      if (above && fill) {\n        container.children.moveValue(fill);\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_prepareDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem, _index) {}\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"markDirtyExtremes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"markDirtySelectionExtremes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Axis.prototype, \"_calculateTotals\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Axis.prototype, \"_updateAxisRanges\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      this.axisRanges.each(function (axisRange) {\n        _this._prepareDataItem(axisRange);\n      });\n      $array.each(this._seriesAxisRanges, function (axisRange) {\n        _this._prepareDataItem(axisRange);\n      });\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._prepareChildren.call(this);\n      if (this.get(\"fixAxisSize\")) {\n        this.ghostLabel.set(\"visible\", true);\n      } else {\n        this.ghostLabel.set(\"visible\", false);\n      }\n      if (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n        this.chart._updateCursor();\n        var start = this.get(\"start\", 0);\n        var end = this.get(\"end\", 1);\n        var maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, end - start);\n        if (start < -maxDeviation) {\n          var delta = start + maxDeviation;\n          start = -maxDeviation;\n          this.setRaw(\"start\", start);\n          if (this.isDirty(\"end\")) {\n            this.setRaw(\"end\", end - delta);\n          }\n        }\n        if (end > 1 + maxDeviation) {\n          var delta = end - 1 - maxDeviation;\n          end = 1 + maxDeviation;\n          this.setRaw(\"end\", end);\n          if (this.isDirty(\"start\")) {\n            this.setRaw(\"start\", start - delta);\n          }\n        }\n      }\n      var renderer = this.get(\"renderer\");\n      renderer._start = this.get(\"start\");\n      renderer._end = this.get(\"end\");\n      renderer._inversed = renderer.get(\"inversed\", false);\n      renderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n      renderer._updateLC();\n      if (this.isDirty(\"tooltip\")) {\n        var tooltip = this.get(\"tooltip\");\n        if (tooltip) {\n          var rendererTags = renderer.get(\"themeTags\");\n          tooltip.addTag(\"axis\");\n          tooltip.addTag(this.className.toLowerCase());\n          tooltip._applyThemes();\n          if (rendererTags) {\n            tooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n            tooltip.label._applyThemes();\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_updateTooltipBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var tooltip = this.get(\"tooltip\");\n      if (tooltip) {\n        this.get(\"renderer\").updateTooltipBounds(tooltip);\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_updateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateBounds.call(this);\n      this._updateTooltipBounds();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"processChart\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (chart) {\n      var _this = this;\n      this.chart = chart;\n      var renderer = this.get(\"renderer\");\n      renderer.chart = chart;\n      chart.gridContainer.children.push(this.gridContainer);\n      chart.topGridContainer.children.push(this.topGridContainer);\n      chart.axisHeadersContainer.children.push(this.axisHeader);\n      this.on(\"start\", function () {\n        chart._handleAxisSelection(_this);\n      });\n      this.on(\"end\", function () {\n        chart._handleAxisSelection(_this);\n      });\n      chart.plotContainer.onPrivate(\"width\", function () {\n        _this.markDirtySize();\n      });\n      chart.plotContainer.onPrivate(\"height\", function () {\n        _this.markDirtySize();\n      });\n      chart.processAxis(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      this._toggleDataItem(dataItem, false);\n      return _super.prototype.hideDataItem.call(this, dataItem);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      this._toggleDataItem(dataItem, true);\n      return _super.prototype.showDataItem.call(this, dataItem);\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_toggleDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, visible) {\n      var label = dataItem.get(\"label\");\n      if (label) {\n        label.setPrivate(\"visible\", visible);\n      }\n      var grid = dataItem.get(\"grid\");\n      if (grid) {\n        grid.setPrivate(\"visible\", visible);\n      }\n      var tick = dataItem.get(\"tick\");\n      if (tick) {\n        tick.setPrivate(\"visible\", visible);\n      }\n      var axisFill = dataItem.get(\"axisFill\");\n      if (axisFill) {\n        axisFill.setPrivate(\"visible\", visible);\n      }\n      var bullet = dataItem.get(\"bullet\");\n      if (bullet) {\n        var sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          sprite.setPrivate(\"visible\", visible);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_createAssets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, tags) {\n      var renderer = this.get(\"renderer\");\n      if (!dataItem.get(\"label\")) {\n        renderer.makeLabel(dataItem, tags);\n      }\n      if (!dataItem.get(\"grid\")) {\n        renderer.makeGrid(dataItem, tags);\n      }\n      if (!dataItem.get(\"tick\")) {\n        renderer.makeTick(dataItem, tags);\n      }\n      if (!dataItem.get(\"axisFill\")) {\n        renderer.makeAxisFill(dataItem, tags);\n      }\n      this._processBullet(dataItem);\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_processBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var bullet = dataItem.get(\"bullet\");\n      var axisBullet = this.get(\"bullet\");\n      if (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n        bullet = axisBullet(this._root, this, dataItem);\n      }\n      if (bullet) {\n        bullet.axis = this;\n        var sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          sprite._setDataItem(dataItem);\n          dataItem.setRaw(\"bullet\", bullet);\n          if (!sprite.parent) {\n            this.bulletsContainer.children.push(sprite);\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_afterChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterChanged.call(this);\n      var chart = this.chart;\n      if (chart) {\n        chart._updateChartLayout();\n      }\n      this.get(\"renderer\")._updatePositions();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.disposeDataItem.call(this, dataItem);\n      var renderer = this.get(\"renderer\");\n      var label = dataItem.get(\"label\");\n      if (label) {\n        renderer.labels.removeValue(label);\n        label.dispose();\n      }\n      var tick = dataItem.get(\"tick\");\n      if (tick) {\n        renderer.ticks.removeValue(tick);\n        tick.dispose();\n      }\n      var grid = dataItem.get(\"grid\");\n      if (grid) {\n        renderer.grid.removeValue(grid);\n        grid.dispose();\n      }\n      var axisFill = dataItem.get(\"axisFill\");\n      if (axisFill) {\n        renderer.axisFills.removeValue(axisFill);\n        axisFill.dispose();\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_updateGhost\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var ghostLabel = this.ghostLabel;\n      if (!ghostLabel.isHidden()) {\n        var bounds = ghostLabel.localBounds();\n        var gWidth_1 = bounds.right - bounds.left;\n        $array.each(this.dataItems, function (dataItem) {\n          var label = dataItem.get(\"label\");\n          if (label && !label.isHidden()) {\n            var bounds_1 = label.localBounds();\n            var w = bounds_1.right - bounds_1.left;\n            if (w > gWidth_1) {\n              ghostLabel.set(\"text\", label.text._getText());\n            }\n          }\n        });\n      }\n      var start = this.get(\"start\", 0);\n      var end = this.get(\"end\", 1);\n      this.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n      ghostLabel.setPrivate(\"visible\", true);\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_handleCursorPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position, snapToSeries) {\n      var renderer = this.get(\"renderer\");\n      position = renderer.toAxisPosition(position);\n      this._cursorPosition = position;\n      this._snapToSeries = snapToSeries;\n      this.updateTooltip();\n    }\n  });\n  /**\r\n   * @todo needs description\r\n   * Can be called when axis zoom changes and you need to update tooltip position\r\n   */\n  Object.defineProperty(Axis.prototype, \"updateTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      var snapToSeries = this._snapToSeries;\n      var position = this._cursorPosition;\n      var tooltip = this.get(\"tooltip\");\n      var renderer = this.get(\"renderer\");\n      if ($type.isNumber(position)) {\n        $array.each(this.series, function (series) {\n          if (series.get(\"baseAxis\") === _this) {\n            var dataItem = _this.getSeriesItem(series, position);\n            if (snapToSeries && snapToSeries.indexOf(series) != -1) {\n              series.updateLegendMarker(dataItem);\n              series.updateLegendValue(dataItem);\n            } else {\n              series.showDataItemTooltip(dataItem);\n            }\n          }\n        });\n        if (tooltip) {\n          renderer.updateTooltipBounds(tooltip);\n          if (this.get(\"snapTooltip\")) {\n            position = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n          }\n          if (!$type.isNaN(position)) {\n            this._updateTooltipText(tooltip, position);\n            renderer.positionTooltip(tooltip, position);\n            if (position < this.get(\"start\") || position > this.get(\"end\")) {\n              tooltip.hide(0);\n            } else {\n              tooltip.show(0);\n            }\n          } else {\n            tooltip.hide(0);\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Axis.prototype, \"_updateTooltipText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip, position) {\n      tooltip.label.set(\"text\", this.getTooltipText(position));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"roundAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position, _location) {\n      return position;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"handleCursorShow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var tooltip = this.get(\"tooltip\");\n      if (tooltip) {\n        tooltip.show();\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"handleCursorHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var tooltip = this.get(\"tooltip\");\n      if (tooltip) {\n        tooltip.hide();\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"processSeriesDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem, _fields) {}\n  });\n  Object.defineProperty(Axis.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._clearDirty.call(this);\n      this._sizeDirty = false;\n      this._rangesDirty = false;\n    }\n  });\n  /**\r\n   * Converts pixel coordinate to a relative position on axis.\r\n   *\r\n   * @param   coordinate  Coordinate\r\n   * @return              Relative position\r\n   */\n  Object.defineProperty(Axis.prototype, \"coordinateToPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (coordinate) {\n      var renderer = this.get(\"renderer\");\n      return renderer.toAxisPosition(coordinate / renderer.axisLength());\n    }\n  });\n  /**\r\n   * Converts relative position of the plot area to relative position of the\r\n   * axis with zoom taken into account.\r\n   *\r\n   * @param position Position\r\n   * @return Relative position\r\n   */\n  Object.defineProperty(Axis.prototype, \"toAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      return this.get(\"renderer\").toAxisPosition(position);\n    }\n  });\n  /**\r\n   * Adjusts position with inversed taken into account.\r\n   *\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"fixPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      return this.get(\"renderer\").fixPosition(position);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"shouldGap\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem, _nextItem, _autoGapCount, _fieldName) {\n      return false;\n    }\n  });\n  /**\r\n   * Creates and returns an axis range object.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n   * @param   axisDataItem  Axis data item\r\n   * @return                Axis range\r\n   */\n  Object.defineProperty(Axis.prototype, \"createAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisDataItem) {\n      return this.axisRanges.push(axisDataItem);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Axis.prototype, \"_groupSeriesData\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_series) {}\n  });\n  Object.defineProperty(Axis, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Axis\"\n  });\n  Object.defineProperty(Axis, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Component.classNames.concat([Axis.className])\n  });\n  return Axis;\n}(Component);\nexport { Axis };","map":{"version":3,"names":["DataItem","Component","Container","p100","List","Rectangle","$array","$type","$utils","Axis","_super","__extends","_this","apply","arguments","Object","defineProperty","children","push","new","_root","width","height","isMeasured","position","themeTags","background","fill","interfaceColors","get","value","gridContainer","dispose","topGridContainer","bulletsContainer","labelsContainer","axisHeader","prototype","_dispose","call","_afterNew","setPrivate","_disposers","axisRanges","events","onAll","change","type","each","dataItem","_processAxisRange","newValue","oldValue","Error","renderer","axis","processAxis","ghostLabel","makeLabel","undefined","set","start","end","duration","sAnimation","_sAnimation","eAnimation","_eAnimation","maxDeviation","Math","min","_a","__read","isNumber","priority","maxZoomFactor","getPrivate","minZoomCount","maxZoomCount","minZoomFactor","playing","to","easing","sAnimation_1","animate","key","eAnimation_1","_series","setRaw","_createAssets","_rangesDirty","_prepareDataItem","above","container","grid","moveValue","_dataItem","_index","axisRange","_seriesAxisRanges","_prepareChildren","isDirty","chart","_updateCursor","delta","_start","_end","_inversed","_axisLength","axisLength","_updateLC","tooltip","rendererTags","addTag","className","toLowerCase","_applyThemes","mergeTags","label","updateTooltipBounds","_updateBounds","_updateTooltipBounds","axisHeadersContainer","on","_handleAxisSelection","plotContainer","onPrivate","markDirtySize","_toggleDataItem","hideDataItem","showDataItem","visible","tick","axisFill","bullet","sprite","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_setDataItem","parent","_afterChanged","_updateChartLayout","_updatePositions","disposeDataItem","labels","removeValue","ticks","axisFills","isHidden","bounds","localBounds","gWidth_1","right","left","dataItems","bounds_1","w","text","_getText","updateLabel","snapToSeries","toAxisPosition","_cursorPosition","_snapToSeries","updateTooltip","series","getSeriesItem","indexOf","updateLegendMarker","updateLegendValue","showDataItemTooltip","roundAxisPosition","isNaN","_updateTooltipText","positionTooltip","hide","show","getTooltipText","_location","_fields","_clearDirty","_sizeDirty","coordinate","fixPosition","_nextItem","_autoGapCount","_fieldName","axisDataItem","classNames","concat"],"sources":["../../../../../../src/.internal/charts/xy/axes/Axis.ts"],"sourcesContent":["import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number;\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis.axisRanges.each((dataItem) => {\n\t\t\t\t\tdataItem.dispose();\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tchange.oldValue.dispose();\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.set(\"opacity\", 0);\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tlet priority: \"start\" | \"end\" = \"end\";\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactor / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactor / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tlet sAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\tlet eAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tthis.chart!._updateCursor();\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, false);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleDataItem(dataItem, true);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(\"visible\", visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t}\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = bounds.right - bounds.left;\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = bounds.right - bounds.left;\n\n\t\t\t\t\tif (w > gWidth) {\n\t\t\t\t\t\tghostLabel.set(\"text\", label.text._getText());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t\tghostLabel.setPrivate(\"visible\", true);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\n\t/**\n\t * @todo needs description\n\t * Can be called when axis zoom changes and you need to update tooltip position\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse {\t\t\t\t\t\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n}\n"],"mappings":";AAYA,SAASA,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,SAAS,QAAqF,gCAAgC;AACvI,SAASC,SAAS,QAAQ,gCAAgC;AAC1D,SAASC,IAAI,QAAQ,4BAA4B;AACjD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,SAAS,QAAQ,gCAAgC;AAE1D,OAAO,KAAKC,MAAM,MAAM,0BAA0B;AAClD,OAAO,KAAKC,KAAK,MAAM,yBAAyB;AAChD,OAAO,KAAKC,MAAM,MAAM,0BAA0B;AAwNlD;;;;;AAKA,IAAAC,IAAA,0BAAAC,MAAA;EAA2DC,SAAA,CAAAF,IAAA,EAAAC,MAAA;EAA3D,SAAAD,KAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IAWCC,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAgD;;IAEhDG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA6B;;IAE7B;;;;;IAKAG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA6CA,KAAI,CAACK,QAAQ,CAACC,IAAI,CAAChB,SAAS,CAACiB,GAAG,CAACP,KAAI,CAACQ,KAAK,EAAE,EAAE,CAAC;;IAE7F;;;;;IAKAL,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA2CV,SAAS,CAACiB,GAAG,CAACP,KAAI,CAACQ,KAAK,EAAE;QAAEC,KAAK,EAAElB,IAAI;QAAEmB,MAAM,EAAEnB;MAAI,CAAE;;IAElG;;;;;IAKAY,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA8CV,SAAS,CAACiB,GAAG,CAACP,KAAI,CAACQ,KAAK,EAAE;QAAEC,KAAK,EAAElB,IAAI;QAAEmB,MAAM,EAAEnB;MAAI,CAAE;;IAErG;;;;;IAKAY,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA8CA,KAAI,CAACK,QAAQ,CAACC,IAAI,CAAChB,SAAS,CAACiB,GAAG,CAACP,KAAI,CAACQ,KAAK,EAAE;QAAEG,UAAU,EAAE,KAAK;QAAEF,KAAK,EAAElB,IAAI;QAAEmB,MAAM,EAAEnB,IAAI;QAAEqB,QAAQ,EAAE;MAAU,CAAE,CAAC;;IAElK;;;IAGAT,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;;;IAEAG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAkC;;IAElCG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA2B;;IAC3BG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAyB;;IAEzBG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;;;IACAG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;;;IAEA;;;;;;IAMAG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAwE,IAAIR,IAAI;;IAEhFW,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAuE;;IAEvE;;;;IAIAG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;;;IAEAG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAAoC,CAAC;;IAErCG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;;;IAEA;;;;;;;IAOAG,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA+BA,KAAI,CAACK,QAAQ,CAACC,IAAI,CAAChB,SAAS,CAACiB,GAAG,CAACP,KAAI,CAACQ,KAAK,EAAE;QAC3EK,SAAS,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;QAC7BD,QAAQ,EAAE,UAAU;QACpBE,UAAU,EAAErB,SAAS,CAACc,GAAG,CAACP,KAAI,CAACQ,KAAK,EAAE;UACrCK,SAAS,EAAE,CAAC,QAAQ,EAAE,YAAY,CAAC;UACnCE,IAAI,EAAEf,KAAI,CAACQ,KAAK,CAACQ,eAAe,CAACC,GAAG,CAAC,YAAY;SACjD;OACD,CAAC;;;EAwsBH;;;;;WAtsBC,SAAAC,CAAA;MACC;MACA,IAAI,CAACC,aAAa,CAACC,OAAO,EAAE;MAC5B,IAAI,CAACC,gBAAgB,CAACD,OAAO,EAAE;MAC/B,IAAI,CAACE,gBAAgB,CAACF,OAAO,EAAE;MAC/B,IAAI,CAACG,eAAe,CAACH,OAAO,EAAE;MAC9B,IAAI,CAACI,UAAU,CAACJ,OAAO,EAAE;MACzBtB,MAAA,CAAA2B,SAAA,CAAMC,QAAQ,CAAAC,IAAA,MAAE;IACjB;;;;;;WAEA,SAAAT,CAAA;MAAA,IAAAlB,KAAA;MACCF,MAAA,CAAA2B,SAAA,CAAMG,SAAS,CAAAD,IAAA,MAAE;MAEjB,IAAI,CAACE,UAAU,CAAC,iBAAiB,EAAE,IAAI,CAAC;MAExC,IAAI,CAACC,UAAU,CAACxB,IAAI,CAAC,IAAI,CAACyB,UAAU,CAACC,MAAM,CAACC,KAAK,CAAC,UAACC,MAAM;QACxD,IAAIA,MAAM,CAACC,IAAI,KAAK,OAAO,EAAE;UAC5BnC,KAAI,CAAC+B,UAAU,CAACK,IAAI,CAAC,UAACC,QAAQ;YAC7BA,QAAQ,CAACjB,OAAO,EAAE;UACnB,CAAC,CAAC;SACF,MAAM,IAAIc,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;UAClCnC,KAAI,CAACsC,iBAAiB,CAACJ,MAAM,CAACK,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC;SAClD,MAAM,IAAIL,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;UACtCnC,KAAI,CAACsC,iBAAiB,CAACJ,MAAM,CAACK,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC;SAClD,MAAM,IAAIL,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;UACzCnC,KAAI,CAACsC,iBAAiB,CAACJ,MAAM,CAACK,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC;SAClD,MAAM,IAAIL,MAAM,CAACC,IAAI,KAAK,aAAa,EAAE;UACzCD,MAAM,CAACM,QAAQ,CAACpB,OAAO,EAAE;SACzB,MAAM;UACN,MAAM,IAAIqB,KAAK,CAAC,2BAA2B,CAAC;;MAE9C,CAAC,CAAC,CAAC;MAEH,IAAMC,QAAQ,GAAG,IAAI,CAACzB,GAAG,CAAC,UAAU,CAAC;MACrC,IAAIyB,QAAQ,EAAE;QACbA,QAAQ,CAACC,IAAI,GAAG,IAAI;QACpBD,QAAQ,CAACE,WAAW,EAAE;;MAEvB,IAAI,CAACvC,QAAQ,CAACC,IAAI,CAACoC,QAAQ,CAAC;MAC5B,IAAI,CAACG,UAAU,GAAGH,QAAQ,CAACI,SAAS,CAAC,IAAI1D,QAAQ,CAAC,IAAI,EAAE2D,SAAS,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;MAC3E,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;IAClC;;EAEA;;;;;;;;;;;;;;WAUA,SAAA9B,CAAY+B,KAAa,EAAEC,GAAW,EAAEC,QAAiB;;MAExD,IAAI,IAAI,CAAClC,GAAG,CAAC,OAAO,CAAC,KAAKgC,KAAK,IAAI,IAAI,CAAChC,GAAG,CAAC,KAAK,CAAC,IAAIiC,GAAG,EAAE;QAE1D,IAAIE,UAAU,GAAG,IAAI,CAACC,WAAW;QACjC,IAAIC,UAAU,GAAG,IAAI,CAACC,WAAW;QAEjC,IAAIC,YAAY,GAAG,IAAI,CAACvC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,GAAGwC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAGR,GAAG,GAAGD,KAAM,CAAC;QAE7E,IAAIA,KAAK,GAAG,CAAEO,YAAY,EAAE;UAC3BP,KAAK,GAAG,CAACO,YAAY;;QAGtB,IAAIN,GAAG,GAAG,CAAC,GAAGM,YAAY,EAAE;UAC3BN,GAAG,GAAG,CAAC,GAAGM,YAAY;;QAGvB,IAAIP,KAAK,GAAGC,GAAG,EAAE;UAChBS,EAAA,GAAAC,MAAA,CAAe,CAACV,GAAG,EAAED,KAAK,CAAC,MAA1BA,KAAK,GAAAU,EAAA,KAAET,GAAG,GAAAS,EAAA;;QAGZ,IAAI,CAAChE,KAAK,CAACkE,QAAQ,CAACV,QAAQ,CAAC,EAAE;UAC9BA,QAAQ,GAAG,IAAI,CAAClC,GAAG,CAAC,uBAAuB,EAAE,CAAC,CAAC;;QAGhD,IAAI6C,QAAQ,GAAoB,KAAK;QACrC,IAAIC,aAAa,GAAG,IAAI,CAACC,UAAU,CAAC,eAAe,EAAE,IAAI,CAAC/C,GAAG,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;QAEpF,IAAIiC,GAAG,KAAK,CAAC,IAAID,KAAK,KAAK,CAAC,EAAE;UAC7B,IAAIA,KAAK,GAAG,IAAI,CAAChC,GAAG,CAAC,OAAO,CAAC,EAAE;YAC9B6C,QAAQ,GAAG,OAAO;WAClB,MACI;YACJA,QAAQ,GAAG,KAAK;;;QAIlB,IAAIb,KAAK,KAAK,CAAC,IAAIC,GAAG,KAAK,CAAC,EAAE;UAC7B,IAAIA,GAAG,GAAG,IAAI,CAACjC,GAAG,CAAC,KAAK,CAAC,EAAE;YAC1B6C,QAAQ,GAAG,KAAK;WAChB,MACI;YACJA,QAAQ,GAAG,OAAO;;;QAIpB,IAAIG,YAAY,GAAG,IAAI,CAAChD,GAAG,CAAC,cAAc,CAAC;QAC3C,IAAIiD,YAAY,GAAG,IAAI,CAACjD,GAAG,CAAC,cAAc,CAAC;QAE3C,IAAItB,KAAK,CAACkE,QAAQ,CAACI,YAAY,CAAC,EAAE;UACjCF,aAAa,GAAGA,aAAa,GAAGE,YAAY;;QAG7C,IAAIE,aAAa,GAAW,CAAC;QAE7B,IAAIxE,KAAK,CAACkE,QAAQ,CAACK,YAAY,CAAC,EAAE;UACjCC,aAAa,GAAGJ,aAAa,GAAGG,YAAY;;QAG7C;QACA,IAAIJ,QAAQ,KAAK,OAAO,EAAE;UACzB,IAAII,YAAY,GAAG,CAAC,EAAE;YACrB;YACA,IAAI,CAAC,IAAIhB,GAAG,GAAGD,KAAK,CAAC,GAAGkB,aAAa,EAAE;cACtCjB,GAAG,GAAGD,KAAK,GAAG,CAAC,GAAGkB,aAAa;;;UAIjC;UACA,IAAI,CAAC,IAAIjB,GAAG,GAAGD,KAAK,CAAC,GAAGc,aAAa,EAAE;YACtCb,GAAG,GAAGD,KAAK,GAAG,CAAC,GAAGc,aAAa;;UAEhC;UACA,IAAIb,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAGD,KAAK,GAAG,CAAC,GAAGc,aAAa,EAAE;YAC/C;YACAd,KAAK,GAAGC,GAAG,GAAG,CAAC,GAAGa,aAAa;;;QAGjC;QAAA,KACK;UACJ,IAAIG,YAAY,GAAG,CAAC,EAAE;YACrB;YACA,IAAI,CAAC,IAAIhB,GAAG,GAAGD,KAAK,CAAC,GAAGkB,aAAa,EAAE;cACtClB,KAAK,GAAGC,GAAG,GAAG,CAAC,GAAGiB,aAAa;;;UAIjC;UACA,IAAI,CAAC,IAAIjB,GAAG,GAAGD,KAAK,CAAC,GAAGc,aAAa,EAAE;YACtCd,KAAK,GAAGC,GAAG,GAAG,CAAC,GAAGa,aAAa;;UAEhC,IAAId,KAAK,GAAG,CAAC,IAAIC,GAAG,GAAGD,KAAK,GAAG,CAAC,GAAGc,aAAa,EAAE;YACjD;YACAb,GAAG,GAAGD,KAAK,GAAG,CAAC,GAAGc,aAAa;;;QAIjC,IAAI,CAAC,IAAIb,GAAG,GAAGD,KAAK,CAAC,GAAGc,aAAa,EAAE;UACtCb,GAAG,GAAGD,KAAK,GAAG,CAAC,GAAGc,aAAa;;QAGhC,IAAI,CAAC,IAAIb,GAAG,GAAGD,KAAK,CAAC,GAAGc,aAAa,EAAE;UACtCd,KAAK,GAAGC,GAAG,GAAG,CAAC,GAAGa,aAAa;;QAGhC,IAAI,CAAEX,UAAU,IAAIA,UAAU,CAACgB,OAAO,IAAIhB,UAAU,CAACiB,EAAE,IAAIpB,KAAK,IAAK,IAAI,CAAChC,GAAG,CAAC,OAAO,CAAC,IAAIgC,KAAK,MAAOK,UAAU,IAAIA,UAAU,CAACc,OAAO,IAAId,UAAU,CAACe,EAAE,IAAInB,GAAG,IAAK,IAAI,CAACjC,GAAG,CAAC,KAAK,CAAC,IAAIiC,GAAG,CAAC,EAAE;UAC3L;;QAGD,IAAIC,QAAQ,GAAG,CAAC,EAAE;UACjB,IAAImB,MAAM,GAAG,IAAI,CAACrD,GAAG,CAAC,qBAAqB,CAAC;UAE5C,IAAIsD,YAAU,GAAG,IAAI,CAACC,OAAO,CAAC;YAAEC,GAAG,EAAE,OAAO;YAAEJ,EAAE,EAAEpB,KAAK;YAAEE,QAAQ,EAAEA,QAAQ;YAAEmB,MAAM,EAAEA;UAAM,CAAE,CAAC;UAC9F,IAAII,YAAU,GAAG,IAAI,CAACF,OAAO,CAAC;YAAEC,GAAG,EAAE,KAAK;YAAEJ,EAAE,EAAEnB,GAAG;YAAEC,QAAQ,EAAEA,QAAQ;YAAEmB,MAAM,EAAEA;UAAM,CAAE,CAAC;UAE1F,IAAI,CAACjB,WAAW,GAAGkB,YAAU;UAC7B,IAAI,CAAChB,WAAW,GAAGmB,YAAU;UAE7B,IAAIH,YAAU,EAAE;YACf,OAAOA,YAAU;WACjB,MACI,IAAIG,YAAU,EAAE;YACpB,OAAOA,YAAU;;SAElB,MACI;UACJ,IAAI,CAAC1B,GAAG,CAAC,OAAO,EAAEC,KAAK,CAAC;UACxB,IAAI,CAACD,GAAG,CAAC,KAAK,EAAEE,GAAG,CAAC;;;IAGvB;;EAOA/C,MAAA,CAAAC,cAAA,CAAWP,IAAA,CAAA4B,SAAA,UAAM;IALjB;;;;;SAKA,SAAAR,CAAA;MACC,OAAO,IAAI,CAAC0D,OAAO;IACpB,CAAC;;;;;;;;WAGD,SAAAzD,CAAyBmB,QAA6C,EAAExB,SAAwB;MAC/FwB,QAAQ,CAACuC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;MAChC,IAAI,CAACC,aAAa,CAACxC,QAAQ,EAAExB,SAAS,CAAC;MACvC,IAAI,CAACiE,YAAY,GAAG,IAAI;MACxB,IAAI,CAACC,gBAAgB,CAAC1C,QAAQ,CAAC;MAE/B,IAAM2C,KAAK,GAAG3C,QAAQ,CAACpB,GAAG,CAAC,OAAO,CAAC;MACnC,IAAMgE,SAAS,GAAG,IAAI,CAAC5D,gBAAgB;MAEvC,IAAM6D,IAAI,GAAG7C,QAAQ,CAACpB,GAAG,CAAC,MAAM,CAAC;MACjC,IAAI+D,KAAK,IAAIE,IAAI,EAAE;QAClBD,SAAS,CAAC5E,QAAQ,CAAC8E,SAAS,CAACD,IAAI,CAAC;;MAGnC,IAAMnE,IAAI,GAAGsB,QAAQ,CAACpB,GAAG,CAAC,UAAU,CAAC;MACrC,IAAI+D,KAAK,IAAIjE,IAAI,EAAE;QAClBkE,SAAS,CAAC5E,QAAQ,CAAC8E,SAAS,CAACpE,IAAI,CAAC;;IAEpC;;;;;;WAEA,SAAAG,CAAwBkE,SAA8C,EAAEC,MAAe,GAAI;;EAgC3F;;;;;;;WAGA,SAAAnE,CAAA,GACA;;EAEA;;;;;;;WAGA,SAAAA,CAAA,GACA;;;;;;WAEA,SAAAA,CAAA,GACA;;;;;;WAEA,SAAAA,CAAA;MAAA,IAAAlB,KAAA;MACC,IAAI,CAAC+B,UAAU,CAACK,IAAI,CAAC,UAACkD,SAAS;QAC9BtF,KAAI,CAAC+E,gBAAgB,CAACO,SAAS,CAAC;MACjC,CAAC,CAAC;MAEF5F,MAAM,CAAC0C,IAAI,CAAC,IAAI,CAACmD,iBAAiB,EAAE,UAACD,SAAS;QAC7CtF,KAAI,CAAC+E,gBAAgB,CAACO,SAAS,CAAC;MACjC,CAAC,CAAC;IACH;;;;;;WAOA,SAAApE,CAAA;MACCpB,MAAA,CAAA2B,SAAA,CAAM+D,gBAAgB,CAAA7D,IAAA,MAAE;MAExB,IAAI,IAAI,CAACV,GAAG,CAAC,aAAa,CAAC,EAAE;QAC5B,IAAI,CAAC4B,UAAU,CAACG,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC;OACpC,MACI;QACJ,IAAI,CAACH,UAAU,CAACG,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC;;MAGtC,IAAI,IAAI,CAACyC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAACA,OAAO,CAAC,KAAK,CAAC,EAAE;QACjD,IAAI,CAACC,KAAM,CAACC,aAAa,EAAE;QAE3B,IAAI1C,KAAK,GAAG,IAAI,CAAChC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;QAChC,IAAIiC,GAAG,GAAG,IAAI,CAACjC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;QAE5B,IAAIuC,YAAY,GAAG,IAAI,CAACvC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,GAAGwC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAGR,GAAG,GAAGD,KAAM,CAAC;QAE7E,IAAIA,KAAK,GAAG,CAACO,YAAY,EAAE;UAC1B,IAAIoC,KAAK,GAAG3C,KAAK,GAAGO,YAAY;UAChCP,KAAK,GAAG,CAACO,YAAY;UACrB,IAAI,CAACoB,MAAM,CAAC,OAAO,EAAE3B,KAAK,CAAC;UAC3B,IAAI,IAAI,CAACwC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,IAAI,CAACb,MAAM,CAAC,KAAK,EAAE1B,GAAG,GAAG0C,KAAK,CAAC;;;QAGjC,IAAI1C,GAAG,GAAG,CAAC,GAAGM,YAAY,EAAE;UAC3B,IAAIoC,KAAK,GAAG1C,GAAG,GAAG,CAAC,GAAGM,YAAY;UAClCN,GAAG,GAAG,CAAC,GAAGM,YAAY;UACtB,IAAI,CAACoB,MAAM,CAAC,KAAK,EAAE1B,GAAG,CAAC;UAEvB,IAAI,IAAI,CAACuC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1B,IAAI,CAACb,MAAM,CAAC,OAAO,EAAE3B,KAAK,GAAG2C,KAAK,CAAC;;;;MAMtC,IAAMlD,QAAQ,GAAG,IAAI,CAACzB,GAAG,CAAC,UAAU,CAAC;MACrCyB,QAAQ,CAACmD,MAAM,GAAG,IAAI,CAAC5E,GAAG,CAAC,OAAO,CAAE;MACpCyB,QAAQ,CAACoD,IAAI,GAAG,IAAI,CAAC7E,GAAG,CAAC,KAAK,CAAE;MAChCyB,QAAQ,CAACqD,SAAS,GAAGrD,QAAQ,CAACzB,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;MACpDyB,QAAQ,CAACsD,WAAW,GAAGtD,QAAQ,CAACuD,UAAU,EAAE,IAAIvD,QAAQ,CAACoD,IAAI,GAAGpD,QAAQ,CAACmD,MAAM,CAAC;MAChFnD,QAAQ,CAACwD,SAAS,EAAE;MAEpB,IAAI,IAAI,CAACT,OAAO,CAAC,SAAS,CAAC,EAAE;QAC5B,IAAMU,OAAO,GAAG,IAAI,CAAClF,GAAG,CAAC,SAAS,CAAC;QACnC,IAAIkF,OAAO,EAAE;UACZ,IAAMC,YAAY,GAAG1D,QAAQ,CAACzB,GAAG,CAAC,WAAW,CAAC;UAC9CkF,OAAO,CAACE,MAAM,CAAC,MAAM,CAAC;UACtBF,OAAO,CAACE,MAAM,CAAC,IAAI,CAACC,SAAS,CAACC,WAAW,EAAE,CAAC;UAC5CJ,OAAO,CAACK,YAAY,EAAE;UAEtB,IAAIJ,YAAY,EAAE;YACjBD,OAAO,CAACnD,GAAG,CAAC,WAAW,EAAEpD,MAAM,CAAC6G,SAAS,CAACN,OAAO,CAAClF,GAAG,CAAC,WAAW,CAAC,EAAEmF,YAAY,CAAC,CAAC;YAClFD,OAAO,CAACO,KAAK,CAACF,YAAY,EAAE;;;;IAIhC;;;;;;WAEA,SAAAtF,CAAA;MACC,IAAMiF,OAAO,GAAG,IAAI,CAAClF,GAAG,CAAC,SAAS,CAAE;MACpC,IAAIkF,OAAO,EAAE;QACZ,IAAI,CAAClF,GAAG,CAAC,UAAU,CAAC,CAAC0F,mBAAmB,CAACR,OAAO,CAAC;;IAEnD;;;;;;WAEA,SAAAjF,CAAA;MACCpB,MAAA,CAAA2B,SAAA,CAAMmF,aAAa,CAAAjF,IAAA,MAAE;MACrB,IAAI,CAACkF,oBAAoB,EAAE;IAC5B;;EAEA;;;;;;;WAGA,SAAA3F,CAAoBwE,KAAc;MAAlC,IAAA1F,KAAA;MACC,IAAI,CAAC0F,KAAK,GAAGA,KAAK;MAClB,IAAMhD,QAAQ,GAAG,IAAI,CAACzB,GAAG,CAAC,UAAU,CAAC;MAErCyB,QAAQ,CAACgD,KAAK,GAAGA,KAAK;MACtBA,KAAK,CAACvE,aAAa,CAACd,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACa,aAAa,CAAC;MACrDuE,KAAK,CAACrE,gBAAgB,CAAChB,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACe,gBAAgB,CAAC;MAE3DqE,KAAK,CAACoB,oBAAoB,CAACzG,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACkB,UAAU,CAAC;MAEzD,IAAI,CAACuF,EAAE,CAAC,OAAO,EAAE;QAChBrB,KAAK,CAACsB,oBAAoB,CAAChH,KAAI,CAAC;MACjC,CAAC,CAAC;MACF,IAAI,CAAC+G,EAAE,CAAC,KAAK,EAAE;QACdrB,KAAK,CAACsB,oBAAoB,CAAChH,KAAI,CAAC;MACjC,CAAC,CAAC;MAEF0F,KAAK,CAACuB,aAAa,CAACC,SAAS,CAAC,OAAO,EAAE;QACtClH,KAAI,CAACmH,aAAa,EAAE;MACrB,CAAC,CAAC;MACFzB,KAAK,CAACuB,aAAa,CAACC,SAAS,CAAC,QAAQ,EAAE;QACvClH,KAAI,CAACmH,aAAa,EAAE;MACrB,CAAC,CAAC;MAEFzB,KAAK,CAAC9C,WAAW,CAAC,IAAI,CAAC;IACxB;;EAEA;;;;;;;WAGA,SAAA1B,CAAoBmB,QAAiC;MACpD,IAAI,CAAC+E,eAAe,CAAC/E,QAAQ,EAAE,KAAK,CAAC;MACrC,OAAOvC,MAAA,CAAA2B,SAAA,CAAM4F,YAAY,CAAA1F,IAAA,OAACU,QAAQ,CAAC;IACpC;;EAEA;;;;;;;WAGA,SAAAnB,CAAoBmB,QAAiC;MACpD,IAAI,CAAC+E,eAAe,CAAC/E,QAAQ,EAAE,IAAI,CAAC;MACpC,OAAOvC,MAAA,CAAA2B,SAAA,CAAM6F,YAAY,CAAA3F,IAAA,OAACU,QAAQ,CAAC;IACpC;;;;;;WAGA,SAAAnB,CAAuBmB,QAAiC,EAAEkF,OAAgB;MACzE,IAAMb,KAAK,GAAGrE,QAAQ,CAACpB,GAAG,CAAC,OAAO,CAAC;MACnC,IAAIyF,KAAK,EAAE;QACVA,KAAK,CAAC7E,UAAU,CAAC,SAAS,EAAE0F,OAAO,CAAC;;MAErC,IAAMrC,IAAI,GAAG7C,QAAQ,CAACpB,GAAG,CAAC,MAAM,CAAC;MACjC,IAAIiE,IAAI,EAAE;QACTA,IAAI,CAACrD,UAAU,CAAC,SAAS,EAAE0F,OAAO,CAAC;;MAEpC,IAAMC,IAAI,GAAGnF,QAAQ,CAACpB,GAAG,CAAC,MAAM,CAAC;MACjC,IAAIuG,IAAI,EAAE;QACTA,IAAI,CAAC3F,UAAU,CAAC,SAAS,EAAE0F,OAAO,CAAC;;MAEpC,IAAME,QAAQ,GAAGpF,QAAQ,CAACpB,GAAG,CAAC,UAAU,CAAC;MACzC,IAAIwG,QAAQ,EAAE;QACbA,QAAQ,CAAC5F,UAAU,CAAC,SAAS,EAAE0F,OAAO,CAAC;;MAGxC,IAAMG,MAAM,GAAGrF,QAAQ,CAACpB,GAAG,CAAC,QAAQ,CAAC;MACrC,IAAIyG,MAAM,EAAE;QACX,IAAMC,MAAM,GAAGD,MAAM,CAACzG,GAAG,CAAC,QAAQ,CAAC;QACnC,IAAI0G,MAAM,EAAE;UACXA,MAAM,CAAC9F,UAAU,CAAC,SAAS,EAAE0F,OAAO,CAAC;;;IAGxC;;;;;;WAOA,SAAArG,CAAqBmB,QAA6C,EAAEuF,IAAmB;MACtF,IAAMlF,QAAQ,GAAG,IAAI,CAACzB,GAAG,CAAC,UAAU,CAAC;MAErC,IAAI,CAACoB,QAAQ,CAACpB,GAAG,CAAC,OAAO,CAAC,EAAE;QAC3ByB,QAAQ,CAACI,SAAS,CAACT,QAAQ,EAAEuF,IAAI,CAAC;;MAGnC,IAAI,CAACvF,QAAQ,CAACpB,GAAG,CAAC,MAAM,CAAC,EAAE;QAC1ByB,QAAQ,CAACmF,QAAQ,CAACxF,QAAQ,EAAEuF,IAAI,CAAC;;MAGlC,IAAI,CAACvF,QAAQ,CAACpB,GAAG,CAAC,MAAM,CAAC,EAAE;QAC1ByB,QAAQ,CAACoF,QAAQ,CAACzF,QAAQ,EAAEuF,IAAI,CAAC;;MAGlC,IAAI,CAACvF,QAAQ,CAACpB,GAAG,CAAC,UAAU,CAAC,EAAE;QAC9ByB,QAAQ,CAACqF,YAAY,CAAC1F,QAAQ,EAAEuF,IAAI,CAAC;;MAGtC,IAAI,CAACI,cAAc,CAAC3F,QAAQ,CAAC;IAC9B;;;;;;WAEA,SAAAnB,CAAyBmB,QAA6C;MACrE,IAAIqF,MAAM,GAAGrF,QAAQ,CAACpB,GAAG,CAAC,QAAQ,CAAC;MACnC,IAAIgH,UAAU,GAAG,IAAI,CAAChH,GAAG,CAAC,QAAQ,CAAC;MAEnC,IAAI,CAACyG,MAAM,IAAIO,UAAU,IAAI,CAAC5F,QAAQ,CAACpB,GAAG,CAAC,SAAS,CAAC,EAAE;QACtDyG,MAAM,GAAGO,UAAU,CAAC,IAAI,CAACzH,KAAK,EAAE,IAAI,EAAE6B,QAAQ,CAAC;;MAGhD,IAAIqF,MAAM,EAAE;QACXA,MAAM,CAAC/E,IAAI,GAAG,IAAI;QAClB,IAAMgF,MAAM,GAAGD,MAAM,CAACzG,GAAG,CAAC,QAAQ,CAAC;QAEnC,IAAI0G,MAAM,EAAE;UACXA,MAAM,CAACO,YAAY,CAAC7F,QAAQ,CAAC;UAC7BA,QAAQ,CAACuC,MAAM,CAAC,QAAQ,EAAE8C,MAAM,CAAC;UACjC,IAAI,CAACC,MAAM,CAACQ,MAAM,EAAE;YACnB,IAAI,CAAC7G,gBAAgB,CAACjB,QAAQ,CAACC,IAAI,CAACqH,MAAM,CAAC;;;;IAI/C;;;;;;WAEA,SAAAzG,CAAA;MACCpB,MAAA,CAAA2B,SAAA,CAAM2G,aAAa,CAAAzG,IAAA,MAAE;MAErB,IAAM+D,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,IAAIA,KAAK,EAAE;QACVA,KAAK,CAAC2C,kBAAkB,EAAE;;MAE3B,IAAI,CAACpH,GAAG,CAAC,UAAU,CAAC,CAACqH,gBAAgB,EAAE;IACxC;;EAEA;;;;;;;WAGA,SAAApH,CAAuBmB,QAA6C;MACnEvC,MAAA,CAAA2B,SAAA,CAAM8G,eAAe,CAAA5G,IAAA,OAACU,QAAQ,CAAC;MAC/B,IAAMK,QAAQ,GAAG,IAAI,CAACzB,GAAG,CAAC,UAAU,CAAC;MACrC,IAAMyF,KAAK,GAAGrE,QAAQ,CAACpB,GAAG,CAAC,OAAO,CAAC;MACnC,IAAIyF,KAAK,EAAE;QACVhE,QAAQ,CAAC8F,MAAM,CAACC,WAAW,CAAC/B,KAAK,CAAC;QAClCA,KAAK,CAACtF,OAAO,EAAE;;MAEhB,IAAMoG,IAAI,GAAGnF,QAAQ,CAACpB,GAAG,CAAC,MAAM,CAAC;MACjC,IAAIuG,IAAI,EAAE;QACT9E,QAAQ,CAACgG,KAAK,CAACD,WAAW,CAACjB,IAAI,CAAC;QAChCA,IAAI,CAACpG,OAAO,EAAE;;MAEf,IAAM8D,IAAI,GAAG7C,QAAQ,CAACpB,GAAG,CAAC,MAAM,CAAC;MACjC,IAAIiE,IAAI,EAAE;QACTxC,QAAQ,CAACwC,IAAI,CAACuD,WAAW,CAACvD,IAAI,CAAC;QAC/BA,IAAI,CAAC9D,OAAO,EAAE;;MAEf,IAAMqG,QAAQ,GAAGpF,QAAQ,CAACpB,GAAG,CAAC,UAAU,CAAC;MACzC,IAAIwG,QAAQ,EAAE;QACb/E,QAAQ,CAACiG,SAAS,CAACF,WAAW,CAAChB,QAAQ,CAAC;QACxCA,QAAQ,CAACrG,OAAO,EAAE;;IAEpB;;;;;;WAEA,SAAAF,CAAA;MACC,IAAM2B,UAAU,GAAG,IAAI,CAACA,UAAU;MAClC,IAAI,CAACA,UAAU,CAAC+F,QAAQ,EAAE,EAAE;QAC3B,IAAMC,MAAM,GAAGhG,UAAU,CAACiG,WAAW,EAAE;QACvC,IAAMC,QAAM,GAAGF,MAAM,CAACG,KAAK,GAAGH,MAAM,CAACI,IAAI;QAEzCvJ,MAAM,CAAC0C,IAAI,CAAC,IAAI,CAAC8G,SAAS,EAAE,UAAC7G,QAAQ;UACpC,IAAMqE,KAAK,GAAGrE,QAAQ,CAACpB,GAAG,CAAC,OAAO,CAAC;UACnC,IAAIyF,KAAK,IAAI,CAACA,KAAK,CAACkC,QAAQ,EAAE,EAAE;YAC/B,IAAMO,QAAM,GAAGzC,KAAK,CAACoC,WAAW,EAAE;YAClC,IAAMM,CAAC,GAAGD,QAAM,CAACH,KAAK,GAAGG,QAAM,CAACF,IAAI;YAEpC,IAAIG,CAAC,GAAGL,QAAM,EAAE;cACflG,UAAU,CAACG,GAAG,CAAC,MAAM,EAAE0D,KAAK,CAAC2C,IAAI,CAACC,QAAQ,EAAE,CAAC;;;QAGhD,CAAC,CAAC;;MAEH,IAAIrG,KAAK,GAAG,IAAI,CAAChC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;MAChC,IAAIiC,GAAG,GAAG,IAAI,CAACjC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;MAC5B,IAAI,CAACA,GAAG,CAAC,UAAU,CAAC,CAACsI,WAAW,CAAC1G,UAAU,EAAEI,KAAK,GAAG,CAACC,GAAG,GAAGD,KAAK,IAAI,GAAG,CAAC;MACzEJ,UAAU,CAAChB,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC;IACvC;;;;;;WAEA,SAAAX,CAA6BN,QAAgB,EAAE4I,YAA8B;MAC5E,IAAM9G,QAAQ,GAAG,IAAI,CAACzB,GAAG,CAAC,UAAU,CAAC;MACrCL,QAAQ,GAAG8B,QAAQ,CAAC+G,cAAc,CAAC7I,QAAQ,CAAC;MAE5C,IAAI,CAAC8I,eAAe,GAAG9I,QAAQ;MAC/B,IAAI,CAAC+I,aAAa,GAAGH,YAAY;MAEjC,IAAI,CAACI,aAAa,EAAE;IACrB;;EAGA;;;;;;;;WAIA,SAAA1I,CAAA;MAAA,IAAAlB,KAAA;MACC,IAAMwJ,YAAY,GAAG,IAAI,CAACG,aAAa;MACvC,IAAI/I,QAAQ,GAAG,IAAI,CAAC8I,eAAe;MACnC,IAAMvD,OAAO,GAAG,IAAI,CAAClF,GAAG,CAAC,SAAS,CAAE;MACpC,IAAMyB,QAAQ,GAAG,IAAI,CAACzB,GAAG,CAAC,UAAU,CAAC;MAErC,IAAItB,KAAK,CAACkE,QAAQ,CAACjD,QAAQ,CAAC,EAAE;QAE7BlB,MAAM,CAAC0C,IAAI,CAAC,IAAI,CAACyH,MAAM,EAAE,UAACA,MAAM;UAC/B,IAAIA,MAAM,CAAC5I,GAAG,CAAC,UAAU,CAAC,KAAKjB,KAAI,EAAE;YACpC,IAAMqC,QAAQ,GAAGrC,KAAI,CAAC8J,aAAa,CAACD,MAAM,EAAEjJ,QAAS,CAAC;YACtD,IAAI4I,YAAY,IAAIA,YAAY,CAACO,OAAO,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;cACvDA,MAAM,CAACG,kBAAkB,CAAC3H,QAAQ,CAAC;cACnCwH,MAAM,CAACI,iBAAiB,CAAC5H,QAAQ,CAAC;aAClC,MACI;cACJwH,MAAM,CAACK,mBAAmB,CAAC7H,QAAQ,CAAC;;;QAGvC,CAAC,CAAC;QAGF,IAAI8D,OAAO,EAAE;UACZzD,QAAQ,CAACiE,mBAAmB,CAACR,OAAO,CAAC;UAErC,IAAI,IAAI,CAAClF,GAAG,CAAC,aAAa,CAAC,EAAE;YAC5BL,QAAQ,GAAG,IAAI,CAACuJ,iBAAiB,CAACvJ,QAAQ,EAAE,IAAI,CAACK,GAAG,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;;UAE9E,IAAI,CAACtB,KAAK,CAACyK,KAAK,CAACxJ,QAAQ,CAAC,EAAE;YAC3B,IAAI,CAACyJ,kBAAkB,CAAClE,OAAO,EAAEvF,QAAQ,CAAC;YAC1C8B,QAAQ,CAAC4H,eAAe,CAACnE,OAAO,EAAEvF,QAAQ,CAAC;YAE3C,IAAIA,QAAQ,GAAG,IAAI,CAACK,GAAG,CAAC,OAAO,CAAC,IAAIL,QAAQ,GAAG,IAAI,CAACK,GAAG,CAAC,KAAK,CAAC,EAAE;cAC/DkF,OAAO,CAACoE,IAAI,CAAC,CAAC,CAAC;aACf,MACI;cACJpE,OAAO,CAACqE,IAAI,CAAC,CAAC,CAAC;;WAEhB,MACI;YACJrE,OAAO,CAACoE,IAAI,CAAC,CAAC,CAAC;;;;IAInB;;;;;;WAEA,SAAArJ,CAA6BiF,OAAgB,EAAEvF,QAAgB;MAC9DuF,OAAO,CAACO,KAAK,CAAC1D,GAAG,CAAC,MAAM,EAAE,IAAI,CAACyH,cAAc,CAAC7J,QAAQ,CAAC,CAAC;IACzD;;EAUA;;;;;;;WAGA,SAAAM,CAAyBN,QAAgB,EAAE8J,SAAiB;MAC3D,OAAO9J,QAAQ;IAChB;;EAEA;;;;;;;WAGA,SAAAM,CAAA;MACC,IAAIiF,OAAO,GAAG,IAAI,CAAClF,GAAG,CAAC,SAAS,CAAC;MACjC,IAAIkF,OAAO,EAAE;QACZA,OAAO,CAACqE,IAAI,EAAE;;IAEhB;;EAEA;;;;;;;WAGA,SAAAtJ,CAAA;MACC,IAAIiF,OAAO,GAAG,IAAI,CAAClF,GAAG,CAAC,SAAS,CAAC;MACjC,IAAIkF,OAAO,EAAE;QACZA,OAAO,CAACoE,IAAI,EAAE;;IAEhB;;EAEA;;;;;;;WAGA,SAAArJ,CAA6BkE,SAAsC,EAAEuF,OAAsB,GAE3F;;;;;;WAEA,SAAAzJ,CAAA;MACCpB,MAAA,CAAA2B,SAAA,CAAMmJ,WAAW,CAAAjJ,IAAA,MAAE;MACnB,IAAI,CAACkJ,UAAU,GAAG,KAAK;MACvB,IAAI,CAAC/F,YAAY,GAAG,KAAK;IAC1B;;EAEA;;;;;;;;;;WAMA,SAAA5D,CAA4B4J,UAAkB;MAC7C,IAAMpI,QAAQ,GAAG,IAAI,CAACzB,GAAG,CAAC,UAAU,CAAC;MACrC,OAAOyB,QAAQ,CAAC+G,cAAc,CAACqB,UAAU,GAAGpI,QAAQ,CAACuD,UAAU,EAAE,CAAC;IACnE;;EAEA;;;;;;;;;;;WAOA,SAAA/E,CAAsBN,QAAgB;MACrC,OAAO,IAAI,CAACK,GAAG,CAAC,UAAU,CAAC,CAACwI,cAAc,CAAC7I,QAAQ,CAAC;IACrD;;EAEA;;;;;;;;;WAKA,SAAAM,CAAmBN,QAAgB;MAClC,OAAO,IAAI,CAACK,GAAG,CAAC,UAAU,CAAC,CAAC8J,WAAW,CAACnK,QAAQ,CAAC;IAClD;;EAWA;;;;;;;WAGA,SAAAM,CAAiBkE,SAAsC,EAAE4F,SAAsC,EAAEC,aAAqB,EAAEC,UAAkB;MACzI,OAAO,KAAK;IACb;;EAEA;;;;;;;;;;;WAOA,SAAAhK,CAAuBiK,YAAqC;MAC3D,OAAO,IAAI,CAACpJ,UAAU,CAACzB,IAAI,CAAC6K,YAAY,CAAC;IAC1C;;EAEA;;;;;;;WAGA,SAAAjK,CAAwByD,OAAiB,GAAI;;EAhyB7CxE,MAAA,CAAAC,cAAA,CAAAP,IAAA;;;;WAAkC;;EAClCM,MAAA,CAAAC,cAAA,CAAAP,IAAA;;;;WAA0CR,SAAS,CAAC+L,UAAU,CAACC,MAAM,CAAC,CAACxL,IAAI,CAACyG,SAAS,CAAC;;EAgyBvF,OAAAzG,IAAC;CAAA,CAlyB0DR,SAAS;SAA9CQ,IAAI"},"metadata":{},"sourceType":"module"}