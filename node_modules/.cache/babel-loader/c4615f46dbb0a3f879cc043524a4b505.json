{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Text } from \"./Text\";\nimport * as $math from \"../util/Math\";\n/**\r\n * @ignore\r\n */\nvar RadialText = /** @class */function (_super) {\n  __extends(RadialText, _super);\n  function RadialText() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._root._renderer.makeRadialText(\"\", _this.textStyle)\n    });\n    return _this;\n  }\n  Object.defineProperty(RadialText.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  Object.defineProperty(RadialText.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n      this._display.clear();\n      if (this.isDirty(\"textType\")) {\n        this._display.textType = this.get(\"textType\");\n        this.markDirtyBounds();\n      }\n      if (this.isDirty(\"radius\")) {\n        this._display.radius = this.get(\"radius\");\n        this.markDirtyBounds();\n      }\n      if (this.isDirty(\"startAngle\")) {\n        this._display.startAngle = (this.get(\"startAngle\", 0) + 90) * $math.RADIANS;\n        this.markDirtyBounds();\n      }\n      if (this.isDirty(\"inside\")) {\n        this._display.inside = this.get(\"inside\");\n        this.markDirtyBounds();\n      }\n      if (this.isDirty(\"orientation\")) {\n        this._display.orientation = this.get(\"orientation\");\n        this.markDirtyBounds();\n      }\n      if (this.isDirty(\"kerning\")) {\n        this._display.kerning = this.get(\"kerning\");\n        this.markDirtyBounds();\n      }\n    }\n  });\n  Object.defineProperty(RadialText, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"RadialText\"\n  });\n  Object.defineProperty(RadialText, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Text.classNames.concat([RadialText.className])\n  });\n  return RadialText;\n}(Text);\nexport { RadialText };","map":{"version":3,"names":["Text","$math","RadialText","_super","__extends","_this","apply","arguments","Object","defineProperty","_root","_renderer","makeRadialText","textStyle","value","prototype","_afterNew","call","_beforeChanged","_display","clear","isDirty","textType","get","markDirtyBounds","radius","startAngle","RADIANS","inside","orientation","kerning","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/RadialText.ts"],"sourcesContent":["import { Text, ITextSettings, ITextPrivate } from \"./Text\";\nimport * as $math from \"../util/Math\";\nimport type { IRadialText } from \"./backend/Renderer\";\n\n/**\n * @ignore\n */\nexport interface IRadialTextSettings extends ITextSettings {\n\ttextType?: \"regular\" | \"circular\" | \"radial\" | \"aligned\" | \"adjusted\";\n\tradius?: number;\n\tstartAngle?: number;\n\tinside?: boolean;\n\torientation?: \"inward\" | \"outward\" | \"auto\";\n\tkerning?: number;\n}\n\n/**\n * @ignore\n */\nexport interface IRadialTextPrivate extends ITextPrivate {\n}\n\n/**\n * @ignore\n */\nexport class RadialText extends Text {\n\n\tdeclare public _settings: IRadialTextSettings;\n\tdeclare public _privateSettings: IRadialTextPrivate;\n\n\tpublic _display: IRadialText = this._root._renderer.makeRadialText(\"\", this.textStyle);\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"RadialText\";\n\tpublic static classNames: Array<string> = Text.classNames.concat([RadialText.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tthis._display.clear();\n\n\t\tif (this.isDirty(\"textType\")) {\n\t\t\tthis._display.textType = this.get(\"textType\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._display.radius = this.get(\"radius\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"startAngle\")) {\n\t\t\tthis._display.startAngle = (this.get(\"startAngle\", 0)! + 90) * $math.RADIANS;\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\tthis._display.inside = this.get(\"inside\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tthis._display.orientation = this.get(\"orientation\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\n\t\tif (this.isDirty(\"kerning\")) {\n\t\t\tthis._display.kerning = this.get(\"kerning\");\n\t\t\tthis.markDirtyBounds();\n\t\t}\n\t}\n\n}\n"],"mappings":";AAAA,SAASA,IAAI,QAAqC,QAAQ;AAC1D,OAAO,KAAKC,KAAK,MAAM,cAAc;AAqBrC;;;AAGA,IAAAC,UAAA,0BAAAC,MAAA;EAAgCC,SAAA,CAAAF,UAAA,EAAAC,MAAA;EAAhC,SAAAD,WAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IAKCC,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA+BA,KAAI,CAACK,KAAK,CAACC,SAAS,CAACC,cAAc,CAAC,EAAE,EAAEP,KAAI,CAACQ,SAAS;;;EA6CtF;;;;;WA3CC,SAAAC,CAAA;MACCX,MAAA,CAAAY,SAAA,CAAMC,SAAS,CAAAC,IAAA,MAAE;IAClB;;;;;;WAKA,SAAAH,CAAA;MACCX,MAAA,CAAAY,SAAA,CAAMG,cAAc,CAAAD,IAAA,MAAE;MAEtB,IAAI,CAACE,QAAQ,CAACC,KAAK,EAAE;MAErB,IAAI,IAAI,CAACC,OAAO,CAAC,UAAU,CAAC,EAAE;QAC7B,IAAI,CAACF,QAAQ,CAACG,QAAQ,GAAG,IAAI,CAACC,GAAG,CAAC,UAAU,CAAC;QAC7C,IAAI,CAACC,eAAe,EAAE;;MAGvB,IAAI,IAAI,CAACH,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACF,QAAQ,CAACM,MAAM,GAAG,IAAI,CAACF,GAAG,CAAC,QAAQ,CAAC;QACzC,IAAI,CAACC,eAAe,EAAE;;MAGvB,IAAI,IAAI,CAACH,OAAO,CAAC,YAAY,CAAC,EAAE;QAC/B,IAAI,CAACF,QAAQ,CAACO,UAAU,GAAG,CAAC,IAAI,CAACH,GAAG,CAAC,YAAY,EAAE,CAAC,CAAE,GAAG,EAAE,IAAItB,KAAK,CAAC0B,OAAO;QAC5E,IAAI,CAACH,eAAe,EAAE;;MAGvB,IAAI,IAAI,CAACH,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACF,QAAQ,CAACS,MAAM,GAAG,IAAI,CAACL,GAAG,CAAC,QAAQ,CAAC;QACzC,IAAI,CAACC,eAAe,EAAE;;MAGvB,IAAI,IAAI,CAACH,OAAO,CAAC,aAAa,CAAC,EAAE;QAChC,IAAI,CAACF,QAAQ,CAACU,WAAW,GAAG,IAAI,CAACN,GAAG,CAAC,aAAa,CAAC;QACnD,IAAI,CAACC,eAAe,EAAE;;MAGvB,IAAI,IAAI,CAACH,OAAO,CAAC,SAAS,CAAC,EAAE;QAC5B,IAAI,CAACF,QAAQ,CAACW,OAAO,GAAG,IAAI,CAACP,GAAG,CAAC,SAAS,CAAC;QAC3C,IAAI,CAACC,eAAe,EAAE;;IAExB;;EArCAhB,MAAA,CAAAC,cAAA,CAAAP,UAAA;;;;WAAkC;;EAClCM,MAAA,CAAAC,cAAA,CAAAP,UAAA;;;;WAA0CF,IAAI,CAAC+B,UAAU,CAACC,MAAM,CAAC,CAAC9B,UAAU,CAAC+B,SAAS,CAAC;;EAsCxF,OAAA/B,UAAC;CAAA,CAlD+BF,IAAI;SAAvBE,UAAU"},"metadata":{},"sourceType":"module"}