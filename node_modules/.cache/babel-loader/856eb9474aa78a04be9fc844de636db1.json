{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/pages/adminPanel/dashboard/DashboardContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { Box } from '@mui/system';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Dashboard from '../../../components/adminPanel/dashboard/Dashboard';\nimport DashboardError from '../../../components/adminPanel/dashboard/DashboardError';\nimport PanelTitle from '../../../components/adminPanel/dashboard/PanelTitle';\nimport Spinner from '../../../components/common/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardContainer = ({\n  setActive,\n  active\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [data, setData] = useState({\n    newUserRegistrations: 0,\n    uniqueUsers: 0,\n    newOrders: 0,\n    incompleteOrders: 0,\n    mostSoldProducts: []\n  });\n  const token = useSelector(state => state.auth.token);\n  useEffect(() => {\n    setActive('dashboard');\n  }, [setActive]);\n\n  const getData = async () => {\n    try {\n      const response = await axios({\n        method: 'GET',\n        url: '/api/dashboard',\n        headers: {\n          Authorization: token\n        }\n      });\n\n      if (response.status === 200) {\n        setIsLoading(false);\n        setData(response.data);\n      }\n    } catch (err) {\n      if (axios.isAxiosError(err)) {\n        if (err && err.response) {\n          if (err.response.data.error) {\n            setError(err.response.data.error);\n          }\n\n          if (err.response.data.status) {\n            setError(err.response.data.status);\n          }\n\n          setIsLoading(false);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(PanelTitle, {\n      title: 'Dashboard',\n      icon: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      margin: '200px',\n      size: '100px'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(DashboardError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      data: data,\n      active: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardContainer, \"v1FUl9vgFEc2m6CoRjDY2s5dNPg=\", false, function () {\n  return [useSelector];\n});\n\n_c = DashboardContainer;\nexport default DashboardContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardContainer\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/pages/adminPanel/dashboard/DashboardContainer.jsx"],"names":["Box","axios","useEffect","useState","useSelector","Dashboard","DashboardError","PanelTitle","Spinner","DashboardContainer","setActive","active","isLoading","setIsLoading","error","setError","data","setData","newUserRegistrations","uniqueUsers","newOrders","incompleteOrders","mostSoldProducts","token","state","auth","getData","response","method","url","headers","Authorization","status","err","isAxiosError"],"mappings":"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","sourcesContent":["import { Box } from '@mui/system';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Dashboard from '../../../components/adminPanel/dashboard/Dashboard';\r\nimport DashboardError from '../../../components/adminPanel/dashboard/DashboardError';\r\nimport PanelTitle from '../../../components/adminPanel/dashboard/PanelTitle';\r\nimport Spinner from '../../../components/common/Spinner';\r\n\r\nconst DashboardContainer = ({ setActive, active }) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [data, setData] = useState({\r\n    newUserRegistrations: 0,\r\n    uniqueUsers: 0,\r\n    newOrders: 0,\r\n    incompleteOrders: 0,\r\n    mostSoldProducts: [],\r\n  });\r\n\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  useEffect(() => {\r\n    setActive('dashboard');\r\n  }, [setActive]);\r\n\r\n  const getData = async () => {\r\n    try {\r\n      const response = await axios({\r\n        method: 'GET',\r\n        url: '/api/dashboard',\r\n        headers: { Authorization: token },\r\n      });\r\n      if (response.status === 200) {\r\n        setIsLoading(false);\r\n        setData(response.data);\r\n      }\r\n    } catch (err) {\r\n      if (axios.isAxiosError(err)) {\r\n        if (err && err.response) {\r\n          if (err.response.data.error) {\r\n            setError(err.response.data.error);\r\n          }\r\n          if (err.response.data.status) {\r\n            setError(err.response.data.status);\r\n          }\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <PanelTitle title={'Dashboard'} icon={active} />\r\n      {isLoading ? (\r\n        <Spinner margin={'200px'} size={'100px'} />\r\n      ) : error ? (\r\n        <DashboardError error={error} />\r\n      ) : (\r\n        <Dashboard data={data} active={active} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardContainer;\r\n"]},"metadata":{},"sourceType":"module"}