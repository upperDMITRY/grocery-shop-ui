{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Entity } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher } from \"../util/EventDispatcher\";\nimport { MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\";\n//import { populateString } from \"../util/PopulateString\";\n/**\r\n * An [[EventDispatcher]] for [[Sprite]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\r\n */\nvar SpriteEventDispatcher = /** @class */function (_super) {\n  __extends(SpriteEventDispatcher, _super);\n  function SpriteEventDispatcher(sprite) {\n    var _this = _super.call(this) || this;\n    Object.defineProperty(_this, \"_sprite\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_rendererDisposers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_dispatchParents\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    _this._sprite = sprite;\n    return _this;\n  }\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"_makePointerEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, event) {\n      return {\n        type: key,\n        originalEvent: event.event,\n        point: event.point,\n        simulated: event.simulated,\n        native: event.native,\n        target: this._sprite\n      };\n    }\n  });\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"_onRenderer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, dispatch) {\n      var _this = this;\n      // TODO: is this OK? it'd be good not to require to set this on each individual element\n      this._sprite.set(\"interactive\", true);\n      this._sprite._display.interactive = true;\n      var events = this._rendererDisposers[key];\n      if (events === undefined) {\n        var disposer_1 = this._sprite._display.on(key, function (e) {\n          dispatch.call(_this, e);\n        });\n        events = this._rendererDisposers[key] = new CounterDisposer(function () {\n          delete _this._rendererDisposers[key];\n          disposer_1.dispose();\n        });\n      }\n      return events.increment();\n    }\n  });\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"_on\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (once, type, callback, context, shouldClone, dispatch) {\n      var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);\n      var rendererEvent = SpriteEventDispatcher.RENDERER_EVENTS[type];\n      if (rendererEvent !== undefined) {\n        info.disposer = new MultiDisposer([info.disposer, this._onRenderer(type, rendererEvent)]);\n      }\n      return info;\n    }\n  });\n  /**\r\n   * Will stop any bubbling up of the event to element's parents.\r\n   *\r\n   * Should be called in an event handler, e.g.:\r\n   *\r\n   * ```TypeScript\r\n   * element.events.on(\"pointerdown\", function(ev) {\r\n   *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n   *   // ...\r\n   *   ev.target.events.stopParentDispatch();\r\n   * });\r\n   * ```\r\n   * ```JavaScript\r\n   * element.events.on(\"pointerdown\", function(ev) {\r\n   *   // Do something here and prevent from \"pointerdown\" bubbling up\r\n   *   // ...\r\n   *   ev.target.events.stopParentDispatch();\r\n   * });\r\n   * ```\r\n   */\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"stopParentDispatch\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._dispatchParents = false;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(SpriteEventDispatcher.prototype, \"dispatchParents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (type, event) {\n      var old = this._dispatchParents;\n      this._dispatchParents = true;\n      try {\n        this.dispatch(type, event);\n        if (this._dispatchParents && this._sprite.parent) {\n          this._sprite.parent.events.dispatchParents(type, event);\n        }\n      } finally {\n        this._dispatchParents = old;\n      }\n    }\n  });\n  Object.defineProperty(SpriteEventDispatcher, \"RENDERER_EVENTS\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: {\n      \"click\": function (event) {\n        if (this.isEnabled(\"click\") && !this._sprite.isDragging() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n          this.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n        }\n      },\n      \"rightclick\": function (event) {\n        if (this.isEnabled(\"rightclick\")) {\n          this.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n        }\n      },\n      \"middleclick\": function (event) {\n        if (this.isEnabled(\"middleclick\")) {\n          this.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n        }\n      },\n      \"dblclick\": function (event) {\n        this.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n      },\n      \"pointerover\": function (event) {\n        if (this.isEnabled(\"pointerover\")) {\n          this.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n        }\n      },\n      \"pointerout\": function (event) {\n        if (this.isEnabled(\"pointerout\")) {\n          this.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n        }\n      },\n      \"pointerdown\": function (event) {\n        this.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n      },\n      \"pointerup\": function (event) {\n        if (this.isEnabled(\"pointerup\")) {\n          this.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n        }\n      },\n      \"globalpointerup\": function (event) {\n        if (this.isEnabled(\"globalpointerup\")) {\n          this.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n        }\n      },\n      \"globalpointermove\": function (event) {\n        if (this.isEnabled(\"globalpointermove\")) {\n          this.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n        }\n      },\n      \"wheel\": function (event) {\n        if (this.isEnabled(\"wheel\")) {\n          this.dispatch(\"wheel\", {\n            type: \"wheel\",\n            target: this._sprite,\n            originalEvent: event.event,\n            point: event.point\n          });\n        }\n      }\n    }\n  });\n  return SpriteEventDispatcher;\n}(EventDispatcher);\n/**\r\n * A base class for all visual elements.\r\n *\r\n * @important\r\n */\nvar Sprite = /** @class */function (_super) {\n  __extends(Sprite, _super);\n  function Sprite() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_adjustedLocalBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    });\n    Object.defineProperty(_this, \"_localBounds\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    });\n    Object.defineProperty(_this, \"_parent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_dataItem\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_templateField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_sizeDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // Will be true only when dragging\n    Object.defineProperty(_this, \"_isDragging\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    // The event when the dragging starts\n    Object.defineProperty(_this, \"_dragEvent\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    // The position when dragging starts\n    Object.defineProperty(_this, \"_dragPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_isHidden\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_isShowing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_isHiding\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_isDown\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_downPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_downPoints\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_toggleDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_dragDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_tooltipDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_hoverDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_focusDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_tooltipMoveDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_tooltipPointerDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_statesHandled\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    return _this;\n  }\n  Object.defineProperty(Sprite.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.setPrivateRaw(\"visible\", true);\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_markDirtyKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      _super.prototype._markDirtyKey.call(this, key);\n      if (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n        this.markDirtyBounds();\n        this._addPercentagePositionChildren();\n        this.markDirtyPosition();\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_markDirtyPrivateKey\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key) {\n      _super.prototype._markDirtyPrivateKey.call(this, key);\n      if (key == \"x\" || key == \"y\") {\n        this.markDirtyPosition();\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_removeTemplateField\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this._templateField) {\n        this._templateField._removeObjectTemplate(this);\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_createEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return new SpriteEventDispatcher(this);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_processTemplateField\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var template;\n      var field = this.get(\"templateField\");\n      if (field) {\n        var dataItem = this.dataItem;\n        if (dataItem) {\n          var context = dataItem.dataContext;\n          if (context) {\n            template = context[field];\n            if (!(template instanceof Template) && template) {\n              template = Template.new(template);\n            }\n          }\n        }\n      }\n      if (this._templateField !== template) {\n        this._removeTemplateField();\n        this._templateField = template;\n        if (template) {\n          template._setObjectTemplate(this);\n        }\n        this._applyTemplates();\n      }\n    }\n  });\n  // TODO change this to run before the element is added to the parent, so that way\n  //      it doesn't need to apply the themes twice\n  Object.defineProperty(Sprite.prototype, \"_setDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var oldDataItem = this._dataItem;\n      this._dataItem = dataItem;\n      this._processTemplateField();\n      var eventType = \"dataitemchanged\";\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this,\n          oldDataItem: oldDataItem,\n          newDataItem: dataItem\n        });\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"dataItem\", {\n    /**\r\n     * @return DataItem\r\n     */\n    get: function () {\n      if (this._dataItem) {\n        return this._dataItem;\n      } else {\n        var parent_1 = this._parent;\n        while (parent_1) {\n          if (parent_1._dataItem) {\n            return parent_1._dataItem;\n          } else {\n            parent_1 = parent_1._parent;\n          }\n        }\n      }\n    },\n    /**\r\n     * A [[DataItem]] used for this element.\r\n     *\r\n     * NOTE: data item is being assigned automatically in most cases where it\r\n     * matters. Use this accessor to set data item only if you know what you're\r\n     * doing.\r\n     *\r\n     * @param  value  Data item\r\n     */\n    set: function (value) {\n      this._setDataItem(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"_addPercentageSizeChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var parent = this.parent;\n      if (parent) {\n        if (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n          $array.pushOne(parent._percentageSizeChildren, this);\n        } else {\n          $array.removeFirst(parent._percentageSizeChildren, this);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_addPercentagePositionChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var parent = this.parent;\n      if (parent) {\n        if (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n          $array.pushOne(parent._percentagePositionChildren, this);\n        } else {\n          $array.removeFirst(parent._percentagePositionChildren, this);\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Sprite.prototype, \"markDirtyPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._root._addDirtyPosition(this);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"updatePivotPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var bounds = this._localBounds;\n      if (bounds) {\n        var centerX = this.get(\"centerX\");\n        if (centerX != null) {\n          this._display.pivot.x = bounds.left + $utils.relativeToValue(centerX, bounds.right - bounds.left);\n        }\n        var centerY = this.get(\"centerY\");\n        if (centerY != null) {\n          this._display.pivot.y = bounds.top + $utils.relativeToValue(centerY, bounds.bottom - bounds.top);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._beforeChanged.call(this);\n      if (this.isDirty(\"tooltip\")) {\n        var previous = this._prevSettings.tooltip;\n        if (previous) {\n          previous.dispose();\n        }\n      }\n      if (this.isDirty(\"layer\")) {\n        this._display.setLayer(this.get(\"layer\"));\n        this.markDirtyLayer();\n      }\n      if (this.isDirty(\"tooltipPosition\")) {\n        var tooltipMoveDp = this._tooltipMoveDp;\n        if (tooltipMoveDp) {\n          tooltipMoveDp.dispose();\n          this._tooltipMoveDp = undefined;\n        }\n        var tooltipPointerDp = this._tooltipPointerDp;\n        if (tooltipPointerDp) {\n          tooltipPointerDp.dispose();\n          this._tooltipPointerDp = undefined;\n        }\n        if (this.get(\"tooltipPosition\") == \"pointer\") {\n          this._tooltipPointerDp = new MultiDisposer([this.events.on(\"pointerover\", function () {\n            _this._tooltipMoveDp = _this.events.on(\"globalpointermove\", function (e) {\n              _this.showTooltip(e.point);\n            });\n          }), this.events.on(\"pointerout\", function () {\n            var tooltipMoveDp = _this._tooltipMoveDp;\n            if (tooltipMoveDp) {\n              tooltipMoveDp.dispose();\n              _this._tooltipMoveDp = undefined;\n            }\n          })]);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleStates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._statesHandled) {\n        if (this.isDirty(\"active\")) {\n          if (this.get(\"active\")) {\n            this.states.applyAnimate(\"active\");\n            this.set(\"ariaChecked\", true);\n          } else {\n            if (!this.isHidden()) {\n              this.states.applyAnimate(\"default\");\n            }\n            this.set(\"ariaChecked\", false);\n          }\n          this.markDirtyAccessibility();\n        }\n        if (this.isDirty(\"disabled\")) {\n          if (this.get(\"disabled\")) {\n            this.states.applyAnimate(\"disabled\");\n            this.set(\"ariaChecked\", false);\n          } else {\n            if (!this.isHidden()) {\n              this.states.applyAnimate(\"default\");\n            }\n            this.set(\"ariaChecked\", true);\n          }\n          this.markDirtyAccessibility();\n        }\n        this._statesHandled = true;\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._changed.call(this);\n      var display = this._display;\n      var events = this.events;\n      if (this.isDirty(\"draggable\")) {\n        var draggable = this.get(\"draggable\");\n        if (draggable) {\n          this.set(\"interactive\", true);\n          this._dragDp = new MultiDisposer([events.on(\"pointerdown\", function (ev) {\n            _this.dragStart(ev);\n          }), events.on(\"globalpointermove\", function (ev) {\n            _this.dragMove(ev);\n          }), events.on(\"globalpointerup\", function (ev) {\n            _this.dragStop(ev);\n          })]);\n        } else {\n          if (this._dragDp) {\n            this._dragDp.dispose();\n            this._dragDp = undefined;\n          }\n        }\n      }\n      if (this.isDirty(\"tooltipText\")) {\n        var tooltipText = this.get(\"tooltipText\");\n        if (tooltipText) {\n          this._tooltipDp = new MultiDisposer([events.on(\"pointerover\", function () {\n            _this.showTooltip();\n          }), events.on(\"pointerout\", function () {\n            _this.hideTooltip();\n          })]);\n        } else {\n          if (this._tooltipDp) {\n            this._tooltipDp.dispose();\n            this._tooltipDp = undefined;\n          }\n        }\n      }\n      if (this.isDirty(\"toggleKey\")) {\n        var toggleKey_1 = this.get(\"toggleKey\");\n        if (toggleKey_1 && toggleKey_1 != \"none\") {\n          this._toggleDp = events.on(\"click\", function () {\n            if (!_this._isDragging) {\n              _this.set(toggleKey_1, !_this.get(toggleKey_1));\n            }\n          });\n        } else {\n          if (this._toggleDp) {\n            this._toggleDp.dispose();\n            this._toggleDp = undefined;\n          }\n        }\n      }\n      this._handleStates();\n      if (this.isDirty(\"opacity\")) {\n        display.alpha = Math.max(0, this.get(\"opacity\", 1));\n      }\n      if (this.isDirty(\"rotation\")) {\n        this.markDirtyBounds();\n        display.angle = this.get(\"rotation\", 0);\n      }\n      if (this.isDirty(\"scale\")) {\n        this.markDirtyBounds();\n        display.scale = this.get(\"scale\", 0);\n      }\n      if (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n        this.markDirtyBounds();\n        this.updatePivotPoint();\n      }\n      if (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n        if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n          display.visible = false;\n        } else {\n          display.visible = true;\n        }\n        this.markDirtyBounds();\n        if (this.get(\"focusable\")) {\n          this.markDirtyAccessibility();\n        }\n      }\n      if (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n        this.markDirtyBounds();\n        this._addPercentageSizeChildren();\n        var parent_2 = this.parent;\n        if (parent_2) {\n          if (this.isDirty(\"width\") && this.get(\"width\") instanceof Percent || this.isDirty(\"height\") && this.get(\"height\") instanceof Percent) {\n            parent_2.markDirty();\n            parent_2._prevWidth = 0;\n          }\n        }\n        this._sizeDirty = true;\n      }\n      if (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n        this.markDirtyBounds();\n        this._sizeDirty = true;\n      }\n      if (this._sizeDirty) {\n        this._updateSize();\n      }\n      if (this.isDirty(\"wheelable\")) {\n        var wheelable = this.get(\"wheelable\");\n        if (wheelable) {\n          this.set(\"interactive\", true);\n        }\n        display.wheelable = wheelable ? true : false;\n      }\n      // Accessibility\n      if (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n        if (this.get(\"focusable\")) {\n          this._root._registerTabindexOrder(this);\n        } else {\n          this._root._unregisterTabindexOrder(this);\n        }\n      }\n      if (this.isDirty(\"filter\")) {\n        //this.markDirtyBounds();\n        display.filter = this.get(\"filter\");\n      }\n      if (this.isDirty(\"cursorOverStyle\")) {\n        display.cursorOverStyle = this.get(\"cursorOverStyle\");\n      }\n      if (this.isDirty(\"hoverOnFocus\")) {\n        if (this.get(\"hoverOnFocus\")) {\n          this._focusDp = new MultiDisposer([events.on(\"focus\", function () {\n            // TODO: proper hover, not just tooltip\n            _this.showTooltip();\n          }), events.on(\"blur\", function () {\n            // TODO: proper hover, not just tooltip\n            _this.hideTooltip();\n          })]);\n        } else {\n          if (this._focusDp) {\n            this._focusDp.dispose();\n            this._focusDp = undefined;\n          }\n        }\n      }\n      if (this.isDirty(\"focusable\")) {\n        if (this.get(\"focusable\")) {\n          this._root._registerTabindexOrder(this);\n        } else {\n          this._root._unregisterTabindexOrder(this);\n        }\n        this.markDirtyAccessibility();\n      }\n      if (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\")) {\n        // display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n        // @todo make sure ariaLabel gets populated in Root\n        this.markDirtyAccessibility();\n      }\n      if (this.isDirty(\"exportable\")) {\n        display.exportable = this.get(\"exportable\");\n      }\n      if (this.isDirty(\"interactive\")) {\n        var events_1 = this.events;\n        if (this.get(\"interactive\")) {\n          this._hoverDp = new MultiDisposer([events_1.on(\"click\", function (ev) {\n            if ($utils.isTouchEvent(ev.originalEvent)) {\n              if (!_this.getPrivate(\"touchHovering\")) {\n                _this.setTimeout(function () {\n                  _this._handleOver();\n                  if (_this.get(\"tooltipText\")) {\n                    _this.showTooltip();\n                  }\n                  _this.setPrivateRaw(\"touchHovering\", true);\n                }, 10);\n              }\n            }\n          }), events_1.on(\"globalpointerup\", function (ev) {\n            if ($utils.isTouchEvent(ev.originalEvent)) {\n              if (_this.getPrivate(\"touchHovering\")) {\n                _this._handleOut();\n                if (_this.get(\"tooltipText\")) {\n                  _this.hideTooltip();\n                }\n              }\n              _this.setPrivateRaw(\"touchHovering\", false);\n            }\n            if (_this._isDown) {\n              _this._handleUp(ev);\n            }\n            //this._isDown = false;\n          }), events_1.on(\"pointerover\", function () {\n            _this._handleOver();\n          }), events_1.on(\"pointerout\", function () {\n            _this._handleOut();\n          }), events_1.on(\"pointerdown\", function (e) {\n            _this._handleDown(e);\n          })]);\n        } else {\n          if (this._hoverDp) {\n            this._hoverDp.dispose();\n            this._hoverDp = undefined;\n          }\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n  Object.defineProperty(Sprite.prototype, \"dragStart\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (e) {\n      this._dragEvent = e;\n      this.events.stopParentDispatch();\n    }\n  });\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n  Object.defineProperty(Sprite.prototype, \"dragStop\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (e) {\n      this._dragEvent = undefined;\n      this._dragPoint = undefined;\n      this.events.stopParentDispatch();\n      if (this._isDragging) {\n        this._isDragging = false;\n        var type = \"dragstop\";\n        if (this.events.isEnabled(type)) {\n          this.events.dispatch(type, {\n            type: type,\n            target: this,\n            originalEvent: e.originalEvent,\n            point: e.point,\n            simulated: e.simulated\n          });\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleOver\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this.isHidden()) {\n        if (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n          this.states.applyAnimate(\"hoverActive\");\n        } else if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n          this.states.applyAnimate(\"hoverDisabled\");\n        } else {\n          this.states.applyAnimate(\"hover\");\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleOut\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this.isHidden()) {\n        if (this.get(\"active\") && this.states.lookup(\"active\")) {\n          this.states.applyAnimate(\"active\");\n        } else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n          this.states.applyAnimate(\"disabled\");\n        } else {\n          if (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n            this.states.applyAnimate(\"default\");\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleUp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (e) {\n      if (!this.isHidden()) {\n        if (this.get(\"active\") && this.states.lookup(\"active\")) {\n          this.states.applyAnimate(\"active\");\n        } else if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n          this.states.applyAnimate(\"disabled\");\n        } else if (this.states.lookup(\"down\")) {\n          if (this.isHover()) {\n            this.states.applyAnimate(\"hover\");\n          } else {\n            this.states.applyAnimate(\"default\");\n          }\n        }\n        // @todo remove this once migrated to _downPoints\n        this._downPoint = undefined;\n        var pointerId = $utils.getPointerId(e.originalEvent);\n        delete this._downPoints[pointerId];\n        if ($object.keys(this._downPoints).length == 0) {\n          this._isDown = false;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_hasMoved\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (e) {\n      // @todo remove this once migrated to _downPoints\n      // if (this._downPoint) {\n      // \tconst x = Math.abs(this._downPoint.x - e.point.x);\n      // \tconst y = Math.abs(this._downPoint.y - e.point.y);\n      // \treturn (x > 5) || (y > 5);\n      // }\n      var pointerId = $utils.getPointerId(e.originalEvent);\n      var downPoint = this._downPoints[pointerId];\n      if (downPoint) {\n        var x = Math.abs(downPoint.x - e.point.x);\n        var y = Math.abs(downPoint.y - e.point.y);\n        return x > 5 || y > 5;\n      }\n      return false;\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_handleDown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (e) {\n      if (!this.isHidden() && !this.get(\"disabled\")) {\n        if (this.states.lookup(\"down\")) {\n          this.states.applyAnimate(\"down\");\n        }\n        this._downPoint = {\n          x: e.point.x,\n          y: e.point.y\n        };\n        // @todo remove this once migrated to _downPoints\n        this._isDown = true;\n        var pointerId = $utils.getPointerId(e.originalEvent);\n        this._downPoints[pointerId] = {\n          x: e.point.x,\n          y: e.point.y\n        };\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   * @todo should this be user-accessible?\r\n   */\n  Object.defineProperty(Sprite.prototype, \"dragMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (e) {\n      var dragEvent = this._dragEvent;\n      if (dragEvent) {\n        var x = e.point.x - dragEvent.point.x;\n        var y = e.point.y - dragEvent.point.y;\n        var events = this.events;\n        if (dragEvent.simulated && !this._isDragging) {\n          this._isDragging = true;\n          this._dragEvent = e;\n          this._dragPoint = {\n            x: this.x(),\n            y: this.y()\n          };\n          var type = \"dragstart\";\n          if (events.isEnabled(type)) {\n            events.dispatch(type, {\n              type: type,\n              target: this,\n              originalEvent: e.originalEvent,\n              point: e.point,\n              simulated: e.simulated\n            });\n          }\n        }\n        if (this._isDragging) {\n          var dragPoint = this._dragPoint;\n          this.set(\"x\", dragPoint.x + x);\n          this.set(\"y\", dragPoint.y + y);\n          var type = \"dragged\";\n          if (events.isEnabled(type)) {\n            events.dispatch(type, {\n              type: type,\n              target: this,\n              originalEvent: e.originalEvent,\n              point: e.point,\n              simulated: e.simulated\n            });\n          }\n        } else {\n          if (Math.hypot(x, y) > 5) {\n            this._isDragging = true;\n            this._dragEvent = e;\n            this._dragPoint = {\n              x: this.x(),\n              y: this.y()\n            };\n            var type = \"dragstart\";\n            if (events.isEnabled(type)) {\n              events.dispatch(type, {\n                type: type,\n                target: this,\n                originalEvent: e.originalEvent,\n                point: e.point,\n                simulated: e.simulated\n              });\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(Sprite.prototype, \"_getBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._localBounds = this._display.getLocalBounds();\n    }\n  });\n  /**\r\n   * Returns depth (how deep in the hierachy of the content tree) of this\r\n   * element.\r\n   *\r\n   * @return Depth\r\n   */\n  Object.defineProperty(Sprite.prototype, \"depth\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var self = this.parent;\n      var depth = 0;\n      while (true) {\n        if (self) {\n          ++depth;\n          self = self.parent;\n        } else {\n          return depth;\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Sprite.prototype, \"markDirtySize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._sizeDirty = true;\n      this.markDirty();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Sprite.prototype, \"markDirtyBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var display = this._display;\n      if (this.get(\"isMeasured\")) {\n        this._root._addDirtyBounds(this);\n        display.isMeasured = true;\n        display.invalidateBounds();\n        var parent_3 = this.parent;\n        if (parent_3 && this.get(\"position\") != \"absolute\") {\n          if (parent_3.get(\"width\") == null || parent_3.get(\"height\") == null || parent_3.get(\"layout\")) {\n            parent_3.markDirtyBounds();\n          }\n        }\n        if (this.get(\"focusable\") && this.isFocus()) {\n          this.markDirtyAccessibility();\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Sprite.prototype, \"markDirtyAccessibility\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      //if (this._root.focused(this)) {\n      this._root._invalidateAccessibility(this);\n      //}\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Sprite.prototype, \"markDirtyLayer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      //this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n      this._display.markDirtyLayer(true);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Sprite.prototype, \"markDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.markDirty.call(this);\n      this.markDirtyLayer();\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_updateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var oldBounds = this._adjustedLocalBounds;\n      var newBounds;\n      // if display.visible == false, it still returns bounds\n      if (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n        newBounds = {\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0\n        };\n        this._localBounds = newBounds;\n        this._adjustedLocalBounds = newBounds;\n      } else {\n        this._getBounds();\n        this._fixMinBounds(this._localBounds);\n        this.updatePivotPoint();\n        this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n        newBounds = this._adjustedLocalBounds;\n      }\n      if (!oldBounds || oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom) {\n        var eventType = \"boundschanged\";\n        if (this.events.isEnabled(eventType)) {\n          this.events.dispatch(eventType, {\n            type: eventType,\n            target: this\n          });\n        }\n        if (this.parent) {\n          this.parent.markDirty();\n          this.parent.markDirtyBounds();\n        }\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_fixMinBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bounds) {\n      var minWidth = this.get(\"minWidth\");\n      var minHeight = this.get(\"minHeight\");\n      if ($type.isNumber(minWidth)) {\n        if (bounds.right - bounds.left < minWidth) {\n          bounds.right = bounds.left + minWidth;\n        }\n      }\n      if ($type.isNumber(minHeight)) {\n        if (bounds.bottom - bounds.top < minHeight) {\n          bounds.bottom = bounds.top + minHeight;\n        }\n      }\n      var privateWidth = this.getPrivate(\"width\");\n      var privateHeight = this.getPrivate(\"height\");\n      if ($type.isNumber(privateWidth)) {\n        bounds.right = bounds.left + privateWidth;\n      }\n      if ($type.isNumber(privateHeight)) {\n        bounds.bottom = bounds.top + privateHeight;\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_removeParent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parent) {\n      if (parent) {\n        parent.children.removeValue(this);\n        $array.removeFirst(parent._percentageSizeChildren, this);\n        $array.removeFirst(parent._percentagePositionChildren, this);\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._clearDirty.call(this);\n      this._sizeDirty = false;\n      this._statesHandled = false;\n    }\n  });\n  /**\r\n   * Simulate hover over element.\r\n   */\n  Object.defineProperty(Sprite.prototype, \"hover\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.showTooltip();\n      this._handleOver();\n    }\n  });\n  /**\r\n   * Simulate unhover over element.\r\n   */\n  Object.defineProperty(Sprite.prototype, \"unhover\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.hideTooltip();\n      this._handleOut();\n    }\n  });\n  /**\r\n   * Shows element's [[Tooltip]].\r\n   */\n  Object.defineProperty(Sprite.prototype, \"showTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      var tooltip = this.getTooltip();\n      var tooltipText = this.get(\"tooltipText\");\n      if (tooltipText && tooltip) {\n        var tooltipPosition = this.get(\"tooltipPosition\");\n        var tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n        if (tooltipPosition == \"fixed\" || !point) {\n          point = this._display.toGlobal(tooltipTarget._getTooltipPoint());\n        }\n        tooltip.set(\"pointTo\", point);\n        tooltip.set(\"tooltipTarget\", tooltipTarget);\n        if (!tooltip.get(\"x\")) {\n          tooltip.set(\"x\", point.x);\n        }\n        if (!tooltip.get(\"y\")) {\n          tooltip.set(\"y\", point.y);\n        }\n        tooltip.label.set(\"text\", tooltipText);\n        var dataItem = this.dataItem;\n        if (dataItem) {\n          tooltip.label._setDataItem(dataItem);\n        }\n        tooltip.label.text.markDirtyText();\n        var promise = tooltip.show();\n        this.setPrivateRaw(\"showingTooltip\", true);\n        return promise;\n      }\n    }\n  });\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   */\n  Object.defineProperty(Sprite.prototype, \"hideTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var tooltip = this.getTooltip();\n      if (tooltip) {\n        var promise = tooltip.hide();\n        this.setPrivateRaw(\"showingTooltip\", false);\n        return promise;\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_getTooltipPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var bounds = this._localBounds;\n      if (bounds) {\n        var x = 0;\n        var y = 0;\n        if (!this.get(\"isMeasured\")) {\n          x = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n          y = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n        } else {\n          x = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n          y = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n        }\n        return {\n          x: x,\n          y: y\n        };\n      }\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n  });\n  /**\r\n   * Returns [[Tooltip]] used for this element.\r\n   *\r\n   * @return Tooltip\r\n   */\n  Object.defineProperty(Sprite.prototype, \"getTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var tooltip = this.get(\"tooltip\");\n      if (!tooltip) {\n        var parent_4 = this.parent;\n        if (parent_4) {\n          return parent_4.getTooltip();\n        }\n      } else {\n        return tooltip;\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_updatePosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var parent = this.parent;\n      var dx = this.get(\"dx\", 0);\n      var dy = this.get(\"dy\", 0);\n      var x = this.get(\"x\");\n      var _x = this.getPrivate(\"x\");\n      var xx = 0;\n      var yy = 0;\n      var position = this.get(\"position\");\n      if (x instanceof Percent) {\n        if (parent) {\n          x = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n        } else {\n          x = 0;\n        }\n      }\n      if ($type.isNumber(x)) {\n        xx = x + dx;\n      } else {\n        if (_x != null) {\n          xx = _x;\n        } else if (parent) {\n          if (position == \"relative\") {\n            xx = parent.get(\"paddingLeft\", 0) + dx;\n          }\n        }\n      }\n      var y = this.get(\"y\");\n      var _y = this.getPrivate(\"y\");\n      if (y instanceof Percent) {\n        if (parent) {\n          y = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n        } else {\n          y = 0;\n        }\n      }\n      if ($type.isNumber(y)) {\n        yy = y + dy;\n      } else {\n        if (_y != null) {\n          yy = _y;\n        } else if (parent) {\n          if (position == \"relative\") {\n            yy = parent.get(\"paddingTop\", 0) + dy;\n          }\n        }\n      }\n      var display = this._display;\n      if (display.x != xx || display.y != yy) {\n        display.invalidateBounds();\n        display.x = xx;\n        display.y = yy;\n        var eventType = \"positionchanged\";\n        if (this.events.isEnabled(eventType)) {\n          this.events.dispatch(eventType, {\n            type: eventType,\n            target: this\n          });\n        }\n      }\n      // Update tooltip position together with the Sprite\n      if (this.getPrivate(\"showingTooltip\")) {\n        this.showTooltip();\n      }\n    }\n  });\n  /**\r\n   * Returns element's actual X position in pixels.\r\n   *\r\n   * @return X (px)\r\n   */\n  Object.defineProperty(Sprite.prototype, \"x\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var x = this.get(\"x\");\n      var _x = this.getPrivate(\"x\");\n      var parent = this.parent;\n      if (parent) {\n        if (x instanceof Percent) {\n          return $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n        } else {\n          if (!$type.isNumber(x)) {\n            if (_x != null) {\n              return _x;\n            } else {\n              return parent.get(\"paddingLeft\", this._display.x);\n            }\n          } else {\n            return x;\n          }\n        }\n      }\n      return this._display.x;\n    }\n  });\n  /**\r\n   * Returns element's actual Y position in pixels.\r\n   *\r\n   * @return Y (px)\r\n   */\n  Object.defineProperty(Sprite.prototype, \"y\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _y = this.getPrivate(\"y\");\n      if (_y != null) {\n        return _y;\n      }\n      var y = this.get(\"y\");\n      var parent = this.parent;\n      if (parent) {\n        if (y instanceof Percent) {\n          return $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n        } else {\n          if (!$type.isNumber(y)) {\n            if (_y != null) {\n              return _y;\n            } else {\n              return parent.get(\"paddingTop\", this._display.y);\n            }\n          } else {\n            return y;\n          }\n        }\n      }\n      return this._display.y;\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._dispose.call(this);\n      this._display.dispose();\n      this._removeTemplateField();\n      this._removeParent(this.parent);\n      var tooltip = this.get(\"tooltip\");\n      if (tooltip) {\n        tooltip.dispose();\n      }\n      this.markDirty();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Sprite.prototype, \"adjustedLocalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._fixMinBounds(this._adjustedLocalBounds);\n      return this._adjustedLocalBounds;\n    }\n  });\n  /**\r\n   * Returns local coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n  Object.defineProperty(Sprite.prototype, \"localBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._localBounds;\n    }\n  });\n  /**\r\n   * Returns adjusted local coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n  Object.defineProperty(Sprite.prototype, \"bounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var bounds = this._adjustedLocalBounds;\n      var x = this.x();\n      var y = this.y();\n      return {\n        left: bounds.left + x,\n        right: bounds.right + x,\n        top: bounds.top + y,\n        bottom: bounds.bottom + y\n      };\n    }\n  });\n  /**\r\n   * Returns global coordinates of the element's bounds.\r\n   *\r\n   * @ignore\r\n   * @return Global bounds\r\n   */\n  Object.defineProperty(Sprite.prototype, \"globalBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var bounds = this.localBounds();\n      var display = this._display;\n      var p0 = display.toGlobal({\n        x: bounds.left,\n        y: bounds.top\n      });\n      var p1 = display.toGlobal({\n        x: bounds.right,\n        y: bounds.top\n      });\n      var p2 = display.toGlobal({\n        x: bounds.right,\n        y: bounds.bottom\n      });\n      var p3 = display.toGlobal({\n        x: bounds.left,\n        y: bounds.bottom\n      });\n      return {\n        left: Math.min(p0.x, p1.x, p2.x, p3.x),\n        top: Math.min(p0.y, p1.y, p2.y, p3.y),\n        right: Math.max(p0.x, p1.x, p2.x, p3.x),\n        bottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n      };\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_onShow\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_duration) {}\n  });\n  Object.defineProperty(Sprite.prototype, \"_onHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_duration) {}\n  });\n  /**\r\n   * Plays initial reveal animation regardless if element is currently hidden\r\n   * or visible.\r\n   *\r\n   * @param   duration  Duration of the animation in milliseconds\r\n   * @param   delay     Delay showing of the element by X milliseconds\r\n   * @return            Promise\r\n   */\n  Object.defineProperty(Sprite.prototype, \"appear\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (duration, delay) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, this.hide(0)];\n            case 1:\n              _a.sent();\n              if (delay) {\n                return [2 /*return*/, new Promise(function (success, _error) {\n                  _this.setTimeout(function () {\n                    success(_this.show(duration));\n                  }, delay);\n                })];\n              } else {\n                return [2 /*return*/, this.show(duration)];\n              }\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Shows currently hidden element and returns a `Promise` which completes\r\n   * when all showing animations are finished.\r\n   *\r\n   * ```TypeScript\r\n   * series.show().then(function(ev) {\r\n   *   console.log(\"Series is now fully visible\");\r\n   * })\r\n   * ```\r\n   * ```JavaScript\r\n   * series.show().then(function(ev) {\r\n   *   console.log(\"Series is now fully visible\");\r\n   * })\r\n   * ```\r\n   *\r\n   * @return Promise\r\n   */\n  Object.defineProperty(Sprite.prototype, \"show\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var animations;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!!this._isShowing) return [3 /*break*/, 2];\n              this._isHidden = false;\n              this._isShowing = true;\n              this._isHiding = false;\n              if (this.states.lookup(\"default\").get(\"visible\")) {\n                this.set(\"visible\", true);\n              }\n              this._onShow(duration);\n              animations = this.states.applyAnimate(\"default\", duration);\n              return [4 /*yield*/, waitForAnimations(animations)];\n            case 1:\n              _a.sent();\n              this._isShowing = false;\n              _a.label = 2;\n            case 2:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides the element and returns a `Promise` which completes when all hiding\r\n   * animations are finished.\r\n   *\r\n   * ```TypeScript\r\n   * series.hide().then(function(ev) {\r\n   *   console.log(\"Series finished hiding\");\r\n   * })\r\n   * ```\r\n   * ```JavaScript\r\n   * series.hide().then(function(ev) {\r\n   *   console.log(\"Series finished hiding\");\r\n   * })\r\n   * ```\r\n   *\r\n   * @return Promise\r\n   */\n  Object.defineProperty(Sprite.prototype, \"hide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var state, animations;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!(!this._isHiding && !this._isHidden)) return [3 /*break*/, 2];\n              this._isHiding = true;\n              this._isShowing = false;\n              state = this.states.lookup(\"hidden\");\n              if (!state) {\n                state = this.states.create(\"hidden\", {\n                  \"opacity\": 0,\n                  \"visible\": false\n                });\n              }\n              this._isHidden = true;\n              this._onHide(duration);\n              animations = this.states.applyAnimate(\"hidden\", duration);\n              return [4 /*yield*/, waitForAnimations(animations)];\n            case 1:\n              _a.sent();\n              this._isHiding = false;\n              _a.label = 2;\n            case 2:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently hidden.\r\n   *\r\n   * @return Is hidden?\r\n   */\n  Object.defineProperty(Sprite.prototype, \"isHidden\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._isHidden;\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently animating to a default state.\r\n   *\r\n   * @return Is showing?\r\n   */\n  Object.defineProperty(Sprite.prototype, \"isShowing\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._isShowing;\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently animating to a hidden state.\r\n   *\r\n   * @return Is hiding?\r\n   */\n  Object.defineProperty(Sprite.prototype, \"isHiding\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._isHiding;\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently hovered by a pointer.\r\n   *\r\n   * @return Is hovered?\r\n   */\n  Object.defineProperty(Sprite.prototype, \"isHover\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._display.hovering();\n    }\n  });\n  /**\r\n   * Returns `true` if this element does currently have focus.\r\n   *\r\n   * @return Is focused?\r\n   */\n  Object.defineProperty(Sprite.prototype, \"isFocus\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._root.focused(this);\n    }\n  });\n  /**\r\n   * Returns `true` if this element is currently being dragged.\r\n   *\r\n   * @return Is dragged?\r\n   */\n  Object.defineProperty(Sprite.prototype, \"isDragging\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._isDragging;\n    }\n  });\n  /**\r\n   * Returns width of this element in pixels.\r\n   *\r\n   * @return Width (px)\r\n   */\n  Object.defineProperty(Sprite.prototype, \"width\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var width = this.get(\"width\");\n      var maxWidth = this.get(\"maxWidth\");\n      var minWidth = this.get(\"minWidth\");\n      var privateWidth = this.getPrivate(\"width\");\n      var w = 0;\n      if ($type.isNumber(privateWidth)) {\n        w = privateWidth;\n      } else {\n        if (width == null) {\n          if (this._adjustedLocalBounds) {\n            w = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n          }\n        } else {\n          if (width instanceof Percent) {\n            var parent_5 = this.parent;\n            if (parent_5) {\n              w = parent_5.innerWidth() * width.value;\n            } else {\n              w = this._root.width() * width.value;\n            }\n          } else if ($type.isNumber(width)) {\n            w = width;\n          }\n        }\n      }\n      if ($type.isNumber(minWidth)) {\n        w = Math.max(minWidth, w);\n      }\n      if ($type.isNumber(maxWidth)) {\n        w = Math.min(maxWidth, w);\n      }\n      return w;\n    }\n  });\n  /**\r\n   * Returns maximum allowed width of this element in pixels.\r\n   *\r\n   * @return Maximum width (px)\r\n   */\n  Object.defineProperty(Sprite.prototype, \"maxWidth\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var maxWidth = this.get(\"maxWidth\");\n      if ($type.isNumber(maxWidth)) {\n        return maxWidth;\n      } else {\n        var width = this.get(\"width\");\n        if ($type.isNumber(width)) {\n          return width;\n        }\n      }\n      var parent = this.parent;\n      if (parent) {\n        return parent.innerWidth();\n      }\n      return this._root.width();\n    }\n  });\n  /**\r\n   * Returns maximum allowed height of this element in pixels.\r\n   *\r\n   * @return Maximum height (px)\r\n   */\n  Object.defineProperty(Sprite.prototype, \"maxHeight\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var maxHeight = this.get(\"maxHeight\");\n      if ($type.isNumber(maxHeight)) {\n        return maxHeight;\n      } else {\n        var height = this.get(\"height\");\n        if ($type.isNumber(height)) {\n          return height;\n        }\n      }\n      var parent = this.parent;\n      if (parent) {\n        return parent.innerHeight();\n      }\n      return this._root.height();\n    }\n  });\n  /**\r\n   * Returns height of this element in pixels.\r\n   *\r\n   * @return Height (px)\r\n   */\n  Object.defineProperty(Sprite.prototype, \"height\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var height = this.get(\"height\");\n      var maxHeight = this.get(\"maxHeight\");\n      var minHeight = this.get(\"minHeight\");\n      var privateHeight = this.getPrivate(\"height\");\n      var h = 0;\n      if ($type.isNumber(privateHeight)) {\n        h = privateHeight;\n      } else {\n        if (height == null) {\n          if (this._adjustedLocalBounds) {\n            h = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n          }\n        } else {\n          if (height instanceof Percent) {\n            var parent_6 = this.parent;\n            if (parent_6) {\n              h = parent_6.innerHeight() * height.value;\n            } else {\n              h = this._root.height() * height.value;\n            }\n          } else if ($type.isNumber(height)) {\n            h = height;\n          }\n        }\n      }\n      if ($type.isNumber(minHeight)) {\n        h = Math.max(minHeight, h);\n      }\n      if ($type.isNumber(maxHeight)) {\n        h = Math.min(maxHeight, h);\n      }\n      return h;\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_findStaticTemplate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      // templateField overrides template\n      if (this._templateField && f(this._templateField)) {\n        return this._templateField;\n      }\n      return _super.prototype._findStaticTemplate.call(this, f);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_walkParents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      if (this._parent) {\n        this._walkParent(f);\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_walkParent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      if (this._parent) {\n        this._parent._walkParent(f);\n      }\n      f(this);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"parent\", {\n    /**\r\n     * Parent [[Container]] of this element.\r\n     *\r\n     * @return Parent container\r\n     */\n    get: function () {\n      return this._parent;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Sprite.prototype, \"_setParent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (parent, updateChildren) {\n      if (updateChildren === void 0) {\n        updateChildren = false;\n      }\n      var prevParent = this._parent;\n      if (parent !== prevParent) {\n        this.markDirtyBounds();\n        parent.markDirty();\n        this._parent = parent;\n        if (updateChildren) {\n          this._removeParent(prevParent);\n          if (parent) {\n            this._addPercentageSizeChildren();\n            this._addPercentagePositionChildren();\n          }\n        }\n        this.markDirtyPosition();\n        this._applyThemes();\n      }\n    }\n  });\n  /**\r\n   * Returns an instance of [[NumberFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return NumberFormatter instace\r\n   */\n  Object.defineProperty(Sprite.prototype, \"getNumberFormatter\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.get(\"numberFormatter\", this._root.numberFormatter);\n    }\n  });\n  /**\r\n   * Returns an instance of [[DateFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return DateFormatter instace\r\n   */\n  Object.defineProperty(Sprite.prototype, \"getDateFormatter\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.get(\"dateFormatter\", this._root.dateFormatter);\n    }\n  });\n  /**\r\n   * Returns an instance of [[DurationFormatter]] used in this element.\r\n   *\r\n   * If this element does not have it set, global one form [[Root]] is used.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\r\n   * @return DurationFormatter instace\r\n   */\n  Object.defineProperty(Sprite.prototype, \"getDurationFormatter\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.get(\"durationFormatter\", this._root.durationFormatter);\n    }\n  });\n  /**\r\n   * Converts X/Y coordinate within this element to a global coordinate.\r\n   *\r\n   * @param  point  Local coordinate\r\n   * @return        Global coordinate\r\n   * @ignore\r\n   */\n  Object.defineProperty(Sprite.prototype, \"toGlobal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this._display.toGlobal(point);\n    }\n  });\n  /**\r\n   * Converts global X/Y coordinate to a coordinate within this element.\r\n   *\r\n   * @param  point  Global coordinate\r\n   * @return        Local coordinate\r\n   * @ignore\r\n   */\n  Object.defineProperty(Sprite.prototype, \"toLocal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this._display.toLocal(point);\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_getDownPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var id = this._getDownPointId();\n      if (id) {\n        return this._downPoints[id];\n      }\n    }\n  });\n  Object.defineProperty(Sprite.prototype, \"_getDownPointId\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this._downPoints) {\n        return $object.keysOrdered(this._downPoints, function (a, b) {\n          if (a > b) {\n            return 1;\n          }\n          if (a < b) {\n            return -1;\n          }\n          return 0;\n        })[0];\n      }\n    }\n  });\n  /**\r\n   * Moves sprite to the end of the parent's children array.\r\n   *\r\n   * Depending on `layout` setting of the parten container, it may effect the\r\n   * positioning or overlapping order of the elements.\r\n   */\n  Object.defineProperty(Sprite.prototype, \"toFront\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var parent = this.parent;\n      if (parent) {\n        parent.children.moveValue(this, parent.children.length - 1);\n      }\n    }\n  });\n  /**\r\n   * Moves sprite to the beginning of the parent's children array.\r\n   *\r\n   * Depending on `layout` setting of the parten container, it may effect the\r\n   * positioning or overlapping order of the elements.\r\n   */\n  Object.defineProperty(Sprite.prototype, \"toBack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var parent = this.parent;\n      if (parent) {\n        parent.children.moveValue(this, 0);\n      }\n    }\n  });\n  Object.defineProperty(Sprite, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Sprite\"\n  });\n  Object.defineProperty(Sprite, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Entity.classNames.concat([Sprite.className])\n  });\n  return Sprite;\n}(Entity);\nexport { Sprite };","map":{"version":3,"names":["Entity","Template","Percent","EventDispatcher","MultiDisposer","CounterDisposer","waitForAnimations","$utils","$array","$type","$object","SpriteEventDispatcher","_super","__extends","sprite","_this","call","Object","defineProperty","_sprite","value","key","event","type","originalEvent","point","simulated","native","target","dispatch","set","_display","interactive","events","_rendererDisposers","undefined","disposer_1","on","e","dispose","increment","once","callback","context","shouldClone","info","prototype","_on","rendererEvent","RENDERER_EVENTS","disposer","_onRenderer","_dispatchParents","old","parent","dispatchParents","click","isEnabled","isDragging","_hasMoved","_makePointerEvent","rightclick","middleclick","dblclick","pointerover","pointerout","pointerdown","pointerup","globalpointerup","globalpointermove","wheel","Sprite","apply","arguments","left","right","top","bottom","setPrivateRaw","_afterNew","_markDirtyKey","markDirtyBounds","_addPercentagePositionChildren","markDirtyPosition","_markDirtyPrivateKey","_templateField","_removeObjectTemplate","template","field","get","dataItem","dataContext","new","_removeTemplateField","_setObjectTemplate","_applyTemplates","oldDataItem","_dataItem","_processTemplateField","eventType","newDataItem","parent_1","_parent","_setDataItem","pushOne","_percentageSizeChildren","removeFirst","_percentagePositionChildren","_root","_addDirtyPosition","bounds","_localBounds","centerX","pivot","x","relativeToValue","centerY","y","_beforeChanged","isDirty","previous","_prevSettings","tooltip","setLayer","markDirtyLayer","tooltipMoveDp","_tooltipMoveDp","tooltipPointerDp","_tooltipPointerDp","showTooltip","_statesHandled","states","applyAnimate","isHidden","markDirtyAccessibility","_changed","display","draggable","_dragDp","ev","dragStart","dragMove","dragStop","tooltipText","_tooltipDp","hideTooltip","toggleKey_1","_toggleDp","_isDragging","_handleStates","alpha","Math","max","angle","scale","updatePivotPoint","isPrivateDirty","getPrivate","visible","_addPercentageSizeChildren","parent_2","markDirty","_prevWidth","_sizeDirty","_updateSize","wheelable","_registerTabindexOrder","_unregisterTabindexOrder","filter","cursorOverStyle","_focusDp","exportable","events_1","_hoverDp","isTouchEvent","setTimeout","_handleOver","_handleOut","_isDown","_handleUp","_handleDown","_dragEvent","stopParentDispatch","_dragPoint","lookup","isHover","_downPoint","pointerId","getPointerId","_downPoints","keys","length","downPoint","abs","dragEvent","dragPoint","hypot","getLocalBounds","self","depth","_addDirtyBounds","isMeasured","invalidateBounds","parent_3","isFocus","_invalidateAccessibility","oldBounds","_adjustedLocalBounds","newBounds","_getBounds","_fixMinBounds","getAdjustedBounds","minWidth","minHeight","isNumber","privateWidth","privateHeight","children","removeValue","_clearDirty","getTooltip","tooltipPosition","tooltipTarget","toGlobal","_getTooltipPoint","label","text","markDirtyText","promise","show","hide","width","height","parent_4","dx","dy","_x","xx","yy","position","innerWidth","_y","innerHeight","_dispose","_removeParent","localBounds","p0","p1","p2","p3","min","_duration","duration","delay","_a","sent","Promise","success","_error","_isShowing","_isHidden","_isHiding","_onShow","animations","state","create","_onHide","hovering","focused","maxWidth","w","parent_5","maxHeight","h","parent_6","f","_findStaticTemplate","_walkParent","updateChildren","prevParent","_applyThemes","numberFormatter","dateFormatter","durationFormatter","toLocal","id","_getDownPointId","keysOrdered","a","b","moveValue","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/Sprite.ts"],"sourcesContent":["import type { IDisplayObject, IRendererEvents, IRendererEvent, IPointerEvent } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Container } from \"./Container\";\nimport type { IAccessibilitySettings } from \"../util/Accessibility\";\nimport type { NumberFormatter } from \"../util/NumberFormatter\";\nimport type { DateFormatter } from \"../util/DateFormatter\";\nimport type { DurationFormatter } from \"../util/DurationFormatter\";\nimport type { DataItem, IComponentDataItem } from \"./Component\";\nimport type { Tooltip } from \"./Tooltip\";\nimport type { Graphics } from \"./Graphics\";\nimport type { IPoint } from \"../util/IPoint\";\nimport type { ListTemplate } from \"../util/List\";\n\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../util/Entity\";\nimport { Template } from \"../util/Template\";\nimport { Percent } from \"../util/Percent\";\nimport { EventDispatcher, Events, EventListener } from \"../util/EventDispatcher\";\nimport { IDisposer, MultiDisposer, CounterDisposer } from \"../util/Disposer\";\nimport { waitForAnimations } from \"../util/Animation\";\n\nimport * as $utils from \"../util/Utils\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\nimport * as $object from \"../util/Object\";\n//import { populateString } from \"../util/PopulateString\";\n\n\n/**\n * An [[EventDispatcher]] for [[Sprite]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/events/} for more info\n */\nclass SpriteEventDispatcher<Target, E extends Events<Target, ISpriteEvents>> extends EventDispatcher<E> {\n\tprotected static RENDERER_EVENTS: { [K in keyof IRendererEvents]?: <E extends Events<Sprite, ISpriteEvents>>(this: SpriteEventDispatcher<Sprite, E>, event: IRendererEvents[K]) => void } = {\n\t\t\"click\": function(event) {\n\t\t\tif (this.isEnabled(\"click\") && !this._sprite.isDragging() && !this._sprite._hasMoved(this._makePointerEvent(\"click\", event))) {\n\t\t\t\tthis.dispatch(\"click\", this._makePointerEvent(\"click\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"rightclick\": function(event) {\n\t\t\tif (this.isEnabled(\"rightclick\")) {\n\t\t\t\tthis.dispatch(\"rightclick\", this._makePointerEvent(\"rightclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"middleclick\": function(event) {\n\t\t\tif (this.isEnabled(\"middleclick\")) {\n\t\t\t\tthis.dispatch(\"middleclick\", this._makePointerEvent(\"middleclick\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"dblclick\": function(event) {\n\t\t\tthis.dispatchParents(\"dblclick\", this._makePointerEvent(\"dblclick\", event));\n\t\t},\n\n\t\t\"pointerover\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerover\")) {\n\t\t\t\tthis.dispatch(\"pointerover\", this._makePointerEvent(\"pointerover\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerout\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerout\")) {\n\t\t\t\tthis.dispatch(\"pointerout\", this._makePointerEvent(\"pointerout\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"pointerdown\": function(event) {\n\t\t\tthis.dispatchParents(\"pointerdown\", this._makePointerEvent(\"pointerdown\", event));\n\t\t},\n\n\t\t\"pointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"pointerup\")) {\n\t\t\t\tthis.dispatch(\"pointerup\", this._makePointerEvent(\"pointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointerup\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointerup\")) {\n\t\t\t\tthis.dispatch(\"globalpointerup\", this._makePointerEvent(\"globalpointerup\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"globalpointermove\": function(event) {\n\t\t\tif (this.isEnabled(\"globalpointermove\")) {\n\t\t\t\tthis.dispatch(\"globalpointermove\", this._makePointerEvent(\"globalpointermove\", event));\n\t\t\t}\n\t\t},\n\n\t\t\"wheel\": function(event) {\n\t\t\tif (this.isEnabled(\"wheel\")) {\n\t\t\t\tthis.dispatch(\"wheel\", {\n\t\t\t\t\ttype: \"wheel\",\n\t\t\t\t\ttarget: this._sprite,\n\t\t\t\t\toriginalEvent: event.event,\n\t\t\t\t\tpoint: event.point,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t};\n\n\tprotected _sprite: Sprite;\n\n\tprotected _rendererDisposers: { [K in keyof IRendererEvents]?: CounterDisposer } = {};\n\n\tprotected _dispatchParents: boolean = true;\n\n\tconstructor(sprite: Sprite) {\n\t\tsuper();\n\t\tthis._sprite = sprite;\n\t}\n\n\tprotected _makePointerEvent<K extends keyof E>(key: K, event: IRendererEvent<IPointerEvent>): ISpritePointerEvent & { type: K } {\n\t\treturn {\n\t\t\ttype: key,\n\t\t\toriginalEvent: event.event,\n\t\t\tpoint: event.point,\n\t\t\tsimulated: event.simulated,\n\t\t\tnative: event.native,\n\t\t\ttarget: this._sprite\n\t\t};\n\t}\n\n\tprotected _onRenderer<Key extends keyof IRendererEvents>(key: Key, dispatch: (this: this, event: IRendererEvents[Key]) => void): IDisposer {\n\t\t// TODO: is this OK? it'd be good not to require to set this on each individual element\n\t\tthis._sprite.set(\"interactive\", true);\n\t\tthis._sprite._display.interactive = true;\n\n\t\tlet events = this._rendererDisposers[key];\n\n\t\tif (events === undefined) {\n\t\t\tconst disposer = this._sprite._display.on(key, (e) => {\n\t\t\t\tdispatch.call(this, e);\n\t\t\t});\n\n\t\t\tevents = this._rendererDisposers[key] = new CounterDisposer(() => {\n\t\t\t\tdelete this._rendererDisposers[key];\n\t\t\t\tdisposer.dispose();\n\t\t\t});\n\t\t}\n\n\t\treturn events.increment();\n\t}\n\n\tprotected _on<C, Key extends keyof E>(once: boolean, type: Key | null, callback: any, context: C, shouldClone: boolean, dispatch: (type: Key, event: E[Key]) => void): EventListener {\n\t\tconst info = super._on(once, type, callback, context, shouldClone, dispatch);\n\n\t\tconst rendererEvent = (SpriteEventDispatcher.RENDERER_EVENTS as any)[type];\n\t\tif (rendererEvent !== undefined) {\n\t\t\tinfo.disposer = new MultiDisposer([\n\t\t\t\tinfo.disposer,\n\t\t\t\tthis._onRenderer(type as any, rendererEvent),\n\t\t\t]);\n\t\t}\n\n\t\treturn info;\n\t}\n\n\t/**\n\t * Will stop any bubbling up of the event to element's parents.\n\t *\n\t * Should be called in an event handler, e.g.:\n\t *\n\t * ```TypeScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t * ```JavaScript\n\t * element.events.on(\"pointerdown\", function(ev) {\n\t *   // Do something here and prevent from \"pointerdown\" bubbling up\n\t *   // ...\n\t *   ev.target.events.stopParentDispatch();\n\t * });\n\t * ```\n\t */\n\tpublic stopParentDispatch() {\n\t\tthis._dispatchParents = false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dispatchParents<Key extends keyof E>(type: Key, event: E[Key]): void {\n\t\tconst old = this._dispatchParents;\n\n\t\tthis._dispatchParents = true;\n\n\t\ttry {\n\t\t\tthis.dispatch(type, event);\n\n\t\t\tif (this._dispatchParents && this._sprite.parent) {\n\t\t\t\tthis._sprite.parent.events.dispatchParents(type as any, event);\n\t\t\t}\n\n\t\t} finally {\n\t\t\tthis._dispatchParents = old;\n\t\t}\n\t}\n}\n\n\nexport interface ISpriteSettings extends IEntitySettings, IAccessibilitySettings {\n\n\t/**\n\t * X position relative to parent.\n\t */\n\tx?: number | Percent | null;\n\n\t/**\n\t * Y position relative to parent.\n\t */\n\ty?: number | Percent | null;\n\n\t/**\n\t * Element's absolute width in pixels (numeric value) or relative width to\n\t * parent ([[Percent]]);\n\t */\n\twidth?: number | Percent | null;\n\n\t/**\n\t * Element's absolute height in pixels (numeric value) or relative height to\n\t * parent ([[Percent]]);\n\t */\n\theight?: number | Percent | null;\n\n\t/**\n\t * Maximum allowed width in pixels.\n\t */\n\tmaxWidth?: number | null;\n\n\t/**\n\t * Maximum allowed height in pixels.\n\t */\n\tmaxHeight?: number | null;\n\n\t/**\n\t * Minimum allowed width in pixels.\n\t */\n\tminWidth?: number | null;\n\n\t/**\n\t * Minimum allowed height in pixels.\n\t */\n\tminHeight?: number | null;\n\n\t/**\n\t * Opacity. 0 - fully transparent; 1 - fully opaque.\n\t */\n\topacity?: number;\n\n\t/**\n\t * Rotation in degrees.\n\t */\n\trotation?: number;\n\n\t/**\n\t * Scale.\n\t *\n\t * Setting to a value less than 1 will shrink object.\n\t */\n\tscale?: number;\n\n\t/**\n\t * X coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterX?: number | Percent;\n\n\t/**\n\t * Y coordinate of the center of the element relative to itself.\n\t *\n\t * Center coordinates will affect placement as well as rotation pivot point.\n\t */\n\tcenterY?: number | Percent;\n\n\t/**\n\t * Left margin in pixels.\n\t */\n\tmarginLeft?: number;\n\n\t/**\n\t * Right margin in pixels.\n\t */\n\tmarginRight?: number;\n\n\t/**\n\t * Top margin in pixels.\n\t */\n\tmarginTop?: number;\n\n\t/**\n\t * Bottom margin in pixels.\n\t */\n\tmarginBottom?: number;\n\n\t/**\n\t * Is element visible?\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Positioning of the element.\n\t *\n\t * `\"absolute\"` means element will not participate in parent layout scheme,\n\t * and will be positioned solely accoridng its `x` and `y` settings.\n\t */\n\tposition?: \"absolute\" | \"relative\";\n\n\t/**\n\t * Horizontal shift in pixels. Can be negative to shift leftward.\n\t */\n\tdx?: number;\n\n\t/**\n\t * Vertical shift in pixels. Can be negative to shift upward.\n\t */\n\tdy?: number;\n\n\t/**\n\t * Should this element accept user interaction events?\n\t */\n\tinteractive?: boolean;\n\n\t/**\n\t * Text to show in a tooltip when hovered.\n\t */\n\ttooltipText?: string;\n\n\t/**\n\t * Tooltip pointer X coordinate relative to the element itself.\n\t */\n\ttooltipX?: number | Percent;\n\n\t/**\n\t * Tooltip pointer Y coordinate relative to the element itself.\n\t */\n\ttooltipY?: number | Percent;\n\n\t/**\n\t * [[Tooltip]] instance.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * Tooltip position.\n\t */\n\ttooltipPosition?: \"fixed\" | \"pointer\";\n\n\t/**\n\t * If set to `false` element will not be measured and cannot participate in\n\t * layout schemes.\n\t */\n\tisMeasured?: boolean;\n\n\t/**\n\t * Allows binding element's settings to data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/template-fields/} for more info\n\t */\n\ttemplateField?: string;\n\n\t/**\n\t * If set to `true`, user will be able to drag this element. It will also\n\t * disable default drag events over the area of this element.\n\t */\n\tdraggable?: boolean;\n\n\t/**\n\t * If set to `true`, mouse wheel events will be triggered over the element. It\n\t * will also disable page scrolling using mouse wheel when pointer is over\n\t * the element.\n\t */\n\twheelable?: boolean;\n\n\t/**\n\t * An instance of [[NumberFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tnumberFormatter?: NumberFormatter | undefined;\n\n\t/**\n\t * An instance of [[DateFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdateFormatter?: DateFormatter | undefined;\n\n\t/**\n\t * An instance of [[DurationFormatter]] that should be used instead of global\n\t * formatter object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t */\n\tdurationFormatter?: DurationFormatter | undefined;\n\n\t/**\n\t * If set, element will toggle specified boolean setting between `true` and\n\t * `false` when clicked/touched.\n\t */\n\ttoggleKey?: \"disabled\" | \"active\" | \"none\" | undefined;\n\n\t/**\n\t * Indicates if element is currently active.\n\t */\n\tactive?: boolean;\n\n\t/**\n\t * Indicates if element is disabled.\n\t */\n\tdisabled?: boolean;\n\n\t/**\n\t * An SVG filter to apply to the element.\n\t *\n\t * IMPORTANT: SVG filters are not supported in some browsers, e.g. Safari.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter} for more info\n\t * @ignore todo: figure out if we still need this\n\t */\n\tfilter?: string;\n\n\t/**\n\t * A named mouse cursor style to show when hovering this element.\n\t *\n\t * @see {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor} for more info\n\t */\n\tcursorOverStyle?: string;\n\n\t/**\n\t * If set to `false` this element will not appear in exported snapshots of\n\t * the chart.\n\t */\n\texportable?: boolean;\n\n\t/**\n\t * Numeric layer to put element in.\n\t *\n\t * Elements with higher number will appear in front of the ones with lower\n\t * numer.\n\t *\n\t * If not set, will inherit layer from its ascendants.\n\t */\n\tlayer?: number;\n\n\t/**\n\t * If set to `true` the element will be hidden regardless of `visible` or\n\t * even if `show()` is called.\n\t */\n\tforceHidden?: boolean;\n\n}\n\nexport interface ISpritePrivate extends IEntityPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\ty?: number;\n\n\t/**\n\t * @ignore\n\t */\n\twidth?: number;\n\n\t/**\n\t * @ignore\n\t */\n\theight?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Is element currently showing a tooltip?\n\t */\n\tshowingTooltip?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\ttouchHovering?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tfocusElement?: HTMLDivElement;\n\n\t/**\n\t * An element tooltip should inherit its colors from.\n\t */\n\ttooltipTarget?: Graphics;\n\n\t/**\n\t * @ignore\n\t */\n\tlist?: ListTemplate<Sprite>;\n\n}\n\n/**\n * An interface defining event objects that originate from pinter interactions.\n */\nexport interface ISpritePointerEvent {\n\n\t/**\n\t * Original event object that caused the interaction, e.g. [[MouseEvent]].\n\t */\n\toriginalEvent: IPointerEvent;\n\n\t/**\n\t * A point where event originated.\n\t */\n\tpoint: IPoint;\n\n\t/**\n\t * Is it a simulated event, e.g. if the event was generated by code rather\n\t * then actual user interaction.\n\t */\n\tsimulated: boolean;\n\n\t/**\n\t * Whether event originated in chart's container or its children.\n\t */\n\tnative?: boolean;\n\n\t/**\n\t * The element on which the event occurred.\n\t */\n\ttarget: Sprite;\n\n}\n\nexport interface ISpriteEvents extends IEntityEvents {\n\n\t/**\n\t * Invoked when element's data item changes.\n\t */\n\tdataitemchanged: {\n\t\toldDataItem: DataItem<IComponentDataItem> | undefined,\n\t\tnewDataItem: DataItem<IComponentDataItem> | undefined\n\t};\n\n\t/**\n\t * Invoked when element's position (X/Y) changes.\n\t */\n\tpositionchanged: {};\n\n\t/**\n\t * Invoked when element's bounds change due to any manipulation to it.\n\t */\n\tboundschanged: {};\n\n\t/**\n\t * Invoked when element dragging starts.\n\t */\n\tdragstart: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element dragging stops.\n\t */\n\tdragstop: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element ois being dragged.\n\t */\n\tdragged: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked or tapped.\n\t */\n\tclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked width the right mouse button.\n\t */\n\trightclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is clicked with the middle mouse button.\n\t */\n\tmiddleclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when element is doubleclicked or tapped twice quickly.\n\t */\n\tdblclick: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves over the element.\n\t */\n\tpointerover: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer moves outside the element.\n\t */\n\tpointerout: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is pressed or touch starts over the element.\n\t */\n\tpointerdown: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops over the element.\n\t */\n\tpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer button is released or touch stops in the window, even\n\t * outside of the element or even chart area.\n\t */\n\tglobalpointerup: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when pointer is moving anywhere in the window, even outside of the\n\t * element or even chart area.\n\t */\n\tglobalpointermove: ISpritePointerEvent;\n\n\t/**\n\t * Invoked when mouse wheel is spinned while pointer is over the element.\n\t */\n\twheel: {\n\t\toriginalEvent: WheelEvent;\n\t\tpoint: IPoint;\n\t};\n\n\t/**\n\t * Invoked when element gains focus.\n\t */\n\tfocus: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n\t/**\n\t * Invoked when element loses focus.\n\t */\n\tblur: {\n\t\toriginalEvent: FocusEvent;\n\t\ttarget: Sprite;\n\t};\n\n}\n\n/**\n * A base class for all visual elements.\n *\n * @important\n */\nexport abstract class Sprite extends Entity {\n\tdeclare public _settings: ISpriteSettings;\n\tdeclare public _privateSettings: ISpritePrivate;\n\tdeclare public _events: ISpriteEvents;\n\n\tdeclare public events: SpriteEventDispatcher<this, Events<this, this[\"_events\"]>>;\n\n\tpublic abstract _display: IDisplayObject;\n\n\tprotected _adjustedLocalBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _localBounds: IBounds = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tpublic static className: string = \"Sprite\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Sprite.className]);\n\n\tpublic _parent: Container | undefined;\n\tprotected _dataItem: DataItem<IComponentDataItem> | undefined;\n\n\tprotected _templateField: Template<this> | undefined;\n\n\tprotected _sizeDirty: boolean = false;\n\n\t// Will be true only when dragging\n\tprotected _isDragging: boolean = false;\n\n\t// The event when the dragging starts\n\tprotected _dragEvent: ISpritePointerEvent | undefined;\n\n\t// The position when dragging starts\n\tprotected _dragPoint: IPoint | undefined;\n\n\tprotected _isHidden: boolean = false;\n\n\tprotected _isShowing: boolean = false;\n\n\tprotected _isHiding: boolean = false;\n\n\tprotected _isDown: boolean = false;\n\tprotected _downPoint: IPoint | undefined;\n\n\tpublic _downPoints: { [index: number]: IPoint } = {};\n\n\tpublic _toggleDp: IDisposer | undefined;\n\n\tprotected _dragDp: MultiDisposer | undefined;\n\n\tprotected _tooltipDp: MultiDisposer | undefined;\n\n\tprotected _hoverDp: MultiDisposer | undefined;\n\n\tprotected _focusDp: MultiDisposer | undefined;\n\n\tprotected _tooltipMoveDp: IDisposer | undefined;\n\n\tprotected _tooltipPointerDp: MultiDisposer | undefined;\n\n\tprotected _statesHandled: boolean = false;\n\n\tprotected _afterNew() {\n\t\tthis.setPrivateRaw(\"visible\", true);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _markDirtyKey<Key extends keyof this[\"_settings\"]>(key: Key) {\n\t\tsuper._markDirtyKey(key);\n\t\tif (key == \"x\" || key == \"y\" || key == \"dx\" || key == \"dy\") {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentagePositionChildren();\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tpublic _markDirtyPrivateKey<Key extends keyof this[\"_privateSettings\"]>(key: Key) {\n\t\tsuper._markDirtyPrivateKey(key);\n\t\tif (key == \"x\" || key == \"y\") {\n\t\t\tthis.markDirtyPosition();\n\t\t}\n\t}\n\n\tprotected _removeTemplateField(): void {\n\t\tif (this._templateField) {\n\t\t\tthis._templateField._removeObjectTemplate(this);\n\t\t}\n\t}\n\n\tprotected _createEvents(): SpriteEventDispatcher<this, Events<this, this[\"_events\"]>> {\n\t\treturn new SpriteEventDispatcher(this);\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tlet template;\n\n\t\tconst field = this.get(\"templateField\");\n\n\t\tif (field) {\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\tconst context = dataItem.dataContext;\n\t\t\t\tif (context) {\n\t\t\t\t\ttemplate = (context as any)[field];\n\n\t\t\t\t\tif (!(template instanceof Template) && template) {\n\t\t\t\t\t\ttemplate = Template.new(template);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._templateField !== template) {\n\t\t\tthis._removeTemplateField();\n\n\t\t\tthis._templateField = template;\n\n\t\t\tif (template) {\n\t\t\t\ttemplate._setObjectTemplate(this);\n\t\t\t}\n\n\t\t\tthis._applyTemplates();\n\t\t}\n\t}\n\n\t// TODO change this to run before the element is added to the parent, so that way\n\t//      it doesn't need to apply the themes twice\n\tpublic _setDataItem(dataItem?: DataItem<IComponentDataItem>): void {\n\t\tconst oldDataItem = this._dataItem\n\t\tthis._dataItem = dataItem;\n\t\tthis._processTemplateField();\n\t\tconst eventType = \"dataitemchanged\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, {\n\t\t\t\ttype: eventType,\n\t\t\t\ttarget: this,\n\t\t\t\toldDataItem: oldDataItem,\n\t\t\t\tnewDataItem: dataItem\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * A [[DataItem]] used for this element.\n\t *\n\t * NOTE: data item is being assigned automatically in most cases where it\n\t * matters. Use this accessor to set data item only if you know what you're\n\t * doing.\n\t * \n\t * @param  value  Data item\n\t */\n\tpublic set dataItem(value: DataItem<IComponentDataItem> | undefined) {\n\t\tthis._setDataItem(value);\n\t}\n\n\t/**\n\t * @return DataItem\n\t */\n\tpublic get dataItem(): DataItem<IComponentDataItem> | undefined {\n\t\tif (this._dataItem) {\n\t\t\treturn this._dataItem;\n\n\t\t} else {\n\t\t\tlet parent = this._parent;\n\n\t\t\twhile (parent) {\n\t\t\t\tif (parent._dataItem) {\n\t\t\t\t\treturn parent._dataItem;\n\n\t\t\t\t} else {\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentageSizeChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"width\") instanceof Percent || this.get(\"height\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentageSizeChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _addPercentagePositionChildren() {\n\t\tlet parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (this.get(\"x\") instanceof Percent || this.get(\"y\") instanceof Percent) {\n\t\t\t\t$array.pushOne(parent._percentagePositionChildren, this);\n\t\t\t} else {\n\t\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyPosition() {\n\t\tthis._root._addDirtyPosition(this);\n\t}\n\n\tprotected updatePivotPoint() {\n\t\tconst bounds = this._localBounds;\n\t\tif (bounds) {\n\t\t\tconst centerX = this.get(\"centerX\");\n\t\t\tif (centerX != null) {\n\t\t\t\tthis._display.pivot.x = bounds.left + $utils.relativeToValue(centerX!, bounds.right - bounds.left);\n\t\t\t}\n\n\t\t\tconst centerY = this.get(\"centerY\");\n\t\t\tif (centerY != null) {\n\t\t\t\tthis._display.pivot.y = bounds.top + $utils.relativeToValue(centerY!, bounds.bottom - bounds.top);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst previous = this._prevSettings.tooltip;\n\t\t\tif (previous) {\n\t\t\t\tprevious.dispose();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"layer\")) {\n\t\t\tthis._display.setLayer(this.get(\"layer\"));\n\t\t\tthis.markDirtyLayer();\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipPosition\")) {\n\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\tif (tooltipMoveDp) {\n\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t}\n\n\t\t\tconst tooltipPointerDp = this._tooltipPointerDp;\n\t\t\tif (tooltipPointerDp) {\n\t\t\t\ttooltipPointerDp.dispose();\n\t\t\t\tthis._tooltipPointerDp = undefined;\n\t\t\t}\n\n\t\t\tif (this.get(\"tooltipPosition\") == \"pointer\") {\n\t\t\t\tthis._tooltipPointerDp = new MultiDisposer([\n\t\t\t\t\tthis.events.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._tooltipMoveDp = this.events.on(\"globalpointermove\", (e) => {\n\t\t\t\t\t\t\tthis.showTooltip(e.point);\n\t\t\t\t\t\t})\n\t\t\t\t\t}),\n\n\t\t\t\t\tthis.events.on(\"pointerout\", () => {\n\t\t\t\t\t\tconst tooltipMoveDp = this._tooltipMoveDp;\n\t\t\t\t\t\tif (tooltipMoveDp) {\n\t\t\t\t\t\t\ttooltipMoveDp.dispose();\n\t\t\t\t\t\t\tthis._tooltipMoveDp = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t})])\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleStates() {\n\t\tif (!this._statesHandled) {\n\t\t\tif (this.isDirty(\"active\")) {\n\t\t\t\tif (this.get(\"active\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"disabled\")) {\n\t\t\t\tif (this.get(\"disabled\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t\t\tthis.set(\"ariaChecked\", false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!this.isHidden()) {\n\t\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t\t}\n\t\t\t\t\tthis.set(\"ariaChecked\", true);\n\t\t\t\t}\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t\tthis._statesHandled = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst display = this._display;\n\t\tconst events = this.events;\n\n\t\tif (this.isDirty(\"draggable\")) {\n\t\t\tconst draggable = this.get(\"draggable\");\n\t\t\tif (draggable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\n\t\t\t\tthis._dragDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"pointerdown\", (ev) => {\n\t\t\t\t\t\tthis.dragStart(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointermove\", (ev) => {\n\t\t\t\t\t\tthis.dragMove(ev);\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tthis.dragStop(ev);\n\t\t\t\t\t})])\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._dragDp) {\n\t\t\t\t\tthis._dragDp.dispose();\n\t\t\t\t\tthis._dragDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"tooltipText\")) {\n\t\t\tconst tooltipText = this.get(\"tooltipText\");\n\t\t\tif (tooltipText) {\n\t\t\t\tthis._tooltipDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis.showTooltip()\n\t\t\t\t\t}),\n\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\tthis.hideTooltip()\n\t\t\t\t\t})])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._tooltipDp) {\n\t\t\t\t\tthis._tooltipDp.dispose();\n\t\t\t\t\tthis._tooltipDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"toggleKey\")) {\n\t\t\tlet toggleKey = this.get(\"toggleKey\") as any;\n\t\t\tif (toggleKey && toggleKey != \"none\") {\n\t\t\t\tthis._toggleDp = events.on(\"click\", () => {\n\t\t\t\t\tif (!this._isDragging) {\n\t\t\t\t\t\tthis.set(toggleKey, !this.get(toggleKey));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._toggleDp) {\n\t\t\t\t\tthis._toggleDp.dispose();\n\t\t\t\t\tthis._toggleDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleStates();\n\n\t\tif (this.isDirty(\"opacity\")) {\n\t\t\tdisplay.alpha = Math.max(0, this.get(\"opacity\", 1));\n\t\t}\n\n\t\tif (this.isDirty(\"rotation\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.angle = this.get(\"rotation\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"scale\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tdisplay.scale = this.get(\"scale\", 0);\n\t\t}\n\n\t\tif (this.isDirty(\"centerX\") || this.isDirty(\"centerY\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis.updatePivotPoint();\n\t\t}\n\n\t\tif (this.isDirty(\"visible\") || this.isPrivateDirty(\"visible\") || this.isDirty(\"forceHidden\")) {\n\t\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\t\tdisplay.visible = false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.visible = true;\n\t\t\t}\n\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"width\") || this.isDirty(\"height\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._addPercentageSizeChildren();\n\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tif ((this.isDirty(\"width\") && this.get(\"width\") instanceof Percent) || (this.isDirty(\"height\") && this.get(\"height\") instanceof Percent)) {\n\t\t\t\t\tparent.markDirty();\n\t\t\t\t\tparent._prevWidth = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"maxWidth\") || this.isDirty(\"maxHeight\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tthis._sizeDirty = true;\n\t\t}\n\n\t\tif (this._sizeDirty) {\n\t\t\tthis._updateSize();\n\t\t}\n\n\t\tif (this.isDirty(\"wheelable\")) {\n\t\t\tconst wheelable = this.get(\"wheelable\");\n\t\t\tif (wheelable) {\n\t\t\t\tthis.set(\"interactive\", true);\n\t\t\t}\n\t\t\tdisplay.wheelable = wheelable ? true : false;\n\t\t}\n\n\t\t// Accessibility\n\t\tif (this.isDirty(\"tabindexOrder\") || this.isDirty(\"focusableGroup\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"filter\")) {\n\t\t\t//this.markDirtyBounds();\n\t\t\tdisplay.filter = this.get(\"filter\");\n\t\t}\n\n\t\tif (this.isDirty(\"cursorOverStyle\")) {\n\t\t\tdisplay.cursorOverStyle = this.get(\"cursorOverStyle\");\n\t\t}\n\n\t\tif (this.isDirty(\"hoverOnFocus\")) {\n\t\t\tif (this.get(\"hoverOnFocus\")) {\n\t\t\t\tthis._focusDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"focus\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"blur\", () => {\n\t\t\t\t\t\t// TODO: proper hover, not just tooltip\n\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t})])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._focusDp) {\n\t\t\t\t\tthis._focusDp.dispose();\n\t\t\t\t\tthis._focusDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"focusable\")) {\n\t\t\tif (this.get(\"focusable\")) {\n\t\t\t\tthis._root._registerTabindexOrder(this);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._root._unregisterTabindexOrder(this);\n\t\t\t}\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"role\") || this.isDirty(\"ariaLive\") || this.isDirty(\"ariaChecked\") || this.isDirty(\"ariaHidden\") || this.isDirty(\"ariaOrientation\") || this.isDirty(\"ariaValueNow\") || this.isDirty(\"ariaValueText\") || this.isDirty(\"ariaLabel\")) {\n\t\t\t// display.accessibility.ariaLabel = populateString(this, this.get(\"ariaLabel\", \"\"));\n\t\t\t// @todo make sure ariaLabel gets populated in Root\n\t\t\tthis.markDirtyAccessibility();\n\t\t}\n\n\t\tif (this.isDirty(\"exportable\")) {\n\t\t\tdisplay.exportable = this.get(\"exportable\");\n\t\t}\n\n\t\tif (this.isDirty(\"interactive\")) {\n\t\t\tconst events = this.events;\n\t\t\tif (this.get(\"interactive\")) {\n\t\t\t\tthis._hoverDp = new MultiDisposer([\n\t\t\t\t\tevents.on(\"click\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (!this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\")) {\n\t\t\t\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", true);\n\t\t\t\t\t\t\t\t}, 10)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"globalpointerup\", (ev) => {\n\t\t\t\t\t\tif ($utils.isTouchEvent(ev.originalEvent)) {\n\t\t\t\t\t\t\tif (this.getPrivate(\"touchHovering\")) {\n\t\t\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t\t\t\tif (this.get(\"tooltipText\")) {\n\t\t\t\t\t\t\t\t\tthis.hideTooltip();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"touchHovering\", false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._isDown) {\n\t\t\t\t\t\t\tthis._handleUp(ev);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//this._isDown = false;\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerover\", () => {\n\t\t\t\t\t\tthis._handleOver();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerout\", () => {\n\t\t\t\t\t\tthis._handleOut();\n\t\t\t\t\t}),\n\n\t\t\t\t\tevents.on(\"pointerdown\", (e) => {\n\t\t\t\t\t\tthis._handleDown(e);\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._hoverDp) {\n\t\t\t\t\tthis._hoverDp.dispose();\n\t\t\t\t\tthis._hoverDp = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStart(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = e;\n\t\tthis.events.stopParentDispatch();\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragStop(e: ISpritePointerEvent) {\n\t\tthis._dragEvent = undefined;\n\t\tthis._dragPoint = undefined;\n\t\tthis.events.stopParentDispatch();\n\n\t\tif (this._isDragging) {\n\t\t\tthis._isDragging = false;\n\n\t\t\tconst type = \"dragstop\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, {\n\t\t\t\t\ttype: type,\n\t\t\t\t\ttarget: this,\n\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\tpoint: e.point,\n\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOver() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"hoverActive\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverActive\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"hoverDisabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"hoverDisabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleOut() {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.states.lookup(\"hover\") || this.states.lookup(\"hoverActive\")) {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleUp(e: ISpritePointerEvent) {\n\t\tif (!this.isHidden()) {\n\t\t\tif (this.get(\"active\") && this.states.lookup(\"active\")) {\n\t\t\t\tthis.states.applyAnimate(\"active\");\n\t\t\t}\n\t\t\telse if (this.get(\"disabled\") && this.states.lookup(\"disabled\")) {\n\t\t\t\tthis.states.applyAnimate(\"disabled\");\n\t\t\t}\n\t\t\telse if (this.states.lookup(\"down\")) {\n\t\t\t\tif (this.isHover()) {\n\t\t\t\t\tthis.states.applyAnimate(\"hover\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.states.applyAnimate(\"default\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._downPoint = undefined;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tdelete this._downPoints[pointerId];\n\n\t\t\tif ($object.keys(this._downPoints).length == 0) {\n\t\t\t\tthis._isDown = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _hasMoved(e: ISpritePointerEvent): boolean {\n\t\t// @todo remove this once migrated to _downPoints\n\t\t// if (this._downPoint) {\n\t\t// \tconst x = Math.abs(this._downPoint.x - e.point.x);\n\t\t// \tconst y = Math.abs(this._downPoint.y - e.point.y);\n\t\t// \treturn (x > 5) || (y > 5);\n\t\t// }\n\n\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\tconst downPoint = this._downPoints[pointerId];\n\t\tif (downPoint) {\n\t\t\tconst x = Math.abs(downPoint.x - e.point.x);\n\t\t\tconst y = Math.abs(downPoint.y - e.point.y);\n\t\t\treturn (x > 5) || (y > 5);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprotected _handleDown(e: ISpritePointerEvent) {\n\t\tif (!this.isHidden() && !this.get(\"disabled\")) {\n\t\t\tif (this.states.lookup(\"down\")) {\n\t\t\t\tthis.states.applyAnimate(\"down\");\n\t\t\t}\n\t\t\tthis._downPoint = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\n\t\t\t// @todo remove this once migrated to _downPoints\n\t\t\tthis._isDown = true;\n\n\t\t\tconst pointerId = $utils.getPointerId(e.originalEvent);\n\t\t\tthis._downPoints[pointerId] = {\n\t\t\t\tx: e.point.x,\n\t\t\t\ty: e.point.y\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t * @todo should this be user-accessible?\n\t */\n\tpublic dragMove(e: ISpritePointerEvent) {\n\t\tlet dragEvent = this._dragEvent;\n\n\t\tif (dragEvent) {\n\t\t\tconst x = e.point.x - dragEvent.point.x;\n\t\t\tconst y = e.point.y - dragEvent.point.y;\n\n\t\t\tconst events = this.events;\n\n\t\t\tif (dragEvent.simulated && !this._isDragging) {\n\t\t\t\tthis._isDragging = true;\n\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\tthis._dragPoint = {\n\t\t\t\t\tx: this.x(),\n\t\t\t\t\ty: this.y()\n\t\t\t\t};\n\n\t\t\t\tconst type = \"dragstart\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._isDragging) {\n\t\t\t\tlet dragPoint = this._dragPoint!;\n\n\t\t\t\tthis.set(\"x\", dragPoint.x + x);\n\t\t\t\tthis.set(\"y\", dragPoint.y + y);\n\n\t\t\t\tconst type = \"dragged\";\n\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\tsimulated: e.simulated,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif (Math.hypot(x, y) > 5) {\n\t\t\t\t\tthis._isDragging = true;\n\t\t\t\t\tthis._dragEvent = e;\n\n\t\t\t\t\tthis._dragPoint = {\n\t\t\t\t\t\tx: this.x(),\n\t\t\t\t\t\ty: this.y()\n\t\t\t\t\t};\n\n\t\t\t\t\tconst type = \"dragstart\";\n\t\t\t\t\tif (events.isEnabled(type)) {\n\t\t\t\t\t\tevents.dispatch(type, {\n\t\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\t\toriginalEvent: e.originalEvent,\n\t\t\t\t\t\t\tpoint: e.point,\n\t\t\t\t\t\t\tsimulated: e.simulated\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\n\t}\n\n\tprotected _getBounds() {\n\t\tthis._localBounds = this._display.getLocalBounds();\n\t}\n\n\t/**\n\t * Returns depth (how deep in the hierachy of the content tree) of this\n\t * element.\n\t *\n\t * @return Depth\n\t */\n\tpublic depth(): number {\n\t\tlet self: Container | undefined = this.parent;\n\t\tlet depth = 0;\n\n\t\twhile (true) {\n\t\t\tif (self) {\n\t\t\t\t++depth;\n\t\t\t\tself = self.parent;\n\n\t\t\t} else {\n\t\t\t\treturn depth;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySize(): void {\n\t\tthis._sizeDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyBounds(): void {\n\t\tconst display = this._display;\n\t\tif (this.get(\"isMeasured\")) {\n\t\t\tthis._root._addDirtyBounds(this);\n\t\t\tdisplay.isMeasured = true;\n\t\t\tdisplay.invalidateBounds();\n\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent && this.get(\"position\") != \"absolute\") {\n\t\t\t\tif (parent.get(\"width\") == null || parent.get(\"height\") == null || parent.get(\"layout\")) {\n\t\t\t\t\tparent.markDirtyBounds();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.get(\"focusable\") && this.isFocus()) {\n\t\t\t\tthis.markDirtyAccessibility();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyAccessibility(): void {\n\t\t//if (this._root.focused(this)) {\n\t\tthis._root._invalidateAccessibility(this);\n\t\t//}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyLayer() {\n\t\t//this._display.markDirtyLayer(this.isDirty(\"opacity\") || this.isDirty(\"visible\")); https://codepen.io/team/amcharts/pen/gOWZPmP <- problems\n\t\tthis._display.markDirtyLayer(true);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty() {\n\t\tsuper.markDirty();\n\t\tthis.markDirtyLayer();\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst oldBounds = this._adjustedLocalBounds;\n\n\t\tlet newBounds: IBounds;\n\n\t\t// if display.visible == false, it still returns bounds\n\t\tif (!this.get(\"visible\") || !this.getPrivate(\"visible\") || this.get(\"forceHidden\")) {\n\t\t\tnewBounds = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t};\n\t\t\tthis._localBounds = newBounds;\n\t\t\tthis._adjustedLocalBounds = newBounds;\n\t\t}\n\t\telse {\n\t\t\tthis._getBounds();\n\t\t\tthis._fixMinBounds(this._localBounds);\n\t\t\tthis.updatePivotPoint();\n\t\t\tthis._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds);\n\t\t\tnewBounds = this._adjustedLocalBounds!;\n\t\t}\n\n\t\tif (!oldBounds || (oldBounds.left !== newBounds.left || oldBounds.top !== newBounds.top || oldBounds.right !== newBounds.right || oldBounds.bottom !== newBounds.bottom)) {\n\t\t\tconst eventType = \"boundschanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t\tif (this.parent) {\n\t\t\t\tthis.parent.markDirty();\n\t\t\t\tthis.parent.markDirtyBounds();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _fixMinBounds(bounds: IBounds) {\n\t\tlet minWidth = this.get(\"minWidth\");\n\t\tlet minHeight = this.get(\"minHeight\");\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tif (bounds.right - bounds.left < minWidth) {\n\t\t\t\tbounds.right = bounds.left + minWidth;\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\tif (bounds.bottom - bounds.top < minHeight) {\n\t\t\t\tbounds.bottom = bounds.top + minHeight;\n\t\t\t}\n\t\t}\n\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tbounds.right = bounds.left + privateWidth;\n\t\t}\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\tbounds.bottom = bounds.top + privateHeight;\n\t\t}\n\t}\n\n\tprotected _removeParent(parent: Container | undefined) {\n\t\tif (parent) {\n\t\t\tparent.children.removeValue(this);\n\t\t\t$array.removeFirst(parent._percentageSizeChildren, this);\n\t\t\t$array.removeFirst(parent._percentagePositionChildren, this);\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._statesHandled = false;\n\t}\n\n\t/**\n\t * Simulate hover over element.\n\t */\n\tpublic hover() {\n\t\tthis.showTooltip();\n\t\tthis._handleOver();\n\t}\n\n\t/**\n\t * Simulate unhover over element.\n\t */\n\tpublic unhover(): void {\n\t\tthis.hideTooltip();\n\t\tthis._handleOut();\n\t}\n\n\t/**\n\t * Shows element's [[Tooltip]].\n\t */\n\tpublic showTooltip(point?: IPoint): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tconst tooltipText = this.get(\"tooltipText\");\n\n\t\tif (tooltipText && tooltip) {\n\t\t\tconst tooltipPosition = this.get(\"tooltipPosition\");\n\t\t\tconst tooltipTarget = this.getPrivate(\"tooltipTarget\", this);\n\n\t\t\tif (tooltipPosition == \"fixed\" || !point) {\n\t\t\t\tpoint = this._display.toGlobal(tooltipTarget._getTooltipPoint());\n\t\t\t}\n\n\t\t\ttooltip.set(\"pointTo\", point);\n\t\t\ttooltip.set(\"tooltipTarget\", tooltipTarget);\n\n\t\t\tif (!tooltip.get(\"x\")) {\n\t\t\t\ttooltip.set(\"x\", point.x);\n\t\t\t}\n\t\t\tif (!tooltip.get(\"y\")) {\n\t\t\t\ttooltip.set(\"y\", point.y);\n\t\t\t}\n\n\t\t\ttooltip.label.set(\"text\", tooltipText);\n\t\t\tconst dataItem = this.dataItem;\n\t\t\tif (dataItem) {\n\t\t\t\ttooltip.label._setDataItem(dataItem);\n\t\t\t}\n\t\t\ttooltip.label.text.markDirtyText();\n\t\t\tconst promise = tooltip.show();\n\t\t\tthis.setPrivateRaw(\"showingTooltip\", true);\n\t\t\treturn promise;\n\t\t}\n\t}\n\n\n\t/**\n\t * Hides element's [[Tooltip]].\n\t */\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip) {\n\t\t\tconst promise = tooltip.hide();\n\t\t\tthis.setPrivateRaw(\"showingTooltip\", false);\n\t\t\treturn promise;\n\t\t}\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst bounds = this._localBounds!;\n\t\tif (bounds) {\n\t\t\tlet x = 0;\n\t\t\tlet y = 0;\n\n\t\t\tif (!this.get(\"isMeasured\")) {\n\t\t\t\tx = $utils.relativeToValue(this.get(\"tooltipX\", 0), this.width());\n\t\t\t\ty = $utils.relativeToValue(this.get(\"tooltipY\", 0), this.height());\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = bounds.left + $utils.relativeToValue(this.get(\"tooltipX\", 0), bounds.right - bounds.left);\n\t\t\t\ty = bounds.top + $utils.relativeToValue(this.get(\"tooltipY\", 0), bounds.bottom - bounds.top);\n\t\t\t}\n\n\t\t\treturn { x, y };\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\t/**\n\t * Returns [[Tooltip]] used for this element.\n\t *\n\t * @return Tooltip\n\t */\n\tpublic getTooltip(): Tooltip | undefined {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (!tooltip) {\n\t\t\tlet parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\treturn parent.getTooltip();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\treturn tooltip;\n\t\t}\n\t}\n\n\tpublic _updatePosition() {\n\n\t\tconst parent = this.parent;\n\n\t\tlet dx = this.get(\"dx\", 0);\n\t\tlet dy = this.get(\"dy\", 0);\n\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tlet xx = 0;\n\t\tlet yy = 0;\n\n\t\tconst position = this.get(\"position\");\n\n\t\tif (x instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\tx = parent.innerWidth() * x.value + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(x)) {\n\t\t\txx = x + dx;\n\t\t}\n\t\telse {\n\t\t\tif (_x != null) {\n\t\t\t\txx = _x;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\txx = parent.get(\"paddingLeft\", 0) + dx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tlet y = this.get(\"y\");\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (y instanceof Percent) {\n\t\t\tif (parent) {\n\t\t\t\ty = parent.innerHeight() * y.value + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\tif ($type.isNumber(y)) {\n\t\t\tyy = y + dy;\n\t\t}\n\t\telse {\n\t\t\tif (_y != null) {\n\t\t\t\tyy = _y;\n\t\t\t}\n\t\t\telse if (parent) {\n\t\t\t\tif (position == \"relative\") {\n\t\t\t\t\tyy = parent.get(\"paddingTop\", 0) + dy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst display = this._display;\n\n\t\tif (display.x != xx || display.y != yy) {\n\t\t\tdisplay.invalidateBounds();\n\t\t\tdisplay.x = xx;\n\t\t\tdisplay.y = yy;\n\n\t\t\tconst eventType = \"positionchanged\";\n\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t}\n\t\t}\n\n\t\t// Update tooltip position together with the Sprite\n\t\tif (this.getPrivate(\"showingTooltip\")) {\n\t\t\tthis.showTooltip();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns element's actual X position in pixels.\n\t *\n\t * @return X (px)\n\t */\n\tpublic x(): number {\n\t\tlet x = this.get(\"x\");\n\t\tlet _x = this.getPrivate(\"x\");\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tif (x instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(x, parent.innerWidth()) + parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(x)) {\n\t\t\t\t\tif (_x != null) {\n\t\t\t\t\t\treturn _x;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingLeft\", this._display.x)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.x;\n\t}\n\n\t/**\n\t * Returns element's actual Y position in pixels.\n\t *\n\t * @return Y (px)\n\t */\n\tpublic y(): number {\n\n\t\tlet _y = this.getPrivate(\"y\");\n\n\t\tif (_y != null) {\n\t\t\treturn _y;\n\t\t}\n\n\t\tlet y = this.get(\"y\");\n\t\tconst parent = this.parent;\n\n\t\tif (parent) {\n\t\t\tif (y instanceof Percent) {\n\t\t\t\treturn $utils.relativeToValue(y, parent.innerHeight()) + parent.get(\"paddingTop\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!$type.isNumber(y)) {\n\t\t\t\t\tif (_y != null) {\n\t\t\t\t\t\treturn _y;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn parent.get(\"paddingTop\", this._display.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this._display.y;\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis._display.dispose();\n\t\tthis._removeTemplateField();\n\t\tthis._removeParent(this.parent);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.dispose();\n\t\t}\n\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic adjustedLocalBounds(): IBounds {\n\t\tthis._fixMinBounds(this._adjustedLocalBounds);\n\t\treturn this._adjustedLocalBounds;\n\t}\n\n\t/**\n\t * Returns local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic localBounds(): IBounds {\n\t\treturn this._localBounds;\n\t}\n\n\t/**\n\t * Returns adjusted local coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic bounds(): IBounds {\n\t\tconst bounds = this._adjustedLocalBounds;\n\t\tconst x = this.x();\n\t\tconst y = this.y();\n\t\treturn { left: bounds.left + x, right: bounds.right + x, top: bounds.top + y, bottom: bounds.bottom + y };\n\t}\n\n\t/**\n\t * Returns global coordinates of the element's bounds.\n\t *\n\t * @ignore\n\t * @return Global bounds\n\t */\n\tpublic globalBounds(): IBounds {\n\t\tconst bounds = this.localBounds();\n\t\tconst display = this._display;\n\n\t\tconst p0 = display.toGlobal({ x: bounds.left, y: bounds.top });\n\t\tconst p1 = display.toGlobal({ x: bounds.right, y: bounds.top });\n\t\tconst p2 = display.toGlobal({ x: bounds.right, y: bounds.bottom });\n\t\tconst p3 = display.toGlobal({ x: bounds.left, y: bounds.bottom });\n\n\t\treturn {\n\t\t\tleft: Math.min(p0.x, p1.x, p2.x, p3.x),\n\t\t\ttop: Math.min(p0.y, p1.y, p2.y, p3.y),\n\t\t\tright: Math.max(p0.x, p1.x, p2.x, p3.x),\n\t\t\tbottom: Math.max(p0.y, p1.y, p2.y, p3.y)\n\t\t}\n\t}\n\n\tprotected _onShow(_duration?: number) {\n\n\t}\n\n\tprotected _onHide(_duration?: number) {\n\n\t}\n\n\t/**\n\t * Plays initial reveal animation regardless if element is currently hidden\n\t * or visible.\n\t *\n\t * @param   duration  Duration of the animation in milliseconds\n\t * @param   delay     Delay showing of the element by X milliseconds\n\t * @return            Promise\n\t */\n\tpublic async appear(duration?: number, delay?: number): Promise<void> {\n\t\tawait this.hide(0);\n\t\tif (delay) {\n\t\t\treturn new Promise<void>((success, _error) => {\n\t\t\t\tthis.setTimeout(() => {\n\t\t\t\t\tsuccess(this.show(duration));\n\t\t\t\t}, delay);\n\t\t\t});\n\n\t\t}\n\t\telse {\n\t\t\treturn this.show(duration);\n\t\t}\n\t}\n\n\t/**\n\t * Shows currently hidden element and returns a `Promise` which completes\n\t * when all showing animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.show().then(function(ev) {\n\t *   console.log(\"Series is now fully visible\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tif (!this._isShowing) {\n\t\t\tthis._isHidden = false;\n\t\t\tthis._isShowing = true;\n\t\t\tthis._isHiding = false;\n\n\t\t\tif (this.states.lookup(\"default\")!.get(\"visible\")) {\n\t\t\t\tthis.set(\"visible\", true);\n\t\t\t}\n\t\t\tthis._onShow(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"default\", duration);\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isShowing = false;\n\t\t}\n\t}\n\n\t/**\n\t * Hides the element and returns a `Promise` which completes when all hiding\n\t * animations are finished.\n\t *\n\t * ```TypeScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t * ```JavaScript\n\t * series.hide().then(function(ev) {\n\t *   console.log(\"Series finished hiding\");\n\t * })\n\t * ```\n\t *\n\t * @return Promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tif (!this._isHiding && !this._isHidden) {\n\t\t\tthis._isHiding = true;\n\t\t\tthis._isShowing = false;\n\t\t\tlet state = this.states.lookup(\"hidden\");\n\t\t\tif (!state) {\n\t\t\t\tstate = this.states.create(\"hidden\", {\n\t\t\t\t\t\"opacity\": 0,\n\t\t\t\t\t\"visible\": false\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._isHidden = true;\n\t\t\tthis._onHide(duration);\n\n\t\t\tconst animations = this.states.applyAnimate(\"hidden\", duration);\n\n\t\t\tawait waitForAnimations(animations);\n\n\t\t\tthis._isHiding = false;\n\t\t}\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hidden.\n\t *\n\t * @return Is hidden?\n\t */\n\tpublic isHidden(): boolean {\n\t\treturn this._isHidden;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a default state.\n\t *\n\t * @return Is showing?\n\t */\n\tpublic isShowing(): boolean {\n\t\treturn this._isShowing;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently animating to a hidden state.\n\t *\n\t * @return Is hiding?\n\t */\n\tpublic isHiding(): boolean {\n\t\treturn this._isHiding;\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently hovered by a pointer.\n\t *\n\t * @return Is hovered?\n\t */\n\tpublic isHover(): boolean {\n\t\treturn this._display.hovering();\n\t}\n\n\t/**\n\t * Returns `true` if this element does currently have focus.\n\t *\n\t * @return Is focused?\n\t */\n\tpublic isFocus(): boolean {\n\t\treturn this._root.focused(this);\n\t}\n\n\t/**\n\t * Returns `true` if this element is currently being dragged.\n\t *\n\t * @return Is dragged?\n\t */\n\tpublic isDragging(): boolean {\n\t\treturn this._isDragging;\n\t}\n\n\t/**\n\t * Returns width of this element in pixels.\n\t *\n\t * @return Width (px)\n\t */\n\tpublic width(): number {\n\t\tlet width = this.get(\"width\");\n\t\tlet maxWidth = this.get(\"maxWidth\");\n\t\tlet minWidth = this.get(\"minWidth\");\n\t\tlet privateWidth = this.getPrivate(\"width\");\n\t\tlet w = 0;\n\n\t\tif ($type.isNumber(privateWidth)) {\n\t\t\tw = privateWidth;\n\t\t}\n\t\telse {\n\t\t\tif (width == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\tw = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tw = parent.innerWidth() * width.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tw = this._root.width() * width.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(width)) {\n\t\t\t\t\tw = width;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minWidth)) {\n\t\t\tw = Math.max(minWidth, w);\n\t\t}\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\tw = Math.min(maxWidth, w);\n\t\t}\n\n\t\treturn w;\n\t}\n\n\t/**\n\t * Returns maximum allowed width of this element in pixels.\n\t *\n\t * @return Maximum width (px)\n\t */\n\tpublic maxWidth(): number {\n\t\tlet maxWidth = this.get(\"maxWidth\");\n\t\tif ($type.isNumber(maxWidth)) {\n\t\t\treturn maxWidth;\n\t\t}\n\t\telse {\n\t\t\tlet width = this.get(\"width\")\n\t\t\tif ($type.isNumber(width)) {\n\t\t\t\treturn width;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerWidth();\n\t\t}\n\t\treturn this._root.width();\n\t}\n\n\t/**\n\t * Returns maximum allowed height of this element in pixels.\n\t *\n\t * @return Maximum height (px)\n\t */\n\tpublic maxHeight(): number {\n\t\tlet maxHeight = this.get(\"maxHeight\");\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\treturn maxHeight;\n\t\t}\n\t\telse {\n\t\t\tlet height = this.get(\"height\")\n\t\t\tif ($type.isNumber(height)) {\n\t\t\t\treturn height;\n\t\t\t}\n\t\t}\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\treturn parent.innerHeight();\n\t\t}\n\t\treturn this._root.height();\n\t}\n\n\t/**\n\t * Returns height of this element in pixels.\n\t *\n\t * @return Height (px)\n\t */\n\tpublic height(): number {\n\t\tlet height = this.get(\"height\");\n\t\tlet maxHeight = this.get(\"maxHeight\");\n\t\tlet minHeight = this.get(\"minHeight\");\n\t\tlet privateHeight = this.getPrivate(\"height\");\n\t\tlet h = 0;\n\n\t\tif ($type.isNumber(privateHeight)) {\n\t\t\th = privateHeight;\n\t\t}\n\t\telse {\n\t\t\tif (height == null) {\n\t\t\t\tif (this._adjustedLocalBounds) {\n\t\t\t\t\th = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\th = parent.innerHeight() * height.value;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\th = this._root.height() * height.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if ($type.isNumber(height)) {\n\t\t\t\t\th = height;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($type.isNumber(minHeight)) {\n\t\t\th = Math.max(minHeight, h);\n\t\t}\n\t\tif ($type.isNumber(maxHeight)) {\n\t\t\th = Math.min(maxHeight, h);\n\t\t}\n\n\t\treturn h;\n\t}\n\n\tprotected _findStaticTemplate(f: (template: Template<this>) => boolean): Template<this> | undefined {\n\t\t// templateField overrides template\n\t\tif (this._templateField && f(this._templateField)) {\n\t\t\treturn this._templateField;\n\t\t}\n\n\t\treturn super._findStaticTemplate(f);\n\t}\n\n\tprotected _walkParents(f: (parent: Entity) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._walkParent(f);\n\t\t}\n\t}\n\n\tprotected _walkParent(f: (parent: Entity) => void): void {\n\t\tif (this._parent) {\n\t\t\tthis._parent._walkParent(f);\n\t\t}\n\n\t\tf(this);\n\t}\n\n\t/**\n\t * Parent [[Container]] of this element.\n\t *\n\t * @return Parent container\n\t */\n\tpublic get parent(): Container | undefined {\n\t\treturn this._parent;\n\t}\n\n\tpublic _setParent(parent: Container, updateChildren: boolean = false) {\n\t\tconst prevParent = this._parent;\n\t\tif (parent !== prevParent) {\n\t\t\tthis.markDirtyBounds();\n\n\t\t\tparent.markDirty();\n\n\t\t\tthis._parent = parent;\n\n\t\t\tif (updateChildren) {\n\t\t\t\tthis._removeParent(prevParent);\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tthis._addPercentageSizeChildren();\n\t\t\t\t\tthis._addPercentagePositionChildren();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.markDirtyPosition();\n\t\t\tthis._applyThemes();\n\t\t}\n\t}\n\n\t/**\n\t * Returns an instance of [[NumberFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return NumberFormatter instace\n\t */\n\tpublic getNumberFormatter(): NumberFormatter {\n\t\treturn this.get(\"numberFormatter\", this._root.numberFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DateFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DateFormatter instace\n\t */\n\tpublic getDateFormatter(): DateFormatter {\n\t\treturn this.get(\"dateFormatter\", this._root.dateFormatter);\n\t}\n\n\t/**\n\t * Returns an instance of [[DurationFormatter]] used in this element.\n\t *\n\t * If this element does not have it set, global one form [[Root]] is used.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/using-formatters/} for more info\n\t * @return DurationFormatter instace\n\t */\n\tpublic getDurationFormatter(): DurationFormatter {\n\t\treturn this.get(\"durationFormatter\", this._root.durationFormatter);\n\t}\n\n\t/**\n\t * Converts X/Y coordinate within this element to a global coordinate.\n\t *\n\t * @param  point  Local coordinate\n\t * @return        Global coordinate\n\t * @ignore\n\t */\n\tpublic toGlobal(point: IPoint): IPoint {\n\t\treturn this._display.toGlobal(point);\n\t}\n\n\t/**\n\t * Converts global X/Y coordinate to a coordinate within this element.\n\t *\n\t * @param  point  Global coordinate\n\t * @return        Local coordinate\n\t * @ignore\n\t */\n\tpublic toLocal(point: IPoint): IPoint {\n\t\treturn this._display.toLocal(point);\n\t}\n\n\tpublic _getDownPoint(): IPoint | undefined {\n\t\tconst id = this._getDownPointId();\n\t\tif (id) {\n\t\t\treturn this._downPoints[id];\n\t\t}\n\n\t}\n\n\tpublic _getDownPointId(): number | undefined {\n\t\tif (this._downPoints) {\n\t\t\treturn $object.keysOrdered(this._downPoints, (a, b) => {\n\t\t\t\tif (a > b) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tif (a < b) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t})[0];\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the end of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toFront() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, parent.children.length - 1);\n\t\t}\n\t}\n\n\t/**\n\t * Moves sprite to the beginning of the parent's children array.\n\t *\n\t * Depending on `layout` setting of the parten container, it may effect the\n\t * positioning or overlapping order of the elements.\n\t */\n\tpublic toBack() {\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this, 0);\n\t\t}\n\t}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}