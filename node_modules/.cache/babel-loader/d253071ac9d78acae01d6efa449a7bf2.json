{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/home/mostPopularProducts/MostPopularProduct.jsx\",\n    _s = $RefreshSig$();\n\nimport Box from '@mui/system/Box';\nimport { Card, CardActions, CardContent, CardMedia, Rating, Typography } from '@mui/material';\nimport KgButton from './KgButton';\nimport CommonButton from '../../common/buttons/CommonButton';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addItem } from '../../../redux/slices/cartSlice';\nimport { useState } from 'react';\nimport { addToCartRequest } from '../../../helpers/addToCartRequest'; //Components style setup\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardSx = {\n  height: '100%',\n  padding: '20px 10px',\n  borderRadius: '10px',\n  display: 'flex',\n  justifyContent: 'center',\n  '&:hover': {\n    borderColor: 'primary.main'\n  }\n};\nconst cardContentSx = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: 0,\n  '&:last-child': {\n    paddingBottom: 0\n  }\n};\nconst boxSx = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n};\nconst kgBoxSx = {\n  marginTop: '20px',\n  display: 'flex',\n  justifyContent: 'center',\n  gap: '15px'\n};\nconst cardNameSx = {\n  fontSize: '1.5rem',\n  fontWeight: 600,\n  letterSpacing: '1px',\n  marginTop: '10px',\n  textAlign: 'center'\n};\nconst ratingSx = {\n  color: 'black',\n  fontSize: '18px',\n  marginTop: '100px',\n  marginBottom: '10px'\n};\nconst cardPriceSx = {\n  fontSize: '1.5rem',\n  fontWeight: 600,\n  letterSpacing: '1px'\n};\n\nconst MostPopularProduct = ({\n  productItem\n}) => {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  const cartItems = useSelector(state => state.cart.cartItems);\n  const {\n    token,\n    isAuth,\n    email\n  } = auth;\n  const [active, setActive] = useState(0);\n  const dispatch = useDispatch();\n  const {\n    id,\n    name,\n    price,\n    image,\n    sizeType,\n    sizes\n  } = productItem;\n\n  const addToCartClickHandler = e => {\n    const product = {\n      productId: id,\n      name,\n      price,\n      image,\n      sizeType,\n      size: sizes[active],\n      quantity: 1\n    };\n    const match = cartItems.find(item => item.productId === id && item.size === product.size);\n    const index = cartItems.indexOf(match);\n\n    if (index > -1 && cartItems[index].quantity > 98) {\n      return;\n    } else {\n      dispatch(addItem(product));\n      addToCartRequest({\n        token,\n        isAuth,\n        productId: product.productId,\n        size: product.size,\n        quantity: product.quantity,\n        email\n      });\n    }\n\n    e.target.blur();\n  };\n\n  const sizeClickHandle = index => {\n    setActive(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    sx: cardSx,\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: cardContentSx,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/products/${productItem.id}`,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              width: \"100%\",\n              image: productItem.image,\n              alt: \"product\",\n              sx: {\n                ':hover': {\n                  cursor: 'pointer'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: kgBoxSx,\n          children: productItem.sizes.map((item, index) => /*#__PURE__*/_jsxDEV(KgButton, {\n            index: index,\n            active: index === active ? true : false,\n            units: productItem.sizeType === 'KILOS' ? 'kg' : 'pcs',\n            value: item,\n            onClick: sizeClickHandle\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: cardNameSx,\n          children: productItem.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: boxSx,\n        children: [/*#__PURE__*/_jsxDEV(Rating, {\n          name: \"half-rating-read\",\n          readOnly: true,\n          value: productItem.rating,\n          precision: 0.1,\n          sx: ratingSx\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"primary\",\n          sx: cardPriceSx,\n          children: `$${productItem.price.toFixed(2)}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          sx: {\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(CommonButton, {\n            padding: \"10px 35px\",\n            onClick: addToCartClickHandler,\n            children: 'Add to Cart'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MostPopularProduct, \"6v7zPbL/OWFsERctLIbNAPA0hzo=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = MostPopularProduct;\nexport default MostPopularProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostPopularProduct\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/home/mostPopularProducts/MostPopularProduct.jsx"],"names":["Box","Card","CardActions","CardContent","CardMedia","Rating","Typography","KgButton","CommonButton","Link","useDispatch","useSelector","addItem","useState","addToCartRequest","cardSx","height","padding","borderRadius","display","justifyContent","borderColor","cardContentSx","flexDirection","alignItems","paddingBottom","boxSx","kgBoxSx","marginTop","gap","cardNameSx","fontSize","fontWeight","letterSpacing","textAlign","ratingSx","color","marginBottom","cardPriceSx","MostPopularProduct","productItem","auth","state","cartItems","cart","token","isAuth","email","active","setActive","dispatch","id","name","price","image","sizeType","sizes","addToCartClickHandler","e","product","productId","size","quantity","match","find","item","index","indexOf","target","blur","sizeClickHandle","cursor","map","rating","toFixed"],"mappings":"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","sourcesContent":["import Box from '@mui/system/Box';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Rating,\n  Typography,\n} from '@mui/material';\nimport KgButton from './KgButton';\nimport CommonButton from '../../common/buttons/CommonButton';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addItem } from '../../../redux/slices/cartSlice';\nimport { useState } from 'react';\nimport { addToCartRequest } from '../../../helpers/addToCartRequest';\n\n//Components style setup\nconst cardSx = {\n  height: '100%',\n  padding: '20px 10px',\n  borderRadius: '10px',\n  display: 'flex',\n  justifyContent: 'center',\n  '&:hover': {\n    borderColor: 'primary.main',\n  },\n};\n\nconst cardContentSx = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: 0,\n  '&:last-child': {\n    paddingBottom: 0,\n  },\n};\n\nconst boxSx = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n};\n\nconst kgBoxSx = {\n  marginTop: '20px',\n  display: 'flex',\n  justifyContent: 'center',\n  gap: '15px',\n};\n\nconst cardNameSx = {\n  fontSize: '1.5rem',\n  fontWeight: 600,\n  letterSpacing: '1px',\n  marginTop: '10px',\n  textAlign: 'center',\n};\n\nconst ratingSx = {\n  color: 'black',\n  fontSize: '18px',\n  marginTop: '100px',\n  marginBottom: '10px',\n};\n\nconst cardPriceSx = {\n  fontSize: '1.5rem',\n  fontWeight: 600,\n  letterSpacing: '1px',\n};\n\nconst MostPopularProduct = ({ productItem }) => {\n  const auth = useSelector((state) => state.auth);\n  const cartItems = useSelector((state) => state.cart.cartItems);\n  const { token, isAuth, email } = auth;\n\n  const [active, setActive] = useState(0);\n\n  const dispatch = useDispatch();\n\n  const { id, name, price, image, sizeType, sizes } = productItem;\n\n  const addToCartClickHandler = (e) => {\n    const product = {\n      productId: id,\n      name,\n      price,\n      image,\n      sizeType,\n      size: sizes[active],\n      quantity: 1,\n    };\n\n    const match = cartItems.find(\n      (item) => item.productId === id && item.size === product.size\n    );\n    const index = cartItems.indexOf(match);\n    if (index > -1 && cartItems[index].quantity > 98) {\n      return;\n    } else {\n      dispatch(addItem(product));\n\n      addToCartRequest({\n        token,\n        isAuth,\n        productId: product.productId,\n        size: product.size,\n        quantity: product.quantity,\n        email,\n      });\n    }\n\n    e.target.blur();\n  };\n\n  const sizeClickHandle = (index) => {\n    setActive(index);\n  };\n\n  return (\n    <Card variant=\"outlined\" sx={cardSx}>\n      <CardContent sx={cardContentSx}>\n        <Box sx={boxSx}>\n          <Link to={`/products/${productItem.id}`}>\n            <Box>\n              <CardMedia\n                component=\"img\"\n                width=\"100%\"\n                image={productItem.image}\n                alt=\"product\"\n                sx={{ ':hover': { cursor: 'pointer' } }}\n              />\n            </Box>\n          </Link>\n          <Box sx={kgBoxSx}>\n            {productItem.sizes.map((item, index) => (\n              <KgButton\n                index={index}\n                active={index === active ? true : false}\n                key={index}\n                units={productItem.sizeType === 'KILOS' ? 'kg' : 'pcs'}\n                value={item}\n                onClick={sizeClickHandle}\n              />\n            ))}\n          </Box>\n          <Typography sx={cardNameSx}>{productItem.name}</Typography>\n        </Box>\n        <Box sx={boxSx}>\n          <Rating\n            name=\"half-rating-read\"\n            readOnly\n            value={productItem.rating}\n            precision={0.1}\n            sx={ratingSx}\n          />\n          <Typography color=\"primary\" sx={cardPriceSx}>\n            {`$${productItem.price.toFixed(2)}`}\n          </Typography>\n          <CardActions sx={{ marginTop: '10px' }}>\n            <CommonButton padding=\"10px 35px\" onClick={addToCartClickHandler}>\n              {'Add to Cart'}\n            </CommonButton>\n          </CardActions>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MostPopularProduct;\n"]},"metadata":{},"sourceType":"module"}