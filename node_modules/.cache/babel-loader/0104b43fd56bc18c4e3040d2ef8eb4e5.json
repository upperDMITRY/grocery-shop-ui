{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/users/editAndAddNewUser/UserForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Box, Button } from '@mui/material';\nimport { setEmailError, setPasswordError, setDisabledSaveButton, setAdminUsersError } from '../../../../redux/slices/adminUsers';\nimport Header from './Header';\nimport Email from './Email';\nimport Password from './Password';\nimport Role from './Role';\nimport Status from './Status';\nimport { useMutationSaveUser } from '../../../../hooks/useMutationSaveUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userFormContainerStyle = {\n  boxSizing: 'border-box',\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap',\n  gap: 4,\n  paddingLeft: 4,\n  paddingRight: 4,\n  paddingTop: 2,\n  maxWidth: 616,\n  minWidth: 288\n};\nconst container3Style = {\n  display: 'flex',\n  gap: 3,\n  flexGrow: 1\n};\nconst buttonsContainerStyle = {\n  display: 'flex',\n  paddingBottom: '32px',\n  paddingTop: '8px',\n  marginLeft: '-10px'\n};\nconst buttonStyle = {\n  margin: '0 10px'\n};\nconst EMAIL_REGEX = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/; // eslint-disable-next-line\n\nconst PASSWORD_REGEX = /^[a-zA-Z0-9!@#$%^&*()_+~`\\-=\\\\\\/|[\\]{};:'\",<.>?]*$/;\n\nconst UserForm = ({\n  newUser\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const onSaveSuccess = () => {\n    goBack();\n  };\n\n  const onSaveError = err => {\n    dispatch(setAdminUsersError(err));\n  };\n\n  const mutationSaveUser = useMutationSaveUser(onSaveSuccess, onSaveError);\n  const history = useHistory();\n  const token = useSelector(state => state.auth.token);\n  const email = useSelector(state => state.adminUsers.email);\n  const password = useSelector(state => state.adminUsers.password);\n  const role = useSelector(state => state.adminUsers.role);\n  const status = useSelector(state => state.adminUsers.status);\n  const disabledSaveButton = useSelector(state => state.adminUsers.disabledSaveButton);\n  const emailRef = useRef();\n  useEffect(() => {\n    if (emailRef) {\n      var _emailRef$current;\n\n      (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.children[0].focus();\n    }\n\n    dispatch(setEmailError(''));\n    dispatch(setPasswordError('')); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (email.trim() && password.trim()) {\n      dispatch(setDisabledSaveButton(false));\n    } else {\n      dispatch(setDisabledSaveButton(true));\n    }\n  }, [dispatch, email, password]);\n\n  const saveUser = async e => {\n    if (!EMAIL_REGEX.test(email)) {\n      dispatch(setEmailError('Please provide correct e-mail address'));\n      return;\n    }\n\n    if (email.length < 5 || email.length > 35) {\n      dispatch(setEmailError('Email address must be at least 5 characters long, maximum 35 characters long'));\n      return;\n    }\n\n    if (!PASSWORD_REGEX.test(password)) {\n      dispatch(setPasswordError('Password can only contain english letters, numbers and special characters, and must be at least 5 characters long, maximum 10 characters long'));\n      return;\n    }\n\n    if (password.length < 5 || password.length > 10) {\n      dispatch(setPasswordError('Password must be at least 5 characters long, maximum 10 characters long'));\n      return;\n    }\n\n    const user = {\n      email: email.toLowerCase(),\n      password,\n      role,\n      status\n    };\n    mutationSaveUser.mutate([newUser ? 'post' : 'put', user, token]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: userFormContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      newUser: newUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Email, {\n      ref: emailRef,\n      newUser: newUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Password, {\n      newUser: newUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: container3Style,\n      children: [/*#__PURE__*/_jsxDEV(Role, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Status, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: buttonsContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        sx: buttonStyle,\n        variant: \"outlined\",\n        onClick: goBack,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        sx: buttonStyle,\n        variant: \"outlined\",\n        onClick: saveUser,\n        disabled: disabledSaveButton,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserForm, \"P57a3FE2lNHQCkmJvf3fVVrSj5A=\", false, function () {\n  return [useDispatch, useMutationSaveUser, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = UserForm;\nexport default UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/users/editAndAddNewUser/UserForm.jsx"],"names":["useEffect","useRef","useSelector","useDispatch","useHistory","Box","Button","setEmailError","setPasswordError","setDisabledSaveButton","setAdminUsersError","Header","Email","Password","Role","Status","useMutationSaveUser","userFormContainerStyle","boxSizing","display","flexDirection","flexWrap","gap","paddingLeft","paddingRight","paddingTop","maxWidth","minWidth","container3Style","flexGrow","buttonsContainerStyle","paddingBottom","marginLeft","buttonStyle","margin","EMAIL_REGEX","PASSWORD_REGEX","UserForm","newUser","dispatch","goBack","history","onSaveSuccess","onSaveError","err","mutationSaveUser","token","state","auth","email","adminUsers","password","role","status","disabledSaveButton","emailRef","current","children","focus","trim","saveUser","e","test","length","user","toLowerCase","mutate"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,eAA5B;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,qBAHF,EAIEC,kBAJF,QAKO,qCALP;AAMA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,mBAAT,QAAoC,uCAApC;;AAEA,MAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,SAAS,EAAE,YADkB;AAE7BC,EAAAA,OAAO,EAAE,MAFoB;AAG7BC,EAAAA,aAAa,EAAE,QAHc;AAI7BC,EAAAA,QAAQ,EAAE,MAJmB;AAK7BC,EAAAA,GAAG,EAAE,CALwB;AAM7BC,EAAAA,WAAW,EAAE,CANgB;AAO7BC,EAAAA,YAAY,EAAE,CAPe;AAQ7BC,EAAAA,UAAU,EAAE,CARiB;AAS7BC,EAAAA,QAAQ,EAAE,GATmB;AAU7BC,EAAAA,QAAQ,EAAE;AAVmB,CAA/B;AAaA,MAAMC,eAAe,GAAG;AAAET,EAAAA,OAAO,EAAE,MAAX;AAAmBG,EAAAA,GAAG,EAAE,CAAxB;AAA2BO,EAAAA,QAAQ,EAAE;AAArC,CAAxB;AAEA,MAAMC,qBAAqB,GAAG;AAC5BX,EAAAA,OAAO,EAAE,MADmB;AAE5BY,EAAAA,aAAa,EAAE,MAFa;AAG5BN,EAAAA,UAAU,EAAE,KAHgB;AAI5BO,EAAAA,UAAU,EAAE;AAJgB,CAA9B;AAOA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE;AADU,CAApB;AAIA,MAAMC,WAAW,GAAG,gDAApB,C,CAEA;;AACA,MAAMC,cAAc,GAAG,oDAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAChC,QAAMC,QAAQ,GAAGpC,WAAW,EAA5B;;AAEA,QAAMqC,MAAM,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACD,MAAR;AACD,GAFD;;AAIA,QAAME,aAAa,GAAG,MAAM;AAC1BF,IAAAA,MAAM;AACP,GAFD;;AAIA,QAAMG,WAAW,GAAIC,GAAD,IAAS;AAC3BL,IAAAA,QAAQ,CAAC7B,kBAAkB,CAACkC,GAAD,CAAnB,CAAR;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG7B,mBAAmB,CAAC0B,aAAD,EAAgBC,WAAhB,CAA5C;AAEA,QAAMF,OAAO,GAAGrC,UAAU,EAA1B;AAEA,QAAM0C,KAAK,GAAG5C,WAAW,CAAE6C,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,KAAvB,CAAzB;AACA,QAAMG,KAAK,GAAG/C,WAAW,CAAE6C,KAAD,IAAWA,KAAK,CAACG,UAAN,CAAiBD,KAA7B,CAAzB;AACA,QAAME,QAAQ,GAAGjD,WAAW,CAAE6C,KAAD,IAAWA,KAAK,CAACG,UAAN,CAAiBC,QAA7B,CAA5B;AACA,QAAMC,IAAI,GAAGlD,WAAW,CAAE6C,KAAD,IAAWA,KAAK,CAACG,UAAN,CAAiBE,IAA7B,CAAxB;AACA,QAAMC,MAAM,GAAGnD,WAAW,CAAE6C,KAAD,IAAWA,KAAK,CAACG,UAAN,CAAiBG,MAA7B,CAA1B;AAEA,QAAMC,kBAAkB,GAAGpD,WAAW,CACnC6C,KAAD,IAAWA,KAAK,CAACG,UAAN,CAAiBI,kBADQ,CAAtC;AAIA,QAAMC,QAAQ,GAAGtD,MAAM,EAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIuD,QAAJ,EAAc;AAAA;;AACZ,2BAAAA,QAAQ,CAACC,OAAT,wEAAkBC,QAAlB,CAA2B,CAA3B,EAA8BC,KAA9B;AACD;;AAEDnB,IAAAA,QAAQ,CAAChC,aAAa,CAAC,EAAD,CAAd,CAAR;AACAgC,IAAAA,QAAQ,CAAC/B,gBAAgB,CAAC,EAAD,CAAjB,CAAR,CANc,CAOd;AACD,GARQ,EAQN,EARM,CAAT;AAUAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiD,KAAK,CAACU,IAAN,MAAgBR,QAAQ,CAACQ,IAAT,EAApB,EAAqC;AACnCpB,MAAAA,QAAQ,CAAC9B,qBAAqB,CAAC,KAAD,CAAtB,CAAR;AACD,KAFD,MAEO;AACL8B,MAAAA,QAAQ,CAAC9B,qBAAqB,CAAC,IAAD,CAAtB,CAAR;AACD;AACF,GANQ,EAMN,CAAC8B,QAAD,EAAWU,KAAX,EAAkBE,QAAlB,CANM,CAAT;;AAQA,QAAMS,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5B,QAAI,CAAC1B,WAAW,CAAC2B,IAAZ,CAAiBb,KAAjB,CAAL,EAA8B;AAC5BV,MAAAA,QAAQ,CAAChC,aAAa,CAAC,uCAAD,CAAd,CAAR;AACA;AACD;;AAED,QAAI0C,KAAK,CAACc,MAAN,GAAe,CAAf,IAAoBd,KAAK,CAACc,MAAN,GAAe,EAAvC,EAA2C;AACzCxB,MAAAA,QAAQ,CACNhC,aAAa,CACX,8EADW,CADP,CAAR;AAKA;AACD;;AAED,QAAI,CAAC6B,cAAc,CAAC0B,IAAf,CAAoBX,QAApB,CAAL,EAAoC;AAClCZ,MAAAA,QAAQ,CACN/B,gBAAgB,CACd,+IADc,CADV,CAAR;AAKA;AACD;;AAED,QAAI2C,QAAQ,CAACY,MAAT,GAAkB,CAAlB,IAAuBZ,QAAQ,CAACY,MAAT,GAAkB,EAA7C,EAAiD;AAC/CxB,MAAAA,QAAQ,CACN/B,gBAAgB,CACd,yEADc,CADV,CAAR;AAKA;AACD;;AAED,UAAMwD,IAAI,GAAG;AACXf,MAAAA,KAAK,EAAEA,KAAK,CAACgB,WAAN,EADI;AAEXd,MAAAA,QAFW;AAGXC,MAAAA,IAHW;AAIXC,MAAAA;AAJW,KAAb;AAOAR,IAAAA,gBAAgB,CAACqB,MAAjB,CAAwB,CAAC5B,OAAO,GAAG,MAAH,GAAY,KAApB,EAA2B0B,IAA3B,EAAiClB,KAAjC,CAAxB;AACD,GAzCD;;AA2CA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE7B,sBAAT;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEqB;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEiB,QAAZ;AAAsB,MAAA,OAAO,EAAEjB;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAEV,eAAT;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAEE,qBAAT;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAEG,WAAZ;AAAyB,QAAA,OAAO,EAAC,UAAjC;AAA4C,QAAA,OAAO,EAAEO,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,EAAE,EAAEP,WADN;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,OAAO,EAAE2B,QAHX;AAIE,QAAA,QAAQ,EAAEN,kBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CApHD;;GAAMjB,Q;UACalC,W,EAcQa,mB,EAETZ,U,EAEFF,W,EACAA,W,EACGA,W,EACJA,W,EACEA,W,EAEYA,W;;;KAzBvBmC,Q;AAsHN,eAAeA,QAAf","sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Box, Button } from '@mui/material';\nimport {\n  setEmailError,\n  setPasswordError,\n  setDisabledSaveButton,\n  setAdminUsersError,\n} from '../../../../redux/slices/adminUsers';\nimport Header from './Header';\nimport Email from './Email';\nimport Password from './Password';\nimport Role from './Role';\nimport Status from './Status';\nimport { useMutationSaveUser } from '../../../../hooks/useMutationSaveUser';\n\nconst userFormContainerStyle = {\n  boxSizing: 'border-box',\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap',\n  gap: 4,\n  paddingLeft: 4,\n  paddingRight: 4,\n  paddingTop: 2,\n  maxWidth: 616,\n  minWidth: 288,\n};\n\nconst container3Style = { display: 'flex', gap: 3, flexGrow: 1 };\n\nconst buttonsContainerStyle = {\n  display: 'flex',\n  paddingBottom: '32px',\n  paddingTop: '8px',\n  marginLeft: '-10px',\n};\n\nconst buttonStyle = {\n  margin: '0 10px',\n};\n\nconst EMAIL_REGEX = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n\n// eslint-disable-next-line\nconst PASSWORD_REGEX = /^[a-zA-Z0-9!@#$%^&*()_+~`\\-=\\\\\\/|[\\]{};:'\",<.>?]*$/;\n\nconst UserForm = ({ newUser }) => {\n  const dispatch = useDispatch();\n\n  const goBack = () => {\n    history.goBack();\n  };\n\n  const onSaveSuccess = () => {\n    goBack();\n  };\n\n  const onSaveError = (err) => {\n    dispatch(setAdminUsersError(err));\n  };\n\n  const mutationSaveUser = useMutationSaveUser(onSaveSuccess, onSaveError);\n\n  const history = useHistory();\n\n  const token = useSelector((state) => state.auth.token);\n  const email = useSelector((state) => state.adminUsers.email);\n  const password = useSelector((state) => state.adminUsers.password);\n  const role = useSelector((state) => state.adminUsers.role);\n  const status = useSelector((state) => state.adminUsers.status);\n\n  const disabledSaveButton = useSelector(\n    (state) => state.adminUsers.disabledSaveButton\n  );\n\n  const emailRef = useRef();\n\n  useEffect(() => {\n    if (emailRef) {\n      emailRef.current?.children[0].focus();\n    }\n\n    dispatch(setEmailError(''));\n    dispatch(setPasswordError(''));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (email.trim() && password.trim()) {\n      dispatch(setDisabledSaveButton(false));\n    } else {\n      dispatch(setDisabledSaveButton(true));\n    }\n  }, [dispatch, email, password]);\n\n  const saveUser = async (e) => {\n    if (!EMAIL_REGEX.test(email)) {\n      dispatch(setEmailError('Please provide correct e-mail address'));\n      return;\n    }\n\n    if (email.length < 5 || email.length > 35) {\n      dispatch(\n        setEmailError(\n          'Email address must be at least 5 characters long, maximum 35 characters long'\n        )\n      );\n      return;\n    }\n\n    if (!PASSWORD_REGEX.test(password)) {\n      dispatch(\n        setPasswordError(\n          'Password can only contain english letters, numbers and special characters, and must be at least 5 characters long, maximum 10 characters long'\n        )\n      );\n      return;\n    }\n\n    if (password.length < 5 || password.length > 10) {\n      dispatch(\n        setPasswordError(\n          'Password must be at least 5 characters long, maximum 10 characters long'\n        )\n      );\n      return;\n    }\n\n    const user = {\n      email: email.toLowerCase(),\n      password,\n      role,\n      status,\n    };\n\n    mutationSaveUser.mutate([newUser ? 'post' : 'put', user, token]);\n  };\n\n  return (\n    <Box sx={userFormContainerStyle}>\n      <Header newUser={newUser} />\n      <Email ref={emailRef} newUser={newUser} />\n      <Password newUser={newUser} />\n      <Box sx={container3Style}>\n        <Role />\n        <Status />\n      </Box>\n      <Box sx={buttonsContainerStyle}>\n        <Button sx={buttonStyle} variant=\"outlined\" onClick={goBack}>\n          Cancel\n        </Button>\n        <Button\n          sx={buttonStyle}\n          variant=\"outlined\"\n          onClick={saveUser}\n          disabled={disabledSaveButton}\n        >\n          Save\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}