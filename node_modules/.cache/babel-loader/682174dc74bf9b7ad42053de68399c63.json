{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport * as $utils from \"../../../core/util/Utils\";\n/**\r\n * Base class for an axis renderer.\r\n *\r\n * Should not be used on its own.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n */\nvar AxisRenderer = /** @class */function (_super) {\n  __extends(AxisRenderer, _super);\n  function AxisRenderer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    // save for quick access\n    Object.defineProperty(_this, \"_axisLength\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 100\n    });\n    Object.defineProperty(_this, \"_start\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_end\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_inversed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_minSize\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    /**\r\n     * Chart the renderer is used in.\r\n     */\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_lc\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_ls\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_thumbDownPoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_downStart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_downEnd\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A list of ticks in the axis.\r\n     *\r\n     * `ticks.template` can be used to configure ticks.\r\n     *\r\n     * @default new ListTemplate<AxisTick>\r\n     */\n    Object.defineProperty(_this, \"ticks\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return AxisTick._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.ticks.template.get(\"themeTags\", []), _this.get(\"themeTags\", []))\n        }, [_this.ticks.template]);\n      })\n    });\n    /**\r\n     * A list of grid elements in the axis.\r\n     *\r\n     * `grid.template` can be used to configure grid.\r\n     *\r\n     * @default new ListTemplate<Grid>\r\n     */\n    Object.defineProperty(_this, \"grid\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Grid._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.grid.template.get(\"themeTags\", []), _this.get(\"themeTags\", []))\n        }, [_this.grid.template]);\n      })\n    });\n    /**\r\n     * A list of fills in the axis.\r\n     *\r\n     * `axisFills.template` can be used to configure axis fills.\r\n     *\r\n     * @default new ListTemplate<Graphics>\r\n     */\n    Object.defineProperty(_this, \"axisFills\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Graphics._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), _this.get(\"themeTags\", []))\n        }, [_this.axisFills.template]);\n      })\n    });\n    /**\r\n     * A list of labels in the axis.\r\n     *\r\n     * `labels.template` can be used to configure axis labels.\r\n     *\r\n     * @default new ListTemplate<AxisLabel>\r\n     */\n    Object.defineProperty(_this, \"labels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return AxisLabel._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), _this.get(\"themeTags\", []))\n        }, [_this.labels.template]);\n      })\n    });\n    /**\r\n     * An [[Axis]] renderer is for.\r\n     */\n    Object.defineProperty(_this, \"axis\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"thumb\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRenderer.prototype, \"makeTick\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      var tick = this.ticks.make();\n      tick._setDataItem(dataItem);\n      dataItem.setRaw(\"tick\", tick);\n      tick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n      this.axis.labelsContainer.children.push(tick);\n      this.ticks.push(tick);\n      return tick;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRenderer.prototype, \"makeGrid\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      var grid = this.grid.make();\n      grid._setDataItem(dataItem);\n      dataItem.setRaw(\"grid\", grid);\n      grid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n      this.axis.gridContainer.children.push(grid);\n      this.grid.push(grid);\n      return grid;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRenderer.prototype, \"makeAxisFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      var axisFill = this.axisFills.make();\n      axisFill._setDataItem(dataItem);\n      axisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n      this.axis.gridContainer.children.push(axisFill);\n      dataItem.setRaw(\"axisFill\", axisFill);\n      this.axisFills.push(axisFill);\n      return axisFill;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRenderer.prototype, \"makeLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, themeTags) {\n      var label = this.labels.make();\n      if (this.get(\"opposite\")) {\n        themeTags.push(\"opposite\");\n      }\n      if (this.get(\"inside\")) {\n        themeTags.push(\"inside\");\n      }\n      label.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n      this.axis.labelsContainer.children.moveValue(label, 0);\n      label._setDataItem(dataItem);\n      dataItem.setRaw(\"label\", label);\n      this.labels.push(label);\n      return label;\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"axisLength\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRenderer.prototype, \"gridCount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.axisLength() / this.get(\"minGridDistance\", 50);\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_updatePositions\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._afterNew.call(this);\n      this.set(\"isMeasured\", false);\n      var thumb = this.thumb;\n      if (thumb) {\n        this._disposers.push(thumb.events.on(\"pointerdown\", function (event) {\n          _this._handleThumbDown(event.originalEvent);\n        }));\n        this._disposers.push(thumb.events.on(\"globalpointerup\", function (event) {\n          _this._handleThumbUp(event.originalEvent);\n        }));\n        this._disposers.push(thumb.events.on(\"globalpointermove\", function (event) {\n          _this._handleThumbMove(event.originalEvent);\n        }));\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n      if (this.isDirty(\"pan\")) {\n        var thumb = this.thumb;\n        if (thumb) {\n          var labelsContainer = this.axis.labelsContainer;\n          var pan = this.get(\"pan\");\n          if (pan == \"zoom\") {\n            labelsContainer.children.push(thumb);\n          } else if (pan == \"none\") {\n            labelsContainer.children.removeValue(thumb);\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_handleThumbDown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      this._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({\n        x: event.clientX,\n        y: event.clientY\n      }));\n      var axis = this.axis;\n      this._downStart = axis.get(\"start\");\n      this._downEnd = axis.get(\"end\");\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_handleThumbUp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_event) {\n      this._thumbDownPoint = undefined;\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_handleThumbMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      var downPoint = this._thumbDownPoint;\n      if (downPoint) {\n        var point = this.toLocal(this._root.documentPointToRoot({\n          x: event.clientX,\n          y: event.clientY\n        }));\n        var downStart = this._downStart;\n        var downEnd = this._downEnd;\n        var extra = this._getPan(point, downPoint) * Math.min(1, downEnd - downStart) / 2;\n        this.axis.setAll({\n          start: downStart - extra,\n          end: downEnd + extra\n        });\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_getPan\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_point1, _point2) {\n      return 0;\n    }\n  });\n  /**\r\n   * Converts relative position (0-1) on axis to a pixel coordinate.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Coordinate (px)\r\n   */\n  Object.defineProperty(AxisRenderer.prototype, \"positionToCoordinate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      if (this._inversed) {\n        return (this._end - position) * this._axisLength;\n      } else {\n        return (position - this._start) * this._axisLength;\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRenderer.prototype, \"updateTooltipBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_tooltip) {}\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.markDirty();\n      this._clear = true;\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"toAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      var start = this._start || 0;\n      var end = this._end || 1;\n      position = position * (end - start);\n      if (!this.get(\"inversed\")) {\n        position = start + position;\n      } else {\n        position = end - position;\n      }\n      return position;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRenderer.prototype, \"fixPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      if (this.get(\"inversed\")) {\n        return 1 - position;\n      }\n      return position;\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_updateLC\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"toggleVisibility\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (sprite, position, minPosition, maxPosition) {\n      var axis = this.axis;\n      var start = axis.get(\"start\", 0);\n      var end = axis.get(\"end\", 1);\n      var updatedStart = start + (end - start) * (minPosition - 0.0001);\n      var updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n      if (position < updatedStart || position > updatedEnd) {\n        sprite.setPrivate(\"visible\", false);\n      } else {\n        sprite.setPrivate(\"visible\", true);\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"_positionTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip, point) {\n      var chart = this.chart;\n      if (chart) {\n        if (chart.inPlot(point)) {\n          tooltip.set(\"pointTo\", this._display.toGlobal(point));\n        } else {\n          tooltip.hide();\n        }\n      }\n    }\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"processAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  Object.defineProperty(AxisRenderer, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"AxisRenderer\"\n  });\n  Object.defineProperty(AxisRenderer, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([AxisRenderer.className])\n  });\n  return AxisRenderer;\n}(Graphics);\nexport { AxisRenderer };","map":{"version":3,"names":["Graphics","Template","ListTemplate","AxisTick","Grid","AxisLabel","$utils","AxisRenderer","_super","__extends","_this","apply","arguments","Object","defineProperty","new","_new","_root","themeTags","mergeTags","ticks","template","get","grid","axisFills","labels","value","dataItem","tick","make","_setDataItem","setRaw","set","axis","labelsContainer","children","push","gridContainer","axisFill","label","moveValue","axisLength","prototype","_afterNew","call","thumb","_disposers","events","on","event","_handleThumbDown","originalEvent","_handleThumbUp","_handleThumbMove","_changed","isDirty","pan","removeValue","_thumbDownPoint","toLocal","documentPointToRoot","x","clientX","y","clientY","_downStart","_downEnd","_event","undefined","downPoint","point","downStart","downEnd","extra","_getPan","Math","min","setAll","start","end","_point1","_point2","position","_inversed","_end","_axisLength","_start","_tooltip","markDirty","_clear","sprite","minPosition","maxPosition","updatedStart","updatedEnd","setPrivate","tooltip","chart","inPlot","_display","toGlobal","hide","classNames","concat","className"],"sources":["../../../../../../src/.internal/charts/xy/axes/AxisRenderer.ts"],"sourcesContent":["import type { Sprite } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { IPointerEvent } from \"../../../core/render/backend/Renderer\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t * \n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t * \n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tif (this.get(\"opposite\" as any)) {\n\t\t\tthemeTags.push(\"opposite\");\n\t\t}\n\t\tif (this.get(\"inside\" as any)) {\n\t\t\tthemeTags.push(\"inside\");\n\t\t}\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event.originalEvent);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event.originalEvent);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: IPointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: IPointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: IPointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.setAll({ start: downStart - extra, end: downEnd + extra });\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}