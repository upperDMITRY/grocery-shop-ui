{"ast":null,"code":"import { __extends, __read } from \"tslib\";\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $type from \"../../core/util/Type\";\n/**\r\n * Creates an XY chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\r\n * @important\r\n */\nvar XYChart = /** @class */function (_super) {\n  __extends(XYChart, _super);\n  function XYChart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A list of horizontal axes.\r\n     */\n    Object.defineProperty(_this, \"xAxes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListAutoDispose()\n    });\n    /**\r\n     * A list of vertical axes.\r\n     */\n    Object.defineProperty(_this, \"yAxes\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListAutoDispose()\n    });\n    /**\r\n     * A [[Container]] located on top of the chart, used to store top horizontal\r\n     * axes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"topAxesContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.chartContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        layout: _this._root.verticalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] located in the middle the chart, used to store vertical axes\r\n     * and plot area container.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"yAxesAndPlotContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.chartContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        layout: _this._root.horizontalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] located on bottom of the chart, used to store bottom\r\n     * horizontal axes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"bottomAxesContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.chartContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        layout: _this._root.verticalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] located on left of the chart, used to store left-hand\r\n     * vertical axes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"leftAxesContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.yAxesAndPlotContainer.children.push(Container.new(_this._root, {\n        height: p100,\n        layout: _this._root.horizontalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] located in the middle of the chart, used to store actual\r\n     * plots (series).\r\n     *\r\n     * NOTE: `plotContainer` will automatically have its `background` preset. If\r\n     * you need to modify background or outline for chart's plot area, you can\r\n     * use `plotContainer.get(\"background\")` for that.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"plotContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.yAxesAndPlotContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        maskContent: false\n      }))\n    });\n    /**\r\n     * A [[Container]] axis grid elements are stored in.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"gridContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.plotContainer.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        isMeasured: false\n      }))\n    });\n    /**\r\n     * A [[Container]] axis background grid elements are stored in.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"topGridContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        isMeasured: false\n      })\n    });\n    /**\r\n     * A [[Container]] located on right of the chart, used to store right-hand\r\n     * vertical axes.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"rightAxesContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.yAxesAndPlotContainer.children.push(Container.new(_this._root, {\n        height: p100,\n        layout: _this._root.horizontalLayout\n      }))\n    });\n    /**\r\n     * A [[Container]] axis headers are stored in.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"axisHeadersContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.plotContainer.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A button that is shown when chart is not fully zoomed out.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\r\n     * @default Button.new()\r\n     */\n    Object.defineProperty(_this, \"zoomOutButton\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.plotContainer.children.push(Button.new(_this._root, {\n        themeTags: [\"zoom\"],\n        icon: Graphics.new(_this._root, {\n          themeTags: [\"button\", \"icon\"]\n        })\n      }))\n    });\n    Object.defineProperty(_this, \"_movePoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        x: 0,\n        y: 0\n      }\n    });\n    Object.defineProperty(_this, \"_wheelDp\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_otherCharts\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n  Object.defineProperty(XYChart.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      this._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n      _super.prototype._afterNew.call(this);\n      this._disposers.push(this.xAxes);\n      this._disposers.push(this.yAxes);\n      var root = this._root;\n      var verticalLayout = this._root.verticalLayout;\n      var zoomOutButton = this.zoomOutButton;\n      zoomOutButton.events.on(\"click\", function () {\n        _this.zoomOut();\n      });\n      zoomOutButton.set(\"opacity\", 0);\n      zoomOutButton.states.lookup(\"default\").set(\"opacity\", 1);\n      this.chartContainer.set(\"layout\", verticalLayout);\n      var plotContainer = this.plotContainer;\n      plotContainer.children.push(this.seriesContainer);\n      this._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n      this._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n      plotContainer.children.push(this.topGridContainer);\n      plotContainer.children.push(this.bulletsContainer);\n      plotContainer.children.moveValue(zoomOutButton);\n      // Setting trasnparent background so that full body of the plot container\n      // is interactive\n      plotContainer.set(\"interactive\", true);\n      plotContainer.set(\"interactiveChildren\", false);\n      plotContainer.set(\"background\", Rectangle.new(root, {\n        themeTags: [\"xy\", \"background\"],\n        fill: Color.fromHex(0x000000),\n        fillOpacity: 0\n      }));\n      this._disposers.push(plotContainer.events.on(\"pointerdown\", function (event) {\n        _this._handlePlotDown(event.originalEvent);\n      }));\n      this._disposers.push(plotContainer.events.on(\"globalpointerup\", function (event) {\n        _this._handlePlotUp(event.originalEvent);\n      }));\n      this._disposers.push(plotContainer.events.on(\"globalpointermove\", function (event) {\n        _this._handlePlotMove(event.originalEvent);\n      }));\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_removeSeries\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (series) {\n      var xAxis = series.get(\"xAxis\");\n      if (xAxis) {\n        $array.remove(xAxis.series, series);\n      }\n      var yAxis = series.get(\"yAxis\");\n      if (yAxis) {\n        $array.remove(yAxis.series, series);\n      }\n      _super.prototype._removeSeries.call(this, series);\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleSetWheel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      var wheelX = this.get(\"wheelX\");\n      var wheelY = this.get(\"wheelY\");\n      var plotContainer = this.plotContainer;\n      if (wheelX !== \"none\" || wheelY !== \"none\") {\n        this._wheelDp = plotContainer.events.on(\"wheel\", function (event) {\n          var wheelEvent = event.originalEvent;\n          wheelEvent.preventDefault();\n          var plotPoint = plotContainer.toLocal(_this._root.documentPointToRoot({\n            x: wheelEvent.clientX,\n            y: wheelEvent.clientY\n          }));\n          var wheelStep = _this.get(\"wheelStep\", 0.2);\n          var shiftY = wheelEvent.deltaY / 100;\n          var shiftX = wheelEvent.deltaX / 100;\n          if ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n            _this.xAxes.each(function (axis) {\n              if (axis.get(\"zoomX\")) {\n                var start = axis.get(\"start\");\n                var end = axis.get(\"end\");\n                var position = axis.fixPosition(plotPoint.x / plotContainer.width());\n                var newStart = start - wheelStep * (end - start) * shiftX * position;\n                var newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n                if (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n                  _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n                }\n              }\n            });\n          }\n          if ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n            _this.xAxes.each(function (axis) {\n              if (axis.get(\"zoomX\")) {\n                var start = axis.get(\"start\");\n                var end = axis.get(\"end\");\n                var position = axis.fixPosition(plotPoint.x / plotContainer.width());\n                var newStart = start - wheelStep * (end - start) * shiftY * position;\n                var newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n                if (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n                  _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n                }\n              }\n            });\n          }\n          if ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n            _this.yAxes.each(function (axis) {\n              if (axis.get(\"zoomY\")) {\n                var start = axis.get(\"start\");\n                var end = axis.get(\"end\");\n                var position = axis.fixPosition(plotPoint.y / plotContainer.height());\n                var newStart = start - wheelStep * (end - start) * shiftX * position;\n                var newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n                if (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n                  _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n                }\n              }\n            });\n          }\n          if ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n            _this.yAxes.each(function (axis) {\n              if (axis.get(\"zoomY\")) {\n                var start = axis.get(\"start\");\n                var end = axis.get(\"end\");\n                var position = axis.fixPosition(plotPoint.y / plotContainer.height());\n                var newStart = start - wheelStep * (end - start) * shiftY * position;\n                var newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n                if (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n                  _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n                }\n              }\n            });\n          }\n          if ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n            _this.xAxes.each(function (axis) {\n              if (axis.get(\"panX\")) {\n                var start = axis.get(\"start\");\n                var end = axis.get(\"end\");\n                var position = axis.fixPosition(plotPoint.x / plotContainer.width());\n                var newStart = start + wheelStep * (end - start) * shiftX * position;\n                var newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n                _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n              }\n            });\n          }\n          if ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n            _this.xAxes.each(function (axis) {\n              if (axis.get(\"panX\")) {\n                var start = axis.get(\"start\");\n                var end = axis.get(\"end\");\n                var position = axis.fixPosition(plotPoint.x / plotContainer.width());\n                var newStart = start + wheelStep * (end - start) * shiftY * position;\n                var newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n                _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n              }\n            });\n          }\n          if ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n            _this.yAxes.each(function (axis) {\n              if (axis.get(\"panY\")) {\n                var start = axis.get(\"start\");\n                var end = axis.get(\"end\");\n                var position = axis.fixPosition(plotPoint.y / plotContainer.height());\n                var newStart = start + wheelStep * (end - start) * shiftX * position;\n                var newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n                _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n              }\n            });\n          }\n          if ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n            _this.yAxes.each(function (axis) {\n              if (axis.get(\"panY\")) {\n                var start = axis.get(\"start\");\n                var end = axis.get(\"end\");\n                var position = axis.fixPosition(plotPoint.y / plotContainer.height());\n                var newStart = start + wheelStep * (end - start) * shiftY * position;\n                var newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n                _this._handleWheelAnimation(axis.zoom(newStart, newEnd));\n              }\n            });\n          }\n        });\n        this._disposers.push(this._wheelDp);\n      } else {\n        if (this._wheelDp) {\n          this._wheelDp.dispose();\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handlePlotDown\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      // TODO: handle multitouch\n      if (this.get(\"panX\") || this.get(\"panY\")) {\n        var plotContainer = this.plotContainer;\n        var local = plotContainer.toLocal(this._root.documentPointToRoot({\n          x: event.clientX,\n          y: event.clientY\n        }));\n        if (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n          this._downPoint = local;\n          var panX = this.get(\"panX\");\n          var panY = this.get(\"panY\");\n          if (panX) {\n            this.xAxes.each(function (axis) {\n              axis._panStart = axis.get(\"start\");\n              axis._panEnd = axis.get(\"end\");\n            });\n          }\n          if (panY) {\n            this.yAxes.each(function (axis) {\n              axis._panStart = axis.get(\"start\");\n              axis._panEnd = axis.get(\"end\");\n            });\n          }\n          var eventType = \"panstarted\";\n          if (this.events.isEnabled(eventType)) {\n            this.events.dispatch(eventType, {\n              type: eventType,\n              target: this\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleWheelAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (animation) {\n      var _this = this;\n      if (animation) {\n        animation.events.on(\"stopped\", function () {\n          _this._dispatchWheelAnimation();\n        });\n      } else {\n        this._dispatchWheelAnimation();\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_dispatchWheelAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var eventType = \"wheelended\";\n      if (this.events.isEnabled(eventType)) {\n        this.events.dispatch(eventType, {\n          type: eventType,\n          target: this\n        });\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handlePlotUp\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_event) {\n      if (this._downPoint) {\n        if (this.get(\"panX\") || this.get(\"panY\")) {\n          var eventType = \"panended\";\n          if (this.events.isEnabled(eventType)) {\n            this.events.dispatch(eventType, {\n              type: eventType,\n              target: this\n            });\n          }\n        }\n      }\n      // TODO: handle multitouch\n      this._downPoint = undefined;\n      this.xAxes.each(function (xAxis) {\n        xAxis._isPanning = false;\n      });\n      this.yAxes.each(function (yAxis) {\n        yAxis._isPanning = false;\n      });\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handlePlotMove\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (event) {\n      // TODO: handle multitouch\n      var downPoint = this._downPoint;\n      if (downPoint) {\n        var plotContainer_1 = this.plotContainer;\n        var local_1 = plotContainer_1.toLocal(this._root.documentPointToRoot({\n          x: event.clientX,\n          y: event.clientY\n        }));\n        var panX = this.get(\"panX\");\n        var panY = this.get(\"panY\");\n        if (panX) {\n          var scrollbarX = this.get(\"scrollbarX\");\n          if (scrollbarX) {\n            scrollbarX.events.disableType(\"rangechanged\");\n          }\n          this.xAxes.each(function (axis) {\n            if (axis.get(\"panX\")) {\n              axis._isPanning = true;\n              //const maxDeviation = axis.get(\"maxDeviation\", 0);\n              var panStart = axis._panStart;\n              var panEnd = axis._panEnd;\n              var difference = panEnd - panStart;\n              var deltaX = difference * (downPoint.x - local_1.x) / plotContainer_1.width();\n              if (axis.get(\"renderer\").get(\"inversed\")) {\n                deltaX *= -1;\n              }\n              var start = panStart + deltaX;\n              var end = panEnd + deltaX;\n              if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n                axis.set(\"start\", start);\n                axis.set(\"end\", end);\n              }\n            }\n          });\n          if (scrollbarX) {\n            scrollbarX.events.enableType(\"rangechanged\");\n          }\n        }\n        if (panY) {\n          var scrollbarY = this.get(\"scrollbarY\");\n          if (scrollbarY) {\n            scrollbarY.events.disableType(\"rangechanged\");\n          }\n          this.yAxes.each(function (axis) {\n            if (axis.get(\"panY\")) {\n              axis._isPanning = true;\n              //const maxDeviation = axis.get(\"maxDeviation\", 0);\n              var panStart = axis._panStart;\n              var panEnd = axis._panEnd;\n              var difference = panEnd - panStart;\n              var deltaY = difference * (downPoint.y - local_1.y) / plotContainer_1.height();\n              if (axis.get(\"renderer\").get(\"inversed\")) {\n                deltaY *= -1;\n              }\n              var start = panStart - deltaY;\n              var end = panEnd - deltaY;\n              if (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n                axis.set(\"start\", start);\n                axis.set(\"end\", end);\n              }\n            }\n          });\n          if (scrollbarY) {\n            scrollbarY.events.enableType(\"rangechanged\");\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleCursorPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var cursor = this.get(\"cursor\");\n      if (cursor) {\n        var cursorPoint_1 = cursor.getPrivate(\"point\");\n        var snapToSeries = cursor.get(\"snapToSeries\");\n        if (snapToSeries && cursorPoint_1) {\n          var dataItems_1 = [];\n          $array.each(snapToSeries, function (series) {\n            if (!series.isHidden() && !series.isHiding()) {\n              var startIndex = series.getPrivate(\"startIndex\", 0);\n              var endIndex = series.getPrivate(\"endIndex\", series.dataItems.length - 1);\n              for (var i = startIndex; i < endIndex; i++) {\n                var dataItem = series.dataItems[i];\n                if (dataItem && !dataItem.isHidden()) {\n                  dataItems_1.push(dataItem);\n                }\n              }\n            }\n          });\n          var minDistance_1 = Infinity;\n          var closestItem_1;\n          var snapToSeriesBy_1 = cursor.get(\"snapToSeriesBy\");\n          $array.each(dataItems_1, function (dataItem) {\n            var point = dataItem.get(\"point\");\n            if (point) {\n              var distance = 0;\n              if (snapToSeriesBy_1 == \"x\") {\n                distance = Math.abs(cursorPoint_1.x - point.x);\n              } else if (snapToSeriesBy_1 == \"y\") {\n                distance = Math.abs(cursorPoint_1.y - point.y);\n              } else {\n                distance = Math.hypot(cursorPoint_1.x - point.x, cursorPoint_1.y - point.y);\n              }\n              if (distance < minDistance_1) {\n                minDistance_1 = distance;\n                closestItem_1 = dataItem;\n              }\n            }\n          });\n          $array.each(snapToSeries, function (series) {\n            var tooltip = series.get(\"tooltip\");\n            if (tooltip) {\n              tooltip._setDataItem(undefined);\n            }\n          });\n          if (closestItem_1) {\n            var series = closestItem_1.component;\n            series.showDataItemTooltip(closestItem_1);\n            var point = closestItem_1.get(\"point\");\n            if (point) {\n              cursor.handleMove(series.toGlobal(point), true);\n            }\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_updateCursor\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var cursor = this.get(\"cursor\");\n      if (cursor) {\n        cursor.handleMove();\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_addCursor\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (cursor) {\n      this.plotContainer.children.push(cursor);\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._prepareChildren.call(this);\n      this.series.each(function (series) {\n        _this._colorize(series);\n      });\n      if (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n        this._handleSetWheel();\n      }\n      if (this.isDirty(\"cursor\")) {\n        var previous = this._prevSettings.cursor;\n        var cursor = this.get(\"cursor\");\n        if (cursor !== previous) {\n          this._disposeProperty(\"cursor\");\n          if (previous) {\n            previous.dispose();\n          }\n          if (cursor) {\n            cursor._setChart(this);\n            this._addCursor(cursor);\n            this._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", function () {\n              _this._handleCursorSelectEnd();\n            }));\n          }\n          //this.setRaw(\"cursor\", cursor) // to reset previous value\n          this._prevSettings.cursor = cursor;\n        }\n      }\n      if (this.isDirty(\"scrollbarX\")) {\n        var previous = this._prevSettings.scrollbarX;\n        var scrollbarX = this.get(\"scrollbarX\");\n        if (scrollbarX !== previous) {\n          this._disposeProperty(\"scrollbarX\");\n          if (previous) {\n            previous.dispose();\n          }\n          if (scrollbarX) {\n            if (!scrollbarX.parent) {\n              this.topAxesContainer.children.push(scrollbarX);\n            }\n            this._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", function (e) {\n              _this._handleScrollbar(_this.xAxes, e.start, e.end);\n            }));\n            // Used to populate `ariaLabel` with meaningful values\n            scrollbarX.setPrivate(\"positionTextFunction\", function (position) {\n              var axis = _this.xAxes.getIndex(0);\n              return axis ? axis.getTooltipText(position) || \"\" : \"\";\n            });\n          }\n          this._prevSettings.scrollbarX = scrollbarX;\n        }\n      }\n      if (this.isDirty(\"scrollbarY\")) {\n        var previous = this._prevSettings.scrollbarY;\n        var scrollbarY = this.get(\"scrollbarY\");\n        if (scrollbarY !== previous) {\n          this._disposeProperty(\"scrollbarY\");\n          if (previous) {\n            previous.dispose();\n          }\n          if (scrollbarY) {\n            if (!scrollbarY.parent) {\n              this.rightAxesContainer.children.push(scrollbarY);\n            }\n            this._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", function (e) {\n              _this._handleScrollbar(_this.yAxes, e.start, e.end);\n            }));\n            // Used to populate `ariaLabel` with meaningful values\n            scrollbarY.setPrivate(\"positionTextFunction\", function (position) {\n              var axis = _this.yAxes.getIndex(0);\n              return axis ? axis.getTooltipText(position) || \"\" : \"\";\n            });\n          }\n          this._prevSettings.scrollbarY = scrollbarY;\n        }\n      }\n      this._handleZoomOut();\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_processSeries\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (series) {\n      _super.prototype._processSeries.call(this, series);\n      this._colorize(series);\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_colorize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (series) {\n      var colorSet = this.get(\"colors\");\n      if (colorSet) {\n        if (series.get(\"fill\") == null) {\n          var color = colorSet.next();\n          series._setSoft(\"stroke\", color);\n          series._setSoft(\"fill\", color);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleCursorSelectEnd\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var cursor = this.get(\"cursor\");\n      var behavior = cursor.get(\"behavior\");\n      var downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n      var downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n      var positionX = cursor.getPrivate(\"positionX\", 0.5);\n      var positionY = cursor.getPrivate(\"positionY\", 0.5);\n      this.xAxes.each(function (axis) {\n        if (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n          var position0 = axis.toAxisPosition(downPositionX);\n          var position1 = axis.toAxisPosition(positionX);\n          axis.zoom(position0, position1);\n        }\n        axis.setPrivate(\"updateScrollbar\", true);\n      });\n      this.yAxes.each(function (axis) {\n        if (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n          var position0 = axis.toAxisPosition(downPositionY);\n          var position1 = axis.toAxisPosition(positionY);\n          axis.zoom(position0, position1);\n        }\n        axis.setPrivate(\"updateScrollbar\", true);\n      });\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleScrollbar\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axes, start, end) {\n      axes.each(function (axis) {\n        var axisStart = axis.fixPosition(start);\n        var axisEnd = axis.fixPosition(end);\n        var zoomAnimation = axis.zoom(axisStart, axisEnd);\n        var updateScrollbar = \"updateScrollbar\";\n        axis.setPrivateRaw(updateScrollbar, false);\n        if (zoomAnimation) {\n          zoomAnimation.events.on(\"stopped\", function () {\n            axis.setPrivateRaw(updateScrollbar, true);\n          });\n        } else {\n          axis.setPrivateRaw(updateScrollbar, true);\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_processAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axes, container) {\n      var _this = this;\n      return axes.events.onAll(function (change) {\n        if (change.type === \"clear\") {\n          $array.each(change.oldValues, function (axis) {\n            _this._removeAxis(axis);\n          });\n        } else if (change.type === \"push\") {\n          container.children.push(change.newValue);\n          change.newValue.processChart(_this);\n        } else if (change.type === \"setIndex\") {\n          container.children.setIndex(change.index, change.newValue);\n          change.newValue.processChart(_this);\n        } else if (change.type === \"insertIndex\") {\n          container.children.insertIndex(change.index, change.newValue);\n          change.newValue.processChart(_this);\n        } else if (change.type === \"removeIndex\") {\n          _this._removeAxis(change.oldValue);\n        } else {\n          throw new Error(\"Unknown IListEvent type\");\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_removeAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axis) {\n      if (!axis.isDisposed()) {\n        var axisParent = axis.parent;\n        if (axisParent) {\n          axisParent.children.removeValue(axis);\n        }\n        var gridContainer = axis.gridContainer;\n        var gridParent = gridContainer.parent;\n        if (gridParent) {\n          gridParent.children.removeValue(gridContainer);\n        }\n        var topGridContainer = axis.topGridContainer;\n        var topGridParent = topGridContainer.parent;\n        if (topGridParent) {\n          topGridParent.children.removeValue(topGridContainer);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_updateChartLayout\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var left = this.leftAxesContainer.width();\n      var right = this.rightAxesContainer.width();\n      var bottomAxesContainer = this.bottomAxesContainer;\n      bottomAxesContainer.set(\"paddingLeft\", left);\n      bottomAxesContainer.set(\"paddingRight\", right);\n      var topAxesContainer = this.topAxesContainer;\n      topAxesContainer.set(\"paddingLeft\", left);\n      topAxesContainer.set(\"paddingRight\", right);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYChart.prototype, \"processAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_axis) {}\n  });\n  ;\n  Object.defineProperty(XYChart.prototype, \"_handleAxisSelection\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axis) {\n      var _a;\n      var start = axis.fixPosition(axis.get(\"start\", 0));\n      var end = axis.fixPosition(axis.get(\"end\", 1));\n      if (start > end) {\n        _a = __read([end, start], 2), start = _a[0], end = _a[1];\n      }\n      if (this.xAxes.indexOf(axis) != -1) {\n        if (axis.getPrivate(\"updateScrollbar\")) {\n          var scrollbarX = this.get(\"scrollbarX\");\n          if (scrollbarX && !scrollbarX.getPrivate(\"isBusy\")) {\n            scrollbarX.setRaw(\"start\", start);\n            scrollbarX.setRaw(\"end\", end);\n            scrollbarX.updateGrips();\n          }\n        }\n      } else if (this.yAxes.indexOf(axis) != -1) {\n        if (axis.getPrivate(\"updateScrollbar\")) {\n          var scrollbarY = this.get(\"scrollbarY\");\n          if (scrollbarY && !scrollbarY.getPrivate(\"isBusy\")) {\n            scrollbarY.setRaw(\"start\", start);\n            scrollbarY.setRaw(\"end\", end);\n            scrollbarY.updateGrips();\n          }\n        }\n      }\n      this._handleZoomOut();\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_handleZoomOut\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var zoomOutButton = this.zoomOutButton;\n      if (zoomOutButton && zoomOutButton.parent) {\n        var visible_1 = false;\n        this.xAxes.each(function (axis) {\n          if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n            visible_1 = true;\n          }\n        });\n        this.yAxes.each(function (axis) {\n          if (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n            visible_1 = true;\n          }\n        });\n        if (visible_1) {\n          if (zoomOutButton.isHidden()) {\n            zoomOutButton.show();\n          }\n        } else {\n          zoomOutButton.hide();\n        }\n      }\n    }\n  });\n  /**\r\n   * Checks if point is within plot area.\r\n   *\r\n   * @param   point  Reference point\r\n   * @return         Is within plot area?\r\n   */\n  Object.defineProperty(XYChart.prototype, \"inPlot\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      var plotContainer = this.plotContainer;\n      var otherCharts = this._otherCharts;\n      var global = plotContainer.toGlobal(point);\n      if (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n        return true;\n      }\n      if (otherCharts) {\n        for (var i = otherCharts.length - 1; i >= 0; i--) {\n          var chart = otherCharts[i];\n          if (chart != this) {\n            var chartPlotContainer = chart.plotContainer;\n            var local = chartPlotContainer.toLocal(global);\n            if (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n              return true;\n            }\n          }\n        }\n      }\n      return false;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(XYChart.prototype, \"arrangeTooltips\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      var plotContainer = this.plotContainer;\n      var w = plotContainer.width();\n      var h = plotContainer.height();\n      var plotT = plotContainer._display.toGlobal({\n        x: 0,\n        y: 0\n      });\n      var plotB = plotContainer._display.toGlobal({\n        x: w,\n        y: h\n      });\n      var tooltips = [];\n      var sum = 0;\n      var minDistance = Infinity;\n      var movePoint = this._movePoint;\n      var maxTooltipDistance = this.get(\"maxTooltipDistance\");\n      var closest;\n      var closestPoint;\n      if ($type.isNumber(maxTooltipDistance)) {\n        this.series.each(function (series) {\n          var tooltip = series.get(\"tooltip\");\n          if (tooltip) {\n            var point = tooltip.get(\"pointTo\");\n            if (point) {\n              var distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n              if (distance < minDistance) {\n                minDistance = distance;\n                closest = series;\n                closestPoint = point;\n              }\n            }\n          }\n        });\n      }\n      this.series.each(function (series) {\n        var tooltip = series.get(\"tooltip\");\n        if (tooltip) {\n          var hidden = false;\n          var point = tooltip.get(\"pointTo\");\n          if (point) {\n            if (maxTooltipDistance >= 0) {\n              var point_1 = tooltip.get(\"pointTo\");\n              if (point_1) {\n                if (series != closest) {\n                  var distance = Math.hypot(closestPoint.x - point_1.x, closestPoint.y - point_1.y);\n                  if (distance > maxTooltipDistance) {\n                    hidden = true;\n                  }\n                }\n              }\n            } else if (maxTooltipDistance == -1) {\n              if (series != closest) {\n                hidden = true;\n              }\n            }\n            if (!_this.inPlot(_this._tooltipToLocal(point)) || !tooltip.dataItem) {\n              hidden = true;\n            } else {\n              if (!hidden) {\n                sum += point.y;\n              }\n            }\n            if (hidden || series.isHidden() || series.isHiding()) {\n              tooltip.hide(0);\n            } else {\n              tooltip.show();\n              tooltips.push(tooltip);\n            }\n          }\n        }\n      });\n      if (this.get(\"arrangeTooltips\")) {\n        var tooltipContainer_1 = this._root.tooltipContainer;\n        tooltips.sort(function (a, b) {\n          return $order.compareNumber(a.get(\"pointTo\").y, b.get(\"pointTo\").y);\n        });\n        var count = tooltips.length;\n        var average = sum / count;\n        if (average > h / 2 + plotT.y) {\n          tooltips.reverse();\n          var prevY_1 = plotB.y;\n          $array.each(tooltips, function (tooltip) {\n            var height = tooltip.height();\n            var centerY = tooltip.get(\"centerY\");\n            if (centerY instanceof Percent) {\n              height *= centerY.value;\n            }\n            height += tooltip.get(\"marginBottom\", 0);\n            tooltip.set(\"bounds\", {\n              left: plotT.x,\n              top: plotT.y,\n              right: plotB.x,\n              bottom: prevY_1\n            });\n            prevY_1 = Math.min(prevY_1 - height, tooltip._fy - height);\n            tooltipContainer_1.children.moveValue(tooltip, 0);\n          });\n        } else {\n          var prevY_2 = 0;\n          $array.each(tooltips, function (tooltip) {\n            var height = tooltip.height();\n            var centerY = tooltip.get(\"centerY\");\n            if (centerY instanceof Percent) {\n              height *= centerY.value;\n            }\n            height += tooltip.get(\"marginBottom\", 0);\n            tooltip.set(\"bounds\", {\n              left: plotT.x,\n              top: prevY_2,\n              right: plotB.x,\n              bottom: Math.max(plotT.y + h, prevY_2 + height)\n            });\n            tooltipContainer_1.children.moveValue(tooltip, 0);\n            prevY_2 = Math.max(prevY_2 + height, tooltip._fy + height);\n          });\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYChart.prototype, \"_tooltipToLocal\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point) {\n      return this.plotContainer.toLocal(point);\n    }\n  });\n  /**\r\n   * Fully zooms out the chart.\r\n   */\n  Object.defineProperty(XYChart.prototype, \"zoomOut\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.xAxes.each(function (axis) {\n        axis.setPrivate(\"updateScrollbar\", true);\n        axis.zoom(0, 1);\n      });\n      this.yAxes.each(function (axis) {\n        axis.setPrivate(\"updateScrollbar\", true);\n        axis.zoom(0, 1);\n      });\n    }\n  });\n  Object.defineProperty(XYChart, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"XYChart\"\n  });\n  Object.defineProperty(XYChart, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: SerialChart.classNames.concat([XYChart.className])\n  });\n  return XYChart;\n}(SerialChart);\nexport { XYChart };","map":{"version":3,"names":["XYChartDefaultTheme","Container","Rectangle","SerialChart","ListAutoDispose","p100","Color","Button","Graphics","Percent","$array","$order","$type","XYChart","_super","__extends","_this","apply","arguments","Object","defineProperty","chartContainer","children","push","new","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotContainer","isMeasured","themeTags","icon","x","y","value","_defaultThemes","prototype","_afterNew","call","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","set","states","lookup","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","moveValue","fill","fromHex","fillOpacity","event","_handlePlotDown","originalEvent","_handlePlotUp","_handlePlotMove","series","xAxis","get","remove","yAxis","_removeSeries","wheelX","wheelY","_wheelDp","wheelEvent","preventDefault","plotPoint","toLocal","documentPointToRoot","clientX","clientY","wheelStep","shiftY","deltaY","shiftX","deltaX","each","axis","start","end","position","fixPosition","newStart","newEnd","Infinity","_handleWheelAnimation","zoom","dispose","local","_downPoint","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","_event","undefined","_isPanning","downPoint","plotContainer_1","local_1","scrollbarX","disableType","panStart","panEnd","difference","enableType","scrollbarY","cursor","cursorPoint_1","getPrivate","snapToSeries","dataItems_1","isHidden","isHiding","startIndex","endIndex","dataItems","length","i","dataItem","minDistance_1","closestItem_1","snapToSeriesBy_1","point","distance","Math","abs","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_prepareChildren","_colorize","isDirty","_handleSetWheel","previous","_prevSettings","_disposeProperty","_setChart","_addCursor","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","e","_handleScrollbar","setPrivate","getIndex","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","positionY","position0","toAxisPosition","position1","axes","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","isDisposed","axisParent","removeValue","gridContainer","gridParent","topGridParent","left","right","_axis","_a","__read","indexOf","setRaw","updateGrips","visible_1","show","hide","otherCharts","_otherCharts","global","chart","chartPlotContainer","w","h","plotT","_display","plotB","tooltips","sum","minDistance","movePoint","_movePoint","maxTooltipDistance","closest","closestPoint","isNumber","hidden","point_1","inPlot","_tooltipToLocal","tooltipContainer_1","tooltipContainer","sort","a","b","compareNumber","count","average","reverse","prevY_1","centerY","top","bottom","min","_fy","prevY_2","max","classNames","concat","className"],"sources":["../../../../../src/.internal/charts/xy/XYChart.ts"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $type from \"../../core/util/Type\";\nimport type { Animation } from \"../../core/util/Entity\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * Indicates maximum distance from pointer (moust or touch) to points\n\t * tooltips need to be shown for.\n\t *\n\t * Points that are further from pointer than this setting will not be shown.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Tooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {};\n\n\t/**\n\t * Invoked when panning ends.\n\t * \n\t * @since 5.0.4\n\t */\n\tpanended: {};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t * \n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.plotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.set(\"opacity\", 0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\tplotContainer.children.moveValue(zoomOutButton);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event.originalEvent);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event.originalEvent);\n\t\t}));\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t}\n\t\tsuper._removeSeries(series);\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\twheelEvent.preventDefault();\n\n\t\t\t\tconst plotPoint = plotContainer.toLocal(this._root.documentPointToRoot({ x: wheelEvent.clientX, y: wheelEvent.clientY }))\n\t\t\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\t\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\t\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\t\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tif (1 / (newEnd - newStart) < axis.get(\"maxZoomFactor\", Infinity)) {\n\t\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\n\t\t\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\t\t\tlet newStart = start + wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handlePlotDown(event: IPointerEvent) {\n\n\t\t// TODO: handle multitouch\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\tthis._downPoint = local;\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(_event: IPointerEvent) {\n\n\t\tif (this._downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: IPointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tconst downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\t\t\tconst plotContainer = this.plotContainer;\n\n\t\t\tlet local = plotContainer.toLocal(this._root.documentPointToRoot({ x: event.clientX, y: event.clientY }));\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tconst startIndex = series.getPrivate(\"startIndex\", 0);\n\t\t\t\t\t\tconst endIndex = series.getPrivate(\"endIndex\", series.dataItems.length - 1);\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal(point), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.handleMove();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = cursor.getPrivate(\"positionX\", 0.5);\n\t\tconst positionY = cursor.getPrivate(\"positionY\", 0.5);\n\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number) {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(_axis: Axis<AxisRenderer>) { };\n\n\tpublic _handleAxisSelection(axis: Axis<any>) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX && !scrollbarX.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY && !scrollbarY.getPrivate(\"isBusy\")) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this._otherCharts;\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.1 && point.y >= -0.1 && point.x <= plotContainer.width() + 0.1 && point.y <= plotContainer.height() + 0.1) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(global);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.reverse();\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + h, prevY + height) })\n\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}