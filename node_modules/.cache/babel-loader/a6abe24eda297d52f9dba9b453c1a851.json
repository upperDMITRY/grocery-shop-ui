{"ast":null,"code":"/** @ignore */ /** */\nimport * as $array from \"./Array\";\n/**\r\n * @ignore\r\n */\nvar Native = /** @class */function () {\n  function Native() {\n    var _this = this;\n    Object.defineProperty(this, \"_observer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_targets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    this._observer = new ResizeObserver(function (entries) {\n      $array.each(entries, function (entry) {\n        $array.each(_this._targets, function (x) {\n          if (x.target === entry.target) {\n            x.callback();\n          }\n        });\n      });\n    });\n  }\n  Object.defineProperty(Native.prototype, \"addTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target, callback) {\n      this._observer.observe(target, {\n        box: \"content-box\"\n      });\n      this._targets.push({\n        target: target,\n        callback: callback\n      });\n    }\n  });\n  Object.defineProperty(Native.prototype, \"removeTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target) {\n      this._observer.unobserve(target);\n      $array.keepIf(this._targets, function (x) {\n        return x.target !== target;\n      });\n    }\n  });\n  return Native;\n}();\n/**\r\n * @ignore\r\n */\nvar Raf = /** @class */function () {\n  function Raf() {\n    Object.defineProperty(this, \"_timer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"_targets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n  }\n  Object.defineProperty(Raf.prototype, \"addTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target, callback) {\n      var _this = this;\n      if (this._timer === null) {\n        var lastTime_1 = null;\n        var loop_1 = function () {\n          var currentTime = Date.now();\n          if (lastTime_1 === null || currentTime > lastTime_1 + Raf.delay) {\n            lastTime_1 = currentTime;\n            $array.each(_this._targets, function (x) {\n              var newSize = x.target.getBoundingClientRect();\n              if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n                x.size = newSize;\n                x.callback();\n              }\n            });\n          }\n          if (_this._targets.length === 0) {\n            _this._timer = null;\n          } else {\n            _this._timer = requestAnimationFrame(loop_1);\n          }\n        };\n        this._timer = requestAnimationFrame(loop_1);\n      }\n      // We start off with fake bounds so that sensor always kicks in\n      //let size = target.getBoundingClientRect();\n      var size = {\n        width: 0,\n        height: 0,\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this._targets.push({\n        target: target,\n        callback: callback,\n        size: size\n      });\n    }\n  });\n  Object.defineProperty(Raf.prototype, \"removeTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target) {\n      $array.keepIf(this._targets, function (x) {\n        return x.target !== target;\n      });\n      if (this._targets.length === 0) {\n        if (this._timer !== null) {\n          cancelAnimationFrame(this._timer);\n          this._timer = null;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Raf, \"delay\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 200\n  });\n  return Raf;\n}();\n/**\r\n * @ignore\r\n */\nvar observer = null;\n/**\r\n * @ignore\r\n */\nfunction makeSensor() {\n  if (observer === null) {\n    if (typeof ResizeObserver !== \"undefined\") {\n      observer = new Native();\n    } else {\n      observer = new Raf();\n    }\n  }\n  return observer;\n}\n/**\r\n * @ignore\r\n */\nvar ResizeSensor = /** @class */function () {\n  function ResizeSensor(element, callback) {\n    Object.defineProperty(this, \"_sensor\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_element\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_disposed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    this._sensor = makeSensor();\n    this._element = element;\n    this._sensor.addTarget(element, callback);\n  }\n  Object.defineProperty(ResizeSensor.prototype, \"isDisposed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this._disposed;\n    }\n  });\n  Object.defineProperty(ResizeSensor.prototype, \"dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (!this._disposed) {\n        this._disposed = true;\n        this._sensor.removeTarget(this._element);\n      }\n    }\n  });\n  Object.defineProperty(ResizeSensor.prototype, \"sensor\", {\n    get: function () {\n      return this._sensor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ResizeSensor;\n}();\nexport { ResizeSensor };","map":{"version":3,"names":["$array","Native","_this","Object","defineProperty","_observer","ResizeObserver","entries","each","entry","_targets","x","target","callback","value","observe","box","push","unobserve","keepIf","Raf","_timer","lastTime_1","loop_1","currentTime","Date","now","delay","newSize","getBoundingClientRect","width","size","height","length","requestAnimationFrame","left","right","top","bottom","cancelAnimationFrame","observer","makeSensor","ResizeSensor","element","_sensor","_element","addTarget","_disposed","removeTarget","prototype","get"],"sources":["../../../../../src/.internal/core/util/ResizeSensor.ts"],"sourcesContent":["/** @ignore *//** */\n\nimport type { IDisposer } from \"./Disposer\";\nimport * as $array from \"./Array\";\n\n/**\n * @ignore\n */\ninterface Sensor {\n\taddTarget(target: Element, callback: () => void): void;\n\tremoveTarget(target: Element): void;\n}\n\n/**\n * @ignore\n */\ndeclare const ResizeObserver: any;\n\n/**\n * @ignore\n */\nclass Native implements Sensor {\n\tprivate _observer: any;\n\tprivate _targets: Array<{ target: Element, callback: () => void }> = [];\n\n\tconstructor() {\n\t\tthis._observer = new ResizeObserver((entries: Array<any>) => {\n\t\t\t$array.each(entries, (entry) => {\n\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\tif (x.target === entry.target) {\n\t\t\t\t\t\tx.callback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tthis._observer.observe(target, { box: \"content-box\" });\n\t\tthis._targets.push({ target, callback });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\tthis._observer.unobserve(target);\n\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\t}\n}\n\n/**\n * @ignore\n */\nclass Raf implements Sensor {\n\tpublic static delay: number = 200;\n\n\tprivate _timer: number | null = null;\n\tprivate _targets: Array<{ target: Element, callback: () => void, size: ClientRect | DOMRect }> = [];\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tif (this._timer === null) {\n\t\t\tlet lastTime: number | null = null;\n\n\t\t\tconst loop = () => {\n\t\t\t\tconst currentTime = Date.now();\n\n\t\t\t\tif (lastTime === null || currentTime > (lastTime + Raf.delay)) {\n\t\t\t\t\tlastTime = currentTime;\n\n\t\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\t\tlet newSize = x.target.getBoundingClientRect();\n\n\t\t\t\t\t\tif (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n\t\t\t\t\t\t\tx.size = newSize;\n\t\t\t\t\t\t\tx.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (this._targets.length === 0) {\n\t\t\t\t\tthis._timer = null;\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t}\n\n\t\t// We start off with fake bounds so that sensor always kicks in\n\t\t//let size = target.getBoundingClientRect();\n\t\tlet size = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0 };\n\t\tthis._targets.push({ target, callback, size });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\n\t\tif (this._targets.length === 0) {\n\t\t\tif (this._timer !== null) {\n\t\t\t\tcancelAnimationFrame(this._timer);\n\t\t\t\tthis._timer = null;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * @ignore\n */\nlet observer: Sensor | null = null;\n\n/**\n * @ignore\n */\nfunction makeSensor(): Sensor {\n\tif (observer === null) {\n\t\tif (typeof ResizeObserver !== \"undefined\") {\n\t\t\tobserver = new Native();\n\n\t\t} else {\n\t\t\tobserver = new Raf();\n\t\t}\n\t}\n\n\treturn observer;\n}\n\n/**\n * @ignore\n */\nexport class ResizeSensor implements IDisposer {\n\tprivate _sensor: Sensor;\n\tprivate _element: Element;\n\tprivate _disposed: boolean = false;\n\n\tconstructor(element: Element, callback: () => void) {\n\t\tthis._sensor = makeSensor();\n\t\tthis._element = element;\n\t\tthis._sensor.addTarget(element, callback);\n\t}\n\n\tpublic isDisposed() {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._sensor.removeTarget(this._element);\n\t\t}\n\t}\n\n\tpublic get sensor(): Sensor {\n\t\treturn this._sensor;\n\t}\n}\n"],"mappings":"AAAA,eAAc;AAGd,OAAO,KAAKA,MAAM,MAAM,SAAS;AAejC;;;AAGA,IAAAC,MAAA;EAIC,SAAAA,OAAA;IAAA,IAAAC,KAAA;IAHAC,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;aAAqE;;IAGpE,IAAI,CAACC,SAAS,GAAG,IAAIC,cAAc,CAAC,UAACC,OAAmB;MACvDP,MAAM,CAACQ,IAAI,CAACD,OAAO,EAAE,UAACE,KAAK;QAC1BT,MAAM,CAACQ,IAAI,CAACN,KAAI,CAACQ,QAAQ,EAAE,UAACC,CAAC;UAC5B,IAAIA,CAAC,CAACC,MAAM,KAAKH,KAAK,CAACG,MAAM,EAAE;YAC9BD,CAAC,CAACE,QAAQ,EAAE;;QAEd,CAAC,CAAC;MACH,CAAC,CAAC;IACH,CAAC,CAAC;EACH;;;;;WAEA,SAAAC,CAAUF,MAAe,EAAEC,QAAoB;MAC9C,IAAI,CAACR,SAAS,CAACU,OAAO,CAACH,MAAM,EAAE;QAAEI,GAAG,EAAE;MAAa,CAAE,CAAC;MACtD,IAAI,CAACN,QAAQ,CAACO,IAAI,CAAC;QAAEL,MAAM,EAAAA,MAAA;QAAEC,QAAQ,EAAAA;MAAA,CAAE,CAAC;IACzC;;;;;;WAEA,SAAAC,CAAaF,MAAe;MAC3B,IAAI,CAACP,SAAS,CAACa,SAAS,CAACN,MAAM,CAAC;MAEhCZ,MAAM,CAACmB,MAAM,CAAC,IAAI,CAACT,QAAQ,EAAE,UAACC,CAAC;QAC9B,OAAOA,CAAC,CAACC,MAAM,KAAKA,MAAM;MAC3B,CAAC,CAAC;IACH;;EACD,OAAAX,MAAC;AAAD,CAAC,CA5BD;AA8BA;;;AAGA,IAAAmB,GAAA;EAAA,SAAAA,IAAA;IAGCjB,MAAA,CAAAC,cAAA;;;;aAAgC;;IAChCD,MAAA,CAAAC,cAAA;;;;aAAiG;;EAmDlG;;;;;WAjDC,SAAAU,CAAUF,MAAe,EAAEC,QAAoB;MAA/C,IAAAX,KAAA;MACC,IAAI,IAAI,CAACmB,MAAM,KAAK,IAAI,EAAE;QACzB,IAAIC,UAAQ,GAAkB,IAAI;QAElC,IAAMC,MAAI,GAAG,SAAAA,CAAA;UACZ,IAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,EAAE;UAE9B,IAAIJ,UAAQ,KAAK,IAAI,IAAIE,WAAW,GAAIF,UAAQ,GAAGF,GAAG,CAACO,KAAM,EAAE;YAC9DL,UAAQ,GAAGE,WAAW;YAEtBxB,MAAM,CAACQ,IAAI,CAACN,KAAI,CAACQ,QAAQ,EAAE,UAACC,CAAC;cAC5B,IAAIiB,OAAO,GAAGjB,CAAC,CAACC,MAAM,CAACiB,qBAAqB,EAAE;cAE9C,IAAID,OAAO,CAACE,KAAK,KAAKnB,CAAC,CAACoB,IAAI,CAACD,KAAK,IAAIF,OAAO,CAACI,MAAM,KAAKrB,CAAC,CAACoB,IAAI,CAACC,MAAM,EAAE;gBACvErB,CAAC,CAACoB,IAAI,GAAGH,OAAO;gBAChBjB,CAAC,CAACE,QAAQ,EAAE;;YAEd,CAAC,CAAC;;UAGH,IAAIX,KAAI,CAACQ,QAAQ,CAACuB,MAAM,KAAK,CAAC,EAAE;YAC/B/B,KAAI,CAACmB,MAAM,GAAG,IAAI;WAElB,MAAM;YACNnB,KAAI,CAACmB,MAAM,GAAGa,qBAAqB,CAACX,MAAI,CAAC;;QAE3C,CAAC;QAED,IAAI,CAACF,MAAM,GAAGa,qBAAqB,CAACX,MAAI,CAAC;;MAG1C;MACA;MACA,IAAIQ,IAAI,GAAG;QAAED,KAAK,EAAE,CAAC;QAAEE,MAAM,EAAE,CAAC;QAAEG,IAAI,EAAE,CAAC;QAAEC,KAAK,EAAE,CAAC;QAAEC,GAAG,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAC,CAAE;MACxE,IAAI,CAAC5B,QAAQ,CAACO,IAAI,CAAC;QAAEL,MAAM,EAAAA,MAAA;QAAEC,QAAQ,EAAAA,QAAA;QAAEkB,IAAI,EAAAA;MAAA,CAAE,CAAC;IAC/C;;;;;;WAEA,SAAAjB,CAAaF,MAAe;MAC3BZ,MAAM,CAACmB,MAAM,CAAC,IAAI,CAACT,QAAQ,EAAE,UAACC,CAAC;QAC9B,OAAOA,CAAC,CAACC,MAAM,KAAKA,MAAM;MAC3B,CAAC,CAAC;MAEF,IAAI,IAAI,CAACF,QAAQ,CAACuB,MAAM,KAAK,CAAC,EAAE;QAC/B,IAAI,IAAI,CAACZ,MAAM,KAAK,IAAI,EAAE;UACzBkB,oBAAoB,CAAC,IAAI,CAAClB,MAAM,CAAC;UACjC,IAAI,CAACA,MAAM,GAAG,IAAI;;;IAGrB;;EArDAlB,MAAA,CAAAC,cAAA,CAAAgB,GAAA;;;;WAA8B;;EAsD/B,OAAAA,GAAC;CAAA,CAvDD;AA0DA;;;AAGA,IAAIoB,QAAQ,GAAkB,IAAI;AAElC;;;AAGA,SAASC,UAAUA,CAAA;EAClB,IAAID,QAAQ,KAAK,IAAI,EAAE;IACtB,IAAI,OAAOlC,cAAc,KAAK,WAAW,EAAE;MAC1CkC,QAAQ,GAAG,IAAIvC,MAAM,EAAE;KAEvB,MAAM;MACNuC,QAAQ,GAAG,IAAIpB,GAAG,EAAE;;;EAItB,OAAOoB,QAAQ;AAChB;AAEA;;;AAGA,IAAAE,YAAA;EAKC,SAAAA,aAAYC,OAAgB,EAAE9B,QAAoB;IAJlDV,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;aAA6B;;IAG5B,IAAI,CAACwC,OAAO,GAAGH,UAAU,EAAE;IAC3B,IAAI,CAACI,QAAQ,GAAGF,OAAO;IACvB,IAAI,CAACC,OAAO,CAACE,SAAS,CAACH,OAAO,EAAE9B,QAAQ,CAAC;EAC1C;;;;;WAEA,SAAAC,CAAA;MACC,OAAO,IAAI,CAACiC,SAAS;IACtB;;;;;;WAEA,SAAAjC,CAAA;MACC,IAAI,CAAC,IAAI,CAACiC,SAAS,EAAE;QACpB,IAAI,CAACA,SAAS,GAAG,IAAI;QACrB,IAAI,CAACH,OAAO,CAACI,YAAY,CAAC,IAAI,CAACH,QAAQ,CAAC;;IAE1C;;EAEA1C,MAAA,CAAAC,cAAA,CAAWsC,YAAA,CAAAO,SAAA,UAAM;SAAjB,SAAAC,CAAA;MACC,OAAO,IAAI,CAACN,OAAO;IACpB,CAAC;;;;EACF,OAAAF,YAAC;AAAD,CAAC,CAzBD"},"metadata":{},"sourceType":"module"}