{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Series } from \"./Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport * as $utils from \"../../core/util/Utils\";\n/**\r\n * A universal legend control.\r\n *\r\n * @important\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\r\n */\n\nvar Legend =\n/** @class */\nfunction (_super) {\n  __extends(Legend, _super);\n\n  function Legend() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * List of all [[Container]] elements for legend items.\r\n     *\r\n     * @default new ListTemplate<Container>\r\n     */\n\n\n    Object.defineProperty(_this, \"itemContainers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Container._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\n          themeTagsSelf: $utils.mergeTags(_this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\n          background: Rectangle.new(_this._root, {\n            themeTags: $utils.mergeTags(_this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\n            themeTagsSelf: $utils.mergeTags(_this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\n          })\n        }, [_this.itemContainers.template]);\n      })\n    });\n    /**\r\n     * List of legend marker elements.\r\n     *\r\n     * @default new ListTemplate<Container>\r\n     */\n\n    Object.defineProperty(_this, \"markers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Container._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\n        }, [_this.markers.template]);\n      })\n    });\n    /**\r\n     * List of legend label elements.\r\n     *\r\n     * @default new ListTemplate<Label>\r\n     */\n\n    Object.defineProperty(_this, \"labels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Label._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\n        }, [_this.labels.template]);\n      })\n    });\n    /**\r\n     * List of legend value label elements.\r\n     *\r\n     * @default new ListTemplate<label>\r\n     */\n\n    Object.defineProperty(_this, \"valueLabels\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return Label._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\n        }, [_this.valueLabels.template]);\n      })\n    });\n    /**\r\n     * List of rectangle elements used for default legend markers.\r\n     *\r\n     * @default new ListTemplate<RoundedRectangle>\r\n     */\n\n    Object.defineProperty(_this, \"markerRectangles\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\n        }, [_this.markerRectangles.template]);\n      })\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Legend.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\n      this.fields.push(\"name\", \"stroke\", \"fill\");\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeItemContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(dataItem) {\n      var itemContainer = this.children.push(this.itemContainers.make());\n\n      itemContainer._setDataItem(dataItem);\n\n      this.itemContainers.push(itemContainer);\n      itemContainer.states.create(\"disabled\", {});\n      return itemContainer;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var marker = this.markers.make();\n      this.markers.push(marker);\n      marker.states.create(\"disabled\", {});\n      return marker;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var label = this.labels.make();\n      label.states.create(\"disabled\", {});\n      return label;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeValueLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var valueLabel = this.valueLabels.make();\n      valueLabel.states.create(\"disabled\", {});\n      return valueLabel;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"makeMarkerRectangle\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value() {\n      var markerRectangle = this.markerRectangles.make();\n      markerRectangle.states.create(\"disabled\", {});\n      return markerRectangle;\n    }\n  });\n  Object.defineProperty(Legend.prototype, \"processDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(dataItem) {\n      var _this = this;\n\n      _super.prototype.processDataItem.call(this, dataItem);\n\n      var itemContainer = this.makeItemContainer(dataItem);\n      var nameField = this.get(\"nameField\");\n      var fillField = this.get(\"fillField\");\n      var strokeField = this.get(\"strokeField\");\n\n      if (itemContainer) {\n        var clickTarget = this.get(\"clickTarget\", \"itemContainer\");\n        var item = dataItem.dataContext;\n\n        if (item && item.set) {\n          item.set(\"legendDataItem\", dataItem);\n        }\n\n        itemContainer._setDataItem(dataItem);\n\n        dataItem.set(\"itemContainer\", itemContainer);\n        var marker = this.makeMarker();\n\n        if (marker) {\n          itemContainer.children.push(marker);\n\n          marker._setDataItem(dataItem);\n\n          dataItem.set(\"marker\", marker);\n          var useDefaultMarker = this.get(\"useDefaultMarker\");\n          var markerRectangle = marker.children.push(this.makeMarkerRectangle());\n          var fill = dataItem.get(\"fill\");\n          var stroke = dataItem.get(\"stroke\");\n          dataItem.set(\"markerRectangle\", markerRectangle);\n\n          if (item && item.get) {\n            fill = item.get(fillField, fill);\n            stroke = item.get(strokeField, stroke);\n          }\n\n          if (!stroke) {\n            stroke = fill;\n          }\n\n          if (!useDefaultMarker) {\n            if (item && item.createLegendMarker) {\n              item.createLegendMarker();\n            }\n          }\n\n          markerRectangle.setAll({\n            fill: fill,\n            stroke: stroke\n          });\n        }\n\n        var label_1 = this.makeLabel();\n\n        if (label_1) {\n          itemContainer.children.push(label_1);\n\n          label_1._setDataItem(dataItem);\n\n          dataItem.set(\"label\", label_1);\n          label_1.text.on(\"text\", function () {\n            itemContainer.set(\"ariaLabel\", label_1.text._getText() + \"; \" + _this._t(\"Press ENTER to toggle\"));\n          });\n\n          if (item && item.get) {\n            dataItem.set(\"name\", item.get(nameField));\n          }\n\n          var name_1 = dataItem.get(\"name\");\n\n          if (name_1) {\n            label_1.set(\"text\", name_1);\n          }\n        }\n\n        var valueLabel = this.makeValueLabel();\n\n        if (valueLabel) {\n          itemContainer.children.push(valueLabel);\n\n          valueLabel._setDataItem(dataItem);\n\n          dataItem.set(\"valueLabel\", valueLabel);\n        }\n\n        if (item && item.show) {\n          this._disposers.push(item.on(\"visible\", function (visible) {\n            itemContainer.set(\"disabled\", !visible);\n          }));\n\n          if (!item.get(\"visible\")) {\n            itemContainer.set(\"disabled\", true);\n          }\n\n          if (clickTarget != \"none\") {\n            var clickContainer = itemContainer;\n\n            if (clickTarget == \"marker\") {\n              clickContainer = marker;\n            }\n\n            this._addClickEvents(clickContainer, item, dataItem);\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Legend.prototype, \"_addClickEvents\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(container, item, dataItem) {\n      var _this = this;\n\n      container.set(\"cursorOverStyle\", \"pointer\");\n      container.events.on(\"pointerover\", function () {\n        var component = item.component;\n\n        if (component && component.hoverDataItem) {\n          component.hoverDataItem(item);\n        }\n      });\n      container.events.on(\"pointerout\", function () {\n        var component = item.component;\n\n        if (component && component.hoverDataItem) {\n          component.unhoverDataItem(item);\n        }\n      });\n      container.events.on(\"click\", function () {\n        var labelText = dataItem.get(\"label\").text._getText();\n\n        if (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\n          item.show();\n          container.set(\"disabled\", false);\n\n          _this._root.readerAlert(_this._t(\"%1 shown\", _this._root.locale, labelText));\n        } else if (item.hide) {\n          item.hide();\n          container.set(\"disabled\", true);\n\n          _this._root.readerAlert(_this._t(\"%1 hidden\", _this._root.locale, labelText));\n        }\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Legend.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(dataItem) {\n      var itemContainer = dataItem.get(\"itemContainer\");\n\n      if (itemContainer) {\n        this.itemContainers.removeValue(itemContainer);\n        itemContainer.dispose();\n      }\n\n      var marker = dataItem.get(\"marker\");\n\n      if (marker) {\n        this.markers.removeValue(marker);\n        marker.dispose();\n      }\n\n      var markerRectangle = dataItem.get(\"markerRectangle\");\n\n      if (markerRectangle) {\n        this.markerRectangles.removeValue(markerRectangle);\n        markerRectangle.dispose();\n      }\n\n      var label = dataItem.get(\"label\");\n\n      if (label) {\n        this.labels.removeValue(label);\n        label.dispose();\n      }\n\n      var valueLabel = dataItem.get(\"valueLabel\");\n\n      if (valueLabel) {\n        this.valueLabels.removeValue(valueLabel);\n        valueLabel.dispose();\n      }\n    }\n  });\n  Object.defineProperty(Legend, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Legend\"\n  });\n  Object.defineProperty(Legend, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Series.classNames.concat([Legend.className])\n  });\n  return Legend;\n}(Series);\n\nexport { Legend };","map":{"version":3,"sources":["../../../../../src/.internal/core/render/Legend.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate } from \"./Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport type { Entity, IEntitySettings } from \"../../core/util/Entity\";\nimport type { Color } from \"../../core/util/Color\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface ILegendDataItem extends ISeriesDataItem {\n\n\t/**\n\t * [[Container]] element holding all other legend item elements, labels,\n\t * markers, etc.\n\t */\n\titemContainer: Container;\n\n\t/**\n\t * Marker element.\n\t */\n\tmarker: Container;\n\n\t/**\n\t * Marker rectangle element.\n\t */\n\tmarkerRectangle: RoundedRectangle;\n\n\t/**\n\t * Label element.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Value label element.\n\t */\n\tvalueLabel: Label;\n\n\t/**\n\t * Marker fill color.\n\t */\n\tfill?: Color;\n\n\t/**\n\t * Marker stroke (outline) color.\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Name of the legend item.\n\t */\n\tname?: string;\n\n}\n\nexport interface ILegendItemSettings extends IEntitySettings {\n\tvisible?: boolean;\n}\n\n/**\n * @ignore\n */\nexport interface ILegendItem extends Entity {\n\t_settings: ILegendItemSettings;\n\tisHidden?: () => boolean;\n\tshow?: () => void;\n\thide?: () => void;\n\tcreateLegendMarker?: () => {}\n\tcomponent?: Series;\n\t// how to define that properties of dataItem should have legendDataItem?\n}\n\n//type ILegendDataItemSettings = { [K in keyof ILegendDataItem]?: string; };\n\nexport interface ILegendSettings extends ISeriesSettings {\n\n\t/**\n\t * If set to `true` the legend will not try to mimic appearance of the actual\n\t * item but rather show default square marker.\n\t *\n\t * @default false\n\t */\n\tuseDefaultMarker?: boolean;\n\n\t/**\n\t * A key to look up in data for a name of the data item.\n\t *\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A key to look up in data for a fill of the data item.\n\t *\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A key to look up in data for a stroke of the data item.\n\t *\n\t */\n\tstrokeField?: string;\n\n\t/**\n\t * @todo review\n\t */\n\tclickTarget?: \"itemContainer\" | \"marker\" | \"none\"\n}\n\nexport interface ILegendPrivate extends ISeriesPrivate {\n}\n\n/**\n * A universal legend control.\n *\n * @important\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/} for more info\n */\nexport class Legend extends Series {\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"legend\"]);\n\t\tthis.fields.push(\"name\", \"stroke\", \"fill\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic static className: string = \"Legend\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Legend.className]);\n\n\tdeclare public _settings: ILegendSettings;\n\tdeclare public _privateSettings: ILegendPrivate;\n\tdeclare public _dataItemSettings: ILegendDataItem;\n\n\t/**\n\t * List of all [[Container]] elements for legend items.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly itemContainers: ListTemplate<Container> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\"]),\n\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"]),\n\t\t\tbackground: Rectangle.new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(this.itemContainers.template.get(\"themeTags\", []), [\"legend\", \"item\", \"background\"]),\n\t\t\t\tthemeTagsSelf: $utils.mergeTags(this.itemContainers.template.get(\"themeTagsSelf\", []), [\"itemcontainer\"])\n\t\t\t})\n\t\t}, [this.itemContainers.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeItemContainer(dataItem: DataItem<this[\"_dataItemSettings\"]>): Container {\n\t\tconst itemContainer = this.children.push(this.itemContainers.make());\n\t\titemContainer._setDataItem(dataItem);\n\t\tthis.itemContainers.push(itemContainer);\n\t\titemContainer.states.create(\"disabled\", {});\n\t\treturn itemContainer;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarker(): Container {\n\t\tconst marker = this.markers.make();\n\t\tthis.markers.push(marker);\n\t\tmarker.states.create(\"disabled\", {});\n\t\treturn marker;\n\t}\n\n\t/**\n\t * List of legend marker elements.\n\t *\n\t * @default new ListTemplate<Container>\n\t */\n\tpublic readonly markers: ListTemplate<Container> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Container._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [\"legend\", \"marker\"])\n\t\t}, [this.markers.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(): Label {\n\t\tconst label = this.labels.make();\n\t\tlabel.states.create(\"disabled\", {});\n\t\treturn label;\n\t}\n\n\t/**\n\t * List of legend label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), [\"legend\", \"label\"])\n\t\t}, [this.labels.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeValueLabel(): Label {\n\t\tconst valueLabel = this.valueLabels.make();\n\t\tvalueLabel.states.create(\"disabled\", {});\n\t\treturn valueLabel;\n\t}\n\n\t/**\n\t * List of legend value label elements.\n\t *\n\t * @default new ListTemplate<label>\n\t */\n\tpublic readonly valueLabels: ListTemplate<Label> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.valueLabels.template.get(\"themeTags\", []), [\"legend\", \"label\", \"value\"])\n\t\t}, [this.valueLabels.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarkerRectangle(): RoundedRectangle {\n\t\tconst markerRectangle = this.markerRectangles.make();\n\t\tmarkerRectangle.states.create(\"disabled\", {});\n\t\treturn markerRectangle;\n\t}\n\n\t/**\n\t * List of rectangle elements used for default legend markers.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly markerRectangles: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markerRectangles.template.get(\"themeTags\", []), [\"legend\", \"marker\", \"rectangle\"])\n\t\t}, [this.markerRectangles.template])\n\t);\n\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst itemContainer = this.makeItemContainer(dataItem);\n\n\t\tconst nameField = this.get(\"nameField\");\n\t\tconst fillField = this.get(\"fillField\");\n\t\tconst strokeField = this.get(\"strokeField\");\n\n\t\tif (itemContainer) {\n\t\t\tconst clickTarget = this.get(\"clickTarget\", \"itemContainer\");\n\n\t\t\tconst item = dataItem.dataContext as ILegendItem;\n\n\t\t\tif (item && item.set) {\n\t\t\t\titem.set(<any>\"legendDataItem\", dataItem);\n\t\t\t}\n\n\t\t\titemContainer._setDataItem(dataItem);\n\t\t\tdataItem.set(\"itemContainer\", itemContainer);\n\n\t\t\tconst marker = this.makeMarker();\n\t\t\tif (marker) {\n\t\t\t\titemContainer.children.push(marker);\n\t\t\t\tmarker._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"marker\", marker);\n\n\t\t\t\tconst useDefaultMarker = this.get(\"useDefaultMarker\");\n\n\t\t\t\tconst markerRectangle = marker.children.push(this.makeMarkerRectangle());\n\n\t\t\t\tlet fill = dataItem.get(\"fill\");\n\t\t\t\tlet stroke = dataItem.get(\"stroke\");\n\n\t\t\t\tdataItem.set(\"markerRectangle\", markerRectangle);\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tfill = item.get(fillField as any, fill);\n\t\t\t\t\tstroke = item.get(strokeField as any, stroke);\n\t\t\t\t}\n\n\t\t\t\tif (!stroke) {\n\t\t\t\t\tstroke = fill;\n\t\t\t\t}\n\n\t\t\t\tif (!useDefaultMarker) {\n\t\t\t\t\tif (item && item.createLegendMarker) {\n\t\t\t\t\t\titem.createLegendMarker();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmarkerRectangle.setAll({ fill, stroke });\n\n\t\t\t}\n\n\t\t\tconst label = this.makeLabel();\n\n\t\t\tif (label) {\n\t\t\t\titemContainer.children.push(label);\n\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"label\", label);\n\n\t\t\t\tlabel.text.on(\"text\", () => {\n\t\t\t\t\titemContainer.set(\"ariaLabel\", label.text._getText() + \"; \" + this._t(\"Press ENTER to toggle\"));\n\t\t\t\t});\n\n\t\t\t\tif (item && item.get) {\n\t\t\t\t\tdataItem.set(\"name\", item.get(nameField as any) as string);\n\t\t\t\t}\n\n\t\t\t\tlet name = dataItem.get(\"name\");\n\n\t\t\t\tif (name) {\n\t\t\t\t\tlabel.set(\"text\", name);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst valueLabel = this.makeValueLabel();\n\t\t\tif (valueLabel) {\n\t\t\t\titemContainer.children.push(valueLabel);\n\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\tdataItem.set(\"valueLabel\", valueLabel);\n\t\t\t}\n\n\t\t\tif (item && item.show) {\n\n\t\t\t\tthis._disposers.push(item.on(\"visible\", (visible) => {\n\t\t\t\t\titemContainer.set(\"disabled\", !visible)\n\t\t\t\t}));\n\n\t\t\t\tif (!item.get(\"visible\")) {\n\t\t\t\t\titemContainer.set(\"disabled\", true);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(clickTarget != \"none\"){\n\t\t\t\t\tvar clickContainer = itemContainer;\n\t\t\t\t\tif(clickTarget == \"marker\"){\n\t\t\t\t\t\tclickContainer = marker;\n\t\t\t\t\t}\n\t\t\t\t\tthis._addClickEvents(clickContainer, item, dataItem)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _addClickEvents(container: Container, item: ILegendItem, dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tcontainer.set(\"cursorOverStyle\", \"pointer\");\n\t\tcontainer.events.on(\"pointerover\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.hoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"pointerout\", () => {\n\t\t\tconst component = item.component;\n\t\t\tif (component && component.hoverDataItem) {\n\t\t\t\tcomponent.unhoverDataItem(item as any)\n\t\t\t}\n\t\t})\n\n\t\tcontainer.events.on(\"click\", () => {\t\t\t\n\t\t\tconst labelText = dataItem.get(\"label\").text._getText();\n\n\t\t\tif (item.show && item.isHidden && (item.isHidden() || item.get(\"visible\") === false)) {\n\t\t\t\titem.show();\n\t\t\t\tcontainer.set(\"disabled\", false);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 shown\", this._root.locale, labelText));\n\t\t\t}\n\t\t\telse if (item.hide) {\n\t\t\t\titem.hide();\n\t\t\t\tcontainer.set(\"disabled\", true);\n\t\t\t\tthis._root.readerAlert(this._t(\"%1 hidden\", this._root.locale, labelText));\n\t\t\t}\n\t\t})\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tlet itemContainer = dataItem.get(\"itemContainer\");\n\t\tif (itemContainer) {\n\t\t\tthis.itemContainers.removeValue(itemContainer);\n\t\t\titemContainer.dispose();\n\t\t}\n\n\t\tlet marker = dataItem.get(\"marker\");\n\t\tif (marker) {\n\t\t\tthis.markers.removeValue(marker);\n\t\t\tmarker.dispose();\n\t\t}\n\n\t\tlet markerRectangle = dataItem.get(\"markerRectangle\");\n\t\tif (markerRectangle) {\n\t\t\tthis.markerRectangles.removeValue(markerRectangle);\n\t\t\tmarkerRectangle.dispose();\n\t\t}\n\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\n\t\tlet valueLabel = dataItem.get(\"valueLabel\");\n\t\tif (valueLabel) {\n\t\t\tthis.valueLabels.removeValue(valueLabel);\n\t\t\tvalueLabel.dispose();\n\t\t}\n\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}