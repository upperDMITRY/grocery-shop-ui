{"ast":null,"code":"import _toConsumableArray from\"/Users/dcurchin/Desktop/final/grocery-shop-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{useSelector,useDispatch}from'react-redux';import{Box,TextField,FormControl,MenuItem}from'@mui/material';import{setSizes}from'../../../../redux/slices/adminProducts';import{memo}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var NUMBER_OF_SIZES=[0,1,2];var SIZE_OPTIONS=[1,2,3,4,5,6,7,8,9,10];var sizesContainerStyle={display:'flex',gap:3,flexGrow:1};var sizeContainerStyle={width:'calc(100% / 3)'};var Sizes=/*#__PURE__*/memo(function(){var sizes=useSelector(function(state){return state.adminProducts.sizes;});var dispatch=useDispatch();return/*#__PURE__*/_jsx(Box,{sx:sizesContainerStyle,children:NUMBER_OF_SIZES.map(function(i){return/*#__PURE__*/_jsx(FormControl,{sx:sizeContainerStyle,children:/*#__PURE__*/_jsx(TextField,{select:true,label:\"Size \".concat(i+1),value:sizes[i],onChange:function onChange(e){var newSizes=[].concat(_toConsumableArray(sizes.slice(0,i)),[e.target.value],_toConsumableArray(sizes.slice(i+1)));dispatch(setSizes(newSizes));},children:SIZE_OPTIONS.map(function(option){return/*#__PURE__*/_jsx(MenuItem,{value:option,children:option},option);})})},i);})});});export default Sizes;","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/Sizes.jsx"],"names":["useSelector","useDispatch","Box","TextField","FormControl","MenuItem","setSizes","memo","NUMBER_OF_SIZES","SIZE_OPTIONS","sizesContainerStyle","display","gap","flexGrow","sizeContainerStyle","width","Sizes","sizes","state","adminProducts","dispatch","map","i","e","newSizes","slice","target","value","option"],"mappings":"4KAAA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,GAAT,CAAcC,SAAd,CAAyBC,WAAzB,CAAsCC,QAAtC,KAAsD,eAAtD,CACA,OAASC,QAAT,KAAyB,wCAAzB,CACA,OAASC,IAAT,KAAqB,OAArB,C,2CAEA,GAAMC,CAAAA,eAAe,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAxB,CACA,GAAMC,CAAAA,YAAY,CAAG,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAhB,CAAmB,CAAnB,CAAsB,CAAtB,CAAyB,CAAzB,CAA4B,EAA5B,CAArB,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,CAAEC,OAAO,CAAE,MAAX,CAAmBC,GAAG,CAAE,CAAxB,CAA2BC,QAAQ,CAAE,CAArC,CAA5B,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,CAAEC,KAAK,CAAE,gBAAT,CAA3B,CAEA,GAAMC,CAAAA,KAAK,cAAGT,IAAI,CAAC,UAAM,CACvB,GAAMU,CAAAA,KAAK,CAAGjB,WAAW,CAAC,SAACkB,KAAD,QAAWA,CAAAA,KAAK,CAACC,aAAN,CAAoBF,KAA/B,EAAD,CAAzB,CACA,GAAMG,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CAEA,mBACE,KAAC,GAAD,EAAK,EAAE,CAAES,mBAAT,UACGF,eAAe,CAACa,GAAhB,CAAoB,SAACC,CAAD,qBACnB,KAAC,WAAD,EAAqB,EAAE,CAAER,kBAAzB,uBACE,KAAC,SAAD,EACE,MAAM,KADR,CAEE,KAAK,gBAAUQ,CAAC,CAAG,CAAd,CAFP,CAGE,KAAK,CAAEL,KAAK,CAACK,CAAD,CAHd,CAIE,QAAQ,CAAE,kBAACC,CAAD,CAAO,CACf,GAAMC,CAAAA,QAAQ,8BACTP,KAAK,CAACQ,KAAN,CAAY,CAAZ,CAAeH,CAAf,CADS,GAEZC,CAAC,CAACG,MAAF,CAASC,KAFG,qBAGTV,KAAK,CAACQ,KAAN,CAAYH,CAAC,CAAG,CAAhB,CAHS,EAAd,CAKAF,QAAQ,CAACd,QAAQ,CAACkB,QAAD,CAAT,CAAR,CACD,CAXH,UAaGf,YAAY,CAACY,GAAb,CAAiB,SAACO,MAAD,qBAChB,KAAC,QAAD,EAAuB,KAAK,CAAEA,MAA9B,UACGA,MADH,EAAeA,MAAf,CADgB,EAAjB,CAbH,EADF,EAAkBN,CAAlB,CADmB,EAApB,CADH,EADF,CA2BD,CA/BiB,CAAlB,CAiCA,cAAeN,CAAAA,KAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport { Box, TextField, FormControl, MenuItem } from '@mui/material';\r\nimport { setSizes } from '../../../../redux/slices/adminProducts';\r\nimport { memo } from 'react';\r\n\r\nconst NUMBER_OF_SIZES = [0, 1, 2];\r\nconst SIZE_OPTIONS = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\nconst sizesContainerStyle = { display: 'flex', gap: 3, flexGrow: 1 };\r\n\r\nconst sizeContainerStyle = { width: 'calc(100% / 3)' };\r\n\r\nconst Sizes = memo(() => {\r\n  const sizes = useSelector((state) => state.adminProducts.sizes);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box sx={sizesContainerStyle}>\r\n      {NUMBER_OF_SIZES.map((i) => (\r\n        <FormControl key={i} sx={sizeContainerStyle}>\r\n          <TextField\r\n            select\r\n            label={`Size ${i + 1}`}\r\n            value={sizes[i]}\r\n            onChange={(e) => {\r\n              const newSizes = [\r\n                ...sizes.slice(0, i),\r\n                e.target.value,\r\n                ...sizes.slice(i + 1),\r\n              ];\r\n              dispatch(setSizes(newSizes));\r\n            }}\r\n          >\r\n            {SIZE_OPTIONS.map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </FormControl>\r\n      ))}\r\n    </Box>\r\n  );\r\n});\r\n\r\nexport default Sizes;\r\n"]},"metadata":{},"sourceType":"module"}