{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { BaseColumnSeries } from \"./BaseColumnSeries\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\nimport * as $utils from \"../../../core/util/Utils\";\nvar ColumnSeries = /** @class */function (_super) {\n  __extends(ColumnSeries, _super);\n  function ColumnSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[TemplateList]] of all columns in series.\r\n     *\r\n     * `columns.template` can be used to set default settings for all columns,\r\n     * or to change on existing ones.\r\n     */\n    Object.defineProperty(_this, \"columns\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          position: \"absolute\",\n          themeTags: $utils.mergeTags(_this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\n        }, [_this.columns.template]);\n      })\n    });\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(ColumnSeries.prototype, \"makeColumn\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, listTemplate) {\n      var column = this.mainContainer.children.push(listTemplate.make());\n      column._setDataItem(dataItem);\n      listTemplate.push(column);\n      return column;\n    }\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"_processAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisRange) {\n      var _this = this;\n      _super.prototype._processAxisRange.call(this, axisRange);\n      axisRange.columns = new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          position: \"absolute\",\n          themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\n        }, [_this.columns.template, axisRange.columns.template]);\n      });\n    }\n  });\n  Object.defineProperty(ColumnSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"ColumnSeries\"\n  });\n  Object.defineProperty(ColumnSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: BaseColumnSeries.classNames.concat([ColumnSeries.className])\n  });\n  return ColumnSeries;\n}(BaseColumnSeries);\nexport { ColumnSeries };","map":{"version":3,"names":["BaseColumnSeries","Template","ListTemplate","RoundedRectangle","$utils","ColumnSeries","_super","__extends","_this","apply","arguments","Object","defineProperty","new","_new","_root","position","themeTags","mergeTags","columns","template","get","value","dataItem","listTemplate","column","mainContainer","children","push","make","_setDataItem","axisRange","prototype","_processAxisRange","call","classNames","concat","className"],"sources":["../../../../../../src/.internal/charts/xy/series/ColumnSeries.ts"],"sourcesContent":["import { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAoH,oBAAoB;AAEjK,SAASC,QAAQ,QAAQ,6BAA6B;AACtD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,gBAAgB,QAAQ,uCAAuC;AACxE,OAAO,KAAKC,MAAM,MAAM,0BAA0B;AAYlD,IAAAC,YAAA,0BAAAC,MAAA;EAAkCC,SAAA,CAAAF,YAAA,EAAAC,MAAA;EAAlC,SAAAD,aAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IAiBC;;;;;;IAMAC,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA0D,IAAIN,YAAY,CACzED,QAAQ,CAACY,GAAG,CAAC,EAAE,CAAC,EAChB;QAAM,OAAAV,gBAAgB,CAACW,IAAI,CAACN,KAAI,CAACO,KAAK,EAAE;UACvCC,QAAQ,EAAE,UAAU;UACpBC,SAAS,EAAEb,MAAM,CAACc,SAAS,CAACV,KAAI,CAACW,OAAO,CAACC,QAAQ,CAACC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;SAC5F,EAAE,CAACb,KAAI,CAACW,OAAO,CAACC,QAAQ,CAAC,CAAC;MAHrB,CAGqB;;;EAiB7B;EAtCC;;;;;;;WAGA,SAAAE,CAAkBC,QAA6C,EAAEC,YAA4C;MAC5G,IAAMC,MAAM,GAAG,IAAI,CAACC,aAAa,CAACC,QAAQ,CAACC,IAAI,CAACJ,YAAY,CAACK,IAAI,EAAE,CAAC;MACpEJ,MAAM,CAACK,YAAY,CAACP,QAAQ,CAAC;MAC7BC,YAAY,CAACI,IAAI,CAACH,MAAM,CAAC;MACzB,OAAOA,MAAM;IACd;;;;;;WAoBA,SAAAH,CAA4BS,SAAiC;MAA7D,IAAAvB,KAAA;MACCF,MAAA,CAAA0B,SAAA,CAAMC,iBAAiB,CAAAC,IAAA,OAACH,SAAS,CAAC;MAClCA,SAAS,CAACZ,OAAO,GAAG,IAAIjB,YAAY,CACnCD,QAAQ,CAACY,GAAG,CAAC,EAAE,CAAC,EAChB;QAAM,OAAAV,gBAAgB,CAACW,IAAI,CAACN,KAAI,CAACO,KAAK,EAAE;UACvCC,QAAQ,EAAE,UAAU;UACpBC,SAAS,EAAEb,MAAM,CAACc,SAAS,CAACa,SAAS,CAACZ,OAAO,CAACC,QAAQ,CAACC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;SACjG,EAAE,CAACb,KAAI,CAACW,OAAO,CAACC,QAAQ,EAAEW,SAAS,CAACZ,OAAO,CAACC,QAAQ,CAAC,CAAC;MAHjD,CAGiD,CACvD;IACF;;EAbAT,MAAA,CAAAC,cAAA,CAAAP,YAAA;;;;WAAkC;;EAClCM,MAAA,CAAAC,cAAA,CAAAP,YAAA;;;;WAA0CL,gBAAgB,CAACmC,UAAU,CAACC,MAAM,CAAC,CAAC/B,YAAY,CAACgC,SAAS,CAAC;;EAatG,OAAAhC,YAAC;CAAA,CA7CiCL,gBAAgB;SAArCK,YAAY"},"metadata":{},"sourceType":"module"}