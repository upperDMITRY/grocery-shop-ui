{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Container } from \"./Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { Tooltip } from \"../../core/render/Tooltip\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\n/**\r\n * Heat legend.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\r\n */\n\nvar HeatLegend =\n/** @class */\nfunction (_super) {\n  __extends(HeatLegend, _super);\n\n  function HeatLegend() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[Container]] that all labels are placed in.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n\n    Object.defineProperty(_this, \"labelContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A [[Container]] that all markers are placed in.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"markerContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A start [[Label]].\r\n     *\r\n     * @default Label.new()\r\n     */\n\n    Object.defineProperty(_this, \"startLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.labelContainer.children.push(Label.new(_this._root, {\n        themeTags: [\"start\"]\n      }))\n    });\n    /**\r\n     * An end [[Label]].\r\n     *\r\n     * @default Label.new()\r\n     */\n\n    Object.defineProperty(_this, \"endLabel\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.labelContainer.children.push(Label.new(_this._root, {\n        themeTags: [\"end\"]\n      }))\n    });\n    /**\r\n     * List of rectangle elements used for default legend markers.\r\n     *\r\n     * @default new ListTemplate<RoundedRectangle>\r\n     */\n\n    Object.defineProperty(_this, \"markers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          themeTags: $utils.mergeTags(_this.markers.template.get(\"themeTags\", []), [_this.get(\"orientation\"), \"heatlegend\", \"marker\"])\n        }, [_this.markers.template]);\n      })\n    });\n    return _this;\n  }\n\n  Object.defineProperty(HeatLegend.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\n\n      _super.prototype._afterNew.call(this);\n\n      this.set(\"tooltip\", Tooltip.new(this._root, {\n        themeTags: [\"heatlegend\"]\n      }));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(HeatLegend.prototype, \"makeMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var marker = this.markers.make();\n      marker.states.create(\"disabled\", {});\n      return marker;\n    }\n  });\n  /**\r\n   * Moves and shows tooltip at specific value.\r\n   *\r\n   * Can also specify optional text to show in tooltip, as well as the color.\r\n   *\r\n   * @param  value  Value\r\n   * @param  text   Text\r\n   * @param  color  Color\r\n   */\n\n  Object.defineProperty(HeatLegend.prototype, \"showValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value, text, color) {\n      var tooltip = this.getTooltip();\n\n      if (tooltip && $type.isNumber(value)) {\n        var startValue = this.get(\"startValue\", 0);\n        var endValue = this.get(\"endValue\", 1);\n        var c = (value - startValue) / (endValue - startValue);\n        var startColor = this.get(\"startColor\");\n        var endColor = this.get(\"endColor\");\n\n        if (!text) {\n          text = this.getNumberFormatter().format(value);\n        }\n\n        if (!color) {\n          color = Color.interpolate(c, startColor, endColor);\n        }\n\n        tooltip.label.set(\"text\", text);\n        var p = void 0;\n\n        if (this.get(\"orientation\") == \"vertical\") {\n          p = this.markerContainer.toGlobal({\n            x: 0,\n            y: this.innerHeight() * (1 - c)\n          });\n        } else {\n          p = this.markerContainer.toGlobal({\n            x: this.innerWidth() * c,\n            y: 0\n          });\n        }\n\n        var background = tooltip.get(\"background\");\n\n        if (background) {\n          background.set(\"fill\", Color.interpolate(c, startColor, endColor));\n        }\n\n        tooltip.set(\"pointTo\", p);\n        tooltip.show();\n      }\n    }\n  });\n  Object.defineProperty(HeatLegend.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._prepareChildren.call(this);\n\n      var labelContainer = this.labelContainer;\n      var orientation = this.get(\"orientation\");\n      var startLabel = this.startLabel;\n      var endLabel = this.endLabel;\n      var tooltip = this.getTooltip();\n\n      if (this.isDirty(\"orientation\")) {\n        if (orientation == \"vertical\") {\n          this.markerContainer.setAll({\n            layout: this._root.verticalLayout,\n            height: p100\n          });\n          this.set(\"layout\", this._root.horizontalLayout);\n          startLabel.setAll({\n            y: p100,\n            x: undefined,\n            centerY: p100,\n            centerX: p100\n          });\n          endLabel.setAll({\n            y: 0,\n            x: undefined,\n            centerY: 0,\n            centerX: p100\n          });\n          labelContainer.setAll({\n            height: p100,\n            width: undefined\n          });\n\n          if (tooltip) {\n            tooltip.set(\"pointerOrientation\", \"horizontal\");\n          }\n        } else {\n          this.markerContainer.setAll({\n            layout: this._root.horizontalLayout,\n            width: p100\n          });\n          this.set(\"layout\", this._root.verticalLayout);\n          startLabel.setAll({\n            x: 0,\n            y: undefined,\n            centerX: 0,\n            centerY: 0\n          });\n          endLabel.setAll({\n            x: p100,\n            y: undefined,\n            centerX: p100,\n            centerY: 0\n          });\n          labelContainer.setAll({\n            width: p100,\n            height: undefined\n          });\n\n          if (tooltip) {\n            tooltip.set(\"pointerOrientation\", \"vertical\");\n          }\n        }\n      }\n\n      if (this.isDirty(\"stepCount\")) {\n        var stepCount = this.get(\"stepCount\", 1);\n        var startColor = this.get(\"startColor\");\n        var endColor = this.get(\"endColor\");\n        this.markerContainer.children.clear();\n\n        if (stepCount > 1) {\n          for (var i = 0; i < stepCount; i++) {\n            var marker = this.makeMarker();\n\n            if (orientation == \"vertical\") {\n              this.markerContainer.children.moveValue(marker, 0);\n            } else {\n              this.markerContainer.children.push(marker);\n            }\n\n            if (startColor && endColor) {\n              marker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\n            }\n          }\n        } else if (stepCount == 1) {\n          var marker = this.makeMarker();\n          this.markerContainer.children.push(marker);\n          var gradient = LinearGradient.new(this._root, {\n            stops: [{\n              color: startColor\n            }, {\n              color: endColor\n            }]\n          });\n\n          if (orientation == \"vertical\") {\n            gradient.set(\"rotation\", 90);\n            var stops = gradient.get(\"stops\");\n\n            if (stops) {\n              stops.reverse();\n            }\n          } else {\n            gradient.set(\"rotation\", 0);\n          }\n\n          if (startColor && endColor) {\n            marker.set(\"fillGradient\", gradient);\n          }\n        }\n      }\n\n      if (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\n        startLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\n      }\n\n      if (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\n        endLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))));\n      }\n    }\n  });\n  Object.defineProperty(HeatLegend, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"HeatLegend\"\n  });\n  Object.defineProperty(HeatLegend, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([HeatLegend.className])\n  });\n  return HeatLegend;\n}(Container);\n\nexport { HeatLegend };","map":{"version":3,"sources":["../../../../../src/.internal/core/render/HeatLegend.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IPoint } from \"../../core/util/IPoint\";\n\nimport { Container, IContainerSettings, IContainerPrivate } from \"./Container\";\nimport { Label } from \"../../core/render/Label\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { Tooltip } from \"../../core/render/Tooltip\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\n\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IHeatLegendSettings extends IContainerSettings {\n\n\t/**\n\t * Starting (lowest value) color.\n\t */\n\tstartColor: Color;\n\n\t/**\n\t * Ending (highest value) color.\n\t */\n\tendColor: Color;\n\n\t/**\n\t * Start (lowest) value.\n\t */\n\tstartValue?: number;\n\n\t/**\n\t * End (highest) value.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * Text for start label.\n\t */\n\tstartText?: string;\n\n\t/**\n\t * Text for end label.\n\t */\n\tendText?: string;\n\n\t/**\n\t * Number of steps\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/#Gradient_or_steps} for more info\n\t */\n\tstepCount?: number;\n\n\t/**\n\t * Orientation of the heat legend.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/#Orientation} for more info\n\t */\n\torientation: \"horizontal\" | \"vertical\";\n\n}\n\nexport interface IHeatLegendPrivate extends IContainerPrivate {\n}\n\n/**\n * Heat legend.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/} for more info\n */\nexport class HeatLegend extends Container {\n\n\t/**\n\t * A [[Container]] that all labels are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that all markers are placed in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly markerContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A start [[Label]].\n\t *\n\t * @default Label.new()\n\t */\n\tpublic readonly startLabel: Label = this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"start\"] }));\n\n\t/**\n\t * An end [[Label]].\n\t *\n\t * @default Label.new()\n\t */\n\tpublic readonly endLabel: Label = this.labelContainer.children.push(Label.new(this._root, { themeTags: [\"end\"] }));\n\n\tpublic static className: string = \"HeatLegend\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([HeatLegend.className]);\n\n\tdeclare public _settings: IHeatLegendSettings;\n\tdeclare public _privateSettings: IHeatLegendPrivate;\n\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"heatlegend\", this._settings.orientation]);\n\t\tsuper._afterNew();\n\t\tthis.set(\"tooltip\", Tooltip.new(this._root, {\n\t\t\tthemeTags: [\"heatlegend\"]\n\t\t}));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMarker(): RoundedRectangle {\n\t\tconst marker = this.markers.make();\n\t\tmarker.states.create(\"disabled\", {});\n\t\treturn marker;\n\t}\n\n\t/**\n\t * List of rectangle elements used for default legend markers.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly markers: ListTemplate<RoundedRectangle> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.markers.template.get(\"themeTags\", []), [this.get(\"orientation\"), \"heatlegend\", \"marker\"])\n\t\t}, [this.markers.template])\n\t);\n\n\n\t/**\n\t * Moves and shows tooltip at specific value.\n\t *\n\t * Can also specify optional text to show in tooltip, as well as the color.\n\t *\n\t * @param  value  Value\n\t * @param  text   Text\n\t * @param  color  Color\n\t */\n\tpublic showValue(value: number, text?: string, color?: Color) {\n\t\tconst tooltip = this.getTooltip();\n\t\tif (tooltip && $type.isNumber(value)) {\n\n\t\t\tconst startValue = this.get(\"startValue\", 0);\n\t\t\tconst endValue = this.get(\"endValue\", 1);\n\n\t\t\tconst c = (value - startValue) / (endValue - startValue);\n\t\t\tconst startColor = this.get(\"startColor\")!;\n\t\t\tconst endColor = this.get(\"endColor\")!;\n\n\t\t\tif (!text) {\n\t\t\t\ttext = this.getNumberFormatter().format(value);\n\t\t\t}\n\n\t\t\tif (!color) {\n\t\t\t\tcolor = Color.interpolate(c, startColor, endColor);\n\t\t\t}\n\n\t\t\ttooltip.label.set(\"text\", text);\n\t\t\tlet p:IPoint;\n\n\t\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\t\tp = this.markerContainer.toGlobal({ x: 0, y: this.innerHeight() * (1 - c) });\n\t\t\t}\n\t\t\telse {\n\t\t\t\tp = this.markerContainer.toGlobal({ x: this.innerWidth() * c, y: 0 });\n\t\t\t}\n\n\t\t\tlet background = tooltip.get(\"background\");\n\t\t\tif (background) {\n\t\t\t\tbackground.set(\"fill\", Color.interpolate(c, startColor, endColor))\n\t\t\t}\n\t\t\ttooltip.set(\"pointTo\", p);\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst labelContainer = this.labelContainer;\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst startLabel = this.startLabel;\n\t\tconst endLabel = this.endLabel;\n\t\tconst tooltip = this.getTooltip();\n\n\t\tif (this.isDirty(\"orientation\")) {\n\t\t\tif (orientation == \"vertical\") {\n\t\t\t\tthis.markerContainer.setAll({ layout: this._root.verticalLayout, height: p100 });\n\t\t\t\tthis.set(\"layout\", this._root.horizontalLayout);\n\t\t\t\tstartLabel.setAll({ y: p100, x: undefined, centerY: p100, centerX: p100 });\n\t\t\t\tendLabel.setAll({ y: 0, x: undefined, centerY: 0, centerX: p100 });\n\t\t\t\tlabelContainer.setAll({ height: p100, width: undefined });\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip.set(\"pointerOrientation\", \"horizontal\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.markerContainer.setAll({ layout: this._root.horizontalLayout, width: p100 });\n\t\t\t\tthis.set(\"layout\", this._root.verticalLayout);\n\t\t\t\tstartLabel.setAll({ x: 0, y: undefined, centerX: 0, centerY: 0 });\n\t\t\t\tendLabel.setAll({ x: p100, y: undefined, centerX: p100, centerY: 0 });\n\t\t\t\tlabelContainer.setAll({ width: p100, height: undefined });\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip.set(\"pointerOrientation\", \"vertical\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stepCount\")) {\n\t\t\tconst stepCount = this.get(\"stepCount\", 1);\n\t\t\tconst startColor = this.get(\"startColor\")!;\n\t\t\tconst endColor = this.get(\"endColor\")!;\n\t\t\tthis.markerContainer.children.clear();\n\t\t\tif (stepCount > 1) {\n\t\t\t\tfor (let i = 0; i < stepCount; i++) {\n\t\t\t\t\tconst marker = this.makeMarker();\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tthis.markerContainer.children.moveValue(marker, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.markerContainer.children.push(marker);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (startColor && endColor) {\n\t\t\t\t\t\tmarker.set(\"fill\", Color.interpolate(i / stepCount, startColor, endColor));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (stepCount == 1) {\n\t\t\t\tconst marker = this.makeMarker();\n\t\t\t\tthis.markerContainer.children.push(marker);\n\t\t\t\tconst gradient = LinearGradient.new(this._root, { stops: [{ color: startColor }, { color: endColor }] });\n\n\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\tgradient.set(\"rotation\", 90);\n\t\t\t\t\tlet stops = gradient.get(\"stops\");\n\t\t\t\t\tif (stops) {\n\t\t\t\t\t\tstops.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tgradient.set(\"rotation\", 0);\n\t\t\t\t}\n\t\t\t\tif (startColor && endColor) {\n\t\t\t\t\tmarker.set(\"fillGradient\", gradient);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"startText\") || this.isDirty(\"startValue\")) {\n\t\t\tstartLabel.set(\"text\", this.get(\"startText\", this.getNumberFormatter().format(this.get(\"startValue\", 0))));\n\t\t}\n\n\t\tif (this.isDirty(\"endText\") || this.isDirty(\"endValue\")) {\n\t\t\tendLabel.set(\"text\", this.get(\"endText\", this.getNumberFormatter().format(this.get(\"endValue\", 1))))\n\t\t}\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}