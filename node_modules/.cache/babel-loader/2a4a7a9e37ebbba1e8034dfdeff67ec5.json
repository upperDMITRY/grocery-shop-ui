{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Gradient } from \"./Gradient\";\nimport { Color } from \"../../util/Color\";\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\n/**\r\n * Radial gradient.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\r\n */\nvar RadialGradient = /** @class */function (_super) {\n  __extends(RadialGradient, _super);\n  function RadialGradient() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(RadialGradient.prototype, \"getFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (target) {\n      var bounds = this.getBounds(target);\n      var x = 0;\n      var y = 0;\n      var l = bounds.left || 0;\n      var r = bounds.right || 0;\n      var t = bounds.top || 0;\n      var b = bounds.bottom || 0;\n      var width = r - l;\n      var height = b - t;\n      var radius = target.get(\"radius\");\n      if ($type.isNumber(radius)) {\n        x = 0;\n        y = 0;\n      } else {\n        radius = Math.min(width, height) / 2;\n        x = width / 2;\n        y = height / 2;\n      }\n      var gradient = this._root._renderer.createRadialGradient(x, y, 0, x, y, radius);\n      var stops = this.get(\"stops\");\n      if (stops) {\n        var i_1 = 0;\n        $array.each(stops, function (stop) {\n          var offset = stop.offset;\n          if (!$type.isNumber(offset)) {\n            offset = i_1 / (stops.length - 1);\n          }\n          var opacity = stop.opacity;\n          if (!$type.isNumber(opacity)) {\n            opacity = 1;\n          }\n          var color = stop.color;\n          if (color) {\n            var lighten = stop.lighten;\n            if (lighten) {\n              color = Color.lighten(color, lighten);\n            }\n            var brighten = stop.brighten;\n            if (brighten) {\n              color = Color.brighten(color, brighten);\n            }\n            gradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\n          }\n          i_1++;\n        });\n      }\n      return gradient;\n    }\n  });\n  Object.defineProperty(RadialGradient, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"RadialGradient\"\n  });\n  Object.defineProperty(RadialGradient, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Gradient.classNames.concat([RadialGradient.className])\n  });\n  return RadialGradient;\n}(Gradient);\nexport { RadialGradient };","map":{"version":3,"names":["Gradient","Color","$array","$type","RadialGradient","_super","__extends","value","target","bounds","getBounds","x","y","l","left","r","right","t","top","b","bottom","width","height","radius","get","isNumber","Math","min","gradient","_root","_renderer","createRadialGradient","stops","i_1","each","stop","offset","length","opacity","color","lighten","brighten","addColorStop","g","Object","defineProperty","classNames","concat","className"],"sources":["../../../../../../src/.internal/core/render/gradients/RadialGradient.ts"],"sourcesContent":["import type { IGradient } from \"../backend/Renderer\";\nimport type { Sprite } from \"../Sprite\";\nimport type { Percent } from \"../../util/Percent\";\n\nimport { Gradient, IGradientSettings, IGradientPrivate } from \"./Gradient\";\nimport { Color } from \"../../util/Color\";\n\nimport * as $array from \"../../util/Array\";\nimport * as $type from \"../../util/Type\";\n\n\nexport interface IRadialGradientSettings extends IGradientSettings {\n\n\t/**\n\t * Gradient radius in pixels or percent (relative to the `target`).\n\t */\n\tradius?: number | Percent;\n\n\t/**\n\t * X position.\n\t */\n\tx?: number | Percent;\n\n\t/**\n\t * Y position.\n\t */\n\ty?: number | Percent;\n\n}\n\nexport interface IRadialGradientPrivate extends IGradientPrivate {\n}\n\n/**\n * Radial gradient.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/gradients/} for more info\n */\nexport class RadialGradient extends Gradient {\n\n\tdeclare public _settings: IRadialGradientSettings;\n\tdeclare public _privateSettings: IRadialGradientPrivate;\n\n\tpublic static className: string = \"RadialGradient\";\n\tpublic static classNames: Array<string> = Gradient.classNames.concat([RadialGradient.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getFill(target: Sprite): IGradient {\n\t\tconst bounds = this.getBounds(target);\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tlet l = bounds.left || 0;\n\t\tlet r = bounds.right || 0;\n\t\tlet t = bounds.top || 0;\n\t\tlet b = bounds.bottom || 0;\n\n\t\tconst width = r - l;\n\t\tconst height = b - t;\n\n\t\tlet radius = target.get(\"radius\" as any);\n\t\tif ($type.isNumber(radius)) {\n\t\t\tx = 0;\n\t\t\ty = 0;\n\t\t}\n\t\telse {\n\t\t\tradius = Math.min(width, height) / 2;\n\t\t\tx = width / 2;\n\t\t\ty = height / 2;\n\t\t}\n\n\t\tconst gradient = this._root._renderer.createRadialGradient(x, y, 0, x, y, radius);\n\t\tconst stops = this.get(\"stops\")!;\n\t\tif (stops) {\n\t\t\tlet i = 0;\n\t\t\t$array.each(stops, (stop) => {\n\n\t\t\t\tlet offset = stop.offset;\n\n\t\t\t\tif (!$type.isNumber(offset)) {\n\t\t\t\t\toffset = i / (stops.length - 1);\n\t\t\t\t}\n\n\t\t\t\tlet opacity = stop.opacity;\n\n\t\t\t\tif (!$type.isNumber(opacity)) {\n\t\t\t\t\topacity = 1;\n\t\t\t\t}\n\n\t\t\t\tlet color = stop.color;\n\n\t\t\t\tif (color) {\n\n\t\t\t\t\tconst lighten = stop.lighten;\n\t\t\t\t\tif (lighten) {\n\t\t\t\t\t\tcolor = Color.lighten(color, lighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst brighten = stop.brighten;\n\t\t\t\t\tif (brighten) {\n\t\t\t\t\t\tcolor = Color.brighten(color, brighten)\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.addColorStop(offset, 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + opacity + ')');\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t})\n\t\t}\n\n\t\treturn gradient\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}