{"ast":null,"code":"import{Popover,Typography,Box}from'@mui/material';import{useSelector,useDispatch}from'react-redux';import{setIsEmpty}from'../../redux/slices/cartSlice';import{jsx as _jsx}from\"react/jsx-runtime\";var DialogStatusCart=function DialogStatusCart(){var dispatch=useDispatch();var cart=useSelector(function(state){return state.cart;});var handleClose=function handleClose(){dispatch(setIsEmpty(null));};if(cart.isEmpty){setTimeout(function(){dispatch(setIsEmpty(null));},1000);}return/*#__PURE__*/_jsx(Popover,{open:Boolean(cart.isEmpty),anchorEl:cart.isEmpty,onClose:handleClose,anchorOrigin:{vertical:'bottom',horizontal:'right'},transformOrigin:{vertical:'top',horizontal:'right'},children:/*#__PURE__*/_jsx(Box,{sx:{width:'320px',padding:'10px 20px'},children:/*#__PURE__*/_jsx(Typography,{sx:{textAlign:'center'},children:\"Your cart is currently empty.\"})})});};export default DialogStatusCart;","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/dialogCart/DialogStatusCart.jsx"],"names":["Popover","Typography","Box","useSelector","useDispatch","setIsEmpty","DialogStatusCart","dispatch","cart","state","handleClose","isEmpty","setTimeout","Boolean","vertical","horizontal","width","padding","textAlign"],"mappings":"AAAA,OAASA,OAAT,CAAkBC,UAAlB,CAA8BC,GAA9B,KAAyC,eAAzC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,KAA2B,8BAA3B,C,2CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAMC,CAAAA,QAAQ,CAAGH,WAAW,EAA5B,CACA,GAAMI,CAAAA,IAAI,CAAGL,WAAW,CAAC,SAACM,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CAEA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBH,QAAQ,CAACF,UAAU,CAAC,IAAD,CAAX,CAAR,CACD,CAFD,CAIA,GAAIG,IAAI,CAACG,OAAT,CAAkB,CAChBC,UAAU,CAAC,UAAM,CACfL,QAAQ,CAACF,UAAU,CAAC,IAAD,CAAX,CAAR,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CAED,mBACE,KAAC,OAAD,EACE,IAAI,CAAEQ,OAAO,CAACL,IAAI,CAACG,OAAN,CADf,CAEE,QAAQ,CAAEH,IAAI,CAACG,OAFjB,CAGE,OAAO,CAAED,WAHX,CAIE,YAAY,CAAE,CACZI,QAAQ,CAAE,QADE,CAEZC,UAAU,CAAE,OAFA,CAJhB,CAQE,eAAe,CAAE,CACfD,QAAQ,CAAE,KADK,CAEfC,UAAU,CAAE,OAFG,CARnB,uBAaE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,OAAO,CAAE,WAA3B,CAAT,uBACE,KAAC,UAAD,EAAY,EAAE,CAAE,CAAEC,SAAS,CAAE,QAAb,CAAhB,2CADF,EAbF,EADF,CAqBD,CAnCD,CAqCA,cAAeZ,CAAAA,gBAAf","sourcesContent":["import { Popover, Typography, Box } from '@mui/material';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setIsEmpty } from '../../redux/slices/cartSlice';\r\n\r\nconst DialogStatusCart = () => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const handleClose = () => {\r\n    dispatch(setIsEmpty(null));\r\n  };\r\n\r\n  if (cart.isEmpty) {\r\n    setTimeout(() => {\r\n      dispatch(setIsEmpty(null));\r\n    }, 1000);\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(cart.isEmpty)}\r\n      anchorEl={cart.isEmpty}\r\n      onClose={handleClose}\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'top',\r\n        horizontal: 'right',\r\n      }}\r\n    >\r\n      <Box sx={{ width: '320px', padding: '10px 20px' }}>\r\n        <Typography sx={{ textAlign: 'center' }}>\r\n          Your cart is currently empty.\r\n        </Typography>\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default DialogStatusCart;\r\n"]},"metadata":{},"sourceType":"module"}