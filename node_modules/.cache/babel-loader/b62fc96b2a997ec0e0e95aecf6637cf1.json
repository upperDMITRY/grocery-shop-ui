{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/Rating.jsx\",\n    _s = $RefreshSig$();\n\nimport { memo, forwardRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { OutlinedInput, FormControl, InputLabel, InputAdornment } from '@mui/material';\nimport StarIcon from '@mui/icons-material/Star';\nimport { setRating } from '../../../../redux/slices/adminProducts';\nimport NumberFormat from 'react-number-format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NumberFormatCustom = /*#__PURE__*/forwardRef(_c = function NumberFormatCustom(props, ref) {\n  const {\n    onChange,\n    rating,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumberFormat, { ...other,\n    onValueChange: values => {\n      const {\n        floatValue\n      } = values;\n      onChange({\n        target: {\n          value: floatValue\n        }\n      });\n    },\n    decimalSeparator: '.',\n    decimalScale: 1,\n    allowNegative: false,\n    allowLeadingZeros: false,\n    maxLength: 3,\n    placeholder: '0',\n    isNumericString: true,\n    value: rating,\n    isAllowed: values => {\n      const {\n        floatValue\n      } = values;\n      if (!floatValue) return true;else {\n        return floatValue < 5.1;\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n});\n_c2 = NumberFormatCustom;\nconst Rating = /*#__PURE__*/memo(_c3 = _s(() => {\n  _s();\n\n  const rating = useSelector(state => state.adminProducts.rating);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    sx: {\n      width: '50%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      children: \"Rating\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n      label: \"Rating\",\n      value: rating,\n      onChange: e => dispatch(setRating(e.target.value)),\n      sx: {\n        paddingLeft: '12px'\n      },\n      startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"start\",\n        children: /*#__PURE__*/_jsxDEV(StarIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this),\n      inputComponent: NumberFormatCustom,\n      inputProps: {\n        rating\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}, \"/YzHGk0LMDLIpjRe+zQ5LjIDTIo=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n_c4 = Rating;\nexport default Rating;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"NumberFormatCustom$forwardRef\");\n$RefreshReg$(_c2, \"NumberFormatCustom\");\n$RefreshReg$(_c3, \"Rating$memo\");\n$RefreshReg$(_c4, \"Rating\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/Rating.jsx"],"names":["memo","forwardRef","useSelector","useDispatch","OutlinedInput","FormControl","InputLabel","InputAdornment","StarIcon","setRating","NumberFormat","NumberFormatCustom","props","ref","onChange","rating","other","values","floatValue","target","value","Rating","state","adminProducts","dispatch","width","e","paddingLeft"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,UAAf,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,cAJF,QAKO,eALP;AAMA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,SAAT,QAA0B,wCAA1B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;;AAEA,MAAMC,kBAAkB,gBAAGV,UAAU,MAAC,SAASU,kBAAT,CAA4BC,KAA5B,EAAmCC,GAAnC,EAAwC;AAC5E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoB,OAAGC;AAAvB,MAAiCJ,KAAvC;AAEA,sBACE,QAAC,YAAD,OACMI,KADN;AAEE,IAAA,aAAa,EAAGC,MAAD,IAAY;AACzB,YAAM;AAAEC,QAAAA;AAAF,UAAiBD,MAAvB;AACAH,MAAAA,QAAQ,CAAC;AACPK,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAEF;AADD;AADD,OAAD,CAAR;AAKD,KATH;AAUE,IAAA,gBAAgB,EAAE,GAVpB;AAWE,IAAA,YAAY,EAAE,CAXhB;AAYE,IAAA,aAAa,EAAE,KAZjB;AAaE,IAAA,iBAAiB,EAAE,KAbrB;AAcE,IAAA,SAAS,EAAE,CAdb;AAeE,IAAA,WAAW,EAAE,GAff;AAgBE,IAAA,eAAe,MAhBjB;AAiBE,IAAA,KAAK,EAAEH,MAjBT;AAkBE,IAAA,SAAS,EAAGE,MAAD,IAAY;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAiBD,MAAvB;AACA,UAAI,CAACC,UAAL,EAAiB,OAAO,IAAP,CAAjB,KACK;AACH,eAAOA,UAAU,GAAG,GAApB;AACD;AACF;AAxBH;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CA/BoC,CAArC;MAAMP,kB;AAiCN,MAAMU,MAAM,gBAAGrB,IAAI,UAAC,MAAM;AAAA;;AACxB,QAAMe,MAAM,GAAGb,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBR,MAAhC,CAA1B;AACA,QAAMS,QAAQ,GAAGrB,WAAW,EAA5B;AAEA,sBACE,QAAC,WAAD;AAAa,IAAA,EAAE,EAAE;AAAEsB,MAAAA,KAAK,EAAE;AAAT,KAAjB;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,KAAK,EAAEV,MAFT;AAGE,MAAA,QAAQ,EAAGW,CAAD,IAAOF,QAAQ,CAACf,SAAS,CAACiB,CAAC,CAACP,MAAF,CAASC,KAAV,CAAV,CAH3B;AAIE,MAAA,EAAE,EAAE;AAAEO,QAAAA,WAAW,EAAE;AAAf,OAJN;AAKE,MAAA,cAAc,eACZ,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAC,OAAzB;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANJ;AAUE,MAAA,cAAc,EAAEhB,kBAVlB;AAWE,MAAA,UAAU,EAAE;AAAEI,QAAAA;AAAF;AAXd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtBkB;AAAA,UACFb,WADE,EAEAC,WAFA;AAAA,GAAnB;MAAMkB,M;AAwBN,eAAeA,MAAf","sourcesContent":["import { memo, forwardRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  OutlinedInput,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n} from '@mui/material';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport { setRating } from '../../../../redux/slices/adminProducts';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst NumberFormatCustom = forwardRef(function NumberFormatCustom(props, ref) {\r\n  const { onChange, rating, ...other } = props;\r\n\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      onValueChange={(values) => {\r\n        const { floatValue } = values;\r\n        onChange({\r\n          target: {\r\n            value: floatValue,\r\n          },\r\n        });\r\n      }}\r\n      decimalSeparator={'.'}\r\n      decimalScale={1}\r\n      allowNegative={false}\r\n      allowLeadingZeros={false}\r\n      maxLength={3}\r\n      placeholder={'0'}\r\n      isNumericString\r\n      value={rating}\r\n      isAllowed={(values) => {\r\n        const { floatValue } = values;\r\n        if (!floatValue) return true;\r\n        else {\r\n          return floatValue < 5.1;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n});\r\n\r\nconst Rating = memo(() => {\r\n  const rating = useSelector((state) => state.adminProducts.rating);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <FormControl sx={{ width: '50%' }}>\r\n      <InputLabel>Rating</InputLabel>\r\n      <OutlinedInput\r\n        label=\"Rating\"\r\n        value={rating}\r\n        onChange={(e) => dispatch(setRating(e.target.value))}\r\n        sx={{ paddingLeft: '12px' }}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <StarIcon fontSize=\"small\" />\r\n          </InputAdornment>\r\n        }\r\n        inputComponent={NumberFormatCustom}\r\n        inputProps={{ rating }}\r\n      />\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default Rating;\r\n"]},"metadata":{},"sourceType":"module"}