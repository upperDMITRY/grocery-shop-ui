{"ast":null,"code":"export const passwordValidation = (state, setState) => {\n  /* eslint-disable no-useless-escape */\n  const regexPassword = /^[a-zA-Z0-9!@#$%^&*()_+~`\\-=\\\\\\/|[\\]{};:'\",<.>?]*$/;\n  if (state.password.trim() === '') {\n    setState({\n      ...state,\n      errorPassword: 'Please enter password'\n    });\n    return false;\n  }\n  if (!regexPassword.test(state.password)) {\n    setState({\n      ...state,\n      errorPassword: 'Password can only contain english letters, numbers and special characters, and must be at least 5 characters long, maximum 10 characters long'\n    });\n    return false;\n  }\n  if (state.password.length < 5 || state.password.length > 10) {\n    setState({\n      ...state,\n      errorPassword: 'Password must be at least 5 characters long, maximum 10 characters long'\n    });\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["passwordValidation","state","setState","regexPassword","password","trim","errorPassword","test","length"],"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/helpers/passwordValidation.js"],"sourcesContent":["export const passwordValidation = (state, setState) => {\n  /* eslint-disable no-useless-escape */\n  const regexPassword = /^[a-zA-Z0-9!@#$%^&*()_+~`\\-=\\\\\\/|[\\]{};:'\",<.>?]*$/;\n\n  if (state.password.trim() === '') {\n    setState({ ...state, errorPassword: 'Please enter password' });\n    return false;\n  }\n\n  if (!regexPassword.test(state.password)) {\n    setState({\n      ...state,\n      errorPassword:\n        'Password can only contain english letters, numbers and special characters, and must be at least 5 characters long, maximum 10 characters long',\n    });\n    return false;\n  }\n\n  if (state.password.length < 5 || state.password.length > 10) {\n    setState({\n      ...state,\n      errorPassword:\n        'Password must be at least 5 characters long, maximum 10 characters long',\n    });\n    return false;\n  }\n\n  return true;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACrD;EACA,MAAMC,aAAa,GAAG,oDAAoD;EAE1E,IAAIF,KAAK,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAChCH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEK,aAAa,EAAE;IAAwB,CAAC,CAAC;IAC9D,OAAO,KAAK;EACd;EAEA,IAAI,CAACH,aAAa,CAACI,IAAI,CAACN,KAAK,CAACG,QAAQ,CAAC,EAAE;IACvCF,QAAQ,CAAC;MACP,GAAGD,KAAK;MACRK,aAAa,EACX;IACJ,CAAC,CAAC;IACF,OAAO,KAAK;EACd;EAEA,IAAIL,KAAK,CAACG,QAAQ,CAACI,MAAM,GAAG,CAAC,IAAIP,KAAK,CAACG,QAAQ,CAACI,MAAM,GAAG,EAAE,EAAE;IAC3DN,QAAQ,CAAC;MACP,GAAGD,KAAK;MACRK,aAAa,EACX;IACJ,CAAC,CAAC;IACF,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module"}