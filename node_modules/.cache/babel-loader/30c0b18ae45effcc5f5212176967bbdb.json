{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/SizeType.jsx\",\n  _s = $RefreshSig$();\nimport { memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormControl, TextField, MenuItem } from '@mui/material';\nimport { setSizeType } from '../../../../redux/slices/adminProducts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIZE_TYPES = ['KILOS', 'PACKS'];\nconst SizeType = /*#__PURE__*/memo(_c = _s(() => {\n  _s();\n  const sizeType = useSelector(state => state.adminProducts.sizeType);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    fullWidth: true,\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      label: \"Size type\",\n      value: sizeType,\n      onChange: e => dispatch(setSizeType(e.target.value)),\n      children: SIZE_TYPES.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}, \"KVP1k/NEDq28qvkNashCxtrAB8g=\", false, function () {\n  return [useSelector, useDispatch];\n}));\n_c2 = SizeType;\nexport default SizeType;\nvar _c, _c2;\n$RefreshReg$(_c, \"SizeType$memo\");\n$RefreshReg$(_c2, \"SizeType\");","map":{"version":3,"names":["memo","useSelector","useDispatch","FormControl","TextField","MenuItem","setSizeType","jsxDEV","_jsxDEV","SIZE_TYPES","SizeType","_c","_s","sizeType","state","adminProducts","dispatch","fullWidth","children","select","label","value","onChange","e","target","map","option","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/SizeType.jsx"],"sourcesContent":["import { memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FormControl, TextField, MenuItem } from '@mui/material';\nimport { setSizeType } from '../../../../redux/slices/adminProducts';\n\nconst SIZE_TYPES = ['KILOS', 'PACKS'];\n\nconst SizeType = memo(() => {\n  const sizeType = useSelector((state) => state.adminProducts.sizeType);\n  const dispatch = useDispatch();\n\n  return (\n    <FormControl fullWidth>\n      <TextField\n        select\n        label=\"Size type\"\n        value={sizeType}\n        onChange={(e) => dispatch(setSizeType(e.target.value))}\n      >\n        {SIZE_TYPES.map((option) => (\n          <MenuItem key={option} value={option}>\n            {option}\n          </MenuItem>\n        ))}\n      </TextField>\n    </FormControl>\n  );\n});\n\nexport default SizeType;\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,OAAO;AAC5B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,eAAe;AAChE,SAASC,WAAW,QAAQ,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,UAAU,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;AAErC,MAAMC,QAAQ,gBAAGV,IAAI,CAAAW,EAAA,GAAAC,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC1B,MAAMC,QAAQ,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,aAAa,CAACF,QAAQ,CAAC;EACrE,MAAMG,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,oBACEM,OAAA,CAACL,WAAW;IAACc,SAAS;IAAAC,QAAA,eACpBV,OAAA,CAACJ,SAAS;MACRe,MAAM;MACNC,KAAK,EAAC,WAAW;MACjBC,KAAK,EAAER,QAAS;MAChBS,QAAQ,EAAGC,CAAC,IAAKP,QAAQ,CAACV,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,CAAE;MAAAH,QAAA,EAEtDT,UAAU,CAACgB,GAAG,CAAEC,MAAM,iBACrBlB,OAAA,CAACH,QAAQ;QAAcgB,KAAK,EAAEK,MAAO;QAAAR,QAAA,EAClCQ;MAAM,GADMA,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;EAAA,QAnBkB7B,WAAW,EACXC,WAAW;AAAA,EAkB7B,CAAC;AAAC6B,GAAA,GApBGrB,QAAQ;AAsBd,eAAeA,QAAQ;AAAC,IAAAC,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}