{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\n/**\r\n * A basic element that can have child elements, maintain their layout, and\r\n * have a background.\r\n *\r\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\r\n * full-fledged charts.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\r\n * @important\r\n */\n\nvar Container =\n/** @class */\nfunction (_super) {\n  __extends(Container, _super);\n\n  function Container() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_display\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._root._renderer.makeContainer()\n    });\n    Object.defineProperty(_this, \"_childrenDisplay\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this._root._renderer.makeContainer()\n    });\n    /**\r\n     * List of Container's child elements.\r\n     */\n\n    Object.defineProperty(_this, \"children\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new Children(_this)\n    });\n    Object.defineProperty(_this, \"_percentageSizeChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_percentagePositionChildren\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_prevWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_prevHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentWidth\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentHeight\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_contentMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Container.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterNew.call(this);\n\n      this._display.addChild(this._childrenDisplay);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      $array.each(this.allChildren(), function (child) {\n        child.dispose();\n      });\n      var mask = this.get(\"mask\");\n\n      if (mask) {\n        mask.dispose();\n      }\n\n      var background = this.get(\"background\");\n\n      if (background) {\n        background.dispose();\n      }\n\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n\n      if (this.isDirty(\"interactiveChildren\")) {\n        this._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n      }\n\n      if (this.isDirty(\"layout\")) {\n        this.markDirtyBounds();\n\n        if (this._prevSettings.layout) {\n          this.children.each(function (child) {\n            child.removePrivate(\"x\");\n            child.removePrivate(\"y\");\n          });\n        }\n      }\n\n      if (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n        this.children.each(function (child) {\n          child.markDirtyPosition();\n        });\n      }\n\n      if (this.isDirty(\"maskContent\")) {\n        var childrenDisplay = this._childrenDisplay;\n        var contentMask = this._contentMask;\n\n        if (this.get(\"maskContent\")) {\n          if (!contentMask) {\n            contentMask = Rectangle.new(this._root, {\n              width: this.width(),\n              height: this.height()\n            });\n            this._contentMask = contentMask;\n            childrenDisplay.addChildAt(contentMask._display, 0);\n            childrenDisplay.mask = contentMask._display;\n          }\n        } else {\n          if (contentMask) {\n            childrenDisplay.removeChild(contentMask._display);\n            childrenDisplay.mask = null;\n            contentMask.dispose();\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateSize\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateSize.call(this);\n\n      $array.each(this._percentageSizeChildren, function (child) {\n        child._updateSize();\n      });\n      $array.each(this._percentagePositionChildren, function (child) {\n        child.markDirtyPosition();\n\n        child._updateSize();\n      });\n      this.updateBackground();\n    }\n  });\n  Object.defineProperty(Container.prototype, \"updateBackground\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var background = this.get(\"background\");\n      var bounds = this._localBounds;\n\n      if (bounds && !this.isHidden()) {\n        var x = bounds.left;\n        var y = bounds.top;\n        var w = bounds.right - x;\n        var h = bounds.bottom - y;\n        var width = this.width();\n        var height = this.height();\n\n        if (background) {\n          background.setAll({\n            width: w,\n            height: h,\n            x: x,\n            y: y\n          });\n\n          if (this._display.interactive) {\n            background._display.interactive = true;\n          }\n        }\n\n        var contentMask = this._contentMask;\n\n        if (contentMask) {\n          contentMask.setAll({\n            width: width,\n            height: height\n          });\n        }\n\n        var verticalScrollbar = this.get(\"verticalScrollbar\");\n\n        if (verticalScrollbar) {\n          verticalScrollbar.set(\"height\", height);\n          verticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n          verticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n          var bg = verticalScrollbar.get(\"background\");\n\n          if (bg) {\n            bg.setAll({\n              width: verticalScrollbar.width(),\n              height: height\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyThemes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (_super.prototype._applyThemes.call(this)) {\n        this.eachChildren(function (child) {\n          child._applyThemes();\n        });\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyState\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name) {\n      _super.prototype._applyState.call(this, name);\n\n      if (this.get(\"setStateOnChildren\")) {\n        this.eachChildren(function (child) {\n          child.states.apply(name);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_applyStateAnimated\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (name, duration) {\n      _super.prototype._applyStateAnimated.call(this, name, duration);\n\n      if (this.get(\"setStateOnChildren\")) {\n        this.eachChildren(function (child) {\n          child.states.applyAnimate(name, duration);\n        });\n      }\n    }\n  });\n  /**\r\n   * Returns container's inner width (width without padding) in pixels.\r\n   *\r\n   * @return Inner width (px)\r\n   */\n\n  Object.defineProperty(Container.prototype, \"innerWidth\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n    }\n  });\n  /**\r\n   * Returns container's inner height (height without padding) in pixels.\r\n   *\r\n   * @return Inner height (px)\r\n   */\n\n  Object.defineProperty(Container.prototype, \"innerHeight\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_getBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var width = this.get(\"width\");\n      var height = this.get(\"height\");\n      var pWidth = this.getPrivate(\"width\");\n      var pHeight = this.getPrivate(\"height\");\n      var bounds = {\n        left: 0,\n        top: 0,\n        right: this.width(),\n        bottom: this.height()\n      };\n      var layout = this.get(\"layout\");\n      var horizontal = false;\n      var vertical = false;\n\n      if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n        horizontal = true;\n      }\n\n      if (layout instanceof VerticalLayout) {\n        vertical = true;\n      }\n\n      if ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {// void\n      } else {\n        var m = Number.MAX_VALUE;\n        var l_1 = m;\n        var r_1 = -m;\n        var t_1 = m;\n        var b_1 = -m;\n        var paddingLeft = this.get(\"paddingLeft\", 0);\n        var paddingTop = this.get(\"paddingTop\", 0);\n        var paddingRight = this.get(\"paddingRight\", 0);\n        var paddingBottom = this.get(\"paddingBottom\", 0);\n        this.children.each(function (child) {\n          if (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n            var childBounds = child.adjustedLocalBounds();\n            var childX = child.x();\n            var childY = child.y();\n            var cl = childX + childBounds.left;\n            var cr = childX + childBounds.right;\n            var ct = childY + childBounds.top;\n            var cb = childY + childBounds.bottom;\n\n            if (horizontal) {\n              cl -= child.get(\"marginLeft\", 0);\n              cr += child.get(\"marginRight\", 0);\n            }\n\n            if (vertical) {\n              ct -= child.get(\"marginTop\", 0);\n              cb += child.get(\"marginBottom\", 0);\n            }\n\n            if (cl < l_1) {\n              l_1 = cl;\n            }\n\n            if (cr > r_1) {\n              r_1 = cr;\n            }\n\n            if (ct < t_1) {\n              t_1 = ct;\n            }\n\n            if (cb > b_1) {\n              b_1 = cb;\n            }\n          }\n        });\n\n        if (l_1 == m) {\n          l_1 = 0;\n        }\n\n        if (r_1 == -m) {\n          r_1 = 0;\n        }\n\n        if (t_1 == m) {\n          t_1 = 0;\n        }\n\n        if (b_1 == -m) {\n          b_1 = 0;\n        }\n\n        bounds.left = l_1 - paddingLeft;\n        bounds.top = t_1 - paddingTop;\n        bounds.right = r_1 + paddingRight;\n        bounds.bottom = b_1 + paddingBottom;\n      }\n\n      this._contentWidth = bounds.right - bounds.left;\n      this._contentHeight = bounds.bottom - bounds.top;\n\n      if ($type.isNumber(width)) {\n        bounds.left = 0;\n        bounds.right = width;\n      }\n\n      if ($type.isNumber(pWidth)) {\n        bounds.left = 0;\n        bounds.right = pWidth;\n      }\n\n      if ($type.isNumber(height)) {\n        bounds.top = 0;\n        bounds.bottom = height;\n      }\n\n      if ($type.isNumber(pHeight)) {\n        bounds.top = 0;\n        bounds.bottom = pHeight;\n      }\n\n      this._localBounds = bounds;\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var layout = this.get(\"layout\");\n\n      if (layout) {\n        layout.updateContainer(this);\n      }\n\n      _super.prototype._updateBounds.call(this);\n\n      this.updateBackground();\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Container.prototype, \"markDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.markDirty.call(this);\n\n      this._root._addDirtyParent(this);\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var innerWidth = this.innerWidth();\n      var innerHeight = this.innerHeight();\n\n      if (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n        var layout = this.get(\"layout\");\n        var horizontal_1 = false;\n        var vertical_1 = false;\n\n        if (layout) {\n          if (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n            horizontal_1 = true;\n          }\n\n          if (layout instanceof VerticalLayout) {\n            vertical_1 = true;\n          }\n        }\n\n        $array.each(this._percentageSizeChildren, function (child) {\n          if (!horizontal_1) {\n            var width = child.get(\"width\");\n\n            if (width instanceof Percent) {\n              child.setPrivate(\"width\", width.value * innerWidth);\n            }\n          }\n\n          if (!vertical_1) {\n            var height = child.get(\"height\");\n\n            if (height instanceof Percent) {\n              child.setPrivate(\"height\", height.value * innerHeight);\n            }\n          }\n        });\n        $array.each(this._percentagePositionChildren, function (child) {\n          child.markDirtyPosition();\n          child.markDirtyBounds();\n        });\n        this._prevWidth = innerWidth;\n        this._prevHeight = innerHeight;\n        this._sizeDirty = true;\n        this.updateBackground();\n      }\n\n      this._handleStates();\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      if (this.isDirty(\"verticalScrollbar\")) {\n        var verticalScrollbar_1 = this.get(\"verticalScrollbar\");\n\n        if (verticalScrollbar_1) {\n          verticalScrollbar_1._setParent(this);\n\n          verticalScrollbar_1.children.removeValue(verticalScrollbar_1.startGrip);\n          verticalScrollbar_1.children.removeValue(verticalScrollbar_1.endGrip);\n          this.set(\"maskContent\", true);\n          this.set(\"paddingRight\", verticalScrollbar_1.width() + verticalScrollbar_1.get(\"marginRight\", 0) + verticalScrollbar_1.get(\"marginLeft\", 0));\n          var background = this.get(\"background\");\n\n          if (!background) {\n            background = this.set(\"background\", Rectangle.new(this._root, {\n              themeTags: [\"background\"],\n              fillOpacity: 0,\n              fill: this._root.interfaceColors.get(\"alternativeBackground\")\n            }));\n          }\n\n          this._disposers.push(this.events.on(\"wheel\", function (event) {\n            var wheelEvent = event.originalEvent;\n            wheelEvent.preventDefault();\n            var shiftY = wheelEvent.deltaY / 5000;\n            var start = verticalScrollbar_1.get(\"start\", 0);\n            var end = verticalScrollbar_1.get(\"end\", 1);\n\n            if (start + shiftY > 0 && end + shiftY < 1) {\n              verticalScrollbar_1.set(\"start\", start + shiftY);\n              verticalScrollbar_1.set(\"end\", end + shiftY);\n            }\n          }));\n\n          this._disposers.push(verticalScrollbar_1.events.on(\"rangechanged\", function () {\n            var h = _this._contentHeight;\n            var childrenDisplay = _this._childrenDisplay;\n            var contentMask = _this._contentMask;\n            childrenDisplay.y = -verticalScrollbar_1.get(\"start\") * h;\n            childrenDisplay.markDirtyLayer();\n\n            if (contentMask) {\n              contentMask._display.y = -childrenDisplay.y;\n              childrenDisplay.mask = contentMask._display;\n            }\n          }));\n\n          this._display.addChild(verticalScrollbar_1._display);\n        }\n      }\n\n      if (this.isDirty(\"background\")) {\n        // TODO maybe this should dispose ?\n        var previous = this._prevSettings[\"background\"];\n\n        if (previous) {\n          this._display.removeChild(previous._display);\n        }\n\n        var background = this.get(\"background\");\n\n        if (background instanceof Sprite) {\n          background.set(\"isMeasured\", false);\n\n          background._setParent(this);\n\n          this._display.addChildAt(background._display, 0);\n        }\n      }\n\n      if (this.isDirty(\"mask\")) {\n        var mask = this.get(\"mask\");\n        var previous = this._prevSettings[\"mask\"];\n\n        if (previous) {\n          this._display.removeChild(previous._display);\n\n          if (previous != mask) {\n            previous.dispose();\n          }\n        }\n\n        if (mask) {\n          mask._setParent(this);\n\n          this._display.addChildAt(mask._display, 0);\n\n          this._childrenDisplay.mask = mask._display;\n        }\n      }\n    }\n  });\n  Object.defineProperty(Container.prototype, \"_processTemplateField\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._processTemplateField.call(this);\n\n      this.children.each(function (child) {\n        child._processTemplateField();\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Container.prototype, \"walkChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      this.children.each(function (child) {\n        if (child instanceof Container) {\n          child.walkChildren(f);\n        }\n\n        f(child);\n      });\n    }\n  });\n  Object.defineProperty(Container.prototype, \"eachChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (f) {\n      var background = this.get(\"background\");\n\n      if (background) {\n        f(background);\n      }\n\n      var verticalScrollbar = this.get(\"verticalScrollbar\");\n\n      if (verticalScrollbar) {\n        f(verticalScrollbar);\n      }\n\n      var mask = this.get(\"mask\");\n\n      if (mask) {\n        f(mask);\n      }\n\n      this.children.values.forEach(function (child) {\n        f(child);\n      });\n    }\n  });\n  Object.defineProperty(Container.prototype, \"allChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var output = [];\n      this.eachChildren(function (x) {\n        output.push(x);\n      });\n      return output;\n    }\n  });\n  Object.defineProperty(Container, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Container\"\n  });\n  Object.defineProperty(Container, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Sprite.classNames.concat([Container.className])\n  });\n  return Container;\n}(Sprite);\n\nexport { Container };","map":{"version":3,"sources":["../../../../../src/.internal/core/render/Container.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Graphics } from \"./Graphics\";\nimport type { Layout } from \"./Layout\";\nimport type { IContainer } from \"./backend/Renderer\";\nimport type { IBounds } from \"../util/IBounds\";\nimport type { Scrollbar } from \"./Scrollbar\";\n\nimport { Children } from \"../util/Children\";\nimport { Percent } from \"../util/Percent\";\nimport { Sprite, ISpriteSettings, ISpritePrivate, ISpriteEvents } from \"./Sprite\";\nimport { Rectangle } from \"./Rectangle\";\nimport { HorizontalLayout } from \"./HorizontalLayout\";\nimport { VerticalLayout } from \"./VerticalLayout\";\nimport { GridLayout } from \"./GridLayout\";\n\nimport * as $array from \"../util/Array\";\nimport * as $type from \"../util/Type\";\n\nexport interface IContainerSettings extends ISpriteSettings {\n\n\t/**\n\t * Left padding in pixels.\n\t */\n\tpaddingLeft?: number;\n\n\t/**\n\t * Right padding in pixels.\n\t */\n\tpaddingRight?: number;\n\n\t/**\n\t * Top padding in pixels.\n\t */\n\tpaddingTop?: number;\n\n\t/**\n\t * Bottom padding in pixels.\n\t */\n\tpaddingBottom?: number;\n\n\t/**\n\t * Background element.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Background} for more info\n\t */\n\tbackground?: Graphics;\n\n\t/**\n\t * A method to layout\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Layout} for more info\n\t */\n\tlayout?: Layout | null;\n\n\t/**\n\t * An element to use as a container's mask (clipping region).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Masks} for more info\n\t */\n\tmask?: Graphics | null;\n\n\t/**\n\t * If set to `true` all content going outside the bounds of the container\n\t * will be clipped.\n\t */\n\tmaskContent?: boolean;\n\n\t/**\n\t * If set to `true` all descendants - not just direct children, but every\n\t * element in it - will become \"interactive\".\n\t */\n\tinteractiveChildren?: boolean;\n\n\t/**\n\t * If set to `true`, applying a state on a container will also apply the same\n\t * state on its children.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#States} for more info\n\t */\n\tsetStateOnChildren?: boolean;\n\n\t/**\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/containers/#Scrollbar} for more info\n\t */\n\tverticalScrollbar?: Scrollbar;\n\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\nexport interface IContainerPrivate extends ISpritePrivate {\n}\n\nexport interface IContainerEvents extends ISpriteEvents {\n}\n\n/**\n * A basic element that can have child elements, maintain their layout, and\n * have a background.\n *\n * It can have any [[Sprite]] element as a child, from very basic shapes, to\n * full-fledged charts.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/containers/} for more info\n * @important\n */\nexport class Container extends Sprite {\n\n\tdeclare public _settings: IContainerSettings;\n\tdeclare public _privateSettings: IContainerPrivate;\n\tdeclare public _events: IContainerEvents;\n\n\tpublic _display: IContainer = this._root._renderer.makeContainer();\n\n\tpublic _childrenDisplay: IContainer = this._root._renderer.makeContainer();\n\n\t/**\n\t * List of Container's child elements.\n\t */\n\tpublic children: Children<Sprite> = new Children(this);\n\n\tpublic _percentageSizeChildren: Array<Sprite> = [];\n\tpublic _percentagePositionChildren: Array<Sprite> = [];\n\n\tpublic static className: string = \"Container\";\n\tpublic static classNames: Array<string> = Sprite.classNames.concat([Container.className]);\n\n\tpublic _prevWidth: number = 0;\n\tpublic _prevHeight: number = 0;\n\n\tprotected _contentWidth: number = 0;\n\tprotected _contentHeight: number = 0;\n\n\tprotected _contentMask: Rectangle | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis._display.addChild(this._childrenDisplay);\n\t}\n\n\tprotected _dispose() {\n\t\t$array.each(this.allChildren(), (child) => {\n\t\t\tchild.dispose();\n\t\t});\n\n\t\tconst mask = this.get(\"mask\");\n\t\tif (mask) {\n\t\t\tmask.dispose();\n\t\t}\n\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tbackground.dispose();\n\t\t}\n\t\tsuper._dispose();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"interactiveChildren\")) {\n\t\t\tthis._display.interactiveChildren = this.get(\"interactiveChildren\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"layout\")) {\n\t\t\tthis.markDirtyBounds();\n\t\t\tif (this._prevSettings.layout) {\n\t\t\t\tthis.children.each((child) => {\n\t\t\t\t\tchild.removePrivate(\"x\");\n\t\t\t\t\tchild.removePrivate(\"y\");\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"paddingTop\") || this.isDirty(\"paddingBottom\") || this.isDirty(\"paddingLeft\") || this.isDirty(\"paddingRight\")) {\n\t\t\tthis.children.each((child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t})\n\t\t}\n\n\t\tif (this.isDirty(\"maskContent\")) {\n\n\t\t\tconst childrenDisplay = this._childrenDisplay;\n\n\t\t\tlet contentMask = this._contentMask;\n\t\t\tif (this.get(\"maskContent\")) {\n\t\t\t\tif (!contentMask) {\n\t\t\t\t\tcontentMask = Rectangle.new(this._root, {\n\t\t\t\t\t\twidth: this.width(),\n\t\t\t\t\t\theight: this.height()\n\t\t\t\t\t});\n\t\t\t\t\tthis._contentMask = contentMask;\n\t\t\t\t\tchildrenDisplay.addChildAt(contentMask._display, 0);\n\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (contentMask) {\n\t\t\t\t\tchildrenDisplay.removeChild(contentMask._display);\n\t\t\t\t\tchildrenDisplay.mask = null;\n\t\t\t\t\tcontentMask.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateSize() {\n\t\tsuper._updateSize();\n\n\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\tchild.markDirtyPosition();\n\t\t\tchild._updateSize();\n\t\t});\n\n\t\tthis.updateBackground();\n\t}\n\n\tprotected updateBackground() {\n\t\tconst background = this.get(\"background\");\n\t\tlet bounds = this._localBounds;\n\n\t\tif (bounds && !this.isHidden()) {\n\t\t\tlet x = bounds.left;\n\t\t\tlet y = bounds.top;\n\t\t\tlet w = bounds.right - x;\n\t\t\tlet h = bounds.bottom - y;\n\n\t\t\tlet width = this.width();\n\t\t\tlet height = this.height();\n\n\t\t\tif (background) {\n\t\t\t\tbackground.setAll({ width: w, height: h, x: x, y: y });\n\t\t\t\tif (this._display.interactive) {\n\t\t\t\t\tbackground._display.interactive = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst contentMask = this._contentMask;\n\t\t\tif (contentMask) {\n\t\t\t\tcontentMask.setAll({ width, height });\n\t\t\t}\n\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar.set(\"height\", height);\n\t\t\t\tverticalScrollbar.set(\"x\", width - verticalScrollbar.width() - verticalScrollbar.get(\"marginRight\", 0));\n\t\t\t\tverticalScrollbar.set(\"end\", verticalScrollbar.get(\"start\", 0) + height / this._contentHeight);\n\n\t\t\t\tconst bg = verticalScrollbar.get(\"background\");\n\t\t\t\tif (bg) {\n\t\t\t\t\tbg.setAll({ width: verticalScrollbar.width(), height: height })\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _applyThemes(): boolean {\n\t\tif (super._applyThemes()) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild._applyThemes();\n\t\t\t});\n\n\t\t\treturn true;\n\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic _applyState(name: string): void {\n\t\tsuper._applyState(name);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.apply(name);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic _applyStateAnimated(name: string, duration?: number): void {\n\t\tsuper._applyStateAnimated(name, duration);\n\n\t\tif (this.get(\"setStateOnChildren\")) {\n\t\t\tthis.eachChildren((child) => {\n\t\t\t\tchild.states.applyAnimate(name, duration);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Returns container's inner width (width without padding) in pixels.\n\t *\n\t * @return Inner width (px)\n\t */\n\tpublic innerWidth(): number {\n\t\treturn this.width() - this.get(\"paddingRight\", 0) - this.get(\"paddingLeft\", 0);\n\t}\n\n\t/**\n\t * Returns container's inner height (height without padding) in pixels.\n\t *\n\t * @return Inner height (px)\n\t */\n\tpublic innerHeight(): number {\n\t\treturn this.height() - this.get(\"paddingTop\", 0) - this.get(\"paddingBottom\", 0);\n\t}\n\n\tprotected _getBounds() {\n\n\t\tlet width = this.get(\"width\");\n\t\tlet height = this.get(\"height\");\n\t\tlet pWidth = this.getPrivate(\"width\");\n\t\tlet pHeight = this.getPrivate(\"height\");\n\n\t\tlet bounds: IBounds = {\n\t\t\tleft: 0,\n\t\t\ttop: 0,\n\t\t\tright: this.width(),\n\t\t\tbottom: this.height(),\n\t\t};\n\n\t\tlet layout = this.get(\"layout\");\n\t\tlet horizontal = false;\n\t\tlet vertical = false;\n\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\thorizontal = true;\n\t\t}\n\n\t\tif (layout instanceof VerticalLayout) {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif ((width != null || pWidth != null) && (height != null || pHeight != null) && !this.get(\"verticalScrollbar\")) {\n\t\t\t// void\n\t\t}\n\t\telse {\n\t\t\tlet m = Number.MAX_VALUE;\n\n\t\t\tlet l = m;\n\t\t\tlet r = -m;\n\t\t\tlet t = m;\n\t\t\tlet b = -m;\n\n\t\t\tconst paddingLeft = this.get(\"paddingLeft\", 0);\n\t\t\tconst paddingTop = this.get(\"paddingTop\", 0);\n\t\t\tconst paddingRight = this.get(\"paddingRight\", 0);\n\t\t\tconst paddingBottom = this.get(\"paddingBottom\", 0);\n\n\t\t\tthis.children.each((child) => {\n\t\t\t\tif (child.get(\"position\") != \"absolute\" && child.get(\"isMeasured\")) {\n\t\t\t\t\tlet childBounds = child.adjustedLocalBounds();\n\t\t\t\t\tlet childX = child.x();\n\t\t\t\t\tlet childY = child.y();\n\t\t\t\t\tlet cl = childX + childBounds.left;\n\t\t\t\t\tlet cr = childX + childBounds.right;\n\t\t\t\t\tlet ct = childY + childBounds.top;\n\t\t\t\t\tlet cb = childY + childBounds.bottom;\n\n\t\t\t\t\tif (horizontal) {\n\t\t\t\t\t\tcl -= child.get(\"marginLeft\", 0);\n\t\t\t\t\t\tcr += child.get(\"marginRight\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\tct -= child.get(\"marginTop\", 0);\n\t\t\t\t\t\tcb += child.get(\"marginBottom\", 0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cl < l) {\n\t\t\t\t\t\tl = cl;\n\t\t\t\t\t}\n\t\t\t\t\tif (cr > r) {\n\t\t\t\t\t\tr = cr;\n\t\t\t\t\t}\n\t\t\t\t\tif (ct < t) {\n\t\t\t\t\t\tt = ct;\n\t\t\t\t\t}\n\t\t\t\t\tif (cb > b) {\n\t\t\t\t\t\tb = cb;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (l == m) {\n\t\t\t\tl = 0;\n\t\t\t}\n\n\t\t\tif (r == -m) {\n\t\t\t\tr = 0;\n\t\t\t}\n\n\t\t\tif (t == m) {\n\t\t\t\tt = 0;\n\t\t\t}\n\n\t\t\tif (b == -m) {\n\t\t\t\tb = 0;\n\t\t\t}\n\n\t\t\tbounds.left = l - paddingLeft;\n\t\t\tbounds.top = t - paddingTop;\n\t\t\tbounds.right = r + paddingRight;\n\t\t\tbounds.bottom = b + paddingBottom;\n\t\t}\n\n\t\tthis._contentWidth = bounds.right - bounds.left;\n\t\tthis._contentHeight = bounds.bottom - bounds.top;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = width;\n\t\t}\n\n\t\tif ($type.isNumber(pWidth)) {\n\t\t\tbounds.left = 0;\n\t\t\tbounds.right = pWidth;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = height;\n\t\t}\n\n\t\tif ($type.isNumber(pHeight)) {\n\t\t\tbounds.top = 0;\n\t\t\tbounds.bottom = pHeight;\n\t\t}\n\n\t\tthis._localBounds = bounds;\n\t}\n\n\tpublic _updateBounds() {\n\t\tconst layout = this.get(\"layout\");\n\n\t\tif (layout) {\n\t\t\tlayout.updateContainer(this);\n\t\t}\n\n\t\tsuper._updateBounds();\n\n\t\tthis.updateBackground();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirty(): void {\n\t\tsuper.markDirty();\n\t\tthis._root._addDirtyParent(this);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst innerWidth = this.innerWidth();\n\t\tconst innerHeight = this.innerHeight();\n\n\t\tif (innerWidth != this._prevWidth || innerHeight != this._prevHeight) {\n\t\t\tlet layout = this.get(\"layout\");\n\t\t\tlet horizontal = false;\n\t\t\tlet vertical = false;\n\t\t\tif (layout) {\n\t\t\t\tif (layout instanceof HorizontalLayout || layout instanceof GridLayout) {\n\t\t\t\t\thorizontal = true;\n\t\t\t\t}\n\t\t\t\tif (layout instanceof VerticalLayout) {\n\t\t\t\t\tvertical = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this._percentageSizeChildren, (child) => {\n\t\t\t\tif (!horizontal) {\n\t\t\t\t\tlet width = child.get(\"width\");\n\t\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"width\", width.value * innerWidth);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!vertical) {\n\t\t\t\t\tlet height = child.get(\"height\");\n\t\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\t\tchild.setPrivate(\"height\", height.value * innerHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this._percentagePositionChildren, (child) => {\n\t\t\t\tchild.markDirtyPosition();\n\t\t\t\tchild.markDirtyBounds();\n\t\t\t})\n\n\t\t\tthis._prevWidth = innerWidth;\n\t\t\tthis._prevHeight = innerHeight;\n\n\t\t\tthis._sizeDirty = true;\n\t\t\tthis.updateBackground();\n\t\t}\n\n\t\tthis._handleStates();\n\t}\n\n\tpublic _updateChildren() {\n\n\t\tif (this.isDirty(\"verticalScrollbar\")) {\n\t\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\")!;\n\t\t\tif (verticalScrollbar) {\n\t\t\t\tverticalScrollbar._setParent(this);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.startGrip);\n\t\t\t\tverticalScrollbar.children.removeValue(verticalScrollbar.endGrip);\n\n\t\t\t\tthis.set(\"maskContent\", true);\n\t\t\t\tthis.set(\"paddingRight\", verticalScrollbar.width() + verticalScrollbar.get(\"marginRight\", 0) + verticalScrollbar.get(\"marginLeft\", 0));\n\n\t\t\t\tlet background = this.get(\"background\");\n\n\t\t\t\tif (!background) {\n\t\t\t\t\tbackground = this.set(\"background\", Rectangle.new(this._root, {\n\t\t\t\t\t\tthemeTags: [\"background\"],\n\t\t\t\t\t\tfillOpacity: 0,\n\t\t\t\t\t\tfill: this._root.interfaceColors.get(\"alternativeBackground\")\n\t\t\t\t\t}));\n\t\t\t\t}\n\n\t\t\t\tthis._disposers.push(this.events.on(\"wheel\", (event) => {\n\t\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t\tconst shiftY = wheelEvent.deltaY / 5000;\n\t\t\t\t\tconst start = verticalScrollbar.get(\"start\", 0);\n\t\t\t\t\tconst end = verticalScrollbar.get(\"end\", 1);\n\t\t\t\t\tif (start + shiftY > 0 && end + shiftY < 1) {\n\t\t\t\t\t\tverticalScrollbar.set(\"start\", start + shiftY);\n\t\t\t\t\t\tverticalScrollbar.set(\"end\", end + shiftY);\n\t\t\t\t\t}\n\t\t\t\t}))\n\n\t\t\t\tthis._disposers.push(verticalScrollbar.events.on(\"rangechanged\", () => {\n\t\t\t\t\tlet h = this._contentHeight;\n\t\t\t\t\tconst childrenDisplay = this._childrenDisplay;\n\t\t\t\t\tconst contentMask = this._contentMask;\n\n\t\t\t\t\tchildrenDisplay.y = -verticalScrollbar.get(\"start\") * h;\n\t\t\t\t\tchildrenDisplay.markDirtyLayer();\n\n\t\t\t\t\tif (contentMask) {\n\t\t\t\t\t\tcontentMask._display.y = -childrenDisplay.y;\n\t\t\t\t\t\tchildrenDisplay.mask = contentMask._display;\n\t\t\t\t\t}\n\t\t\t\t}))\n\n\t\t\t\tthis._display.addChild(verticalScrollbar._display);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"background\")) {\n\t\t\t// TODO maybe this should dispose ?\n\t\t\tconst previous = this._prevSettings[\"background\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t}\n\n\t\t\tconst background = this.get(\"background\");\n\t\t\tif (background instanceof Sprite) {\n\t\t\t\tbackground.set(\"isMeasured\", false);\n\t\t\t\tbackground._setParent(this);\n\t\t\t\tthis._display.addChildAt(background._display, 0);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"mask\")) {\n\n\t\t\tconst mask = this.get(\"mask\");\n\n\t\t\tconst previous = this._prevSettings[\"mask\"];\n\t\t\tif (previous) {\n\t\t\t\tthis._display.removeChild(previous._display);\n\t\t\t\tif (previous != mask) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (mask) {\n\t\t\t\tmask._setParent(this);\n\t\t\t\tthis._display.addChildAt(mask._display, 0);\n\t\t\t\tthis._childrenDisplay.mask = mask._display;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _processTemplateField(): void {\n\t\tsuper._processTemplateField();\n\t\tthis.children.each((child) => {\n\t\t\tchild._processTemplateField();\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic walkChildren(f: (child: Sprite) => void): void {\n\t\tthis.children.each((child) => {\n\t\t\tif (child instanceof Container) {\n\t\t\t\tchild.walkChildren(f);\n\t\t\t}\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic eachChildren(f: (child: Sprite) => void): void {\n\t\tconst background = this.get(\"background\");\n\t\tif (background) {\n\t\t\tf(background);\n\t\t}\n\n\t\tconst verticalScrollbar = this.get(\"verticalScrollbar\");\n\t\tif (verticalScrollbar) {\n\t\t\tf(verticalScrollbar);\n\t\t}\n\n\t\tconst mask = this.get(\"mask\");\n\t\tif (mask) {\n\t\t\tf(mask);\n\t\t}\n\n\t\tthis.children.values.forEach((child) => {\n\t\t\tf(child);\n\t\t});\n\t}\n\n\tpublic allChildren(): Array<Sprite> {\n\t\tconst output: Array<Sprite> = [];\n\n\t\tthis.eachChildren((x) => {\n\t\t\toutput.push(x);\n\t\t});\n\n\t\treturn output;\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}