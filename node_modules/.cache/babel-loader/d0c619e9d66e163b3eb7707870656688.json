{"ast":null,"code":"import{forwardRef,memo}from'react';import{useSelector,useDispatch}from'react-redux';import{OutlinedInput,FormControl,InputLabel,FormHelperText}from'@mui/material';import{setEmail,setEmailError}from'../../../../redux/slices/adminUsers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Email=/*#__PURE__*/memo(/*#__PURE__*/forwardRef(function(props,ref){var newUser=props.newUser;var dispatch=useDispatch();var email=useSelector(function(state){return state.adminUsers.email;});var emailError=useSelector(function(state){return state.adminUsers.emailError;});var disabledSaveButton=useSelector(function(state){return state.adminUsers.disabledSaveButton;});var handleEmailChange=function handleEmailChange(e){dispatch(setEmailError(''));if(email.length<256){dispatch(setEmail(e.target.value.trim().slice(0,255)));}};return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{shrink:true,children:\"Email\"}),/*#__PURE__*/_jsx(OutlinedInput,{error:emailError!=='',ref:ref,autoFocus:true,notched:true,placeholder:disabledSaveButton?'Enter user email':null,label:\"Email\",value:email,onChange:handleEmailChange,disabled:!newUser}),emailError&&/*#__PURE__*/_jsx(FormHelperText,{error:true,children:emailError})]});}));export default Email;","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/users/editAndAddNewUser/Email.jsx"],"names":["forwardRef","memo","useSelector","useDispatch","OutlinedInput","FormControl","InputLabel","FormHelperText","setEmail","setEmailError","Email","props","ref","newUser","dispatch","email","state","adminUsers","emailError","disabledSaveButton","handleEmailChange","e","length","target","value","trim","slice"],"mappings":"AAAA,OAASA,UAAT,CAAqBC,IAArB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,aADF,CAEEC,WAFF,CAGEC,UAHF,CAIEC,cAJF,KAKO,eALP,CAMA,OAASC,QAAT,CAAmBC,aAAnB,KAAwC,qCAAxC,C,wFAEA,GAAMC,CAAAA,KAAK,cAAGT,IAAI,cAChBD,UAAU,CAAC,SAACW,KAAD,CAAQC,GAAR,CAAgB,CACzB,GAAQC,CAAAA,OAAR,CAAoBF,KAApB,CAAQE,OAAR,CAEA,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEA,GAAMY,CAAAA,KAAK,CAAGb,WAAW,CAAC,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACC,UAAN,CAAiBF,KAA5B,EAAD,CAAzB,CACA,GAAMG,CAAAA,UAAU,CAAGhB,WAAW,CAAC,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACC,UAAN,CAAiBC,UAA5B,EAAD,CAA9B,CAEA,GAAMC,CAAAA,kBAAkB,CAAGjB,WAAW,CACpC,SAACc,KAAD,QAAWA,CAAAA,KAAK,CAACC,UAAN,CAAiBE,kBAA5B,EADoC,CAAtC,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC/BP,QAAQ,CAACL,aAAa,CAAC,EAAD,CAAd,CAAR,CACA,GAAIM,KAAK,CAACO,MAAN,CAAe,GAAnB,CAAwB,CACtBR,QAAQ,CAACN,QAAQ,CAACa,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,GAAsBC,KAAtB,CAA4B,CAA5B,CAA+B,GAA/B,CAAD,CAAT,CAAR,CACD,CACF,CALD,CAOA,mBACE,MAAC,WAAD,EAAa,SAAS,KAAtB,wBACE,KAAC,UAAD,EAAY,MAAM,KAAlB,mBADF,cAEE,KAAC,aAAD,EACE,KAAK,CAAER,UAAU,GAAK,EADxB,CAEE,GAAG,CAAEN,GAFP,CAGE,SAAS,KAHX,CAIE,OAAO,KAJT,CAKE,WAAW,CAAEO,kBAAkB,CAAG,kBAAH,CAAwB,IALzD,CAME,KAAK,CAAC,OANR,CAOE,KAAK,CAAEJ,KAPT,CAQE,QAAQ,CAAEK,iBARZ,CASE,QAAQ,CAAE,CAACP,OATb,EAFF,CAaGK,UAAU,eAAI,KAAC,cAAD,EAAgB,KAAK,KAArB,UAAuBA,UAAvB,EAbjB,GADF,CAiBD,CApCS,CADM,CAAlB,CAwCA,cAAeR,CAAAA,KAAf","sourcesContent":["import { forwardRef, memo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  OutlinedInput,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from '@mui/material';\r\nimport { setEmail, setEmailError } from '../../../../redux/slices/adminUsers';\r\n\r\nconst Email = memo(\r\n  forwardRef((props, ref) => {\r\n    const { newUser } = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const email = useSelector((state) => state.adminUsers.email);\r\n    const emailError = useSelector((state) => state.adminUsers.emailError);\r\n\r\n    const disabledSaveButton = useSelector(\r\n      (state) => state.adminUsers.disabledSaveButton\r\n    );\r\n\r\n    const handleEmailChange = (e) => {\r\n      dispatch(setEmailError(''));\r\n      if (email.length < 256) {\r\n        dispatch(setEmail(e.target.value.trim().slice(0, 255)));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <FormControl fullWidth>\r\n        <InputLabel shrink>Email</InputLabel>\r\n        <OutlinedInput\r\n          error={emailError !== ''}\r\n          ref={ref}\r\n          autoFocus\r\n          notched\r\n          placeholder={disabledSaveButton ? 'Enter user email' : null}\r\n          label=\"Email\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n          disabled={!newUser}\r\n        />\r\n        {emailError && <FormHelperText error>{emailError}</FormHelperText>}\r\n      </FormControl>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Email;\r\n"]},"metadata":{},"sourceType":"module"}