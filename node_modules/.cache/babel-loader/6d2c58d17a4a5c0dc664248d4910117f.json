{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { XYSeries } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n/**\r\n * Base class for all \"column-based\" series\r\n */\n\nvar BaseColumnSeries =\n/** @class */\nfunction (_super) {\n  __extends(BaseColumnSeries, _super);\n\n  function BaseColumnSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_ph\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_pw\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"_makeGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (listTemplate, dataItem) {\n      return this.makeColumn(dataItem, listTemplate);\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_makeFieldNames\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._makeFieldNames.call(this);\n\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var categoryAxis = \"CategoryAxis\";\n      var valueAxis = \"ValueAxis\";\n\n      if (xAxis.isType(categoryAxis)) {\n        if (!this.get(\"openCategoryXField\")) {\n          this._xOpenField = this._xField;\n        }\n      }\n\n      if (xAxis.isType(valueAxis)) {\n        if (!this.get(\"openValueXField\")) {\n          this._xOpenField = this._xField;\n        }\n      }\n\n      if (yAxis.isType(categoryAxis)) {\n        if (!this.get(\"openCategoryYField\")) {\n          this._yOpenField = this._yField;\n        }\n      }\n\n      if (yAxis.isType(valueAxis)) {\n        if (!this.get(\"openValueYField\")) {\n          this._yOpenField = this._yField;\n        }\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      var chart = this.chart;\n\n      if (chart) {\n        this._ph = chart.plotContainer.height();\n        this._pw = chart.plotContainer.width();\n      }\n\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var baseAxis = this.get(\"baseAxis\");\n      var columnsTemplate = this.columns.template;\n\n      if (this.isDirty(\"fill\")) {\n        if (columnsTemplate.get(\"fill\") == null) {\n          columnsTemplate.set(\"fill\", this.get(\"fill\"));\n        }\n      }\n\n      if (this.isDirty(\"stroke\")) {\n        if (columnsTemplate.get(\"stroke\") == null) {\n          columnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n        }\n      }\n\n      var index = 0;\n      var clusterCount = 0;\n      var i = 0;\n      $array.each(baseAxis.series, function (series) {\n        if (series instanceof BaseColumnSeries) {\n          var stacked = series.get(\"stacked\");\n\n          if (stacked && i == 0) {\n            clusterCount++;\n          }\n\n          if (!stacked && series.get(\"clustered\")) {\n            clusterCount++;\n          }\n        }\n\n        if (series === _this) {\n          index = clusterCount - 1;\n        }\n\n        i++;\n      });\n\n      if (!this.get(\"clustered\")) {\n        index = 0;\n        clusterCount = 1;\n      }\n\n      if (clusterCount === 0) {\n        clusterCount = 1;\n        index = 0;\n      }\n\n      var xRenderer = xAxis.get(\"renderer\");\n      var yRenderer = yAxis.get(\"renderer\");\n      var cellStartLocation = \"cellStartLocation\";\n      var cellEndLocation = \"cellEndLocation\";\n      var cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n      var cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n      var cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n      var cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n      this._aLocationX0 = cellLocationX0 + index / clusterCount * (cellLocationX1 - cellLocationX0);\n      this._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);\n      ;\n      this._aLocationY0 = cellLocationY0 + index / clusterCount * (cellLocationY1 - cellLocationY0);\n      this._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n      if (xAxis.inited && yAxis.inited) {\n        if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n          var len = this.dataItems.length;\n          var startIndex = Math.max(0, this.getPrivate(\"startIndex\", 0) - 2);\n          var endIndex = Math.min(this.getPrivate(\"endIndex\", len) + 2, len - 1);\n\n          for (var i_1 = 0; i_1 < startIndex; i_1++) {\n            this._toggleColumn(this.dataItems[i_1], false);\n          }\n\n          var previous = this.dataItems[startIndex];\n\n          for (var i_2 = startIndex; i_2 <= endIndex; i_2++) {\n            var dataItem = this.dataItems[i_2];\n\n            this._updateGraphics(dataItem, previous);\n\n            previous = dataItem;\n          }\n\n          for (var i_3 = endIndex + 1; i_3 < len; i_3++) {\n            this._toggleColumn(this.dataItems[i_3], false);\n          }\n        }\n      } else {\n        this._skipped = true;\n      }\n\n      _super.prototype._updateChildren.call(this);\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_updateGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, previousDataItem) {\n      var _this = this;\n\n      var graphics = dataItem.get(\"graphics\");\n\n      if (!graphics) {\n        graphics = this._makeGraphics(this.columns, dataItem);\n        dataItem.set(\"graphics\", graphics);\n\n        graphics._setDataItem(dataItem);\n\n        var legendDataItem = dataItem.get(\"legendDataItem\");\n\n        if (legendDataItem) {\n          var markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n          if (markerRectangle) {\n            markerRectangle.setAll({\n              fill: graphics.get(\"fill\"),\n              stroke: graphics.get(\"stroke\")\n            });\n          }\n        }\n\n        this.axisRanges.each(function (axisRange) {\n          var container = axisRange.container;\n          var graphicsArray = dataItem.get(\"rangeGraphics\", []);\n          dataItem.set(\"rangeGraphics\", graphicsArray);\n\n          var rangeGraphics = _this._makeGraphics(axisRange.columns, dataItem);\n\n          graphicsArray.push(rangeGraphics);\n          rangeGraphics.setPrivate(\"list\", axisRange.columns);\n          container.children.push(rangeGraphics);\n        });\n      }\n\n      var xField = this._xField;\n      var yField = this._yField;\n      var valueX = dataItem.get(xField);\n      var valueY = dataItem.get(yField);\n\n      if (valueX != null && valueY != null) {\n        var xOpenField = this._xOpenField;\n        var yOpenField = this._yOpenField;\n        var locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n        var locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n        var openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n        var openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n        var width = graphics.get(\"width\");\n        var height = graphics.get(\"height\");\n        var stacked = this.get(\"stacked\");\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n        var baseAxis = this.get(\"baseAxis\");\n        var xStart = xAxis.get(\"start\");\n        var xEnd = xAxis.get(\"end\");\n        var yStart = yAxis.get(\"start\");\n        var yEnd = yAxis.get(\"end\");\n        var l_1;\n        var r_1;\n        var t_1;\n        var b_1;\n        var vcy = this.get(\"vcy\", 1);\n        var vcx = this.get(\"vcx\", 1);\n        var fitW_1 = false;\n        var fitH_1 = false;\n\n        if (yAxis.isType(\"CategoryAxis\") && xAxis.isType(\"CategoryAxis\")) {\n          var startLocation = this._aLocationX0 + openLocationX - 0.5;\n          var endLocation = this._aLocationX1 + locationX - 0.5;\n\n          if (width instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - width.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n\n          l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n          r_1 = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n          startLocation = this._aLocationY0 + openLocationY - 0.5;\n          endLocation = this._aLocationY1 + locationY - 0.5;\n\n          if (height instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - height.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n\n          t_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n          b_1 = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n          dataItem.setRaw(\"point\", {\n            x: l_1 + (r_1 - l_1) / 2,\n            y: t_1 + (b_1 - t_1) / 2\n          });\n        } else if (xAxis === baseAxis) {\n          var startLocation = this._aLocationX0 + openLocationX - 0.5;\n          var endLocation = this._aLocationX1 + locationX - 0.5;\n\n          if (width instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - width.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n\n          l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n          r_1 = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n          t_1 = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n          if (this._yOpenField !== this._yField) {\n            b_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n          } else {\n            if (stacked) {\n              var stackToItemY = dataItem.get(\"stackToItemY\");\n\n              if (stackToItemY) {\n                b_1 = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, stackToItemY.component.get(\"vcy\"));\n              } else {\n                b_1 = yAxis.basePosition();\n              }\n            } else {\n              b_1 = yAxis.basePosition();\n            }\n          }\n\n          dataItem.setRaw(\"point\", {\n            x: l_1 + (r_1 - l_1) / 2,\n            y: t_1\n          });\n          fitH_1 = true;\n        } else if (yAxis === baseAxis) {\n          var startLocation = this._aLocationY0 + openLocationY - 0.5;\n          var endLocation = this._aLocationY1 + locationY - 0.5;\n\n          if (height instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - height.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n\n          t_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n          b_1 = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n          r_1 = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n          if (this._xOpenField !== this._xField) {\n            l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n          } else {\n            if (stacked) {\n              var stackToItemX = dataItem.get(\"stackToItemX\");\n\n              if (stackToItemX) {\n                l_1 = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, stackToItemX.component.get(\"vcx\"));\n              } else {\n                l_1 = xAxis.basePosition();\n              }\n            } else {\n              l_1 = xAxis.basePosition();\n            }\n          }\n\n          fitW_1 = true;\n          dataItem.setRaw(\"point\", {\n            x: r_1,\n            y: t_1 + (b_1 - t_1) / 2\n          });\n        }\n\n        this._updateSeriesGraphics(dataItem, graphics, l_1, r_1, t_1, b_1, fitW_1, fitH_1);\n\n        if (l_1 < xStart && r_1 < xStart || l_1 > xEnd && r_1 > xEnd || t_1 < yStart && b_1 < yStart || t_1 > yEnd && b_1 > yEnd) {\n          this._toggleColumn(dataItem, false);\n        } else {\n          this._toggleColumn(dataItem, true);\n        }\n\n        var rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n        if (rangeGraphics) {\n          $array.each(rangeGraphics, function (graphics) {\n            _this._updateSeriesGraphics(dataItem, graphics, l_1, r_1, t_1, b_1, fitW_1, fitH_1);\n          });\n        }\n\n        this._applyGraphicsStates(dataItem, previousDataItem);\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_updateSeriesGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, graphics, l, r, t, b, fitW, fitH) {\n      var width = graphics.get(\"width\");\n      var height = graphics.get(\"height\");\n      var maxWidth = graphics.get(\"maxWidth\");\n      var maxHeight = graphics.get(\"maxHeight\");\n      var ptl = this.getPoint(l, t);\n      var pbr = this.getPoint(r, b);\n      var tooltipPoint = dataItem.get(\"point\");\n\n      if (tooltipPoint) {\n        var point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n        tooltipPoint.x = point.x + this._x;\n        tooltipPoint.y = point.y + this._y;\n      }\n\n      l = ptl.x;\n      r = pbr.x;\n      t = ptl.y;\n      b = pbr.y;\n\n      if ($type.isNumber(width)) {\n        var offset = (r - l - width) / 2;\n        l += offset;\n        r -= offset;\n      }\n\n      if ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n        var offset = (r - l - maxWidth) / 2;\n        l += offset;\n        r -= offset;\n      }\n\n      if ($type.isNumber(height)) {\n        var offset = (b - t - height) / 2;\n        t += offset;\n        b -= offset;\n      }\n\n      if ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n        var offset = (b - t - maxHeight) / 2;\n        t += offset;\n        b -= offset;\n      }\n\n      if (this.get(\"adjustBulletPosition\")) {\n        if (fitW) {\n          r = Math.min(Math.max(0, r), this._pw);\n          l = Math.min(Math.max(0, l), this._pw);\n        }\n\n        if (fitH) {\n          t = Math.min(Math.max(0, t), this._ph);\n          b = Math.min(Math.max(0, b), this._ph);\n        }\n      }\n\n      dataItem.setRaw(\"left\", l);\n      dataItem.setRaw(\"right\", r);\n      dataItem.setRaw(\"top\", t);\n      dataItem.setRaw(\"bottom\", b);\n      graphics.setPrivate(\"width\", r - l);\n      graphics.setPrivate(\"height\", b - t);\n      graphics.set(\"x\", l);\n      graphics.set(\"y\", b - (b - t));\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_handleDataSetChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._handleDataSetChange.call(this);\n\n      $array.each(this._dataItems, function (dataItem) {\n        _this._toggleColumn(dataItem, false);\n      });\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_applyGraphicsStates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, previousDataItem) {\n      var graphics = dataItem.get(\"graphics\");\n      var dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n      var riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n      var dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n      var riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n      if (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n        var baseAxis = this.get(\"baseAxis\");\n        var open_1;\n        var close_1;\n        var previousClose = void 0;\n\n        if (baseAxis === xAxis && yAxis.isType(\"ValueAxis\")) {\n          open_1 = dataItem.get(this._yOpenField);\n          close_1 = dataItem.get(this._yField);\n          previousClose = previousDataItem.get(this._yField);\n        } else if (baseAxis === yAxis && xAxis.isType(\"ValueAxis\")) {\n          open_1 = dataItem.get(this._xOpenField);\n          close_1 = dataItem.get(this._xField);\n          previousClose = previousDataItem.get(this._xField);\n        }\n\n        if ($type.isNumber(open_1) && $type.isNumber(close_1)) {\n          if (close_1 < open_1) {\n            if (dropFromOpen) {\n              dropFromOpen.apply();\n            }\n          } else {\n            if (riseFromOpen) {\n              riseFromOpen.apply();\n            }\n          }\n\n          if ($type.isNumber(previousClose)) {\n            if (close_1 < previousClose) {\n              if (dropFromPrevious) {\n                dropFromPrevious.apply();\n              }\n            } else {\n              if (riseFromPrevious) {\n                riseFromPrevious.apply();\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.disposeDataItem.call(this, dataItem);\n\n      var graphics = dataItem.get(\"graphics\");\n\n      if (graphics) {\n        this.columns.removeValue(graphics);\n        graphics.dispose();\n      }\n\n      var rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n      if (rangeGraphics) {\n        $array.each(rangeGraphics, function (graphics) {\n          var list = graphics.getPrivate(\"list\");\n\n          if (list) {\n            list.removeValue(graphics);\n          }\n\n          graphics.dispose();\n        });\n      }\n    }\n  });\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, graphics, rangeGraphics;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              graphics = dataItem.get(\"graphics\");\n\n              if (graphics) {\n                promises.push(graphics.hide(duration));\n              }\n\n              rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n              if (rangeGraphics) {\n                $array.each(rangeGraphics, function (graphics) {\n                  promises.push(graphics.hide(duration));\n                });\n              }\n\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_toggleColumn\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, visible) {\n      var graphics = dataItem.get(\"graphics\");\n\n      if (graphics) {\n        graphics.setPrivate(\"visible\", visible);\n      }\n\n      var rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n      if (rangeGraphics) {\n        $array.each(rangeGraphics, function (graphics) {\n          graphics.setPrivate(\"visible\", visible);\n        });\n      }\n\n      var bullets = dataItem.bullets;\n\n      if (bullets) {\n        $array.each(bullets, function (bullet) {\n          bullet.setPrivate(\"hidden\", !visible);\n        });\n      }\n    }\n  });\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, graphics, rangeGraphics;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n              graphics = dataItem.get(\"graphics\");\n\n              if (graphics) {\n                promises.push(graphics.show(duration));\n              }\n\n              rangeGraphics = dataItem.get(\"rangeGraphics\");\n\n              if (rangeGraphics) {\n                $array.each(rangeGraphics, function (graphics) {\n                  promises.push(graphics.show(duration));\n                });\n              }\n\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"updateLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n\n      var legendDataItem = this.get(\"legendDataItem\");\n\n      if (legendDataItem) {\n        var graphics_1 = this.columns.template;\n\n        if (dataItem) {\n          var column = dataItem.get(\"graphics\");\n\n          if (column) {\n            graphics_1 = column;\n          }\n        }\n\n        var markerRectangle_1 = legendDataItem.get(\"markerRectangle\");\n\n        if (markerRectangle_1) {\n          if (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n            $array.each(visualSettings, function (setting) {\n              markerRectangle_1.set(setting, graphics_1.get(setting, _this.get(setting)));\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_getTooltipTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n        return _super.prototype._getTooltipTarget.call(this, dataItem);\n      }\n\n      var column = dataItem.get(\"graphics\");\n\n      if (column) {\n        return column;\n      }\n\n      return this;\n    }\n  });\n  Object.defineProperty(BaseColumnSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"BaseColumnSeries\"\n  });\n  Object.defineProperty(BaseColumnSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: XYSeries.classNames.concat([BaseColumnSeries.className])\n  });\n  return BaseColumnSeries;\n}(XYSeries);\n\nexport { BaseColumnSeries };","map":{"version":3,"sources":["../../../../../../src/.internal/charts/xy/series/BaseColumnSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?:boolean;\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.getPrivate(\"startIndex\", 0) - 2);\n\t\t\t\tlet endIndex = Math.min(this.getPrivate(\"endIndex\", len) + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tprevious = dataItem;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\t\t\n\t\tif(tooltipPoint){\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif(this.get(\"adjustBulletPosition\")){\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}