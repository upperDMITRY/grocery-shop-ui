{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Component } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Container } from \"../../core/render/Container\";\nimport { Label } from \"../../core/render/Label\";\n/**\r\n * A base class for all series.\r\n */\nvar Series = /** @class */function (_super) {\n  __extends(Series, _super);\n  function Series() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_aggregatesCalculated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_selectionAggregatesCalculated\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_dataProcessed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_psi\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_pei\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * A chart series belongs to.\r\n     */\n    Object.defineProperty(_this, \"chart\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * List of bullets to use for the series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\r\n     */\n    Object.defineProperty(_this, \"bullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    /**\r\n     * A [[Container]] series' bullets are stored in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        isMeasured: false,\n        width: p100,\n        height: p100,\n        position: \"absolute\"\n      })\n    });\n    return _this;\n  }\n  Object.defineProperty(Series.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      this.valueFields.push(\"value\");\n      _super.prototype._afterNew.call(this);\n      this._disposers.push(this.bullets.events.onAll(function (change) {\n        if (change.type === \"clear\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"push\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"setIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"insertIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else if (change.type === \"removeIndex\") {\n          _this._handleBullets(_this.dataItems);\n        } else {\n          throw new Error(\"Unknown IListEvent type\");\n        }\n      }));\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.bulletsContainer.dispose(); // can be in a different parent\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_handleBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItems) {\n      $array.each(dataItems, function (dataItem) {\n        var bullets = dataItem.bullets;\n        if (bullets) {\n          $array.each(bullets, function (bullet) {\n            bullet.dispose();\n          });\n          dataItem.bullets = undefined;\n        }\n      });\n      this._markDirtyValues();\n    }\n  });\n  /**\r\n   * Looks up and returns a data item by its ID.\r\n   *\r\n   * @param   id  ID\r\n   * @return      Data item\r\n   */\n  Object.defineProperty(Series.prototype, \"getDataItemById\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      return $array.find(this.dataItems, function (dataItem) {\n        return dataItem.get(\"id\") == id;\n      });\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_makeBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n      if (this._shouldMakeBullet(dataItem)) {\n        dataItem.bullets = [];\n        this.bullets.each(function (bulletFunction) {\n          _this._makeBullet(dataItem, bulletFunction);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_shouldMakeBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {\n      return true;\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_makeBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, bulletFunction, index) {\n      var bullet = bulletFunction(this._root, this, dataItem);\n      if (bullet) {\n        var sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          sprite._setDataItem(dataItem);\n          sprite.setRaw(\"position\", \"absolute\");\n          this.bulletsContainer.children.push(sprite);\n        }\n        bullet._index = index;\n        bullet.series = this;\n        dataItem.bullets.push(bullet);\n      }\n      return bullet;\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._clearDirty.call(this);\n      this._aggregatesCalculated = false;\n      this._selectionAggregatesCalculated = false;\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._prepareChildren.call(this);\n      var len = this.dataItems.length;\n      var startIndex = this.getPrivate(\"startIndex\", 0);\n      var endIndex = Math.min(len, this.getPrivate(\"endIndex\", len));\n      this.setPrivateRaw(\"endIndex\", endIndex); // update to handle less data\n      var calculateAggregates = this.get(\"calculateAggregates\");\n      if (calculateAggregates) {\n        if (this._valuesDirty && !this._dataProcessed) {\n          if (!this._aggregatesCalculated) {\n            this._calculateAggregates(0, this.dataItems.length);\n            this._aggregatesCalculated = true;\n          }\n        }\n        if ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\n          if (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\n            // void\n          } else {\n            this._calculateAggregates(startIndex, endIndex);\n          }\n          this._selectionAggregatesCalculated = true;\n        }\n      }\n      if (this.isDirty(\"tooltip\")) {\n        var tooltip = this.get(\"tooltip\");\n        if (tooltip) {\n          tooltip.hide(0);\n          tooltip.set(\"tooltipTarget\", this);\n        }\n      }\n      if (this.bullets.length > 0) {\n        var count = this.dataItems.length;\n        for (var i = 0; i < startIndex; i++) {\n          this._hideBullets(this.dataItems[i]);\n        }\n        for (var i = startIndex; i < endIndex; i++) {\n          var dataItem = this.dataItems[i];\n          if (!dataItem.bullets) {\n            this._makeBullets(dataItem);\n          }\n        }\n        for (var i = endIndex; i < count; i++) {\n          this._hideBullets(this.dataItems[i]);\n        }\n      }\n      if (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n        var markerRectangle = void 0;\n        var legendDataItem = this.get(\"legendDataItem\");\n        if (legendDataItem) {\n          markerRectangle = legendDataItem.get(\"markerRectangle\");\n          if (markerRectangle) {\n            if (this.isDirty(\"stroke\")) {\n              var stroke = this.get(\"stroke\");\n              markerRectangle.set(\"stroke\", stroke);\n            }\n            if (this.isDirty(\"fill\")) {\n              var fill = this.get(\"fill\");\n              markerRectangle.set(\"fill\", fill);\n            }\n          }\n        }\n        this.updateLegendMarker(undefined);\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_calculateAggregates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (startIndex, endIndex) {\n      var _this = this;\n      var fields = this._valueFields;\n      if (!fields) {\n        throw new Error(\"No value fields are set for the series.\");\n      }\n      var sum = {};\n      var absSum = {};\n      var count = {};\n      var low = {};\n      var high = {};\n      var open = {};\n      var close = {};\n      var average = {};\n      var previous = {};\n      $array.each(fields, function (key) {\n        sum[key] = 0;\n        absSum[key] = 0;\n        count[key] = 0;\n      });\n      $array.each(fields, function (key) {\n        var change = key + \"Change\";\n        var changePercent = key + \"ChangePercent\";\n        var changePrevious = key + \"ChangePrevious\";\n        var changePreviousPercent = key + \"ChangePreviousPercent\";\n        var changeSelection = key + \"ChangeSelection\";\n        var ChangeSelectionPercent = key + \"ChangeSelectionPercent\";\n        for (var i = startIndex; i < endIndex; i++) {\n          var dataItem = _this.dataItems[i];\n          var value = dataItem.get(key);\n          if (value != null) {\n            count[key]++;\n            sum[key] += value;\n            absSum[key] += Math.abs(value);\n            average[key] = sum[key] / count[key];\n            if (low[key] > value || low[key] == null) {\n              low[key] = value;\n            }\n            if (high[key] < value || high[key] == null) {\n              high[key] = value;\n            }\n            close[key] = value;\n            if (open[key] == null) {\n              open[key] = value;\n              previous[key] = value;\n            }\n            if (startIndex === 0) {\n              dataItem.setRaw(change, value - open[key]);\n              dataItem.setRaw(changePercent, (value - open[key]) / open[key] * 100);\n            }\n            dataItem.setRaw(changePrevious, value - previous[key]);\n            dataItem.setRaw(changePreviousPercent, (value - previous[key]) / previous[key] * 100);\n            dataItem.setRaw(changeSelection, value - open[key]);\n            dataItem.setRaw(ChangeSelectionPercent, (value - open[key]) / open[key] * 100);\n            previous[key] = value;\n          }\n        }\n      });\n      $array.each(fields, function (key) {\n        _this.setPrivate(key + \"AverageSelection\", average[key]);\n        _this.setPrivate(key + \"CountSelection\", count[key]);\n        _this.setPrivate(key + \"SumSelection\", sum[key]);\n        _this.setPrivate(key + \"AbsoluteSumSelection\", absSum[key]);\n        _this.setPrivate(key + \"LowSelection\", low[key]);\n        _this.setPrivate(key + \"HighSelection\", high[key]);\n        _this.setPrivate(key + \"OpenSelection\", open[key]);\n        _this.setPrivate(key + \"CloseSelection\", close[key]);\n      });\n      if (startIndex === 0 && endIndex === this.dataItems.length) {\n        $array.each(fields, function (key) {\n          _this.setPrivate(key + \"Average\", average[key]);\n          _this.setPrivate(key + \"Count\", count[key]);\n          _this.setPrivate(key + \"Sum\", sum[key]);\n          _this.setPrivate(key + \"AbsoluteSum\", absSum[key]);\n          _this.setPrivate(key + \"Low\", low[key]);\n          _this.setPrivate(key + \"High\", high[key]);\n          _this.setPrivate(key + \"Open\", open[key]);\n          _this.setPrivate(key + \"Close\", close[key]);\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._updateChildren.call(this);\n      this._psi = this.getPrivate(\"startIndex\", 0);\n      this._pei = this.getPrivate(\"endIndex\", this.dataItems.length);\n      // Apply heat rules\n      if (this._valuesDirty && this.get(\"heatRules\") != null) {\n        var rules = this.get(\"heatRules\", []);\n        $array.each(rules, function (rule) {\n          var minValue = rule.minValue || _this.getPrivate(rule.dataField + \"Low\") || 0;\n          var maxValue = rule.maxValue || _this.getPrivate(rule.dataField + \"High\") || 0;\n          $array.each(rule.target._entities, function (target) {\n            var value = target.dataItem.get(rule.dataField);\n            if (!$type.isNumber(value)) {\n              return;\n            }\n            var percent;\n            if (rule.logarithmic) {\n              percent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / (Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E);\n            } else {\n              percent = (value - minValue) / (maxValue - minValue);\n            }\n            if ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n              percent = 0.5;\n            }\n            // fixes problems if all values are the same\n            var propertyValue;\n            if ($type.isNumber(rule.min)) {\n              propertyValue = rule.min + (rule.max - rule.min) * percent;\n            } else if (rule.min instanceof Color) {\n              propertyValue = Color.interpolate(percent, rule.min, rule.max);\n            } else if (rule.min instanceof Percent) {\n              propertyValue = percentInterpolate(percent, rule.min, rule.max);\n            }\n            if (rule.customFunction) {\n              rule.customFunction.call(_this, target, minValue, maxValue, propertyValue);\n            } else {\n              target.set(rule.key, propertyValue);\n            }\n          });\n        });\n      }\n      if (this.bullets.length > 0) {\n        var count = this.dataItems.length;\n        var startIndex = this.getPrivate(\"startIndex\", 0);\n        var endIndex = this.getPrivate(\"endIndex\", count);\n        if (endIndex < count) {\n          endIndex++;\n        }\n        if (startIndex > 0) {\n          startIndex--;\n        }\n        for (var i = startIndex; i < endIndex; i++) {\n          this._positionBullets(this.dataItems[i]);\n        }\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_positionBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n      if (dataItem.bullets) {\n        $array.each(dataItem.bullets, function (bullet) {\n          _this._positionBullet(bullet);\n          var sprite = bullet.get(\"sprite\");\n          if (bullet.get(\"dynamic\")) {\n            if (sprite) {\n              sprite._markDirtyKey(\"fill\");\n              sprite.markDirtySize();\n            }\n            if (sprite instanceof Container) {\n              sprite.walkChildren(function (child) {\n                child._markDirtyKey(\"fill\");\n                child.markDirtySize();\n              });\n            }\n          }\n          if (sprite instanceof Label && sprite.get(\"populateText\")) {\n            sprite.text.markDirtyText();\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_hideBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (dataItem.bullets) {\n        $array.each(dataItem.bullets, function (bullet) {\n          var sprite = bullet.get(\"sprite\");\n          if (sprite) {\n            sprite.setPrivate(\"visible\", false);\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_positionBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_bullet) {}\n  });\n  Object.defineProperty(Series.prototype, \"_placeBulletsContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (chart) {\n      chart.bulletsContainer.children.moveValue(this.bulletsContainer);\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_removeBulletsContainer\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var bulletsContainer = this.bulletsContainer;\n      if (bulletsContainer.parent) {\n        bulletsContainer.parent.children.removeValue(bulletsContainer);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var bullets = dataItem.bullets;\n      if (bullets) {\n        $array.each(bullets, function (bullet) {\n          bullet.dispose();\n        });\n      }\n    }\n  });\n  Object.defineProperty(Series.prototype, \"_getItemReaderLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return \"\";\n    }\n  });\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  Object.defineProperty(Series.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, bullets;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n              bullets = dataItem.bullets;\n              if (bullets) {\n                $array.each(bullets, function (bullet) {\n                  promises.push(bullet.get(\"sprite\").show(duration));\n                });\n              }\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  Object.defineProperty(Series.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, bullets;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              bullets = dataItem.bullets;\n              if (bullets) {\n                $array.each(bullets, function (bullet) {\n                  promises.push(bullet.get(\"sprite\").hide(duration));\n                });\n              }\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n\n  Object.defineProperty(Series.prototype, \"_sequencedShowHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (show, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var startIndex_1, endIndex_1;\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!this.get(\"sequencedInterpolation\")) return [3 /*break*/, 4];\n              if (!$type.isNumber(duration)) {\n                duration = this.get(\"interpolationDuration\", 0);\n              }\n              if (!(duration > 0)) return [3 /*break*/, 2];\n              startIndex_1 = this.getPrivate(\"startIndex\", 0);\n              endIndex_1 = this.getPrivate(\"endIndex\", this.dataItems.length);\n              return [4 /*yield*/, Promise.all($array.map(this.dataItems, function (dataItem, i) {\n                return __awaiter(_this, void 0, void 0, function () {\n                  var realDuration, delay;\n                  return __generator(this, function (_a) {\n                    switch (_a.label) {\n                      case 0:\n                        realDuration = duration || 0;\n                        if (i < startIndex_1 - 10 || i > endIndex_1 + 10) {\n                          realDuration = 0;\n                        }\n                        delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex_1 - startIndex_1);\n                        return [4 /*yield*/, $time.sleep(delay * (i - startIndex_1))];\n                      case 1:\n                        _a.sent();\n                        if (!show) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.showDataItem(dataItem, realDuration)];\n                      case 2:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                      case 3:\n                        return [4 /*yield*/, this.hideDataItem(dataItem, realDuration)];\n                      case 4:\n                        _a.sent();\n                        _a.label = 5;\n                      case 5:\n                        return [2 /*return*/];\n                    }\n                  });\n                });\n              }))];\n\n            case 1:\n              _a.sent();\n              return [3 /*break*/, 4];\n            case 2:\n              return [4 /*yield*/, Promise.all($array.map(this.dataItems, function (dataItem) {\n                if (show) {\n                  return _this.showDataItem(dataItem, 0);\n                } else {\n                  return _this.hideDataItem(dataItem, 0);\n                }\n              }))];\n            case 3:\n              _a.sent();\n              _a.label = 4;\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"updateLegendValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var legendDataItem = dataItem.get(\"legendDataItem\");\n      if (legendDataItem) {\n        var valueLabel = legendDataItem.get(\"valueLabel\");\n        if (valueLabel) {\n          var text = valueLabel.text;\n          var txt = \"\";\n          valueLabel._setDataItem(dataItem);\n          txt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n          valueLabel.set(\"text\", txt);\n          text.markDirtyText();\n        }\n        var label = legendDataItem.get(\"label\");\n        if (label) {\n          var text = label.text;\n          var txt = \"\";\n          label._setDataItem(dataItem);\n          txt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n          label.set(\"text\", txt);\n          text.markDirtyText();\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"updateLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  Object.defineProperty(Series.prototype, \"_onHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._onHide.call(this);\n      var tooltip = this.getTooltip();\n      if (tooltip) {\n        tooltip.hide();\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"hoverDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(Series.prototype, \"unhoverDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {}\n  });\n  Object.defineProperty(Series, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Series\"\n  });\n  Object.defineProperty(Series, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Component.classNames.concat([Series.className])\n  });\n  return Series;\n}(Component);\nexport { Series };","map":{"version":3,"names":["Component","List","Color","percentInterpolate","Percent","$array","$type","$time","p100","Container","Label","Series","_super","__extends","_this","apply","arguments","Object","defineProperty","new","_root","isMeasured","width","height","position","value","valueFields","push","prototype","_afterNew","call","_disposers","bullets","events","onAll","change","type","_handleBullets","dataItems","Error","bulletsContainer","dispose","_dispose","each","dataItem","bullet","undefined","_markDirtyValues","id","find","get","_shouldMakeBullet","bulletFunction","_makeBullet","_dataItem","index","sprite","_setDataItem","setRaw","children","_index","series","_clearDirty","_aggregatesCalculated","_selectionAggregatesCalculated","_prepareChildren","len","length","startIndex","getPrivate","endIndex","Math","min","setPrivateRaw","calculateAggregates","_valuesDirty","_dataProcessed","_calculateAggregates","_psi","_pei","isDirty","tooltip","hide","set","count","i","_hideBullets","_makeBullets","markerRectangle","legendDataItem","stroke","fill","updateLegendMarker","fields","_valueFields","sum","absSum","low","high","open","close","average","previous","key","changePercent","changePrevious","changePreviousPercent","changeSelection","ChangeSelectionPercent","abs","setPrivate","_updateChildren","rules","rule","minValue","dataField","maxValue","target","_entities","isNumber","percent","logarithmic","log","LOG10E","Infinity","propertyValue","max","interpolate","customFunction","_positionBullets","_positionBullet","_markDirtyKey","markDirtySize","walkChildren","child","text","markDirtyText","_bullet","chart","moveValue","parent","removeValue","duration","promises","showDataItem","show","Promise","all","_a","sent","hideDataItem","startIndex_1","endIndex_1","map","__awaiter","realDuration","delay","sleep","valueLabel","txt","label","_onHide","getTooltip","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/Series.ts"],"sourcesContent":["import { Component, IComponentSettings, IComponentPrivate, DataItem, IComponentEvents, IComponentDataItem } from \"../../core/render/Component\";\nimport { List } from \"../../core/util/List\";\nimport { Color } from \"../../core/util/Color\";\nimport { percentInterpolate } from \"../../core/util/Animation\";\nimport { Percent } from \"../../core/util/Percent\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $time from \"../../core/util/Time\";\nimport type { Root } from \"../../core/Root\";\nimport { p100 } from \"../../core/util/Percent\";\nimport type { Chart } from \"./Chart\";\nimport type { Bullet } from \"./Bullet\";\nimport { Container } from \"../../core/render/Container\";\nimport type { Graphics } from \"../../core/render/Graphics\";\nimport type { ILegendDataItem } from \"./Legend\";\nimport type { Template } from \"../../core/util/Template\";\nimport type { Sprite } from \"../../core/render/Sprite\";\nimport { Label } from \"../../core/render/Label\";\n//import { Animations } from \"../../core/util/Animation\";\n\n/**\n * Defines interface for a heat rule.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n */\nexport interface IHeatRule {\n\n\t/**\n\t * Target template.\n\t */\n\ttarget: Template<any>;\n\n\t/**\n\t * The setting value to use for items if the lowest value.\n\t */\n\tmin: any;\n\n\t/**\n\t * The setting value to use for items if the highest value.\n\t */\n\tmax: any;\n\n\t/**\n\t * Which data field to use when determining item's value.\n\t */\n\tdataField: string;\n\n\t/**\n\t * A setting key to set.\n\t */\n\tkey?: string;\n\n\t/**\n\t * Custom lowest value.\n\t */\n\tminValue?: number;\n\n\t/**\n\t * Custom highest value.\n\t */\n\tmaxValue?: number;\n\n\t/**\n\t * Use logarithmic scale when calculating intermediate setting values.\n\t *\n\t * @default false\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * A custom function that will set target element's settings.\n\t *\n\t * Can be used to do custom manipulation on complex objects requiring more\n\t * than modifying a setting.\n\t */\n\tcustomFunction?: (target: Sprite, minValue: number, maxValue: number, propertyValue?: any) => void;\n\n}\n\n\nexport interface ISeriesDataItem extends IComponentDataItem {\n\tid?: string;\n\n\tvalue?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking?:number;\n\n\tvalueChange?: number;\n\tvalueChangePercent?: number;\n\tvalueChangeSelection?: number;\n\tvalueChangeSelectionPercent?: number;\n\tvalueChangePrevious?: number;\n\tvalueChangePreviousPercent?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorkingOpen?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorkingClose?: number;\n}\n\nexport interface ISeriesSettings extends IComponentSettings {\n\n\t/**\n\t * Name of the series.\n\t */\n\tname?: string;\n\n\t/**\n\t * A key to look up in data for an id of the data item.\n\t */\n\tidField?: string;\n\n\t/**\n\t * A key to look up in data for a numeric value of the data item.\n\t *\n\t * Some series use it to display its elements. It can also be used in heat\n\t * rules.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * A text template to be used for label in legend.\n\t */\n\tlegendLabelText?: string;\n\n\t/**\n\t * A text template to be used for value label in legend.\n\t */\n\tlegendValueText?: string;\n\n\t/**\n\t * If set to `true` the series initial animation will be played item by item\n\t * rather than all at once.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedInterpolation?:boolean;\n\n\t/**\n\t * A delay in milliseconds to wait before starting animation of next data\n\t * item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Animation_of_series} for more info\n\t */\n\tsequencedDelay?:number;\n\n\t/**\n\t * A list of heat rules to apply on series elements.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/} for more info\n\t */\n\theatRules?:IHeatRule[];\n\n\t/**\n\t * If set to `true`, series will calculate aggregate values, e.g. change\n\t * percent, high, low, etc.\n\t *\n\t * Do not enable unless you are using such aggregate values in tooltips,\n\t * display data fields, heat rules, or similar.\n\t */\n\tcalculateAggregates?: boolean;\n\n\t/**\n\t * Series stroke color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tstroke?: Color;\n\n\t/**\n\t * Series fill color.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Series_colors} for more info\n\t */\n\tfill?: Color;\n\n\t/**\n\t * A data item representing series in a [[Legend]].\n\t *\n\t * @readonly\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\t\n\n}\n\nexport interface ISeriesPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tchart?: Chart;\n\tstartIndex?: number;\n\tendIndex?: number;\n\n\tvalueAverage?: number;\n\tvalueCount?: number;\n\tvalueSum?: number;\n\tvalueAbsoluteSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n\tvalueOpen?: number;\n\tvalueClose?: number;\n}\n\nexport interface ISeriesEvents extends IComponentEvents {\n\n}\n\n/**\n * A base class for all series.\n */\nexport abstract class Series extends Component {\n\tpublic static className: string = \"Series\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Series.className]);\n\n\tdeclare public _settings: ISeriesSettings;\n\tdeclare public _privateSettings: ISeriesPrivate;\n\tdeclare public _dataItemSettings: ISeriesDataItem;\n\tdeclare public _events: ISeriesEvents;\n\n\tprotected _aggregatesCalculated: boolean = false;\n\tprotected _selectionAggregatesCalculated: boolean = false;\n\tprotected _dataProcessed: boolean = false;\t\n\n\tprotected _psi: number | undefined;\n\tprotected _pei: number | undefined;\t\n\n\t/**\n\t * A chart series belongs to.\n\t */\n\tpublic chart:Chart | undefined;\n\n\t/**\n\t * List of bullets to use for the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/bullets/} for more info\n\t */\n\tpublic bullets: List<<D extends DataItem<this[\"_dataItemSettings\"]>>(root: Root, series:Series, dataItem: D) => Bullet | undefined> = new List();\n\n\t/**\n\t * A [[Container]] series' bullets are stored in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, {isMeasured:false, width:p100, height:p100, position:\"absolute\"});\n\n\tprotected _afterNew() {\n\t\tthis.valueFields.push(\"value\");\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.bullets.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._handleBullets(this.dataItems);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t}));\n\t}\n\n\tprotected _dispose(){\n\t\tthis.bulletsContainer.dispose(); // can be in a different parent\n\t\tsuper._dispose();\n\t}\n\n\tprotected _handleBullets(dataItems:Array<DataItem<this[\"_dataItemSettings\"]>>){\n\t\t$array.each(dataItems, (dataItem)=>{\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif(bullets){\n\t\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\t\tbullet.dispose();\n\t\t\t\t})\n\n\t\t\t\tdataItem.bullets = undefined;\n\t\t\t}\n\t\t})\n\n\t\tthis._markDirtyValues();\n\t}\n\n\t/**\n\t * Looks up and returns a data item by its ID.\n\t * \n\t * @param   id  ID\n\t * @return      Data item\n\t */\n\tpublic getDataItemById(id: string): DataItem<this[\"_dataItemSettings\"]> | undefined {\n\t\treturn $array.find(this.dataItems, (dataItem: any) => {\n\t\t\treturn dataItem.get(\"id\") == id;\n\t\t})\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif(this._shouldMakeBullet(dataItem)){\n\t\t\tdataItem.bullets = [];\n\n\t\t\tthis.bullets.each((bulletFunction) => {\n\t\t\t\tthis._makeBullet(dataItem, bulletFunction);\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _shouldMakeBullet(_dataItem: DataItem<this[\"_dataItemSettings\"]>):boolean{\n\t\treturn true;\n\t}\n\n\tprotected _makeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>, bulletFunction:(root: Root, series:Series, dataItem: DataItem<this[\"_dataItemSettings\"]>) => Bullet | undefined, index?:number):Bullet | undefined{\n\t\tconst bullet = bulletFunction(this._root, this, dataItem);\n\t\tif(bullet){\n\t\t\tlet sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tsprite.setRaw(\"position\", \"absolute\");\n\t\t\t\tthis.bulletsContainer.children.push(sprite);\t\t\t\n\t\t\t}\n\t\t\tbullet._index = index;\n\t\t\tbullet.series = this;\n\t\t\tdataItem.bullets!.push(bullet);\t\t\t\n\t\t}\n\t\treturn bullet;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._aggregatesCalculated = false;\n\t\tthis._selectionAggregatesCalculated = false;\n\t}\n\n\tpublic _prepareChildren(){\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\t\t\n\t\tlet endIndex = Math.min(len, this.getPrivate(\"endIndex\", len));\n\t\tthis.setPrivateRaw(\"endIndex\", endIndex); // update to handle less data\n\n\t\tconst calculateAggregates = this.get(\"calculateAggregates\");\n\t\tif(calculateAggregates){\n\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\t\tif (!this._aggregatesCalculated) {\n\t\t\t\t\tthis._calculateAggregates(0, this.dataItems.length);\n\t\t\t\t\tthis._aggregatesCalculated = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex) && !this._selectionAggregatesCalculated) {\t\t\n\t\t\t\tif (startIndex === 0 && endIndex === this.dataItems.length && this._aggregatesCalculated) {\n\t\t\t\t\t// void\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._calculateAggregates(startIndex, endIndex);\n\t\t\t\t}\n\n\t\t\t\tthis._selectionAggregatesCalculated = true;\n\t\t\t}\n\t\t}\n\n\t\tif(this.isDirty(\"tooltip\")){\n\t\t\tlet tooltip = this.get(\"tooltip\");\n\t\t\tif(tooltip){\n\t\t\t\ttooltip.hide(0);\n\t\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t\t}\n\t\t}\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet count = this.dataItems.length;\n\n\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (!dataItem.bullets) {\n\t\t\t\t\tthis._makeBullets(dataItem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = endIndex; i < count; i++) {\n\t\t\t\tthis._hideBullets(this.dataItems[i]);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"fill\") || this.isDirty(\"stroke\")) {\n\n\t\t\tlet markerRectangle: Graphics | undefined;\n\t\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tmarkerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\t\tif (markerRectangle) {\n\n\t\t\t\t\tif (this.isDirty(\"stroke\")) {\n\t\t\t\t\t\tlet stroke = this.get(\"stroke\");\n\t\t\t\t\t\tmarkerRectangle.set(\"stroke\", stroke);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.isDirty(\"fill\")) {\n\t\t\t\t\t\tlet fill = this.get(\"fill\");\n\t\t\t\t\t\tmarkerRectangle.set(\"fill\", fill);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateLegendMarker(undefined);\n\t\t}\t\t\n\t}\n\n\tprotected _calculateAggregates(startIndex: number, endIndex: number) {\n\t\tlet fields = this._valueFields;\n\n\t\tif (!fields) {\n\t\t\tthrow new Error(\"No value fields are set for the series.\");\n\t\t}\n\n\t\tconst sum: { [index: string]: number } = {};\n\t\tconst absSum: { [index: string]: number } = {};\n\t\tconst count: { [index: string]: number } = {};\n\t\tconst low: { [index: string]: number } = {};\n\t\tconst high: { [index: string]: number } = {};\n\t\tconst open: { [index: string]: number } = {};\n\t\tconst close: { [index: string]: number } = {};\n\t\tconst average: { [index: string]: number } = {};\n\t\tconst previous: { [index: string]: number } = {};\n\n\t\t$array.each(fields, (key) => {\n\t\t\tsum[key] = 0;\n\t\t\tabsSum[key] = 0;\n\t\t\tcount[key] = 0;\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tlet change = key + \"Change\";\n\t\t\tlet changePercent = key + \"ChangePercent\";\n\t\t\tlet changePrevious = key + \"ChangePrevious\";\n\t\t\tlet changePreviousPercent = key + \"ChangePreviousPercent\";\n\t\t\tlet changeSelection = key + \"ChangeSelection\";\n\t\t\tlet ChangeSelectionPercent = key + \"ChangeSelectionPercent\";\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tconst dataItem = this.dataItems[i];\n\n\t\t\t\tlet value = dataItem.get(<any>key)\n\n\t\t\t\tif (value != null) {\n\t\t\t\t\tcount[key]++;\n\t\t\t\t\tsum[key] += value;\n\n\t\t\t\t\tabsSum[key] += Math.abs(value);\n\n\t\t\t\t\taverage[key] = sum[key] / count[key];\n\n\t\t\t\t\tif (low[key] > value || low[key] == null) {\n\t\t\t\t\t\tlow[key] = value;\n\t\t\t\t\t}\n\t\t\t\t\tif (high[key] < value || high[key] == null) {\n\t\t\t\t\t\thigh[key] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tclose[key] = value;\n\n\t\t\t\t\tif (open[key] == null) {\n\t\t\t\t\t\topen[key] = value;\n\t\t\t\t\t\tprevious[key] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (startIndex === 0) {\n\t\t\t\t\t\tdataItem.setRaw(<any>(change), value - open[key]);\n\t\t\t\t\t\tdataItem.setRaw(<any>(changePercent), (value - open[key]) / open[key] * 100);\n\t\t\t\t\t}\n\n\n\t\t\t\t\tdataItem.setRaw(<any>(changePrevious), value - previous[key]);\n\t\t\t\t\tdataItem.setRaw(<any>(changePreviousPercent), (value - previous[key]) / previous[key] * 100);\n\t\t\t\t\tdataItem.setRaw(<any>(changeSelection), value - open[key]);\n\t\t\t\t\tdataItem.setRaw(<any>(ChangeSelectionPercent), (value - open[key]) / open[key] * 100);\n\n\t\t\t\t\tprevious[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\t$array.each(fields, (key) => {\n\t\t\tthis.setPrivate(<any>(key + \"AverageSelection\"), average[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CountSelection\"), count[key]);\n\t\t\tthis.setPrivate(<any>(key + \"SumSelection\"), sum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSumSelection\"), absSum[key]);\n\t\t\tthis.setPrivate(<any>(key + \"LowSelection\"), low[key]);\n\t\t\tthis.setPrivate(<any>(key + \"HighSelection\"), high[key]);\n\t\t\tthis.setPrivate(<any>(key + \"OpenSelection\"), open[key]);\n\t\t\tthis.setPrivate(<any>(key + \"CloseSelection\"), close[key]);\n\t\t})\n\n\t\tif (startIndex === 0 && endIndex === this.dataItems.length) {\n\t\t\t$array.each(fields, (key) => {\n\t\t\t\tthis.setPrivate(<any>(key + \"Average\"), average[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Count\"), count[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Sum\"), sum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"AbsoluteSum\"), absSum[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Low\"), low[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"High\"), high[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Open\"), open[key]);\n\t\t\t\tthis.setPrivate(<any>(key + \"Close\"), close[key]);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tthis._psi = this.getPrivate(\"startIndex\", 0);\n\t\tthis._pei = this.getPrivate(\"endIndex\", this.dataItems.length);\n\n\t\t// Apply heat rules\n\t\tif (this._valuesDirty && this.get(\"heatRules\") != null) {\n\t\t\tconst rules = this.get(\"heatRules\", []);\n\t\t\t$array.each(rules, (rule) => {\n\t\t\t\tconst minValue = rule.minValue || this.getPrivate(<any>(rule.dataField + \"Low\")) || 0;\n\t\t\t\tconst maxValue = rule.maxValue || this.getPrivate(<any>(rule.dataField + \"High\")) || 0;\n\n\t\t\t\t$array.each(rule.target._entities, (target) => {\n\t\t\t\t\tconst value = target.dataItem.get(rule.dataField);\n\n\t\t\t\t\tif (!$type.isNumber(value)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet percent: number;\n\t\t\t\t\tif (rule.logarithmic) {\n\t\t\t\t\t\tpercent = (Math.log(value) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tpercent = (value - minValue) / (maxValue - minValue);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($type.isNumber(value) && (!$type.isNumber(percent) || Math.abs(percent) == Infinity)) {\n\t\t\t\t\t\tpercent = 0.5;\n\t\t\t\t\t}\n\n\t\t\t\t\t// fixes problems if all values are the same\n\t\t\t\t\tlet propertyValue;\n\t\t\t\t\tif ($type.isNumber(rule.min)) {\n\t\t\t\t\t\tpropertyValue = rule.min + (rule.max - rule.min) * percent;\n\t\t\t\t\t}\n\t\t\t\t\telse if (rule.min instanceof Color) {\n\t\t\t\t\t\tpropertyValue = Color.interpolate(percent, rule.min, rule.max);\n\t\t\t\t\t}\n\t\t\t\t\telse if (rule.min instanceof Percent) {\n\t\t\t\t\t\tpropertyValue = percentInterpolate(percent, rule.min, rule.max);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (rule.customFunction) {\n\t\t\t\t\t\trule.customFunction.call(this, target, minValue, maxValue, propertyValue);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttarget.set(rule.key, propertyValue);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (this.bullets.length > 0) {\n\t\t\tlet count = this.dataItems.length;\n\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\t\t\tlet endIndex = this.getPrivate(\"endIndex\", count);\n\n\t\t\tif(endIndex < count){\n\t\t\t\tendIndex++;\n\t\t\t}\n\t\t\tif(startIndex > 0){\n\t\t\t\tstartIndex--;\n\t\t\t}\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis._positionBullets(this.dataItems[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tif(dataItem.bullets){\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tthis._positionBullet(bullet);\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\n\t\t\t\tif(bullet.get(\"dynamic\")){\n\t\t\t\t\t\n\t\t\t\t\tif(sprite){\t\t\t\t\t\t\n\t\t\t\t\t\tsprite._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\tsprite.markDirtySize();\n\t\t\t\t\t}\n\t\t\t\t\tif(sprite instanceof Container){\n\t\t\t\t\t\tsprite.walkChildren((child)=>{\t\t\t\t\t\t\n\t\t\t\t\t\t\tchild._markDirtyKey(\"fill\" as any);\n\t\t\t\t\t\t\tchild.markDirtySize();\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\t\n\n\t\t\t\tif(sprite instanceof Label && sprite.get(\"populateText\" as any)){\n\t\t\t\t\tsprite.text.markDirtyText();\n\t\t\t\t}\t\t\t\t\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _hideBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tif (dataItem.bullets) {\n\t\t\t$array.each(dataItem.bullets, (bullet) => {\n\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _positionBullet(_bullet: Bullet) {\n\t}\n\n\tpublic _placeBulletsContainer(chart:Chart){\n\t\tchart.bulletsContainer.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer(){\n\t\tconst bulletsContainer = this.bulletsContainer;\n\t\tif(bulletsContainer.parent){\n\t\t\tbulletsContainer.parent.children.removeValue(bulletsContainer)\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst bullets = dataItem.bullets;\n\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tbullet.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tpromises.push(bullet.get(\"sprite\").show(duration));\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst bullets = dataItem.bullets;\n\t\tif(bullets){\n\t\t\t$array.each(bullets, (bullet)=>{\n\t\t\t\tpromises.push(bullet.get(\"sprite\").hide(duration));\n\t\t\t})\n\t\t}\n\t\tawait Promise.all(promises);\n\t}\n\n\n\tprotected async _sequencedShowHide(show: boolean, duration?: number): Promise<void> {\n\t\tif (this.get(\"sequencedInterpolation\")) {\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (duration > 0) {\n\t\t\t\tconst startIndex = this.getPrivate(\"startIndex\", 0);\n\t\t\t\tconst endIndex = this.getPrivate(\"endIndex\", this.dataItems.length);\n\n\t\t\t\tawait Promise.all($array.map(this.dataItems, async (dataItem, i) => {\n\t\t\t\t\tlet realDuration = duration || 0;\n\n\t\t\t\t\tif (i < startIndex - 10 || i > endIndex + 10) {\n\t\t\t\t\t\trealDuration = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t//let delay = this.get(\"sequencedDelay\", 0) * i + realDuration * (i - startIndex) / (endIndex - startIndex);\n\t\t\t\t\tlet delay = this.get(\"sequencedDelay\", 0) + realDuration / (endIndex - startIndex);\n\n\t\t\t\t\tawait $time.sleep(delay * (i - startIndex));\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tawait this.showDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tawait this.hideDataItem(dataItem, realDuration);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tawait Promise.all($array.map(this.dataItems, (dataItem) => {\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\treturn this.showDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\treturn this.hideDataItem(dataItem, 0);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst legendDataItem = dataItem.get(\"legendDataItem\" as any) as DataItem<ILegendDataItem>;\n\n\t\tif (legendDataItem) {\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tconst text = valueLabel.text;\n\t\t\t\tlet txt = \"\";\n\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\ttxt = this.get(\"legendValueText\", text.get(\"text\", \"\"));\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t\ttext.markDirtyText();\n\t\t\t}\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tconst text = label.text;\n\t\t\t\tlet txt = \"\";\n\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\ttxt = this.get(\"legendLabelText\", text.get(\"text\", \"\"));\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t\ttext.markDirtyText();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\tprotected _onHide(){\n\t\tsuper._onHide();\n\n\t\tconst tooltip = this.getTooltip();\n\t\tif(tooltip){\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic unhoverDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}