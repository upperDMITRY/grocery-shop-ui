{"ast":null,"code":"import{Button,CardMedia,Grid,Typography,Box}from'@mui/material';import CloseIcon from'@mui/icons-material/Close';import{useDispatch,useSelector}from'react-redux';import{deleteItem}from'../../redux/slices/cartSlice';import{deleteFromCartRequest}from'../../helpers/deleteFromCartRequest';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DialogCartItem=function DialogCartItem(_ref){var cartItem=_ref.cartItem,handleClose=_ref.handleClose,index=_ref.index;var auth=useSelector(function(state){return state.auth;});var token=auth.token,isAuth=auth.isAuth,email=auth.email;var dispatch=useDispatch();var sizeTypes={KILOS:'kg',PACKS:'pcs'};var deleteCartItemHandle=function deleteCartItemHandle(){dispatch(deleteItem({productId:cartItem.productId,size:cartItem.size}));deleteFromCartRequest({token:token,isAuth:isAuth,email:email,quantity:cartItem.quantity,size:cartItem.size,productId:cartItem.productId});};return/*#__PURE__*/_jsxs(Grid,{container:true,sx:{marginBottom:'10px',width:{xs:'270px',md:'300px'}},id:\"shoppingCart_cartItem_\".concat(cartItem.productId,\"_\").concat(cartItem.size),children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Box,{sx:{width:'70px'},children:/*#__PURE__*/_jsx(Link,{to:\"/products/\".concat(cartItem.productId),onClick:handleClose,children:/*#__PURE__*/_jsx(CardMedia,{component:\"img\",width:\"100%\",image:cartItem.image,alt:\"image of \".concat(cartItem.name),id:\"cartItem_\".concat(index,\"_image\")})})})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:5,children:[/*#__PURE__*/_jsx(Link,{to:\"/products/\".concat(cartItem.productId),style:{textDecoration:'none'},onClick:handleClose,children:/*#__PURE__*/_jsx(Typography,{sx:{fontWeight:700,color:'common.black',transition:'color 0.3s',display:'inline-block',':hover':{color:'primary.main'}},id:\"cartItem_\".concat(index,\"_name\"),children:cartItem.name})}),/*#__PURE__*/_jsxs(Typography,{id:\"cartItem_\".concat(index,\"_quantity\"),children:[cartItem.quantity,\" x \",cartItem.price.toFixed(2),\" USD\"]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:2,children:/*#__PURE__*/_jsxs(Typography,{id:\"cartItem_\".concat(index,\"_size\"),children:[cartItem.size,sizeTypes[cartItem.sizeType]]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1,children:/*#__PURE__*/_jsx(Button,{size:\"small\",sx:{padding:0,minWidth:0,color:'#424242','&:hover':{backgroundColor:'transparent',color:'black'}},onClick:deleteCartItemHandle,id:\"cartItem_\".concat(index,\"_deleteButton\"),children:/*#__PURE__*/_jsx(CloseIcon,{})})})]});};export default DialogCartItem;","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/dialogCart/DialogCartItem.jsx"],"names":["Button","CardMedia","Grid","Typography","Box","CloseIcon","useDispatch","useSelector","deleteItem","deleteFromCartRequest","Link","DialogCartItem","cartItem","handleClose","index","auth","state","token","isAuth","email","dispatch","sizeTypes","KILOS","PACKS","deleteCartItemHandle","productId","size","quantity","marginBottom","width","xs","md","image","name","textDecoration","fontWeight","color","transition","display","price","toFixed","sizeType","padding","minWidth","backgroundColor"],"mappings":"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","sourcesContent":["import { Button, CardMedia, Grid, Typography, Box } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteItem } from '../../redux/slices/cartSlice';\r\nimport { deleteFromCartRequest } from '../../helpers/deleteFromCartRequest';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DialogCartItem = ({ cartItem, handleClose, index }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const { token, isAuth, email } = auth;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const sizeTypes = {\r\n    KILOS: 'kg',\r\n    PACKS: 'pcs',\r\n  };\r\n\r\n  const deleteCartItemHandle = () => {\r\n    dispatch(\r\n      deleteItem({ productId: cartItem.productId, size: cartItem.size })\r\n    );\r\n    deleteFromCartRequest({\r\n      token,\r\n      isAuth,\r\n      email,\r\n      quantity: cartItem.quantity,\r\n      size: cartItem.size,\r\n      productId: cartItem.productId,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      sx={{\r\n        marginBottom: '10px',\r\n        width: { xs: '270px', md: '300px' },\r\n      }}\r\n      id={`shoppingCart_cartItem_${cartItem.productId}_${cartItem.size}`}\r\n    >\r\n      <Grid item xs={4}>\r\n        <Box sx={{ width: '70px' }}>\r\n          <Link to={`/products/${cartItem.productId}`} onClick={handleClose}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              width=\"100%\"\r\n              image={cartItem.image}\r\n              alt={`image of ${cartItem.name}`}\r\n              id={`cartItem_${index}_image`}\r\n            />\r\n          </Link>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={5}>\r\n        <Link\r\n          to={`/products/${cartItem.productId}`}\r\n          style={{ textDecoration: 'none' }}\r\n          onClick={handleClose}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontWeight: 700,\r\n              color: 'common.black',\r\n              transition: 'color 0.3s',\r\n              display: 'inline-block',\r\n              ':hover': {\r\n                color: 'primary.main',\r\n              },\r\n            }}\r\n            id={`cartItem_${index}_name`}\r\n          >\r\n            {cartItem.name}\r\n          </Typography>\r\n        </Link>\r\n        <Typography id={`cartItem_${index}_quantity`}>\r\n          {cartItem.quantity} x {cartItem.price.toFixed(2)} USD\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <Typography id={`cartItem_${index}_size`}>\r\n          {cartItem.size}\r\n          {sizeTypes[cartItem.sizeType]}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={1}>\r\n        <Button\r\n          size=\"small\"\r\n          sx={{\r\n            padding: 0,\r\n            minWidth: 0,\r\n            color: '#424242',\r\n            '&:hover': { backgroundColor: 'transparent', color: 'black' },\r\n          }}\r\n          onClick={deleteCartItemHandle}\r\n          id={`cartItem_${index}_deleteButton`}\r\n        >\r\n          <CloseIcon></CloseIcon>\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DialogCartItem;\r\n"]},"metadata":{},"sourceType":"module"}