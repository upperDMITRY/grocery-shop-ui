{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n/**\r\n * Creates an axis grid line.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\r\n * @important\r\n */\n\nvar Grid =\n/** @class */\nfunction (_super) {\n  __extends(Grid, _super);\n\n  function Grid() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(Grid.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n\n      if (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n        this._clear = true;\n      }\n    }\n  });\n  Object.defineProperty(Grid, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Grid\"\n  });\n  Object.defineProperty(Grid, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([Grid.className])\n  });\n  return Grid;\n}(Graphics);\n\nexport { Grid };","map":{"version":3,"sources":["../../../../../../src/.internal/charts/xy/axes/Grid.ts"],"names":[],"mappings":";AAAA,SAAS,QAAT,QAA8D,+BAA9D;AAkBA;;;;;AAKG;;AACH,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0B,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;;AAA1B,WAAA,IAAA,GAAA;;AAeC;;;;;;WAPA,YAAA;AACC,MAAA,MAAA,CAAA,SAAA,CAAM,cAAN,CAAoB,IAApB,CAAoB,IAApB;;AAEA,UAAI,KAAK,cAAL,CAAoB,OAApB,KAAgC,KAAK,cAAL,CAAoB,QAApB,CAApC,EAAmE;AAClE,aAAK,MAAL,GAAc,IAAd;AACA;AACD;;AATD,EAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,WAAA,EAAA;oBAAA;sBAAA;kBAAA;WAAkC;AAAlC,GAAA;AACA,EAAA,MAAA,CAAA,cAAA,CAAA,IAAA,EAAA,YAAA,EAAA;oBAAA;sBAAA;kBAAA;WAA0C,QAAQ,CAAC,UAAT,CAAoB,MAApB,CAA2B,CAAC,IAAI,CAAC,SAAN,CAA3B;AAA1C,GAAA;AASD,SAAA,IAAA;AAAC,CAfD,CAA0B,QAA1B,CAAA;;SAAa,I","sourcesContent":["import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}