{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { XYSeries } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n/**\r\n * Base class for all \"column-based\" series\r\n */\nvar BaseColumnSeries = /** @class */function (_super) {\n  __extends(BaseColumnSeries, _super);\n  function BaseColumnSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"_ph\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_pw\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    return _this;\n  }\n  Object.defineProperty(BaseColumnSeries.prototype, \"_makeGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (listTemplate, dataItem) {\n      return this.makeColumn(dataItem, listTemplate);\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_makeFieldNames\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._makeFieldNames.call(this);\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var categoryAxis = \"CategoryAxis\";\n      var valueAxis = \"ValueAxis\";\n      if (xAxis.isType(categoryAxis)) {\n        if (!this.get(\"openCategoryXField\")) {\n          this._xOpenField = this._xField;\n        }\n      }\n      if (xAxis.isType(valueAxis)) {\n        if (!this.get(\"openValueXField\")) {\n          this._xOpenField = this._xField;\n        }\n      }\n      if (yAxis.isType(categoryAxis)) {\n        if (!this.get(\"openCategoryYField\")) {\n          this._yOpenField = this._yField;\n        }\n      }\n      if (yAxis.isType(valueAxis)) {\n        if (!this.get(\"openValueYField\")) {\n          this._yOpenField = this._yField;\n        }\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      var chart = this.chart;\n      if (chart) {\n        this._ph = chart.plotContainer.height();\n        this._pw = chart.plotContainer.width();\n      }\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var baseAxis = this.get(\"baseAxis\");\n      var columnsTemplate = this.columns.template;\n      if (this.isDirty(\"fill\")) {\n        if (columnsTemplate.get(\"fill\") == null) {\n          columnsTemplate.set(\"fill\", this.get(\"fill\"));\n        }\n      }\n      if (this.isDirty(\"stroke\")) {\n        if (columnsTemplate.get(\"stroke\") == null) {\n          columnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n        }\n      }\n      var index = 0;\n      var clusterCount = 0;\n      var i = 0;\n      $array.each(baseAxis.series, function (series) {\n        if (series instanceof BaseColumnSeries) {\n          var stacked = series.get(\"stacked\");\n          if (stacked && i == 0) {\n            clusterCount++;\n          }\n          if (!stacked && series.get(\"clustered\")) {\n            clusterCount++;\n          }\n        }\n        if (series === _this) {\n          index = clusterCount - 1;\n        }\n        i++;\n      });\n      if (!this.get(\"clustered\")) {\n        index = 0;\n        clusterCount = 1;\n      }\n      if (clusterCount === 0) {\n        clusterCount = 1;\n        index = 0;\n      }\n      var xRenderer = xAxis.get(\"renderer\");\n      var yRenderer = yAxis.get(\"renderer\");\n      var cellStartLocation = \"cellStartLocation\";\n      var cellEndLocation = \"cellEndLocation\";\n      var cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n      var cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n      var cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n      var cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n      this._aLocationX0 = cellLocationX0 + index / clusterCount * (cellLocationX1 - cellLocationX0);\n      this._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);\n      ;\n      this._aLocationY0 = cellLocationY0 + index / clusterCount * (cellLocationY1 - cellLocationY0);\n      this._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n      if (xAxis.inited && yAxis.inited) {\n        if (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n          var len = this.dataItems.length;\n          var startIndex = Math.max(0, this.getPrivate(\"startIndex\", 0) - 2);\n          var endIndex = Math.min(this.getPrivate(\"endIndex\", len) + 2, len - 1);\n          for (var i_1 = 0; i_1 < startIndex; i_1++) {\n            this._toggleColumn(this.dataItems[i_1], false);\n          }\n          var previous = this.dataItems[startIndex];\n          for (var i_2 = startIndex; i_2 <= endIndex; i_2++) {\n            var dataItem = this.dataItems[i_2];\n            this._updateGraphics(dataItem, previous);\n            previous = dataItem;\n          }\n          for (var i_3 = endIndex + 1; i_3 < len; i_3++) {\n            this._toggleColumn(this.dataItems[i_3], false);\n          }\n        }\n      } else {\n        this._skipped = true;\n      }\n      _super.prototype._updateChildren.call(this);\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_updateGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, previousDataItem) {\n      var _this = this;\n      var graphics = dataItem.get(\"graphics\");\n      if (!graphics) {\n        graphics = this._makeGraphics(this.columns, dataItem);\n        dataItem.set(\"graphics\", graphics);\n        graphics._setDataItem(dataItem);\n        var legendDataItem = dataItem.get(\"legendDataItem\");\n        if (legendDataItem) {\n          var markerRectangle = legendDataItem.get(\"markerRectangle\");\n          if (markerRectangle) {\n            markerRectangle.setAll({\n              fill: graphics.get(\"fill\"),\n              stroke: graphics.get(\"stroke\")\n            });\n          }\n        }\n        this.axisRanges.each(function (axisRange) {\n          var container = axisRange.container;\n          var graphicsArray = dataItem.get(\"rangeGraphics\", []);\n          dataItem.set(\"rangeGraphics\", graphicsArray);\n          var rangeGraphics = _this._makeGraphics(axisRange.columns, dataItem);\n          graphicsArray.push(rangeGraphics);\n          rangeGraphics.setPrivate(\"list\", axisRange.columns);\n          container.children.push(rangeGraphics);\n        });\n      }\n      var xField = this._xField;\n      var yField = this._yField;\n      var valueX = dataItem.get(xField);\n      var valueY = dataItem.get(yField);\n      if (valueX != null && valueY != null) {\n        var xOpenField = this._xOpenField;\n        var yOpenField = this._yOpenField;\n        var locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n        var locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n        var openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n        var openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n        var width = graphics.get(\"width\");\n        var height = graphics.get(\"height\");\n        var stacked = this.get(\"stacked\");\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n        var baseAxis = this.get(\"baseAxis\");\n        var xStart = xAxis.get(\"start\");\n        var xEnd = xAxis.get(\"end\");\n        var yStart = yAxis.get(\"start\");\n        var yEnd = yAxis.get(\"end\");\n        var l_1;\n        var r_1;\n        var t_1;\n        var b_1;\n        var vcy = this.get(\"vcy\", 1);\n        var vcx = this.get(\"vcx\", 1);\n        var fitW_1 = false;\n        var fitH_1 = false;\n        if (yAxis.isType(\"CategoryAxis\") && xAxis.isType(\"CategoryAxis\")) {\n          var startLocation = this._aLocationX0 + openLocationX - 0.5;\n          var endLocation = this._aLocationX1 + locationX - 0.5;\n          if (width instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - width.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n          l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n          r_1 = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n          startLocation = this._aLocationY0 + openLocationY - 0.5;\n          endLocation = this._aLocationY1 + locationY - 0.5;\n          if (height instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - height.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n          t_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n          b_1 = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n          dataItem.setRaw(\"point\", {\n            x: l_1 + (r_1 - l_1) / 2,\n            y: t_1 + (b_1 - t_1) / 2\n          });\n        } else if (xAxis === baseAxis) {\n          var startLocation = this._aLocationX0 + openLocationX - 0.5;\n          var endLocation = this._aLocationX1 + locationX - 0.5;\n          if (width instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - width.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n          l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n          r_1 = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n          t_1 = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n          if (this._yOpenField !== this._yField) {\n            b_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n          } else {\n            if (stacked) {\n              var stackToItemY = dataItem.get(\"stackToItemY\");\n              if (stackToItemY) {\n                b_1 = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, stackToItemY.component.get(\"vcy\"));\n              } else {\n                b_1 = yAxis.basePosition();\n              }\n            } else {\n              b_1 = yAxis.basePosition();\n            }\n          }\n          dataItem.setRaw(\"point\", {\n            x: l_1 + (r_1 - l_1) / 2,\n            y: t_1\n          });\n          fitH_1 = true;\n        } else if (yAxis === baseAxis) {\n          var startLocation = this._aLocationY0 + openLocationY - 0.5;\n          var endLocation = this._aLocationY1 + locationY - 0.5;\n          if (height instanceof Percent) {\n            var offset = (endLocation - startLocation) * (1 - height.value) / 2;\n            startLocation += offset;\n            endLocation -= offset;\n          }\n          t_1 = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n          b_1 = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n          r_1 = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n          if (this._xOpenField !== this._xField) {\n            l_1 = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n          } else {\n            if (stacked) {\n              var stackToItemX = dataItem.get(\"stackToItemX\");\n              if (stackToItemX) {\n                l_1 = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, stackToItemX.component.get(\"vcx\"));\n              } else {\n                l_1 = xAxis.basePosition();\n              }\n            } else {\n              l_1 = xAxis.basePosition();\n            }\n          }\n          fitW_1 = true;\n          dataItem.setRaw(\"point\", {\n            x: r_1,\n            y: t_1 + (b_1 - t_1) / 2\n          });\n        }\n        this._updateSeriesGraphics(dataItem, graphics, l_1, r_1, t_1, b_1, fitW_1, fitH_1);\n        if (l_1 < xStart && r_1 < xStart || l_1 > xEnd && r_1 > xEnd || t_1 < yStart && b_1 < yStart || t_1 > yEnd && b_1 > yEnd) {\n          this._toggleColumn(dataItem, false);\n        } else {\n          this._toggleColumn(dataItem, true);\n        }\n        var rangeGraphics = dataItem.get(\"rangeGraphics\");\n        if (rangeGraphics) {\n          $array.each(rangeGraphics, function (graphics) {\n            _this._updateSeriesGraphics(dataItem, graphics, l_1, r_1, t_1, b_1, fitW_1, fitH_1);\n          });\n        }\n        this._applyGraphicsStates(dataItem, previousDataItem);\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_updateSeriesGraphics\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, graphics, l, r, t, b, fitW, fitH) {\n      var width = graphics.get(\"width\");\n      var height = graphics.get(\"height\");\n      var maxWidth = graphics.get(\"maxWidth\");\n      var maxHeight = graphics.get(\"maxHeight\");\n      var ptl = this.getPoint(l, t);\n      var pbr = this.getPoint(r, b);\n      var tooltipPoint = dataItem.get(\"point\");\n      if (tooltipPoint) {\n        var point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n        tooltipPoint.x = point.x + this._x;\n        tooltipPoint.y = point.y + this._y;\n      }\n      l = ptl.x;\n      r = pbr.x;\n      t = ptl.y;\n      b = pbr.y;\n      if ($type.isNumber(width)) {\n        var offset = (r - l - width) / 2;\n        l += offset;\n        r -= offset;\n      }\n      if ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n        var offset = (r - l - maxWidth) / 2;\n        l += offset;\n        r -= offset;\n      }\n      if ($type.isNumber(height)) {\n        var offset = (b - t - height) / 2;\n        t += offset;\n        b -= offset;\n      }\n      if ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n        var offset = (b - t - maxHeight) / 2;\n        t += offset;\n        b -= offset;\n      }\n      if (this.get(\"adjustBulletPosition\")) {\n        if (fitW) {\n          r = Math.min(Math.max(0, r), this._pw);\n          l = Math.min(Math.max(0, l), this._pw);\n        }\n        if (fitH) {\n          t = Math.min(Math.max(0, t), this._ph);\n          b = Math.min(Math.max(0, b), this._ph);\n        }\n      }\n      dataItem.setRaw(\"left\", l);\n      dataItem.setRaw(\"right\", r);\n      dataItem.setRaw(\"top\", t);\n      dataItem.setRaw(\"bottom\", b);\n      graphics.setPrivate(\"width\", r - l);\n      graphics.setPrivate(\"height\", b - t);\n      graphics.set(\"x\", l);\n      graphics.set(\"y\", b - (b - t));\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_handleDataSetChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      _super.prototype._handleDataSetChange.call(this);\n      $array.each(this._dataItems, function (dataItem) {\n        _this._toggleColumn(dataItem, false);\n      });\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_applyGraphicsStates\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, previousDataItem) {\n      var graphics = dataItem.get(\"graphics\");\n      var dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n      var riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n      var dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n      var riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n      if (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n        var baseAxis = this.get(\"baseAxis\");\n        var open_1;\n        var close_1;\n        var previousClose = void 0;\n        if (baseAxis === xAxis && yAxis.isType(\"ValueAxis\")) {\n          open_1 = dataItem.get(this._yOpenField);\n          close_1 = dataItem.get(this._yField);\n          previousClose = previousDataItem.get(this._yField);\n        } else if (baseAxis === yAxis && xAxis.isType(\"ValueAxis\")) {\n          open_1 = dataItem.get(this._xOpenField);\n          close_1 = dataItem.get(this._xField);\n          previousClose = previousDataItem.get(this._xField);\n        }\n        if ($type.isNumber(open_1) && $type.isNumber(close_1)) {\n          if (close_1 < open_1) {\n            if (dropFromOpen) {\n              dropFromOpen.apply();\n            }\n          } else {\n            if (riseFromOpen) {\n              riseFromOpen.apply();\n            }\n          }\n          if ($type.isNumber(previousClose)) {\n            if (close_1 < previousClose) {\n              if (dropFromPrevious) {\n                dropFromPrevious.apply();\n              }\n            } else {\n              if (riseFromPrevious) {\n                riseFromPrevious.apply();\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(BaseColumnSeries.prototype, \"disposeDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      _super.prototype.disposeDataItem.call(this, dataItem);\n      var graphics = dataItem.get(\"graphics\");\n      if (graphics) {\n        this.columns.removeValue(graphics);\n        graphics.dispose();\n      }\n      var rangeGraphics = dataItem.get(\"rangeGraphics\");\n      if (rangeGraphics) {\n        $array.each(rangeGraphics, function (graphics) {\n          var list = graphics.getPrivate(\"list\");\n          if (list) {\n            list.removeValue(graphics);\n          }\n          graphics.dispose();\n        });\n      }\n    }\n  });\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  Object.defineProperty(BaseColumnSeries.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, graphics, rangeGraphics;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              graphics = dataItem.get(\"graphics\");\n              if (graphics) {\n                promises.push(graphics.hide(duration));\n              }\n              rangeGraphics = dataItem.get(\"rangeGraphics\");\n              if (rangeGraphics) {\n                $array.each(rangeGraphics, function (graphics) {\n                  promises.push(graphics.hide(duration));\n                });\n              }\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n\n  Object.defineProperty(BaseColumnSeries.prototype, \"_toggleColumn\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, visible) {\n      var graphics = dataItem.get(\"graphics\");\n      if (graphics) {\n        graphics.setPrivate(\"visible\", visible);\n      }\n      var rangeGraphics = dataItem.get(\"rangeGraphics\");\n      if (rangeGraphics) {\n        $array.each(rangeGraphics, function (graphics) {\n          graphics.setPrivate(\"visible\", visible);\n        });\n      }\n      var bullets = dataItem.bullets;\n      if (bullets) {\n        $array.each(bullets, function (bullet) {\n          bullet.setPrivate(\"hidden\", !visible);\n        });\n      }\n    }\n  });\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n  Object.defineProperty(BaseColumnSeries.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, graphics, rangeGraphics;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n              graphics = dataItem.get(\"graphics\");\n              if (graphics) {\n                promises.push(graphics.show(duration));\n              }\n              rangeGraphics = dataItem.get(\"rangeGraphics\");\n              if (rangeGraphics) {\n                $array.each(rangeGraphics, function (graphics) {\n                  promises.push(graphics.show(duration));\n                });\n              }\n              return [4 /*yield*/, Promise.all(promises)];\n            case 1:\n              _a.sent();\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(BaseColumnSeries.prototype, \"updateLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var _this = this;\n      var legendDataItem = this.get(\"legendDataItem\");\n      if (legendDataItem) {\n        var graphics_1 = this.columns.template;\n        if (dataItem) {\n          var column = dataItem.get(\"graphics\");\n          if (column) {\n            graphics_1 = column;\n          }\n        }\n        var markerRectangle_1 = legendDataItem.get(\"markerRectangle\");\n        if (markerRectangle_1) {\n          if (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n            $array.each(visualSettings, function (setting) {\n              markerRectangle_1.set(setting, graphics_1.get(setting, _this.get(setting)));\n            });\n          }\n        }\n      }\n    }\n  });\n  Object.defineProperty(BaseColumnSeries.prototype, \"_getTooltipTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n        return _super.prototype._getTooltipTarget.call(this, dataItem);\n      }\n      var column = dataItem.get(\"graphics\");\n      if (column) {\n        return column;\n      }\n      return this;\n    }\n  });\n  Object.defineProperty(BaseColumnSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"BaseColumnSeries\"\n  });\n  Object.defineProperty(BaseColumnSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: XYSeries.classNames.concat([BaseColumnSeries.className])\n  });\n  return BaseColumnSeries;\n}(XYSeries);\nexport { BaseColumnSeries };","map":{"version":3,"names":["XYSeries","Percent","visualSettings","$array","$type","BaseColumnSeries","_super","__extends","_this","apply","arguments","Object","defineProperty","value","listTemplate","dataItem","makeColumn","prototype","_makeFieldNames","call","xAxis","get","yAxis","categoryAxis","valueAxis","isType","_xOpenField","_xField","_yOpenField","_yField","chart","_ph","plotContainer","height","_pw","width","baseAxis","columnsTemplate","columns","template","isDirty","set","index","clusterCount","i","each","series","stacked","xRenderer","yRenderer","cellStartLocation","cellEndLocation","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","inited","_axesDirty","_valuesDirty","_stackDirty","_sizeDirty","len","dataItems","length","startIndex","Math","max","getPrivate","endIndex","min","i_1","_toggleColumn","previous","i_2","_updateGraphics","i_3","_skipped","_updateChildren","previousDataItem","graphics","_makeGraphics","_setDataItem","legendDataItem","markerRectangle","setAll","fill","stroke","axisRanges","axisRange","container","graphicsArray","rangeGraphics","push","setPrivate","children","xField","yField","valueX","valueY","xOpenField","yOpenField","locationX","locationY","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l_1","r_1","t_1","b_1","vcy","vcx","fitW_1","fitH_1","startLocation","endLocation","offset","getDataItemPositionX","getDataItemPositionY","setRaw","x","y","stackToItemY","component","basePosition","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","l","r","t","b","fitW","fitH","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","point","_x","_y","isNumber","abs","_handleDataSetChange","_dataItems","dropFromOpen","states","lookup","riseFromOpen","dropFromPrevious","riseFromPrevious","open_1","close_1","previousClose","disposeDataItem","removeValue","dispose","list","duration","promises","hideDataItem","hide","Promise","all","_a","sent","visible","bullets","bullet","showDataItem","show","graphics_1","column","markerRectangle_1","setting","_getTooltipTarget","classNames","concat","className"],"sources":["../../../../../../src/.internal/charts/xy/series/BaseColumnSeries.ts"],"sourcesContent":["import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?:boolean;\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.getPrivate(\"startIndex\", 0) - 2);\n\t\t\t\tlet endIndex = Math.min(this.getPrivate(\"endIndex\", len) + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tprevious = dataItem;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\n\t\tif (!graphics) {\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tmarkerRectangle.setAll({ fill: graphics.get(\"fill\"), stroke: graphics.get(\"stroke\") });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst graphicsArray: Array<Graphics> = dataItem.get(\"rangeGraphics\", []);\n\t\t\t\tdataItem.set(\"rangeGraphics\", graphicsArray);\n\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b < yStart) || (t > yEnd && b > yEnd)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\t\t\n\t\tif(tooltipPoint){\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif(this.get(\"adjustBulletPosition\")){\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tprotected _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tmarkerRectangle.set(setting, graphics.get(setting, this.get(setting)));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}