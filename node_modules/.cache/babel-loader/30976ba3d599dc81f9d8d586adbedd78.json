{"ast":null,"code":"import{useSelector,useDispatch}from'react-redux';import{OutlinedInput,FormControl,InputLabel}from'@mui/material';import{setName}from'../../../../redux/slices/adminProducts';import{forwardRef,memo}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Name=/*#__PURE__*/memo(/*#__PURE__*/forwardRef(function(props,ref){var dispatch=useDispatch();var name=useSelector(function(state){return state.adminProducts.name;});var disabledSaveButton=useSelector(function(state){return state.adminProducts.disabledSaveButton;});var handleNameChange=function handleNameChange(e){if(name.length<256){dispatch(setName(e.target.value.slice(0,255)));}};return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{shrink:true,children:\"Name\"}),/*#__PURE__*/_jsx(OutlinedInput,{ref:ref,autoFocus:true,notched:true,placeholder:disabledSaveButton?'Enter product name':null,label:\"Name\",value:name,onChange:handleNameChange})]});}));export default Name;","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/products/editAndAddNewProduct/Name.jsx"],"names":["useSelector","useDispatch","OutlinedInput","FormControl","InputLabel","setName","forwardRef","memo","Name","props","ref","dispatch","name","state","adminProducts","disabledSaveButton","handleNameChange","e","length","target","value","slice"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAT,CAAwBC,WAAxB,CAAqCC,UAArC,KAAuD,eAAvD,CACA,OAASC,OAAT,KAAwB,wCAAxB,CACA,OAASC,UAAT,CAAqBC,IAArB,KAAiC,OAAjC,C,wFAEA,GAAMC,CAAAA,IAAI,cAAGD,IAAI,cACfD,UAAU,CAAC,SAACG,KAAD,CAAQC,GAAR,CAAgB,CACzB,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CAEA,GAAMW,CAAAA,IAAI,CAAGZ,WAAW,CAAC,SAACa,KAAD,QAAWA,CAAAA,KAAK,CAACC,aAAN,CAAoBF,IAA/B,EAAD,CAAxB,CAEA,GAAMG,CAAAA,kBAAkB,CAAGf,WAAW,CACpC,SAACa,KAAD,QAAWA,CAAAA,KAAK,CAACC,aAAN,CAAoBC,kBAA/B,EADoC,CAAtC,CAIA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAO,CAC9B,GAAIL,IAAI,CAACM,MAAL,CAAc,GAAlB,CAAuB,CACrBP,QAAQ,CAACN,OAAO,CAACY,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqB,CAArB,CAAwB,GAAxB,CAAD,CAAR,CAAR,CACD,CACF,CAJD,CAMA,mBACE,MAAC,WAAD,EAAa,SAAS,KAAtB,wBACE,KAAC,UAAD,EAAY,MAAM,KAAlB,kBADF,cAEE,KAAC,aAAD,EACE,GAAG,CAAEX,GADP,CAEE,SAAS,KAFX,CAGE,OAAO,KAHT,CAIE,WAAW,CAAEK,kBAAkB,CAAG,oBAAH,CAA0B,IAJ3D,CAKE,KAAK,CAAC,MALR,CAME,KAAK,CAAEH,IANT,CAOE,QAAQ,CAAEI,gBAPZ,EAFF,GADF,CAcD,CA7BS,CADK,CAAjB,CAiCA,cAAeR,CAAAA,IAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport { OutlinedInput, FormControl, InputLabel } from '@mui/material';\r\nimport { setName } from '../../../../redux/slices/adminProducts';\r\nimport { forwardRef, memo } from 'react';\r\n\r\nconst Name = memo(\r\n  forwardRef((props, ref) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const name = useSelector((state) => state.adminProducts.name);\r\n\r\n    const disabledSaveButton = useSelector(\r\n      (state) => state.adminProducts.disabledSaveButton\r\n    );\r\n\r\n    const handleNameChange = (e) => {\r\n      if (name.length < 256) {\r\n        dispatch(setName(e.target.value.slice(0, 255)));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <FormControl fullWidth>\r\n        <InputLabel shrink>Name</InputLabel>\r\n        <OutlinedInput\r\n          ref={ref}\r\n          autoFocus\r\n          notched\r\n          placeholder={disabledSaveButton ? 'Enter product name' : null}\r\n          label=\"Name\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n        />\r\n      </FormControl>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Name;\r\n"]},"metadata":{},"sourceType":"module"}