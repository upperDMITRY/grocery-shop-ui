{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';var counter=function counter(cart){var reducer=function reducer(acc,item){return acc+item.quantity;};return cart.reduce(reducer,0);};var saveInStore=function saveInStore(cart){localStorage.setItem('cart',JSON.stringify(cart));};export var initialState={cartItems:localStorage.getItem('cart')?JSON.parse(localStorage.getItem('cart')):[],counter:0,anchorEl:null,isEmpty:null,totalQuantity:localStorage.getItem('cart')?JSON.parse(localStorage.getItem('cart')).reduce(function(acc,item){return acc+item.quantity;},0):0};export var cart=createSlice({name:'cart',initialState:initialState,reducers:{setAnchorEl:function setAnchorEl(state,action){state.anchorEl=action.payload;},setIsEmpty:function setIsEmpty(state,action){state.isEmpty=action.payload;},deleteItem:function deleteItem(state,action){var _action$payload=action.payload,productId=_action$payload.productId,size=_action$payload.size;var index=state.cartItems.findIndex(function(item){return item.productId===productId&&item.size===size;});state.cartItems.splice(index,1);if(state.cartItems.length===0){state.anchorEl=null;}state.totalQuantity=counter(state.cartItems);saveInStore(state.cartItems);},addItem:function addItem(state,action){var match=state.cartItems.find(function(item){return item.productId===action.payload.productId&&item.size===action.payload.size;});var index=state.cartItems.indexOf(match);match?state.cartItems[index].quantity+=action.payload.quantity:state.cartItems.push(action.payload);state.totalQuantity=counter(state.cartItems);saveInStore(state.cartItems);},rewriteCart:function rewriteCart(state,action){state.cartItems=action.payload;state.totalQuantity=counter(state.cartItems);saveInStore(state.cartItems);}}});var _cart$actions=cart.actions,setAnchorEl=_cart$actions.setAnchorEl,setIsEmpty=_cart$actions.setIsEmpty,deleteItem=_cart$actions.deleteItem,addItem=_cart$actions.addItem,rewriteCart=_cart$actions.rewriteCart;export{setAnchorEl,setIsEmpty,deleteItem,addItem,rewriteCart};export default cart.reducer;","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/redux/slices/cartSlice.js"],"names":["createSlice","counter","cart","reducer","acc","item","quantity","reduce","saveInStore","localStorage","setItem","JSON","stringify","initialState","cartItems","getItem","parse","anchorEl","isEmpty","totalQuantity","name","reducers","setAnchorEl","state","action","payload","setIsEmpty","deleteItem","productId","size","index","findIndex","splice","length","addItem","match","find","indexOf","push","rewriteCart","actions"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst counter = (cart) => {\r\n  const reducer = (acc, item) => acc + item.quantity;\r\n  return cart.reduce(reducer, 0);\r\n};\r\nconst saveInStore = (cart) => {\r\n  localStorage.setItem('cart', JSON.stringify(cart));\r\n};\r\n\r\nexport const initialState = {\r\n  cartItems: localStorage.getItem('cart')\r\n    ? JSON.parse(localStorage.getItem('cart'))\r\n    : [],\r\n  counter: 0,\r\n  anchorEl: null,\r\n  isEmpty: null,\r\n  totalQuantity: localStorage.getItem('cart')\r\n    ? JSON.parse(localStorage.getItem('cart')).reduce(\r\n        (acc, item) => acc + item.quantity,\r\n        0\r\n      )\r\n    : 0,\r\n};\r\n\r\nexport const cart = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    setAnchorEl: (state, action) => {\r\n      state.anchorEl = action.payload;\r\n    },\r\n    setIsEmpty: (state, action) => {\r\n      state.isEmpty = action.payload;\r\n    },\r\n    deleteItem: (state, action) => {\r\n      const { productId, size } = action.payload;\r\n      const index = state.cartItems.findIndex(\r\n        (item) => item.productId === productId && item.size === size\r\n      );\r\n      state.cartItems.splice(index, 1);\r\n      if (state.cartItems.length === 0) {\r\n        state.anchorEl = null;\r\n      }\r\n      state.totalQuantity = counter(state.cartItems);\r\n      saveInStore(state.cartItems);\r\n    },\r\n    addItem: (state, action) => {\r\n      const match = state.cartItems.find(\r\n        (item) =>\r\n          item.productId === action.payload.productId &&\r\n          item.size === action.payload.size\r\n      );\r\n      const index = state.cartItems.indexOf(match);\r\n      match\r\n        ? (state.cartItems[index].quantity += action.payload.quantity)\r\n        : state.cartItems.push(action.payload);\r\n      state.totalQuantity = counter(state.cartItems);\r\n      saveInStore(state.cartItems);\r\n    },\r\n    rewriteCart: (state, action) => {\r\n      state.cartItems = action.payload;\r\n      state.totalQuantity = counter(state.cartItems);\r\n      saveInStore(state.cartItems);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAnchorEl, setIsEmpty, deleteItem, addItem, rewriteCart } =\r\n  cart.actions;\r\n\r\nexport default cart.reducer;\r\n"]},"metadata":{},"sourceType":"module"}