{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/pages/adminPanel/users/EditUserContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useUser } from '../../../hooks/useUser';\nimport Spinner from '../../../components/common/Spinner';\nimport { setEditingUser } from '../../../redux/slices/adminUsers';\nimport UserForm from '../../../components/adminPanel/users/editAndAddNewUser/UserForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditUserContainer = ({\n  setActive,\n  newUser\n}) => {\n  _s();\n\n  var _user$data;\n\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.auth.token);\n  const {\n    userEmail\n  } = useParams();\n  const user = useUser(userEmail, token);\n  useEffect(() => {\n    setActive('users');\n  }, [setActive]);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0\n    });\n  });\n\n  if (user.isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (user.isError) {\n    return null;\n  }\n\n  dispatch(setEditingUser((_user$data = user.data) === null || _user$data === void 0 ? void 0 : _user$data.content[0]));\n  return /*#__PURE__*/_jsxDEV(UserForm, {\n    newUser: newUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditUserContainer, \"pqSF/opJi1ENbxIpWFHmJAp7USo=\", false, function () {\n  return [useDispatch, useSelector, useParams, useUser];\n});\n\n_c = EditUserContainer;\nexport default EditUserContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUserContainer\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/pages/adminPanel/users/EditUserContainer.jsx"],"names":["useEffect","useParams","useDispatch","useSelector","useUser","Spinner","setEditingUser","UserForm","EditUserContainer","setActive","newUser","dispatch","token","state","auth","userEmail","user","window","scrollTo","top","isLoading","isError","data","content"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,OAAOC,QAAP,MAAqB,iEAArB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA4B;AAAA;;AAAA;;AACpD,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,KAAK,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,KAAvB,CAAzB;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAgBd,SAAS,EAA/B;AACA,QAAMe,IAAI,GAAGZ,OAAO,CAACW,SAAD,EAAYH,KAAZ,CAApB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,SAAS,CAAC,OAAD,CAAT;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,MAAAA,GAAG,EAAE;AADS,KAAhB;AAGD,GAJQ,CAAT;;AAMA,MAAIH,IAAI,CAACI,SAAT,EAAoB;AAClB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIJ,IAAI,CAACK,OAAT,EAAkB;AAChB,WAAO,IAAP;AACD;;AAEDV,EAAAA,QAAQ,CAACL,cAAc,eAACU,IAAI,CAACM,IAAN,+CAAC,WAAWC,OAAX,CAAmB,CAAnB,CAAD,CAAf,CAAR;AAEA,sBAAO,QAAC,QAAD;AAAU,IAAA,OAAO,EAAEb;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA7BD;;GAAMF,iB;UACaN,W,EAEHC,W,EAEQF,S,EACTG,O;;;KANTI,iB;AA+BN,eAAeA,iBAAf","sourcesContent":["import { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useUser } from '../../../hooks/useUser';\r\nimport Spinner from '../../../components/common/Spinner';\r\nimport { setEditingUser } from '../../../redux/slices/adminUsers';\r\nimport UserForm from '../../../components/adminPanel/users/editAndAddNewUser/UserForm';\r\n\r\nconst EditUserContainer = ({ setActive, newUser }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const token = useSelector((state) => state.auth.token);\r\n\r\n  const { userEmail } = useParams();\r\n  const user = useUser(userEmail, token);\r\n\r\n  useEffect(() => {\r\n    setActive('users');\r\n  }, [setActive]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n    });\r\n  });\r\n\r\n  if (user.isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (user.isError) {\r\n    return null;\r\n  }\r\n\r\n  dispatch(setEditingUser(user.data?.content[0]));\r\n\r\n  return <UserForm newUser={newUser} />;\r\n};\r\n\r\nexport default EditUserContainer;\r\n"]},"metadata":{},"sourceType":"module"}