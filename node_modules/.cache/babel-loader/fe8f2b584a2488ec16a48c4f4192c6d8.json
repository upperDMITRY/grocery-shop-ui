{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { BaseColumnSeries } from \"./BaseColumnSeries\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nvar ColumnSeries =\n/** @class */\nfunction (_super) {\n  __extends(ColumnSeries, _super);\n\n  function ColumnSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[TemplateList]] of all columns in series.\r\n     *\r\n     * `columns.template` can be used to set default settings for all columns,\r\n     * or to change on existing ones.\r\n     */\n\n\n    Object.defineProperty(_this, \"columns\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          position: \"absolute\",\n          themeTags: $utils.mergeTags(_this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\n        }, [_this.columns.template]);\n      })\n    });\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Object.defineProperty(ColumnSeries.prototype, \"makeColumn\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(dataItem, listTemplate) {\n      var column = this.mainContainer.children.push(listTemplate.make());\n\n      column._setDataItem(dataItem);\n\n      listTemplate.push(column);\n      return column;\n    }\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"_processAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function value(axisRange) {\n      var _this = this;\n\n      _super.prototype._processAxisRange.call(this, axisRange);\n\n      axisRange.columns = new ListTemplate(Template.new({}), function () {\n        return RoundedRectangle._new(_this._root, {\n          position: \"absolute\",\n          themeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\n        }, [_this.columns.template, axisRange.columns.template]);\n      });\n    }\n  });\n  Object.defineProperty(ColumnSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"ColumnSeries\"\n  });\n  Object.defineProperty(ColumnSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: BaseColumnSeries.classNames.concat([ColumnSeries.className])\n  });\n  return ColumnSeries;\n}(BaseColumnSeries);\n\nexport { ColumnSeries };","map":{"version":3,"sources":["../../../../../../src/.internal/charts/xy/series/ColumnSeries.ts"],"names":[],"mappings":";AAAA,SAAS,gBAAT,QAA6I,oBAA7I;AAEA,SAAS,QAAT,QAAyB,6BAAzB;AACA,SAAS,YAAT,QAA6B,yBAA7B;AACA,SAAS,gBAAT,QAAiC,uCAAjC;AACA,OAAO,KAAK,MAAZ,MAAwB,0BAAxB;;AAYA,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAAlC,WAAA,YAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;AAiBC;;;;;AAKG;;;AACH,IAAA,MAAA,CAAA,cAAA,CAAA,KAAA,EAAA,SAAA,EAAA;sBAAA;wBAAA;oBAAA;aAA0D,IAAI,YAAJ,CACzD,QAAQ,CAAC,GAAT,CAAa,EAAb,CADyD,EAEzD,YAAA;AAAM,eAAA,gBAAgB,CAAC,IAAjB,CAAsB,KAAI,CAAC,KAA3B,EAAkC;AACvC,UAAA,QAAQ,EAAE,UAD6B;AAEvC,UAAA,SAAS,EAAE,MAAM,CAAC,SAAP,CAAiB,KAAI,CAAC,OAAL,CAAa,QAAb,CAAsB,GAAtB,CAA0B,WAA1B,EAAuC,EAAvC,CAAjB,EAA6D,CAAC,QAAD,EAAW,QAAX,CAA7D;AAF4B,SAAlC,EAGH,CAAC,KAAI,CAAC,OAAL,CAHE,QAGH,CAHG,CAAA;AAGqB,OAL8B;AAA1D,KAAA;;AAsBA;AAtCA;;AAEG;;;;;;;WACH,eAAkB,QAAlB,EAAiE,YAAjE,EAA6G;AAC5G,UAAM,MAAM,GAAG,KAAK,aAAL,CAAmB,QAAnB,CAA4B,IAA5B,CAAiC,YAAY,CAAC,IAAb,EAAjC,CAAf;;AACA,MAAA,MAAM,CAAC,YAAP,CAAoB,QAApB;;AACA,MAAA,YAAY,CAAC,IAAb,CAAkB,MAAlB;AACA,aAAO,MAAP;AACA;;;;;;WAoBD,eAA4B,SAA5B,EAA6D;AAA7D,UAAA,KAAA,GAAA,IAAA;;AACC,MAAA,MAAA,CAAA,SAAA,CAAM,iBAAN,CAAuB,IAAvB,CAAuB,IAAvB,EAAwB,SAAxB;;AACA,MAAA,SAAS,CAAC,OAAV,GAAoB,IAAI,YAAJ,CACnB,QAAQ,CAAC,GAAT,CAAa,EAAb,CADmB,EAEnB,YAAA;AAAM,eAAA,gBAAgB,CAAC,IAAjB,CAAsB,KAAI,CAAC,KAA3B,EAAkC;AACvC,UAAA,QAAQ,EAAE,UAD6B;AAEvC,UAAA,SAAS,EAAE,MAAM,CAAC,SAAP,CAAiB,SAAS,CAAC,OAAV,CAAkB,QAAlB,CAA2B,GAA3B,CAA+B,WAA/B,EAA4C,EAA5C,CAAjB,EAAkE,CAAC,QAAD,EAAW,QAAX,CAAlE;AAF4B,SAAlC,EAGH,CAAC,KAAI,CAAC,OAAL,CAAa,QAAd,EAAwB,SAAS,CAAC,OAAV,CAHrB,QAGH,CAHG,CAAA;AAGiD,OALpC,CAApB;AAOA;;AAbD,EAAA,MAAA,CAAA,cAAA,CAAA,YAAA,EAAA,WAAA,EAAA;oBAAA;sBAAA;kBAAA;WAAkC;AAAlC,GAAA;AACA,EAAA,MAAA,CAAA,cAAA,CAAA,YAAA,EAAA,YAAA,EAAA;oBAAA;sBAAA;kBAAA;WAA0C,gBAAgB,CAAC,UAAjB,CAA4B,MAA5B,CAAmC,CAAC,YAAY,CAAC,SAAd,CAAnC;AAA1C,GAAA;AAaD,SAAA,YAAA;AAAC,CA7CD,CAAkC,gBAAlC,CAAA;;SAAa,Y","sourcesContent":["import { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}