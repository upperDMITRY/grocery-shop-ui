{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Axis } from \"./Axis\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\n/**\r\n * Creates a category axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\r\n * @important\r\n */\n\nvar CategoryAxis =\n/** @class */\nfunction (_super) {\n  __extends(CategoryAxis, _super);\n\n  function CategoryAxis() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_frequency\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_itemMap\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    return _this;\n  }\n\n  Object.defineProperty(CategoryAxis.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n      this.fields.push(\"category\");\n      this.setPrivateRaw(\"name\", \"category\");\n      this.addTag(\"category\");\n\n      _super.prototype._afterNew.call(this);\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      var len = this.dataItems.length;\n      var i = 0;\n\n      if (this._valuesDirty) {\n        $array.each(this.dataItems, function (dataItem) {\n          dataItem.setRaw(\"index\", i);\n          _this._itemMap[dataItem.get(\"category\")] = dataItem;\n          i++;\n        });\n        this.setPrivateRaw(\"maxZoomFactor\", len);\n      }\n\n      this.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n      this.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n      if (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n        if (this.dataItems.length > 0) {\n          this._handleRangeChange();\n\n          this._prepareAxisItems();\n\n          this._updateAxisRanges();\n        }\n      }\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_handleRangeChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      $array.each(this.series, function (series) {\n        var startCategory = _this.dataItems[_this.startIndex()].get(\"category\");\n\n        var endCategory = _this.dataItems[_this.endIndex() - 1].get(\"category\");\n\n        var baseAxis = series.get(\"baseAxis\");\n        var xAxis = series.get(\"xAxis\");\n        var yAxis = series.get(\"yAxis\");\n\n        if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n          series._markDirtyAxes();\n        } else if (baseAxis === _this) {\n          var key = void 0;\n          var openKey = void 0;\n          var otherAxis = yAxis;\n\n          if (xAxis === baseAxis) {\n            if (series.get(\"categoryXField\")) {\n              key = \"categoryX\";\n            }\n\n            if (series.get(\"openCategoryXField\")) {\n              openKey = \"openCategoryX\";\n            }\n          } else if (yAxis === baseAxis) {\n            if (series.get(\"categoryYField\")) {\n              key = \"categoryY\";\n            }\n\n            if (series.get(\"openCategoryYField\")) {\n              openKey = \"openCategoryY\";\n            }\n\n            otherAxis = xAxis;\n          }\n\n          if (otherAxis.className == \"ValueAxis\") {\n            if (key || openKey) {\n              var startDataItem = void 0;\n              var endDataItem = void 0;\n\n              for (var i = 0, len = series.dataItems.length; i < len; i++) {\n                var dataItem = series.dataItems[i];\n\n                if (key) {\n                  if (dataItem.get(key) === startCategory) {\n                    startDataItem = dataItem;\n                    break;\n                  }\n                }\n\n                if (openKey) {\n                  if (dataItem.get(openKey) === startCategory) {\n                    startDataItem = dataItem;\n                    break;\n                  }\n                }\n              }\n\n              for (var i = series.dataItems.length - 1; i >= 0; i--) {\n                var dataItem = series.dataItems[i];\n\n                if (key) {\n                  if (dataItem.get(key) === endCategory) {\n                    endDataItem = dataItem;\n                    break;\n                  }\n                }\n\n                if (openKey) {\n                  if (dataItem.get(openKey) === endCategory) {\n                    endDataItem = dataItem;\n                    break;\n                  }\n                }\n              }\n\n              if (startDataItem) {\n                series.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n              }\n\n              if (endDataItem) {\n                series.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n              }\n            }\n          }\n\n          series._markDirtyAxes(); // must be outside\n\n        }\n      });\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_prepareAxisItems\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var renderer = this.get(\"renderer\");\n      var len = this.dataItems.length;\n      var startIndex = this.startIndex();\n\n      if (startIndex > 0) {\n        startIndex--;\n      }\n\n      var endIndex = this.endIndex();\n\n      if (endIndex < len) {\n        endIndex++;\n      }\n\n      var maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\"), 1 / Number.MAX_SAFE_INTEGER);\n      var frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n      startIndex = Math.floor(startIndex / frequency) * frequency;\n      this._frequency = frequency;\n\n      for (var j = 0; j < len; j++) {\n        this.dataItems[j].hide();\n      }\n\n      var f = this.dataItems[startIndex].get(\"index\", 0);\n\n      for (var i = startIndex; i < endIndex; i = i + frequency) {\n        var dataItem = this.dataItems[i];\n\n        this._createAssets(dataItem, []);\n\n        if (dataItem.isHidden()) {\n          dataItem.show();\n        }\n\n        this._prepareDataItem(dataItem, f, frequency);\n\n        f++;\n      }\n\n      this._updateGhost();\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_prepareDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, fillIndex, count) {\n      var renderer = this.get(\"renderer\");\n      var categoryLocation = dataItem.get(\"categoryLocation\", 0);\n      var endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n      var index = dataItem.get(\"index\");\n\n      if (!$type.isNumber(index)) {\n        index = this.categoryToIndex(dataItem.get(\"category\"));\n      }\n\n      var position = this.indexToPosition(index, categoryLocation);\n      var endCategory = dataItem.get(\"endCategory\");\n      var endIndex;\n\n      if (endCategory) {\n        endIndex = this.categoryToIndex(endCategory);\n\n        if (!$type.isNumber(endIndex)) {\n          endIndex = index;\n        }\n      } else {\n        endIndex = index;\n      }\n\n      var endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n      var fillEndIndex;\n      var fillEndPosition;\n\n      if (dataItem.get(\"isRange\")) {\n        fillEndIndex = endIndex;\n      } else {\n        fillEndIndex = index + this._frequency - 1;\n      }\n\n      fillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n      renderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n      renderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n      renderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n      renderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n      this._processBullet(dataItem);\n\n      renderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n      var fillRule = this.get(\"fillRule\");\n\n      if (fillRule) {\n        fillRule(dataItem, fillIndex);\n      }\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"startIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var len = this.dataItems.length;\n      return Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"endIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var len = this.dataItems.length;\n      return Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"baseValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {}\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"basePosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return 0;\n    }\n  });\n  /**\r\n   * Returns X coordinate in pixels corresponding to specific category index.\r\n   *\r\n   * @param   value  Index\r\n   * @return         X coordinate\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getX\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      var axisDataItem = this._itemMap[value];\n\n      if (axisDataItem) {\n        return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * Returns Y coordinate in pixels corresponding to specific category index.\r\n   *\r\n   * @param   value  Index\r\n   * @return         Y coordinate\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getY\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      var axisDataItem = this._itemMap[value];\n\n      if (axisDataItem) {\n        return this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getDataItemPositionX\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, field, cellLocation, _axisLocation) {\n      var category = dataItem.get(field);\n      var axisDataItem = this._itemMap[category];\n\n      if (axisDataItem) {\n        return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getDataItemCoordinateX\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, field, cellLocation, _axisLocation) {\n      return this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getDataItemPositionY\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, field, cellLocation, _axisLocation) {\n      var category = dataItem.get(field);\n      var axisDataItem = this._itemMap[category];\n\n      if (axisDataItem) {\n        return this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getDataItemCoordinateY\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, field, cellLocation, _axisLocation) {\n      return this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n    }\n  });\n  /**\r\n   * Converts category index to a relative position.\r\n   *\r\n   * `location` indicates relative position within category: 0 - start, 1 - end.\r\n   *\r\n   * If not set, will use middle (0.5) of the category.\r\n   *\r\n   * @param   index     Index\r\n   * @param   location  Location\r\n   * @return            Index\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"indexToPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (index, location) {\n      if (!$type.isNumber(location)) {\n        location = 0.5;\n      }\n\n      var len = this.dataItems.length;\n      var startLocation = this.get(\"startLocation\", 0);\n      var endLocation = this.get(\"endLocation\", 1);\n      len -= startLocation;\n      len -= 1 - endLocation;\n      var position = (index + location - startLocation) / len;\n      var dataItem = this.dataItems[index];\n\n      if (dataItem) {\n        position += dataItem.get(\"deltaPosition\", 0);\n      }\n\n      return position;\n    }\n  });\n  /**\r\n   * Returns an index of a category.\r\n   *\r\n   * @param   category  Category to look up\r\n   * @return            Index\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"categoryToIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (category) {\n      var dataItem = this._itemMap[category];\n\n      if (dataItem) {\n        return dataItem.get(\"index\");\n      }\n\n      return NaN;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"dataItemToPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      return this.indexToPosition(dataItem.get(\"index\"));\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"roundAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position, location) {\n      return this.indexToPosition(this.axisPositionToIndex(position), location);\n    }\n  });\n  /**\r\n   * Returns an index of the category that corresponds to specific pixel\r\n   * position within axis.\r\n   *\r\n   * @param position  Position (px)\r\n   * @return Category index\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"axisPositionToIndex\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      var len = this.dataItems.length;\n      return $math.fitToRange(Math.floor(position * len), 0, len - 1); //$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n    }\n  });\n  /**\r\n   * Returns text to be used in an axis tooltip for specific relative position.\r\n   *\r\n   * @param   position  Position\r\n   * @return            Tooltip text\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getTooltipText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      //@todo number formatter + tag\n      var dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n      if (dataItem) {\n        var label = dataItem.get(\"label\");\n\n        if (label) {\n          return populateString(label, this.get(\"tooltipText\", \"\"));\n        }\n      }\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"_updateTooltipText\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip, position) {\n      tooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\n      tooltip.label.text.markDirtyText();\n    }\n  });\n  /**\r\n   * Returns a data item from series that is closest to the `position`.\r\n   *\r\n   * @param   series    Series\r\n   * @param   position  Relative position\r\n   * @return            Data item\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"getSeriesItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (series, position) {\n      if (this.dataItems.length > 0) {\n        var fieldName = this.getPrivate(\"name\") + this.get(\"renderer\").getPrivate(\"letter\");\n        var index = this.axisPositionToIndex(position); // try simple first\n\n        var seriesDataItem = series.dataItems[index];\n        var axisDataItem = this.dataItems[index];\n        var category = axisDataItem.get(\"category\");\n\n        if (seriesDataItem && axisDataItem) {\n          if (seriesDataItem.get(fieldName) === category) {\n            return seriesDataItem;\n          }\n        } // if not found, try looking\n\n\n        for (var i = 0, len = series.dataItems.length; i < len; i++) {\n          var dataItem = series.dataItems[i];\n\n          if (dataItem.get(fieldName) === category) {\n            return dataItem;\n          }\n        }\n      }\n    }\n  });\n  /**\r\n   * Zooms the axis to specific `start` and `end` indexes.\r\n   *\r\n   * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n   *\r\n   * @param  start     Start index\r\n   * @param  end       End index\r\n   * @param  duration  Duration in milliseconds\r\n   */\n\n  Object.defineProperty(CategoryAxis.prototype, \"zoomToIndexes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (start, end, duration) {\n      var len = this.dataItems.length;\n      this.zoom(start / len, end / len, duration);\n    }\n  });\n  Object.defineProperty(CategoryAxis.prototype, \"zoomToCategories\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (startCategory, endCategory, duration) {\n      this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n    }\n  });\n  Object.defineProperty(CategoryAxis, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"CategoryAxis\"\n  });\n  Object.defineProperty(CategoryAxis, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Axis.classNames.concat([CategoryAxis.className])\n  });\n  return CategoryAxis;\n}(Axis);\n\nexport { CategoryAxis };","map":{"version":3,"sources":["../../../../../../src/.internal/charts/xy/axes/CategoryAxis.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\t\t\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\t\t\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"startIndex\", series.dataItems.indexOf(startDataItem));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tseries.setPrivate(\"endIndex\", series.dataItems.indexOf(endDataItem) + 1);\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis.dataItems[j].hide();\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\tif (dataItem.isHidden()) {\n\t\t\t\tdataItem.show();\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif(label){\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\t\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}