{"ast":null,"code":"import{memo,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{OutlinedInput,FormControl,InputLabel,FormHelperText}from'@mui/material';import{setPassword,setPasswordError}from'../../../../redux/slices/adminUsers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Password=/*#__PURE__*/memo(function(_ref){var newUser=_ref.newUser;var dispatch=useDispatch();var password=useSelector(function(state){return state.adminUsers.password;});var passwordError=useSelector(function(state){return state.adminUsers.passwordError;});useEffect(function(){if(!newUser){dispatch(setPassword(''));}// eslint-disable-next-line\n},[]);var disabledSaveButton=useSelector(function(state){return state.adminUsers.disabledSaveButton;});var handlePasswordChange=function handlePasswordChange(e){dispatch(setPasswordError(''));if(password.length<256){dispatch(setPassword(e.target.value.trim().slice(0,255)));}};return/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{shrink:true,children:\"Password\"}),/*#__PURE__*/_jsx(OutlinedInput,{error:passwordError!=='',autoFocus:true,notched:true,placeholder:disabledSaveButton?'Enter user password':null,label:\"Password\",value:password,onChange:handlePasswordChange}),passwordError&&/*#__PURE__*/_jsx(FormHelperText,{error:true,children:passwordError})]});});export default Password;","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/users/editAndAddNewUser/Password.jsx"],"names":["memo","useEffect","useSelector","useDispatch","OutlinedInput","FormControl","InputLabel","FormHelperText","setPassword","setPasswordError","Password","newUser","dispatch","password","state","adminUsers","passwordError","disabledSaveButton","handlePasswordChange","e","length","target","value","trim","slice"],"mappings":"AAAA,OAASA,IAAT,CAAeC,SAAf,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OACEC,aADF,CAEEC,WAFF,CAGEC,UAHF,CAIEC,cAJF,KAKO,eALP,CAMA,OACEC,WADF,CAEEC,gBAFF,KAGO,qCAHP,C,wFAKA,GAAMC,CAAAA,QAAQ,cAAGV,IAAI,CAAC,cAAiB,IAAdW,CAAAA,OAAc,MAAdA,OAAc,CACrC,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAMU,CAAAA,QAAQ,CAAGX,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,UAAN,CAAiBF,QAA5B,EAAD,CAA5B,CACA,GAAMG,CAAAA,aAAa,CAAGd,WAAW,CAAC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,UAAN,CAAiBC,aAA5B,EAAD,CAAjC,CAEAf,SAAS,CAAC,UAAM,CACd,GAAI,CAACU,OAAL,CAAc,CACZC,QAAQ,CAACJ,WAAW,CAAC,EAAD,CAAZ,CAAR,CACD,CACD;AACD,CALQ,CAKN,EALM,CAAT,CAOA,GAAMS,CAAAA,kBAAkB,CAAGf,WAAW,CACpC,SAACY,KAAD,QAAWA,CAAAA,KAAK,CAACC,UAAN,CAAiBE,kBAA5B,EADoC,CAAtC,CAIA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,CAAD,CAAO,CAClCP,QAAQ,CAACH,gBAAgB,CAAC,EAAD,CAAjB,CAAR,CACA,GAAII,QAAQ,CAACO,MAAT,CAAkB,GAAtB,CAA2B,CACzBR,QAAQ,CAACJ,WAAW,CAACW,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,GAAsBC,KAAtB,CAA4B,CAA5B,CAA+B,GAA/B,CAAD,CAAZ,CAAR,CACD,CACF,CALD,CAOA,mBACE,MAAC,WAAD,EAAa,SAAS,KAAtB,wBACE,KAAC,UAAD,EAAY,MAAM,KAAlB,sBADF,cAEE,KAAC,aAAD,EACE,KAAK,CAAER,aAAa,GAAK,EAD3B,CAEE,SAAS,KAFX,CAGE,OAAO,KAHT,CAIE,WAAW,CAAEC,kBAAkB,CAAG,qBAAH,CAA2B,IAJ5D,CAKE,KAAK,CAAC,UALR,CAME,KAAK,CAAEJ,QANT,CAOE,QAAQ,CAAEK,oBAPZ,EAFF,CAWGF,aAAa,eAAI,KAAC,cAAD,EAAgB,KAAK,KAArB,UAAuBA,aAAvB,EAXpB,GADF,CAeD,CAvCoB,CAArB,CAyCA,cAAeN,CAAAA,QAAf","sourcesContent":["import { memo, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  OutlinedInput,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from '@mui/material';\r\nimport {\r\n  setPassword,\r\n  setPasswordError,\r\n} from '../../../../redux/slices/adminUsers';\r\n\r\nconst Password = memo(({ newUser }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const password = useSelector((state) => state.adminUsers.password);\r\n  const passwordError = useSelector((state) => state.adminUsers.passwordError);\r\n\r\n  useEffect(() => {\r\n    if (!newUser) {\r\n      dispatch(setPassword(''));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const disabledSaveButton = useSelector(\r\n    (state) => state.adminUsers.disabledSaveButton\r\n  );\r\n\r\n  const handlePasswordChange = (e) => {\r\n    dispatch(setPasswordError(''));\r\n    if (password.length < 256) {\r\n      dispatch(setPassword(e.target.value.trim().slice(0, 255)));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl fullWidth>\r\n      <InputLabel shrink>Password</InputLabel>\r\n      <OutlinedInput\r\n        error={passwordError !== ''}\r\n        autoFocus\r\n        notched\r\n        placeholder={disabledSaveButton ? 'Enter user password' : null}\r\n        label=\"Password\"\r\n        value={password}\r\n        onChange={handlePasswordChange}\r\n      />\r\n      {passwordError && <FormHelperText error>{passwordError}</FormHelperText>}\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default Password;\r\n"]},"metadata":{},"sourceType":"module"}