{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { Percent } from \"./Percent\";\nimport { Color } from \"./Color\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport * as $object from \"./Object\";\n/**\r\n * @ignore\r\n */\n\nexport function waitForAnimations(animations) {\n  return __awaiter(this, void 0, void 0, function () {\n    var promises_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!(animations !== undefined)) return [3\n          /*break*/\n          , 2];\n          promises_1 = [];\n          $object.each(animations, function (_, animation) {\n            promises_1.push(animation.waitForStop());\n          });\n          return [4\n          /*yield*/\n          , Promise.all(promises_1)];\n\n        case 1:\n          _a.sent();\n\n          _a.label = 2;\n\n        case 2:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n/**\r\n * @ignore\r\n */\n\nexport function normalize(value, min, max) {\n  if (min === max) {\n    return 0;\n  } else {\n    return Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\n  }\n}\n/**\r\n * @ignore\r\n */\n\nexport function range(diff, from, to) {\n  return from + diff * (to - from);\n}\n/**\r\n * @ignore\r\n */\n\nexport function defaultInterpolate(diff, from, to) {\n  if (diff >= 1) {\n    return to;\n  } else {\n    return from;\n  }\n}\n/**\r\n * @ignore\r\n */\n\nexport function percentInterpolate(diff, from, to) {\n  return new Percent(range(diff, from.percent, to.percent));\n}\n/**\r\n * @ignore\r\n */\n\nexport function colorInterpolate(diff, from, to) {\n  return Color.interpolate(diff, from, to);\n}\n/**\r\n * @ignore\r\n */\n\nexport function getInterpolate(from, to) {\n  if (typeof from === \"number\" && typeof to === \"number\") {\n    return range;\n  }\n\n  if (from instanceof Percent && to instanceof Percent) {\n    return percentInterpolate;\n  }\n\n  if (from instanceof Color && to instanceof Color) {\n    return colorInterpolate;\n  }\n\n  return defaultInterpolate;\n}\n/**\r\n * @ignore\r\n */\n\nvar AnimationTime =\n/** @class */\nfunction () {\n  function AnimationTime(entity, duration) {\n    Object.defineProperty(this, \"_entity\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_duration\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"_playingDuration\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"_startingTime\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: null\n    });\n    Object.defineProperty(this, \"_current\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_from\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"_to\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, \"events\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new EventDispatcher()\n    });\n    Object.defineProperty(this, \"easing\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this._entity = entity;\n    this._duration = duration;\n  }\n\n  Object.defineProperty(AnimationTime.prototype, \"_stopEvent\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var type = \"stopped\";\n\n      if (this.events.isEnabled(type)) {\n        this.events.dispatch(type, {\n          type: type,\n          target: this\n        });\n      }\n    }\n  });\n  Object.defineProperty(AnimationTime.prototype, \"_runAnimation\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (currentTime) {\n      if (this._playingDuration !== null) {\n        if (this._startingTime === null) {\n          this._startingTime = currentTime;\n          return false;\n        } else {\n          var diff = (currentTime - this._startingTime) / this._playingDuration;\n\n          if (diff >= 1) {\n            this._playingDuration = null;\n            this._startingTime = null;\n            this._from = this._to;\n            this._current = this._to;\n\n            this._entity.markDirty();\n\n            this._stopEvent();\n\n            var type = \"ended\";\n\n            if (this.events.isEnabled(type)) {\n              this.events.dispatch(type, {\n                type: type,\n                target: this\n              });\n            }\n\n            return true;\n          } else {\n            this._current = range(diff, this._from, this._to);\n\n            this._entity.markDirty();\n\n            var type = \"progress\";\n\n            if (this.events.isEnabled(type)) {\n              this.events.dispatch(type, {\n                type: type,\n                target: this,\n                progress: diff\n              });\n            }\n\n            return false;\n          }\n        }\n      } else {\n        return true;\n      }\n    }\n  });\n  Object.defineProperty(AnimationTime.prototype, \"_play\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._from = this._current;\n\n      if (this._playingDuration === null) {\n        this._entity._root._addAnimation(this);\n\n        var type = \"started\";\n\n        if (this.events.isEnabled(type)) {\n          this.events.dispatch(type, {\n            type: type,\n            target: this\n          });\n        }\n      } else {\n        this._startingTime = null;\n      }\n\n      this._playingDuration = Math.abs(this._to - this._from) * this._duration;\n    }\n  });\n  Object.defineProperty(AnimationTime.prototype, \"duration\", {\n    get: function () {\n      return this._duration;\n    },\n    set: function (value) {\n      if (this._duration !== value) {\n        this._duration = value;\n\n        if (value === 0) {\n          this.jumpTo(this._to);\n        } else if (this._current !== this._to) {\n          this._play();\n        }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AnimationTime.prototype, \"current\", {\n    get: function () {\n      if (this.easing) {\n        return this.easing(this._current);\n      } else {\n        return this._current;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AnimationTime.prototype, \"stop\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.jumpTo(this._current);\n    }\n  });\n  Object.defineProperty(AnimationTime.prototype, \"jumpTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      if (this._current !== value) {\n        this._entity.markDirty();\n      }\n\n      if (this._playingDuration !== null) {\n        this._stopEvent();\n      }\n\n      this._playingDuration = null;\n      this._startingTime = null;\n      this._current = value;\n      this._from = value;\n      this._to = value;\n    }\n  });\n  Object.defineProperty(AnimationTime.prototype, \"tweenTo\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (value) {\n      if (this._current === value || this._duration === 0) {\n        this.jumpTo(value);\n      } else {\n        if (this._to !== value) {\n          this._to = value;\n\n          this._play();\n        }\n      }\n    }\n  });\n  return AnimationTime;\n}();\n\nexport { AnimationTime };\n/*export class AnimationValue extends AnimationTime {\r\n    public _min: number;\r\n    public _max: number;\r\n\r\n    constructor(entity: Entity, duration: number, min: number, max: number) {\r\n        super(entity, duration);\r\n        this._min = min;\r\n        this._max = max;\r\n    }\r\n\r\n    public get min(): number {\r\n        return this._min;\r\n    }\r\n\r\n    public set min(value: number) {\r\n        if (this._min !== value) {\r\n            this._min = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public get max(): number {\r\n        return this._max;\r\n    }\r\n\r\n    public set max(value: number) {\r\n        if (this._max !== value) {\r\n            this._max = value;\r\n            this._entity.markDirty();\r\n        }\r\n    }\r\n\r\n    public currentValue(): number {\r\n        return range(super.currentTime(), this._min, this._max);\r\n    }\r\n\r\n    public jumpToValue(value: number) {\r\n        super.jumpToTime(normalize(value, this._min, this._max));\r\n    }\r\n\r\n    public tweenToValue(value: number) {\r\n        super.tweenToTime(normalize(value, this._min, this._max));\r\n    }\r\n}\r\n*/","map":{"version":3,"sources":["../../../../../src/.internal/core/util/Animation.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Entity, Animation } from \"./Entity\";\nimport { Percent } from \"./Percent\";\nimport { Color } from \"./Color\";\nimport type { Easing } from \"./Ease\";\nimport { EventDispatcher, Events } from \"./EventDispatcher\";\nimport * as $object from \"./Object\";\n\nexport type Animations<T> = { [K in keyof T]?: Animation<T[K]> };\n\n/**\n * @ignore\n */\nexport async function waitForAnimations<T>(animations: Animations<T> | undefined): Promise<void> {\n\tif (animations !== undefined) {\n\t\tconst promises: Array<Promise<void>> = [];\n\n\t\t$object.each(animations, (_, animation) => {\n\t\t\tpromises.push(animation.waitForStop());\n\t\t});\n\n\t\tawait Promise.all(promises);\n\t}\n}\n\n\ninterface ITime {\n\treadonly tag: unique symbol;\n}\n\n/**\n * New type which allows for conversion from a number into a Time, but not from a Time to a number\n */\nexport type Time = number | ITime;\n\n\n/**\n * @ignore\n */\nexport function normalize(value: number, min: number, max: number): Time {\n\tif (min === max) {\n\t\treturn 0;\n\n\t} else {\n\t\treturn Math.min(Math.max((value - min) * (1 / (max - min)), 0), 1);\n\t}\n}\n\n/**\n * @ignore\n */\nexport function range(diff: Time, from: number, to: number): number {\n\treturn from + (diff as number * (to - from));\n}\n\n/**\n * @ignore\n */\nexport function defaultInterpolate<A, B>(diff: Time, from: A, to: B): A | B {\n\tif (diff >= 1) {\n\t\treturn to;\n\n\t} else {\n\t\treturn from;\n\t}\n}\n\n/**\n * @ignore\n */\nexport function percentInterpolate(diff: Time, from: Percent, to: Percent): Percent {\n\treturn new Percent(range(diff, from.percent, to.percent));\n}\n\n/**\n * @ignore\n */\nexport function colorInterpolate(diff: Time, from: Color, to: Color): Color {\n\treturn Color.interpolate(diff, from, to);\n}\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: number, to: number): typeof range;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: Percent, to: Percent): typeof percentInterpolate;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: any, to: any): typeof defaultInterpolate;\n\n/**\n * @ignore\n */\nexport function getInterpolate(from: any, to: any): (diff: Time, from: any, to: any) => any {\n\tif (typeof from === \"number\" && typeof to === \"number\") {\n\t\treturn range;\n\t}\n\n\tif (from instanceof Percent && to instanceof Percent) {\n\t\treturn percentInterpolate;\n\t}\n\n\tif (from instanceof Color && to instanceof Color) {\n\t\treturn colorInterpolate;\n\t}\n\n\treturn defaultInterpolate;\n}\n\n\nexport interface IAnimation {\n\t_runAnimation(_currentTime: number): boolean;\n}\n\n\n/**\n * @ignore\n */\nexport interface IEntityEvents {\n\tstarted: {};\n\tstopped: {};\n\t// TODO replace this with stopped\n\tended: {};\n\tprogress: { progress: number };\n}\n\n/**\n * @ignore\n */\nexport class AnimationTime implements IAnimation {\n\tprotected _entity: Entity;\n\tprotected _duration: number;\n\n\tprotected _playingDuration: number | null = null;\n\tprotected _startingTime: number | null = null;\n\tprotected _current: Time = 0;\n\tprotected _from: Time = 0;\n\tprotected _to: Time = 0;\n\n\tdeclare public _events: IEntityEvents;\n\tpublic events: EventDispatcher<Events<this, this[\"_events\"]>> = new EventDispatcher();\n\n\tpublic easing: Easing | undefined;\n\n\tconstructor(entity: Entity, duration: number) {\n\t\tthis._entity = entity;\n\t\tthis._duration = duration;\n\t}\n\n\tprivate _stopEvent() {\n\t\tconst type = \"stopped\";\n\t\tif (this.events.isEnabled(type)) {\n\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t}\n\t}\n\n\tpublic _runAnimation(currentTime: number): boolean {\n\t\tif (this._playingDuration !== null) {\n\t\t\tif (this._startingTime === null) {\n\t\t\t\tthis._startingTime = currentTime;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst diff = (currentTime - this._startingTime) / this._playingDuration;\n\n\t\t\t\tif (diff >= 1) {\n\t\t\t\t\tthis._playingDuration = null;\n\t\t\t\t\tthis._startingTime = null;\n\t\t\t\t\tthis._from = this._to;\n\t\t\t\t\tthis._current = this._to;\n\t\t\t\t\tthis._entity.markDirty();\n\t\t\t\t\tthis._stopEvent();\n\t\t\t\t\tconst type = \"ended\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._current = range(diff, this._from as number, this._to as number);\n\t\t\t\t\tthis._entity.markDirty();\n\n\t\t\t\t\tconst type = \"progress\";\n\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, progress: diff });\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate _play() {\n\t\tthis._from = this._current;\n\n\t\tif (this._playingDuration === null) {\n\t\t\tthis._entity._root._addAnimation(this);\n\n\t\t\tconst type = \"started\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._startingTime = null;\n\t\t}\n\n\t\tthis._playingDuration = Math.abs((this._to as number) - (this._from as number)) * this._duration;\n\t}\n\n\tpublic get duration(): number {\n\t\treturn this._duration;\n\t}\n\n\tpublic set duration(value: number) {\n\t\tif (this._duration !== value) {\n\t\t\tthis._duration = value;\n\n\t\t\tif (value === 0) {\n\t\t\t\tthis.jumpTo(this._to);\n\n\t\t\t} else if (this._current !== this._to) {\n\t\t\t\tthis._play();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get current(): Time {\n\t\tif (this.easing) {\n\t\t\treturn this.easing(this._current);\n\n\t\t} else {\n\t\t\treturn this._current;\n\t\t}\n\t}\n\n\tpublic stop() {\n\t\tthis.jumpTo(this._current);\n\t}\n\n\tpublic jumpTo(value: Time) {\n\t\tif (this._current !== value) {\n\t\t\tthis._entity.markDirty();\n\t\t}\n\n\t\tif (this._playingDuration !== null) {\n\t\t\tthis._stopEvent();\n\t\t}\n\n\t\tthis._playingDuration = null;\n\t\tthis._startingTime = null;\n\t\tthis._current = value;\n\t\tthis._from = value;\n\t\tthis._to = value;\n\t}\n\n\tpublic tweenTo(value: Time) {\n\t\tif (this._current === value || this._duration === 0) {\n\t\t\tthis.jumpTo(value);\n\n\t\t} else {\n\t\t\tif (this._to !== value) {\n\t\t\t\tthis._to = value;\n\t\t\t\tthis._play();\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/*export class AnimationValue extends AnimationTime {\n\tpublic _min: number;\n\tpublic _max: number;\n\n\tconstructor(entity: Entity, duration: number, min: number, max: number) {\n\t\tsuper(entity, duration);\n\t\tthis._min = min;\n\t\tthis._max = max;\n\t}\n\n\tpublic get min(): number {\n\t\treturn this._min;\n\t}\n\n\tpublic set min(value: number) {\n\t\tif (this._min !== value) {\n\t\t\tthis._min = value;\n\t\t\tthis._entity.markDirty();\n\t\t}\n\t}\n\n\tpublic get max(): number {\n\t\treturn this._max;\n\t}\n\n\tpublic set max(value: number) {\n\t\tif (this._max !== value) {\n\t\t\tthis._max = value;\n\t\t\tthis._entity.markDirty();\n\t\t}\n\t}\n\n\tpublic currentValue(): number {\n\t\treturn range(super.currentTime(), this._min, this._max);\n\t}\n\n\tpublic jumpToValue(value: number) {\n\t\tsuper.jumpToTime(normalize(value, this._min, this._max));\n\t}\n\n\tpublic tweenToValue(value: number) {\n\t\tsuper.tweenToTime(normalize(value, this._min, this._max));\n\t}\n}\n*/\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}