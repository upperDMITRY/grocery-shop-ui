{"ast":null,"code":"import { __extends, __read } from \"tslib\";\nimport { AxisRenderer } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n/**\r\n * Used to render horizontal axis.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\r\n * @important\r\n */\nvar AxisRendererX = /** @class */function (_super) {\n  __extends(AxisRendererX, _super);\n  function AxisRendererX() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    Object.defineProperty(_this, \"thumb\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Rectangle.new(_this._root, {\n        width: p100,\n        themeTags: [\"axis\", \"x\", \"thumb\"]\n      })\n    });\n    return _this;\n  }\n  Object.defineProperty(AxisRendererX.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n      _super.prototype._afterNew.call(this);\n      this.setPrivateRaw(\"letter\", \"X\");\n      var gridTemplate = this.grid.template;\n      gridTemplate.set(\"height\", p100);\n      gridTemplate.set(\"width\", 0);\n      gridTemplate.set(\"draw\", function (display, graphics) {\n        display.moveTo(0, 0);\n        display.lineTo(0, graphics.height());\n      });\n      this.set(\"draw\", function (display, graphics) {\n        display.moveTo(0, 0);\n        display.lineTo(graphics.width(), 0);\n      });\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n      var axis = this.axis;\n      if (this.isDirty(\"inside\")) {\n        axis.markDirtySize();\n      }\n      var opposite = \"opposite\";\n      if (this.isDirty(opposite)) {\n        var chart = this.chart;\n        if (chart) {\n          var axisChildren = axis.children;\n          if (this.get(opposite)) {\n            var children = chart.topAxesContainer.children;\n            if (children.indexOf(axis) == -1) {\n              children.insertIndex(0, axis);\n            }\n            axisChildren.moveValue(this);\n            axis.addTag(opposite);\n          } else {\n            var children = chart.bottomAxesContainer.children;\n            if (children.indexOf(axis) == -1) {\n              children.moveValue(axis);\n            }\n            axisChildren.moveValue(this, 0);\n            axis.removeTag(opposite);\n          }\n          axis.markDirtySize();\n        }\n        axis.ghostLabel._applyThemes();\n      }\n      this.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"_getPan\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (point1, point2) {\n      return (point2.x - point1.x) / this.width();\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"toAxisPosition\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      var start = this._start || 0;\n      var end = this._end || 1;\n      position -= this._ls;\n      position = position * (end - start) / this._lc;\n      if (!this.get(\"inversed\")) {\n        position = start + position;\n      } else {\n        position = end - position;\n      }\n      return position;\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"_updateLC\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var axis = this.axis;\n      var parent = axis.parent;\n      if (parent) {\n        var w = parent.innerWidth();\n        this._lc = this.axisLength() / w;\n        this._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n      }\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"_updatePositions\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var axis = this.axis;\n      axis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent.get(\"paddingLeft\", 0));\n      axis.bulletsContainer.set(\"y\", this.y());\n      var chart = axis.chart;\n      if (chart) {\n        var plotContainer = chart.plotContainer;\n        var axisHeader = axis.axisHeader;\n        var width = axis.get(\"marginLeft\", 0);\n        var x = axis.x() - width;\n        var parent_1 = axis.parent;\n        if (parent_1) {\n          x -= parent_1.get(\"paddingLeft\", 0);\n        }\n        if (axisHeader.children.length > 0) {\n          width = axis.axisHeader.width();\n          axis.set(\"marginLeft\", width);\n        } else {\n          axisHeader.set(\"width\", width);\n        }\n        axisHeader.setAll({\n          x: x,\n          y: -1,\n          height: plotContainer.height() + 2\n        });\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"processAxis\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.processAxis.call(this);\n      var axis = this.axis;\n      axis.set(\"width\", p100);\n      var verticalLayout = this._root.verticalLayout;\n      axis.set(\"layout\", verticalLayout);\n      axis.labelsContainer.set(\"width\", p100);\n      axis.axisHeader.setAll({\n        layout: verticalLayout\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"axisLength\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.axis.width();\n    }\n  });\n  /**\r\n   * Converts axis relative position to actual coordinate in pixels.\r\n   *\r\n   * @param   position  Position\r\n   * @return            Point\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"positionToPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (position) {\n      return {\n        x: this.positionToCoordinate(position),\n        y: 0\n      };\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"updateTick\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tick, position, endPosition, count) {\n      if (tick) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n        var location_1 = 0.5;\n        if ($type.isNumber(count) && count > 1) {\n          location_1 = tick.get(\"multiLocation\", location_1);\n        } else {\n          location_1 = tick.get(\"location\", location_1);\n        }\n        if ($type.isNumber(endPosition) && endPosition != position) {\n          position = position + (endPosition - position) * location_1;\n        }\n        tick.set(\"x\", this.positionToCoordinate(position));\n        var length_1 = tick.get(\"length\", 0);\n        var inside = tick.get(\"inside\", this.get(\"inside\", false));\n        if (this.get(\"opposite\")) {\n          tick.set(\"y\", p100);\n          if (!inside) {\n            length_1 *= -1;\n          }\n        } else {\n          tick.set(\"y\", 0);\n          if (inside) {\n            length_1 *= -1;\n          }\n        }\n        tick.set(\"draw\", function (display) {\n          display.moveTo(0, 0);\n          display.lineTo(0, length_1);\n        });\n        this.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"updateLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (label, position, endPosition, count) {\n      if (label) {\n        var location_2 = 0.5;\n        if ($type.isNumber(count) && count > 1) {\n          location_2 = label.get(\"multiLocation\", location_2);\n        } else {\n          location_2 = label.get(\"location\", location_2);\n        }\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n        var inside = label.get(\"inside\", this.get(\"inside\", false));\n        var opposite = this.get(\"opposite\");\n        if (opposite) {\n          if (!inside) {\n            label.set(\"position\", \"relative\");\n            label.set(\"y\", p100);\n          } else {\n            label.set(\"position\", \"absolute\");\n            label.set(\"y\", 0);\n          }\n        } else {\n          if (!inside) {\n            label.set(\"y\", undefined);\n            label.set(\"position\", \"relative\");\n          } else {\n            label.set(\"y\", 0);\n            label.set(\"position\", \"absolute\");\n          }\n        }\n        if ($type.isNumber(endPosition) && endPosition != position) {\n          position = position + (endPosition - position) * location_2;\n        }\n        label.set(\"x\", this.positionToCoordinate(position));\n        this.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"updateGrid\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (grid, position, endPosition) {\n      if (grid) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n        var location_3 = grid.get(\"location\", 0.5);\n        if ($type.isNumber(endPosition) && endPosition != position) {\n          position = position + (endPosition - position) * location_3;\n        }\n        grid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n        this.toggleVisibility(grid, position, 0, 1);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"updateBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet, position, endPosition) {\n      if (bullet) {\n        var sprite = bullet.get(\"sprite\");\n        if (sprite) {\n          if (!$type.isNumber(position)) {\n            position = 0;\n          }\n          var location_4 = bullet.get(\"location\", 0.5);\n          if ($type.isNumber(endPosition) && endPosition != position) {\n            position = position + (endPosition - position) * location_4;\n          }\n          sprite.set(\"x\", this.positionToCoordinate(position));\n          this.toggleVisibility(sprite, position, 0, 1);\n        }\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"updateFill\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fill, position, endPosition) {\n      if (fill) {\n        if (!$type.isNumber(position)) {\n          position = 0;\n        }\n        if (!$type.isNumber(endPosition)) {\n          endPosition = 1;\n        }\n        var x0 = this.positionToCoordinate(position);\n        var x1 = this.positionToCoordinate(endPosition);\n        this.fillDrawMethod(fill, x0, x1);\n      }\n    }\n  });\n  Object.defineProperty(AxisRendererX.prototype, \"fillDrawMethod\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (fill, x0, x1) {\n      var _this = this;\n      fill.set(\"draw\", function (display) {\n        var _a;\n        //display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n        // using for holes, so can not be rectangle\n        var h = _this.axis.gridContainer.height();\n        var w = _this.width();\n        if (x1 < x0) {\n          _a = __read([x0, x1], 2), x1 = _a[0], x0 = _a[1];\n        }\n        if (x0 > w || x1 < 0) {\n          return;\n        }\n        x0 = Math.max(0, x0);\n        x1 = Math.min(w, x1);\n        display.moveTo(x0, 0);\n        display.lineTo(x1, 0);\n        display.lineTo(x1, h);\n        display.lineTo(x0, h);\n        display.lineTo(x0, 0);\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"positionTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip, position) {\n      this._positionTooltip(tooltip, {\n        x: this.positionToCoordinate(position),\n        y: 0\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n  Object.defineProperty(AxisRendererX.prototype, \"updateTooltipBounds\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (tooltip) {\n      var inside = this.get(\"inside\");\n      var num = 100000;\n      var global = this._display.toGlobal({\n        x: 0,\n        y: 0\n      });\n      var x = global.x;\n      var y = 0;\n      var w = this.axisLength();\n      var h = num;\n      var pointerOrientation = \"up\";\n      if (this.get(\"opposite\")) {\n        if (inside) {\n          pointerOrientation = \"up\";\n          y = global.y;\n          h = num;\n        } else {\n          pointerOrientation = \"down\";\n          y = global.y - num;\n          h = num;\n        }\n      } else {\n        if (inside) {\n          pointerOrientation = \"down\";\n          y = global.y - num;\n          h = num;\n        } else {\n          pointerOrientation = \"up\";\n          y = global.y;\n          h = num;\n        }\n      }\n      var bounds = {\n        left: x,\n        right: x + w,\n        top: y,\n        bottom: y + h\n      };\n      var oldBounds = tooltip.get(\"bounds\");\n      if (!$utils.sameBounds(bounds, oldBounds)) {\n        tooltip.set(\"bounds\", bounds);\n        tooltip.set(\"pointerOrientation\", pointerOrientation);\n      }\n    }\n  });\n  Object.defineProperty(AxisRendererX, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"AxisRendererX\"\n  });\n  Object.defineProperty(AxisRendererX, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: AxisRenderer.classNames.concat([AxisRendererX.className])\n  });\n  return AxisRendererX;\n}(AxisRenderer);\nexport { AxisRendererX };","map":{"version":3,"names":["AxisRenderer","p100","$type","$utils","Rectangle","AxisRendererX","_super","__extends","_this","apply","arguments","Object","defineProperty","new","_root","width","themeTags","value","_settings","mergeTags","prototype","_afterNew","call","setPrivateRaw","gridTemplate","grid","template","set","display","graphics","moveTo","lineTo","height","_changed","axis","isDirty","markDirtySize","opposite","chart","axisChildren","children","get","topAxesContainer","indexOf","insertIndex","moveValue","addTag","bottomAxesContainer","removeTag","ghostLabel","_applyThemes","thumb","setPrivate","labelsContainer","point1","point2","x","position","start","_start","end","_end","_ls","_lc","parent","w","innerWidth","axisLength","gridContainer","relativeToValue","bulletsContainer","y","plotContainer","axisHeader","parent_1","length","setAll","processAxis","verticalLayout","layout","positionToCoordinate","tick","endPosition","count","isNumber","location_1","length_1","inside","toggleVisibility","label","location_2","undefined","location_3","Math","round","bullet","sprite","location_4","fill","x0","x1","fillDrawMethod","h","_a","__read","max","min","tooltip","_positionTooltip","num","global","_display","toGlobal","pointerOrientation","bounds","left","right","top","bottom","oldBounds","sameBounds","classNames","concat","className"],"sources":["../../../../../../src/.internal/charts/xy/axes/AxisRendererX.ts"],"sourcesContent":["import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\tif (this.isDirty(\"inside\")) {\n\t\t\taxis.markDirtySize();\n\t\t}\n\t\t\n\t\tconst opposite = \"opposite\"\n\n\t\tif (this.isDirty(opposite)) {\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (chart) {\n\t\t\t\tconst axisChildren = axis.children;\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t\taxis.removeTag(opposite);\n\t\t\t\t}\n\t\t\t\taxis.markDirtySize();\n\t\t\t}\n\t\t\taxis.ghostLabel._applyThemes();\n\t\t}\t\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\t\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\taxis.gridContainer.set(\"x\", axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0));\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", Math.round(this.positionToCoordinate(position)));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tx0 = Math.max(0, x0);\n\t\t\tx1 = Math.min(w, x1);\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}