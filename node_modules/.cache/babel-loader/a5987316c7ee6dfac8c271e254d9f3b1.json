{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Container } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\n/**\r\n * A base class for all charts.\r\n */\nvar Chart = /** @class */function (_super) {\n  __extends(Chart, _super);\n  function Chart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * A [[Container]] chart places its elements in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"chartContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {\n        width: p100,\n        height: p100,\n        interactiveChildren: false\n      }))\n    });\n    /**\r\n     * A [[Container]] chart places its bullets in.\r\n     *\r\n     * @default Container.new()\r\n     */\n    Object.defineProperty(_this, \"bulletsContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: Container.new(_this._root, {\n        interactiveChildren: false,\n        isMeasured: false,\n        position: \"absolute\",\n        width: p100,\n        height: p100\n      })\n    });\n    return _this;\n  }\n  Object.defineProperty(Chart, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Chart\"\n  });\n  Object.defineProperty(Chart, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Container.classNames.concat([Chart.className])\n  });\n  return Chart;\n}(Container);\nexport { Chart };","map":{"version":3,"names":["Container","p100","Chart","_super","__extends","_this","apply","arguments","Object","defineProperty","children","push","new","_root","width","height","interactiveChildren","isMeasured","position","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/Chart.ts"],"sourcesContent":["import { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\n\nexport interface IChartSettings extends IContainerSettings {\n}\n\nexport interface IChartPrivate extends IContainerPrivate {\n}\n\nexport interface IChartEvents extends IContainerEvents {\n}\n\n/**\n * A base class for all charts.\n */\nexport abstract class Chart extends Container {\n\tpublic static className: string = \"Chart\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([Chart.className]);\n\n\tdeclare public _settings: IChartSettings;\n\tdeclare public _privateSettings: IChartPrivate;\n\tdeclare public _events: IChartEvents;\n\n\t/**\n\t * A [[Container]] chart places its elements in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly chartContainer: Container = this.children.push(Container.new(this._root, { width: p100, height: p100, interactiveChildren: false }));\n\n\t/**\n\t * A [[Container]] chart places its bullets in.\n\t * \n\t * @default Container.new()\n\t */\n\tpublic readonly bulletsContainer: Container = Container.new(this._root, { interactiveChildren: false, isMeasured: false, position: \"absolute\", width: p100, height: p100 });\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAAiE,6BAA6B;AAChH,SAASC,IAAI,QAAQ,yBAAyB;AAW9C;;;AAGA,IAAAC,KAAA,0BAAAC,MAAA;EAAoCC,SAAA,CAAAF,KAAA,EAAAC,MAAA;EAApC,SAAAD,MAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IAQC;;;;;IAKAC,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA4CA,KAAI,CAACK,QAAQ,CAACC,IAAI,CAACX,SAAS,CAACY,GAAG,CAACP,KAAI,CAACQ,KAAK,EAAE;QAAEC,KAAK,EAAEb,IAAI;QAAEc,MAAM,EAAEd,IAAI;QAAEe,mBAAmB,EAAE;MAAK,CAAE,CAAC;;IAEnJ;;;;;IAKAR,MAAA,CAAAC,cAAA,CAAAJ,KAAA;;;;aAA8CL,SAAS,CAACY,GAAG,CAACP,KAAI,CAACQ,KAAK,EAAE;QAAEG,mBAAmB,EAAE,KAAK;QAAEC,UAAU,EAAE,KAAK;QAAEC,QAAQ,EAAE,UAAU;QAAEJ,KAAK,EAAEb,IAAI;QAAEc,MAAM,EAAEd;MAAI,CAAE;;;EAE3K;EArBCO,MAAA,CAAAC,cAAA,CAAAP,KAAA;;;;WAAkC;;EAClCM,MAAA,CAAAC,cAAA,CAAAP,KAAA;;;;WAA0CF,SAAS,CAACmB,UAAU,CAACC,MAAM,CAAC,CAAClB,KAAK,CAACmB,SAAS,CAAC;;EAoBxF,OAAAnB,KAAC;CAAA,CAtBmCF,SAAS;SAAvBE,KAAK"},"metadata":{},"sourceType":"module"}