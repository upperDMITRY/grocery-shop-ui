{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series } from \"../../../core/render/Series\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n/**\r\n * @ignore\r\n */\n\nfunction min(left, right) {\n  if (left == null) {\n    return right;\n  } else if (right == null) {\n    return left;\n  } else if (right < left) {\n    return right;\n  } else {\n    return left;\n  }\n}\n/**\r\n * @ignore\r\n */\n\n\nfunction max(left, right) {\n  if (left == null) {\n    return right;\n  } else if (right == null) {\n    return left;\n  } else if (right > left) {\n    return right;\n  } else {\n    return left;\n  }\n}\n/**\r\n * A base class for all XY chart series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\r\n */\n\n\nvar XYSeries =\n/** @class */\nfunction (_super) {\n  __extends(XYSeries, _super);\n\n  function XYSeries() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_xField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_yField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_xOpenField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_yOpenField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_xLowField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_xHighField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_yLowField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_yHighField\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_axesDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_stackDirty\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_selectionProcessed\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_dataSets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_mainContainerMask\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_x\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_y\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    /**\r\n     * A [[Container]] that us used to put series' elements in.\r\n     *\r\n     * @default Container.new()\r\n     */\n\n    Object.defineProperty(_this, \"mainContainer\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: _this.children.push(Container.new(_this._root, {}))\n    });\n    /**\r\n     * A list of axis ranges that affect the series.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n     */\n\n    Object.defineProperty(_this, \"axisRanges\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new List()\n    });\n    Object.defineProperty(_this, \"_skipped\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"_couldStackTo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(_this, \"_reallyStackedTo\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_stackedSeries\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(_this, \"_aLocationX0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_aLocationX1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_aLocationY0\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(_this, \"_aLocationY1\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(_this, \"_showBullets\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: true\n    });\n    Object.defineProperty(_this, \"valueXFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"valueX\", \"openValueX\"]\n    });\n    Object.defineProperty(_this, \"valueYFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [\"valueY\", \"openValueY\"]\n    });\n    Object.defineProperty(_this, \"_valueXFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_valueYFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // used for full min/max\n\n    Object.defineProperty(_this, \"_valueXShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_valueYShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    }); // used for selection (uses working)\n\n    Object.defineProperty(_this, \"__valueXShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"__valueYShowFields\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_emptyDataItem\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: new DataItem(_this, undefined, {})\n    });\n    Object.defineProperty(_this, \"_dataSetId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    return _this;\n  }\n\n  Object.defineProperty(XYSeries.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      this.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n      this.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\");\n\n      this._setRawDefault(\"vcx\", 1);\n\n      this._setRawDefault(\"vcy\", 1); // this can't go to themes, as data might be parsed before theme\n\n\n      this._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\n      this._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n      this._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\n      this._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n      _super.prototype._afterNew.call(this);\n\n      this._settings.xAxis.series.push(this);\n\n      this._settings.yAxis.series.push(this);\n\n      this.set(\"maskContent\", true);\n\n      this._disposers.push(this.axisRanges.events.onAll(function (change) {\n        if (change.type === \"clear\") {\n          _this.axisRanges.each(function (axisRange) {\n            _this._removeAxisRange(axisRange);\n          });\n        } else if (change.type === \"push\") {\n          _this._processAxisRange(change.newValue);\n        } else if (change.type === \"setIndex\") {\n          _this._processAxisRange(change.newValue);\n        } else if (change.type === \"insertIndex\") {\n          _this._processAxisRange(change.newValue);\n        } else if (change.type === \"removeIndex\") {\n          _this._removeAxisRange(change.oldValue);\n        } else {\n          throw new Error(\"Unknown IStreamEvent type\");\n        }\n      }));\n\n      if (!this.get(\"baseAxis\")) {\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n\n        if (yAxis.isType(\"CategoryAxis\") || yAxis.isType(\"DateAxis\")) {\n          this.set(\"baseAxis\", yAxis);\n        } else {\n          this.set(\"baseAxis\", xAxis);\n        }\n      }\n\n      this.states.create(\"hidden\", {\n        opacity: 1,\n        visible: false\n      });\n\n      this._makeFieldNames();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_processAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisRange) {\n      var container = Container.new(this._root, {});\n      axisRange.container = container;\n      this.children.push(container);\n      axisRange.series = this;\n      var axisDataItem = axisRange.axisDataItem;\n      axisDataItem.setRaw(\"isRange\", true);\n      var axis = axisDataItem.component;\n\n      if (axis) {\n        axis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n        var axisFill = axisDataItem.get(\"axisFill\");\n        var bullet = axisDataItem.get(\"bullet\");\n\n        if (bullet) {\n          var sprite = bullet.get(\"sprite\");\n\n          if (sprite) {\n            sprite.setPrivate(\"visible\", false);\n          }\n        }\n\n        if (axisFill) {\n          this.children.push(axisFill);\n          container.set(\"mask\", axisFill);\n        }\n\n        axis._seriesAxisRanges.push(axisDataItem);\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_removeAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisRange) {\n      var container = axisRange.container;\n\n      if (container) {\n        container.dispose();\n      }\n\n      axisRange.axisDataItem.dispose();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_updateFields\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._updateFields.call(this);\n\n      this._valueXFields = [];\n      this._valueYFields = [];\n      this._valueXShowFields = [];\n      this._valueYShowFields = [];\n      this.__valueXShowFields = [];\n      this.__valueYShowFields = [];\n\n      if (this.valueXFields) {\n        $array.each(this.valueXFields, function (key) {\n          var field = _this.get(key + \"Field\");\n\n          if (field) {\n            _this._valueXFields.push(key);\n\n            var field_1 = _this.get(key + \"Show\");\n\n            _this.__valueXShowFields.push(field_1);\n\n            if (field_1.indexOf(\"Working\") != -1) {\n              _this._valueXShowFields.push(field_1.split(\"Working\")[0]);\n            } else {\n              _this._valueYShowFields.push(field_1);\n            }\n          }\n        });\n      }\n\n      if (this.valueYFields) {\n        $array.each(this.valueYFields, function (key) {\n          var field = _this.get(key + \"Field\");\n\n          if (field) {\n            _this._valueYFields.push(key);\n\n            var field_2 = _this.get(key + \"Show\");\n\n            _this.__valueYShowFields.push(field_2);\n\n            if (field_2.indexOf(\"Working\") != -1) {\n              _this._valueYShowFields.push(field_2.split(\"Working\")[0]);\n            } else {\n              _this._valueYShowFields.push(field_2);\n            }\n          }\n        });\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._dispose.call(this);\n\n      $array.removeFirst(this.get(\"xAxis\").series, this);\n      $array.removeFirst(this.get(\"yAxis\").series, this);\n    }\n  }); // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\n  Object.defineProperty(XYSeries.prototype, \"_min\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var newValue = min(this.getPrivate(key), value);\n      this.setPrivate(key, newValue);\n    }\n  }); // TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\n  Object.defineProperty(XYSeries.prototype, \"_max\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (key, value) {\n      var newValue = max(this.getPrivate(key), value);\n      this.setPrivate(key, newValue);\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_shouldMakeBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (dataItem.get(this._xField) != null && dataItem.get(this._yField) != null) {\n        return true;\n      }\n\n      return false;\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_makeFieldNames\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var xName = xAxis.getPrivate(\"name\");\n      var xCapName = $utils.capitalizeFirst(xName);\n      var yName = yAxis.getPrivate(\"name\");\n      var yCapName = $utils.capitalizeFirst(yName);\n      var xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\");\n      var yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\");\n      var open = \"open\";\n      var low = \"low\";\n      var high = \"high\";\n      var show = \"Show\";\n\n      if (xAxis.className === \"ValueAxis\") {\n        this._xField = this.get(xName + xLetter + show);\n        this._xOpenField = this.get(open + xCapName + xLetter + show);\n        this._xLowField = this.get(low + xCapName + xLetter + show);\n        this._xHighField = this.get(high + xCapName + xLetter + show);\n      } else {\n        this._xField = xName + xLetter;\n        this._xOpenField = open + xCapName + xLetter;\n        this._xLowField = low + xCapName + xLetter;\n        this._xHighField = high + xCapName + xLetter;\n      }\n\n      if (yAxis.className === \"ValueAxis\") {\n        this._yField = this.get(yName + yLetter + show);\n        this._yOpenField = this.get(open + yCapName + yLetter + show);\n        this._yLowField = this.get(low + yCapName + yLetter + show);\n        this._yHighField = this.get(high + yCapName + yLetter + show);\n      } else {\n        this._yField = yName + yLetter;\n        this._yOpenField = open + yCapName + yLetter;\n        this._yLowField = low + yCapName + yLetter;\n        this._yHighField = high + yCapName + yLetter;\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_fixVC\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var baseAxis = this.get(\"baseAxis\");\n      var hiddenState = this.states.lookup(\"hidden\");\n      var sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n      if (hiddenState) {\n        var value = 0;\n\n        if (sequencedInterpolation) {\n          value = 0.999999999999; // makes animate, good for stacked\n        }\n\n        if (xAxis === baseAxis) {\n          hiddenState.set(\"vcy\", value);\n        } else if (yAxis === baseAxis) {\n          hiddenState.set(\"vcx\", value);\n        } else {\n          hiddenState.set(\"vcy\", value);\n          hiddenState.set(\"vcx\", value);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_handleMaskBullets\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.isDirty(\"maskBullets\")) {\n        this.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      _super.prototype._prepareChildren.call(this);\n\n      this.set(\"width\", this.get(\"xAxis\").width());\n      this.set(\"height\", this.get(\"yAxis\").height());\n\n      this._handleMaskBullets();\n\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var baseAxis = this.get(\"baseAxis\");\n\n      if (this.isDirty(\"baseAxis\")) {\n        this._fixVC();\n      }\n\n      if (xAxis === baseAxis) {\n        this.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent.get(\"paddingTop\", 0));\n        this.bulletsContainer.set(\"y\", this.y());\n      } else if (yAxis === baseAxis) {\n        this.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent.get(\"paddingLeft\", 0));\n        this.bulletsContainer.set(\"x\", this.x());\n      }\n\n      var stacked = this.get(\"stacked\");\n\n      if (this.isDirty(\"stacked\")) {\n        if (stacked) {\n          if (this._valuesDirty && !this._dataProcessed) {} else {\n            this._stack();\n          }\n        } else {\n          this._unstack();\n        }\n      }\n\n      if (this._valuesDirty && !this._dataProcessed) {\n        this._dataProcessed = true;\n\n        if (stacked) {\n          this._stack();\n        }\n\n        $array.each(this.dataItems, function (dataItem) {\n          $array.each(_this._valueXShowFields, function (key) {\n            var value = dataItem.get(key);\n\n            if (value != null) {\n              if (stacked) {\n                value += _this.getStackedXValue(dataItem, key);\n              }\n\n              _this._min(\"minX\", value);\n\n              _this._max(\"maxX\", value);\n            }\n          });\n          $array.each(_this._valueYShowFields, function (key) {\n            var value = dataItem.get(key);\n\n            if (value != null) {\n              if (stacked) {\n                value += _this.getStackedYValue(dataItem, key);\n              }\n\n              _this._min(\"minY\", value);\n\n              _this._max(\"maxY\", value);\n            }\n          });\n          xAxis.processSeriesDataItem(dataItem, _this._valueXFields);\n          yAxis.processSeriesDataItem(dataItem, _this._valueYFields);\n        });\n\n        if (!this.get(\"ignoreMinMax\")) {\n          if (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n            xAxis.markDirtyExtremes();\n          }\n\n          if (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n            yAxis.markDirtyExtremes();\n          }\n        }\n\n        this._markStakedDirtyStack(); //this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\n\n        this.updateLegendValue(undefined);\n      }\n\n      if (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n        this._markStakedDirtyStack();\n      }\n\n      if (!this._dataGrouped) {\n        xAxis._groupSeriesData(this);\n\n        yAxis._groupSeriesData(this);\n\n        this._dataGrouped = true;\n      }\n\n      if (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n        var startIndex = this.getPrivate(\"startIndex\", 0);\n        var endIndex = this.getPrivate(\"endIndex\", this.dataItems.length);\n        var minBulletDistance = this.get(\"minBulletDistance\", 0);\n\n        if (minBulletDistance > 0 && baseAxis) {\n          if (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n            this._showBullets = true;\n          } else {\n            this._showBullets = false;\n          }\n        }\n\n        if ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n          this._selectionProcessed = true;\n          var vcx = this.get(\"vcx\", 1);\n          var vcy = this.get(\"vcy\", 1);\n          var stacked_1 = this.get(\"stacked\", false);\n\n          if (baseAxis === xAxis) {\n            yAxis._calculateTotals();\n\n            this.setPrivateRaw(\"selectionMinY\", undefined);\n            this.setPrivateRaw(\"selectionMaxY\", undefined);\n\n            for (var i = startIndex; i < endIndex; i++) {\n              this.processYSelectionDataItem(this.dataItems[i], vcy, stacked_1);\n            }\n          } else if (baseAxis === yAxis) {\n            xAxis._calculateTotals();\n\n            this.setPrivateRaw(\"selectionMinX\", undefined);\n            this.setPrivateRaw(\"selectionMaxX\", undefined);\n\n            for (var i = startIndex; i < endIndex; i++) {\n              this.processXSelectionDataItem(this.dataItems[i], vcx, stacked_1);\n            }\n          }\n\n          if (baseAxis === xAxis) {\n            if (this.get(\"valueYShow\") !== \"valueYWorking\") {\n              this.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n              this.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n              yAxis.markDirtyExtremes();\n            }\n          } else if (baseAxis === yAxis) {\n            if (this.get(\"valueXShow\") !== \"valueXWorking\") {\n              this.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n              this.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n              xAxis.markDirtyExtremes();\n            }\n          }\n\n          if (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n            xAxis.markDirtySelectionExtremes();\n          }\n\n          if (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n            yAxis.markDirtySelectionExtremes();\n          } // this.updateLegendValue(undefined); flickers while panning\n\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_makeRangeMask\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      if (this.axisRanges.length > 0) {\n        if (!this._mainContainerMask) {\n          var mainContainerMask_1 = this.children.push(Graphics.new(this._root, {}));\n          this._mainContainerMask = mainContainerMask_1;\n          mainContainerMask_1.set(\"draw\", function (display) {\n            var parent = _this.parent;\n\n            if (parent) {\n              var w = _this._root.container.width();\n\n              var h = _this._root.container.height();\n\n              display.moveTo(-w, -h);\n              display.lineTo(-w, h * 2);\n              display.lineTo(w * 2, h * 2);\n              display.lineTo(w * 2, -h);\n              display.lineTo(-w, -h);\n\n              _this.axisRanges.each(function (axisRange) {\n                var fill = axisRange.axisDataItem.get(\"axisFill\");\n\n                if (parent) {\n                  if (fill) {\n                    var draw = fill.get(\"draw\");\n\n                    if (draw) {\n                      draw(mainContainerMask_1._display, mainContainerMask_1);\n                    }\n                  }\n                }\n              });\n            }\n\n            _this.mainContainer._display.mask = mainContainerMask_1._display;\n          });\n        }\n\n        this._mainContainerMask.markDirty();\n\n        this._mainContainerMask._markDirtyKey(\"fill\");\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateChildren.call(this); // save for performance\n\n\n      this._x = this.x();\n      this._y = this.y();\n\n      this._makeRangeMask();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_maskBaseDraw\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      var mainContainerMask = this._mainContainerMask;\n      mainContainerMask.set(\"draw\", function (display) {\n        var parent = _this.parent;\n\n        if (parent) {\n          var w = parent.width();\n          var h = parent.height();\n          display.drawRect(0, 0, w, h);\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_stack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var chart = this.chart;\n\n      if (chart) {\n        var seriesIndex = chart.series.indexOf(this);\n        this._couldStackTo = [];\n\n        if (seriesIndex > 0) {\n          var series = void 0;\n\n          for (var i = seriesIndex - 1; i >= 0; i--) {\n            series = chart.series.getIndex(i);\n\n            if (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n              this._couldStackTo.push(series);\n            }\n          }\n        }\n\n        this._stackDataItems();\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_unstack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n\n      $object.each(this._reallyStackedTo, function (_key, value) {\n        delete value._stackedSeries[_this.uid];\n      });\n      this._reallyStackedTo = {};\n      $array.each(this.dataItems, function (dataItem) {\n        dataItem.setRaw(\"stackToItemY\", undefined);\n        dataItem.setRaw(\"stackToItemX\", undefined);\n      });\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_stackDataItems\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this; // this works only with the same number of data @todo: search by date/category?\n\n\n      var baseAxis = this.get(\"baseAxis\");\n      var xAxis = this.get(\"xAxis\");\n      var yAxis = this.get(\"yAxis\");\n      var field;\n      var stackToItemKey;\n\n      if (baseAxis === xAxis) {\n        field = \"valueY\";\n        stackToItemKey = \"stackToItemY\";\n      } else if (baseAxis === yAxis) {\n        field = \"valueX\";\n        stackToItemKey = \"stackToItemX\";\n      }\n\n      var len = this._couldStackTo.length;\n      var index = 0;\n      var stackToNegative = this.get(\"stackToNegative\");\n      this._reallyStackedTo = {};\n      $array.each(this.dataItems, function (dataItem) {\n        for (var s = 0; s < len; s++) {\n          var stackToSeries = _this._couldStackTo[s];\n          var stackToItem = stackToSeries.dataItems[index];\n          var value = dataItem.get(field);\n          var stackValue = stackToItem.get(field);\n\n          if (stackToItem) {\n            if (stackToNegative) {\n              if ($type.isNumber(value)) {\n                if ($type.isNumber(stackValue)) {\n                  if (value >= 0 && stackValue >= 0) {\n                    dataItem.setRaw(stackToItemKey, stackToItem);\n                    _this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                    stackToSeries._stackedSeries[_this.uid] = _this;\n                    break;\n                  }\n\n                  if (value < 0 && stackValue < 0) {\n                    dataItem.setRaw(stackToItemKey, stackToItem);\n                    _this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                    stackToSeries._stackedSeries[_this.uid] = _this;\n                    break;\n                  }\n                }\n              } else {\n                break;\n              }\n            } else {\n              if ($type.isNumber(value) && $type.isNumber(stackValue)) {\n                dataItem.setRaw(stackToItemKey, stackToItem);\n                _this._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n                stackToSeries._stackedSeries[_this.uid] = _this;\n                break;\n              }\n            }\n          }\n        }\n\n        index++;\n      });\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"processXSelectionDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, vcx, stacked) {\n      var _this = this;\n\n      $array.each(this.__valueXShowFields, function (key) {\n        var value = dataItem.get(key);\n\n        if (value != null) {\n          if (stacked) {\n            value += _this.getStackedXValueWorking(dataItem, key);\n          }\n\n          _this._min(\"selectionMinX\", value);\n\n          _this._max(\"selectionMaxX\", value * vcx);\n        }\n      });\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"processYSelectionDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, vcy, stacked) {\n      var _this = this;\n\n      $array.each(this.__valueYShowFields, function (key) {\n        var value = dataItem.get(key);\n\n        if (value != null) {\n          if (stacked) {\n            value += _this.getStackedYValueWorking(dataItem, key);\n          }\n\n          _this._min(\"selectionMinY\", value);\n\n          _this._max(\"selectionMaxY\", value * vcy);\n        }\n      });\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"getStackedYValueWorking\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, key) {\n      var stackToItem = dataItem.get(\"stackToItemY\");\n\n      if (stackToItem) {\n        var stackedToSeries = stackToItem.component;\n        return stackToItem.get(key, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n      }\n\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"getStackedXValueWorking\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, key) {\n      var stackToItem = dataItem.get(\"stackToItemX\");\n\n      if (stackToItem) {\n        var stackedToSeries = stackToItem.component;\n        return stackToItem.get(key, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n      }\n\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"getStackedYValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, key) {\n      var stackToItem = dataItem.get(\"stackToItemY\");\n\n      if (stackToItem) {\n        return stackToItem.get(key, 0) + this.getStackedYValue(stackToItem, key);\n      }\n\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"getStackedXValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, key) {\n      var stackToItem = dataItem.get(\"stackToItemX\");\n\n      if (stackToItem) {\n        return stackToItem.get(key, 0) + this.getStackedXValue(stackToItem, key);\n      }\n\n      return 0;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"createLegendMarker\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_dataItem) {\n      this.updateLegendMarker();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_markDirtyAxes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._axesDirty = true;\n      this.markDirty();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_markDataSetDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._afterDataChange();\n\n      this._valuesDirty = true;\n      this._dataProcessed = false;\n      this._aggregatesCalculated = false;\n      this.markDirty();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_clearDirty\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._clearDirty.call(this);\n\n      this._axesDirty = false;\n      this._selectionProcessed = false;\n      this._stackDirty = false;\n      this._dataProcessed = false;\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_positionBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (bullet) {\n      var sprite = bullet.get(\"sprite\");\n\n      if (sprite) {\n        var dataItem = sprite.dataItem;\n        var locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n        var locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n        var xAxis = this.get(\"xAxis\");\n        var yAxis = this.get(\"yAxis\");\n        var positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n        var positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1));\n        var point = this.getPoint(positionX, positionY);\n        var left = dataItem.get(\"left\", point.x);\n        var right = dataItem.get(\"right\", point.x);\n        var top_1 = dataItem.get(\"top\", point.y);\n        var bottom = dataItem.get(\"bottom\", point.y);\n\n        if (this._shouldShowBullet(positionX, positionY)) {\n          if (!bullet.getPrivate(\"hidden\")) {\n            sprite.setPrivate(\"visible\", true);\n          } else {\n            sprite.setPrivate(\"visible\", false);\n          }\n\n          var w = right - left;\n          var h = bottom - top_1;\n\n          if (sprite.isType(\"Label\")) {\n            sprite.set(\"maxWidth\", Math.abs(w));\n            sprite.set(\"maxHeight\", Math.abs(h));\n          }\n\n          var x = left + w * locationX;\n          var y = bottom - h * locationY;\n          sprite.set(\"x\", x);\n          sprite.set(\"y\", y);\n        } else {\n          sprite.setPrivate(\"visible\", false);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_shouldShowBullet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_positionX, _positionY) {\n      return this._showBullets;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"setDataSet\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (id) {\n      if (this._dataSets[id]) {\n        this._handleDataSetChange();\n\n        this._dataItems = this._dataSets[id];\n\n        this._markDataSetDirty();\n\n        this._dataSetId = id;\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_handleDataSetChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.bullets.length > 0) {\n        $array.each(this._dataItems, function (dataItem) {\n          var bullets = dataItem.bullets;\n\n          if (bullets) {\n            $array.each(bullets, function (bullet) {\n              var sprite = bullet.get(\"sprite\");\n\n              if (sprite) {\n                sprite.setPrivate(\"visible\", false);\n              }\n            });\n          }\n        });\n      }\n    }\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param   duration  Duration of animation in milliseconds\r\n   * @return            Animation promise\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"show\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this._fixVC();\n\n              promises = [];\n              promises.push(_super.prototype.show.call(this, duration).then(function () {\n                _this._isShowing = false;\n\n                var xAxis = _this.get(\"xAxis\");\n\n                var yAxis = _this.get(\"yAxis\");\n\n                var baseAxis = _this.get(\"baseAxis\");\n\n                if (yAxis !== baseAxis) {\n                  yAxis.markDirtySelectionExtremes();\n                }\n\n                if (xAxis !== baseAxis) {\n                  xAxis.markDirtySelectionExtremes();\n                }\n              }));\n              promises.push(this.bulletsContainer.show(duration));\n              promises.push(this._sequencedShowHide(true, duration));\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param   duration  Duration of animation in milliseconds\r\n   * @return            Animation promise\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"hide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises;\n\n        var _this = this;\n\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              this._fixVC();\n\n              promises = [];\n              promises.push(_super.prototype.hide.call(this, duration).then(function () {\n                _this._isHiding = false;\n              }));\n              promises.push(this.bulletsContainer.hide(duration));\n              promises.push(this._sequencedShowHide(false, duration));\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Shows series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"showDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, easing;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.showDataItem.call(this, dataItem, duration)];\n\n              if (!$type.isNumber(duration)) {\n                duration = this.get(\"stateAnimationDuration\", 0);\n              }\n\n              easing = this.get(\"stateAnimationEasing\");\n              $array.each(this._valueFields, function (key) {\n                promises.push(dataItem.animate({\n                  key: key + \"Working\",\n                  to: dataItem.get(key),\n                  duration: duration,\n                  easing: easing\n                }).waitForStop());\n              });\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  /**\r\n   * Hides series's data item.\r\n   *\r\n   * @param   dataItem  Data item\r\n   * @param   duration  Animation duration in milliseconds\r\n   * @return            Promise\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"hideDataItem\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem, duration) {\n      return __awaiter(this, void 0, void 0, function () {\n        var promises, hiddenState, easing, xAxis, yAxis, baseAxis, stacked, min_1, baseValue_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              promises = [_super.prototype.hideDataItem.call(this, dataItem, duration)];\n              hiddenState = this.states.create(\"hidden\", {});\n\n              if (!$type.isNumber(duration)) {\n                duration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n              }\n\n              easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n              xAxis = this.get(\"xAxis\");\n              yAxis = this.get(\"yAxis\");\n              baseAxis = this.get(\"baseAxis\");\n              stacked = this.get(\"stacked\");\n\n              if (baseAxis === xAxis || !baseAxis) {\n                $array.each(this._valueYFields, function (key) {\n                  var min = yAxis.getPrivate(\"min\");\n                  var baseValue = yAxis.baseValue();\n\n                  if ($type.isNumber(min) && min > baseValue) {\n                    baseValue = min;\n                  }\n\n                  if (stacked) {\n                    baseValue = 0;\n                  }\n\n                  promises.push(dataItem.animate({\n                    key: key + \"Working\",\n                    to: baseValue,\n                    duration: duration,\n                    easing: easing\n                  }).waitForStop());\n                });\n              }\n\n              if (baseAxis === yAxis || !baseAxis) {\n                min_1 = xAxis.getPrivate(\"min\");\n                baseValue_1 = xAxis.baseValue();\n\n                if ($type.isNumber(min_1) && min_1 > baseValue_1) {\n                  baseValue_1 = min_1;\n                }\n\n                if (stacked) {\n                  baseValue_1 = 0;\n                }\n\n                $array.each(this._valueXFields, function (key) {\n                  promises.push(dataItem.animate({\n                    key: key + \"Working\",\n                    to: baseValue_1,\n                    duration: duration,\n                    easing: easing\n                  }).waitForStop());\n                });\n              }\n\n              return [4\n              /*yield*/\n              , Promise.all(promises)];\n\n            case 1:\n              _a.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_markDirtyStack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this._stackDirty = true;\n      this.markDirty();\n\n      this._markStakedDirtyStack();\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_markStakedDirtyStack\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var stackedSeries = this._stackedSeries;\n\n      if (stackedSeries) {\n        $object.each(stackedSeries, function (_key, value) {\n          value._markDirtyStack();\n        });\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_afterChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterChanged.call(this);\n\n      if (this._skipped) {\n        this._markDirtyAxes();\n\n        this._skipped = false;\n      }\n    }\n  });\n  /**\r\n   * Shows a tooltip for specific data item.\r\n   *\r\n   * @param  dataItem  Data item\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"showDataItemTooltip\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      this.updateLegendMarker(dataItem);\n      this.updateLegendValue(dataItem);\n\n      if (this.get(\"tooltip\")) {\n        if (!this.isHidden()) {\n          var tooltip = this.get(\"tooltip\");\n\n          if (tooltip) {\n            tooltip._setDataItem(dataItem);\n\n            if (dataItem) {\n              var locationX = this.get(\"locationX\", 0);\n              var locationY = this.get(\"locationY\", 1);\n              var itemLocationX = dataItem.get(\"locationX\", locationX);\n              var itemLocationY = dataItem.get(\"locationY\", locationY);\n              var xAxis = this.get(\"xAxis\");\n              var yAxis = this.get(\"yAxis\");\n              var vcx = this.get(\"vcx\", 1);\n              var vcy = this.get(\"vcy\", 1);\n              var xPos = xAxis.getDataItemPositionX(dataItem, this._xField, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n              var yPos = yAxis.getDataItemPositionY(dataItem, this._yField, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n              var point = this.getPoint(xPos, yPos);\n              var show_1 = true;\n              $array.each(this._valueFields, function (field) {\n                if (dataItem.get(field) == null) {\n                  show_1 = false;\n                }\n              });\n\n              if (show_1) {\n                var chart = this.chart;\n\n                if (chart && chart.inPlot(point)) {\n                  tooltip.label.text.markDirtyText();\n                  tooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n                  tooltip.set(\"pointTo\", this._display.toGlobal({\n                    x: point.x,\n                    y: point.y\n                  }));\n                } else {\n                  tooltip._setDataItem(undefined);\n                }\n              } else {\n                tooltip._setDataItem(undefined);\n              }\n            }\n          }\n        } else {\n          this.hideTooltip();\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_getTooltipTarget\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      if (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n        var bullets = dataItem.bullets;\n\n        if (bullets && bullets.length > 0) {\n          var bullet = bullets[0];\n          var sprite = bullet.get(\"sprite\");\n\n          if (sprite) {\n            return sprite;\n          }\n        }\n      }\n\n      return this;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"updateLegendValue\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (dataItem) {\n      var legendDataItem = this.get(\"legendDataItem\");\n\n      if (legendDataItem) {\n        var label = legendDataItem.get(\"label\");\n\n        if (label) {\n          var txt = \"\";\n\n          if (dataItem) {\n            label._setDataItem(dataItem);\n\n            txt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n          } else {\n            label._setDataItem(this._emptyDataItem);\n\n            txt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n          }\n\n          label.set(\"text\", txt);\n        }\n\n        var valueLabel = legendDataItem.get(\"valueLabel\");\n\n        if (valueLabel) {\n          var txt = \"\";\n\n          if (dataItem) {\n            valueLabel._setDataItem(dataItem);\n\n            txt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n          } else {\n            valueLabel._setDataItem(this._emptyDataItem);\n\n            txt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n          }\n\n          valueLabel.set(\"text\", txt);\n        }\n      }\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_getItemReaderLabel\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var text = \"X: {\" + this._xField;\n\n      if (this.get(\"xAxis\").isType(\"DateAxis\")) {\n        text += \".formatDate()\";\n      }\n\n      text += \"}; Y: {\" + this._yField;\n\n      if (this.get(\"yAxis\").isType(\"DateAxis\")) {\n        text += \".formatDate()\";\n      }\n\n      text += \"}\";\n      return text;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"getPoint\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (positionX, positionY) {\n      var x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n      var y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n      return {\n        x: x,\n        y: y\n      };\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_shouldInclude\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (_position) {\n      return true;\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"handleCursorHide\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.hideTooltip();\n      this.updateLegendValue(undefined);\n      this.updateLegendMarker(undefined);\n    }\n  });\n  Object.defineProperty(XYSeries.prototype, \"_afterDataChange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterDataChange.call(this); // this causes unneeded animation on live demo and it shouldn't be needed\n      //this.setPrivate(\"startIndex\", 0);\n      //this.setPrivate(\"endIndex\", this.dataItems.length);\n\n\n      this.resetExtremes();\n    }\n  }); // todo description\n\n  Object.defineProperty(XYSeries.prototype, \"resetExtremes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.setPrivate(\"selectionMinX\", undefined);\n      this.setPrivate(\"selectionMaxX\", undefined);\n      this.setPrivate(\"selectionMinY\", undefined);\n      this.setPrivate(\"selectionMaxY\", undefined);\n      this.setPrivate(\"minX\", undefined);\n      this.setPrivate(\"minY\", undefined);\n      this.setPrivate(\"maxX\", undefined);\n      this.setPrivate(\"maxY\", undefined);\n    }\n  });\n  /**\r\n   * Creates and returns an axis range object.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\r\n   * @param   axisDataItem  Axis data item\r\n   * @return                Axis range\r\n   */\n\n  Object.defineProperty(XYSeries.prototype, \"createAxisRange\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (axisDataItem) {\n      return this.axisRanges.push({\n        axisDataItem: axisDataItem\n      });\n    }\n  });\n  Object.defineProperty(XYSeries, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"XYSeries\"\n  });\n  Object.defineProperty(XYSeries, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Series.classNames.concat([XYSeries.className])\n  });\n  return XYSeries;\n}(Series);\n\nexport { XYSeries };","map":{"version":3,"sources":["../../../../../../src/.internal/charts/xy/series/XYSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate } from \"../../../core/render/Series\";\nimport type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { List } from \"../../../core/util/List\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t * \n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tprotected _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x:number = 0;\n\tprotected _y:number = 0;\t\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tprotected __valueXShowFields!: Array<string>;\n\tprotected __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?:string;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tsuper._afterNew();\n\n\t\tthis._settings.xAxis.series.push(this);\n\t\tthis._settings.yAxis.series.push(this);\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tif (!this.get(\"baseAxis\")) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tthis.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (axisFill) {\n\t\t\t\tthis.children.push(axisFill);\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem)\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t\taxisRange.axisDataItem.dispose();\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\t\tif (xAxis === baseAxis) {\n\t\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\t\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\t}\n\t\telse if (yAxis === baseAxis) {\n\t\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tthis.updateLegendValue(undefined);\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif ((this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty)) {\n\n\t\t\tlet startIndex = this.getPrivate(\"startIndex\", 0);\n\t\t\tlet endIndex = this.getPrivate(\"endIndex\", this.dataItems.length);\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", this.getPrivate(\"selectionMinY\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", this.getPrivate(\"selectionMaxY\"));\n\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (baseAxis === yAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", this.getPrivate(\"selectionMinX\"));\n\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", this.getPrivate(\"selectionMaxX\"));\n\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tif (!this._mainContainerMask) {\n\t\t\t\tconst mainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\n\t\t\t\tmainContainerMask!.set(\"draw\", (display) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(mainContainerMask._display, mainContainerMask);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._mainContainerMask.markDirty();\n\t\t\tthis._mainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _maskBaseDraw() {\n\t\tconst mainContainerMask = this._mainContainerMask!;\n\t\tmainContainerMask.set(\"draw\", (display) => {\n\t\t\tconst parent = this.parent;\n\t\t\tif (parent) {\n\t\t\t\tconst w = parent.width();\n\t\t\t\tconst h = parent.height();\n\t\t\t\tdisplay.drawRect(0, 0, w, h);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tprotected _unstack() {\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\t\t\t\tlet stackValue = stackToItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.set(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.set(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\t\t}\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tvalue._markDirtyStack();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tif (this.get(\"tooltip\")) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\t\t\tif (tooltip) {\n\t\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._xField, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._yField, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (show) {\n\t\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tpublic _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\t\n\t\t// this causes unneeded animation on live demo and it shouldn't be needed\n\t\t//this.setPrivate(\"startIndex\", 0);\n\t\t//this.setPrivate(\"endIndex\", this.dataItems.length);\n\n\t\tthis.resetExtremes();\n\t}\n\n\n\t// todo description\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}