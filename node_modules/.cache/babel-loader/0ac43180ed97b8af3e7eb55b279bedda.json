{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/users/editAndAddNewUser/Email.jsx\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { OutlinedInput, FormControl, InputLabel, FormHelperText } from '@mui/material';\nimport { setEmail, setEmailError } from '../../../../redux/slices/adminUsers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Email = /*#__PURE__*/memo(_c2 = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const {\n    newUser\n  } = props;\n  const dispatch = useDispatch();\n  const email = useSelector(state => state.adminUsers.email);\n  const emailError = useSelector(state => state.adminUsers.emailError);\n  const disabledSaveButton = useSelector(state => state.adminUsers.disabledSaveButton);\n\n  const handleEmailChange = e => {\n    dispatch(setEmailError(''));\n\n    if (email.length < 256) {\n      dispatch(setEmail(e.target.value.trim().slice(0, 255)));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      shrink: true,\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n      error: emailError !== '',\n      ref: ref,\n      autoFocus: true,\n      notched: true,\n      placeholder: disabledSaveButton ? 'Enter user email' : null,\n      label: \"Email\",\n      value: email,\n      onChange: handleEmailChange,\n      disabled: !newUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), emailError && /*#__PURE__*/_jsxDEV(FormHelperText, {\n      error: true,\n      children: emailError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}, \"pN5rpElH2WJ6m3obEvr5YWwS7Eg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n})));\n_c3 = Email;\nexport default Email;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Email$memo$forwardRef\");\n$RefreshReg$(_c2, \"Email$memo\");\n$RefreshReg$(_c3, \"Email\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/components/adminPanel/users/editAndAddNewUser/Email.jsx"],"names":["forwardRef","memo","useSelector","useDispatch","OutlinedInput","FormControl","InputLabel","FormHelperText","setEmail","setEmailError","Email","props","ref","newUser","dispatch","email","state","adminUsers","emailError","disabledSaveButton","handleEmailChange","e","length","target","value","trim","slice"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,IAArB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,cAJF,QAKO,eALP;AAMA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,qCAAxC;;AAEA,MAAMC,KAAK,gBAAGT,IAAI,oBAChBD,UAAU,SAAC,CAACW,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAcF,KAApB;AAEA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAMY,KAAK,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBF,KAA7B,CAAzB;AACA,QAAMG,UAAU,GAAGhB,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,UAA7B,CAA9B;AAEA,QAAMC,kBAAkB,GAAGjB,WAAW,CACnCc,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBE,kBADQ,CAAtC;;AAIA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BP,IAAAA,QAAQ,CAACL,aAAa,CAAC,EAAD,CAAd,CAAR;;AACA,QAAIM,KAAK,CAACO,MAAN,GAAe,GAAnB,EAAwB;AACtBR,MAAAA,QAAQ,CAACN,QAAQ,CAACa,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,IAAf,GAAsBC,KAAtB,CAA4B,CAA5B,EAA+B,GAA/B,CAAD,CAAT,CAAR;AACD;AACF,GALD;;AAOA,sBACE,QAAC,WAAD;AAAa,IAAA,SAAS,MAAtB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,KAAK,EAAER,UAAU,KAAK,EADxB;AAEE,MAAA,GAAG,EAAEN,GAFP;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,OAAO,MAJT;AAKE,MAAA,WAAW,EAAEO,kBAAkB,GAAG,kBAAH,GAAwB,IALzD;AAME,MAAA,KAAK,EAAC,OANR;AAOE,MAAA,KAAK,EAAEJ,KAPT;AAQE,MAAA,QAAQ,EAAEK,iBARZ;AASE,MAAA,QAAQ,EAAE,CAACP;AATb;AAAA;AAAA;AAAA;AAAA,YAFF,EAaGK,UAAU,iBAAI,QAAC,cAAD;AAAgB,MAAA,KAAK,MAArB;AAAA,gBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAbjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApCS;AAAA,UAGSf,WAHT,EAKMD,WALN,EAMWA,WANX,EAQmBA,WARnB;AAAA,GADM,CAAlB;MAAMQ,K;AAwCN,eAAeA,KAAf","sourcesContent":["import { forwardRef, memo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  OutlinedInput,\r\n  FormControl,\r\n  InputLabel,\r\n  FormHelperText,\r\n} from '@mui/material';\r\nimport { setEmail, setEmailError } from '../../../../redux/slices/adminUsers';\r\n\r\nconst Email = memo(\r\n  forwardRef((props, ref) => {\r\n    const { newUser } = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const email = useSelector((state) => state.adminUsers.email);\r\n    const emailError = useSelector((state) => state.adminUsers.emailError);\r\n\r\n    const disabledSaveButton = useSelector(\r\n      (state) => state.adminUsers.disabledSaveButton\r\n    );\r\n\r\n    const handleEmailChange = (e) => {\r\n      dispatch(setEmailError(''));\r\n      if (email.length < 256) {\r\n        dispatch(setEmail(e.target.value.trim().slice(0, 255)));\r\n      }\r\n    };\r\n\r\n    return (\r\n      <FormControl fullWidth>\r\n        <InputLabel shrink>Email</InputLabel>\r\n        <OutlinedInput\r\n          error={emailError !== ''}\r\n          ref={ref}\r\n          autoFocus\r\n          notched\r\n          placeholder={disabledSaveButton ? 'Enter user email' : null}\r\n          label=\"Email\"\r\n          value={email}\r\n          onChange={handleEmailChange}\r\n          disabled={!newUser}\r\n        />\r\n        {emailError && <FormHelperText error>{emailError}</FormHelperText>}\r\n      </FormControl>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Email;\r\n"]},"metadata":{},"sourceType":"module"}