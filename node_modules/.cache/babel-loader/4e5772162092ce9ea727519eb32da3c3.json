{"ast":null,"code":"var _jsxFileName = \"/Users/dcurchin/Desktop/final/grocery-shop-ui/src/pages/adminPanel/products/EditProductContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useProduct } from '../../../hooks/useProduct';\nimport Spinner from '../../../components/common/Spinner';\nimport { setEditingProduct, setImageError, setImageLoaded } from '../../../redux/slices/adminProducts';\nimport ProductForm from '../../../components/adminPanel/products/editAndAddNewProduct/ProductForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProductContainer = ({\n  setActive\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    productId\n  } = useParams();\n  const product = useProduct(productId);\n  useEffect(() => {\n    setActive('products');\n  }, [setActive]);\n  useEffect(() => {\n    dispatch(setImageLoaded(false));\n    dispatch(setImageError(false));\n  }, [dispatch]);\n  useEffect(() => {\n    window.scrollTo({\n      top: 0\n    });\n  });\n\n  if (product.isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (product.isError) {\n    return null;\n  }\n\n  dispatch(setEditingProduct(product.data));\n  return /*#__PURE__*/_jsxDEV(ProductForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditProductContainer, \"661GIo27CTBuS/sd/GuMFTnSwAw=\", false, function () {\n  return [useDispatch, useParams, useProduct];\n});\n\n_c = EditProductContainer;\nexport default EditProductContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductContainer\");","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/pages/adminPanel/products/EditProductContainer.jsx"],"names":["useEffect","useParams","useDispatch","useProduct","Spinner","setEditingProduct","setImageError","setImageLoaded","ProductForm","EditProductContainer","setActive","dispatch","productId","product","window","scrollTo","top","isLoading","isError","data"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,SACEC,iBADF,EAEEC,aAFF,EAGEC,cAHF,QAIO,qCAJP;AAKA,OAAOC,WAAP,MAAwB,0EAAxB;;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AAC9C,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAgBX,SAAS,EAA/B;AACA,QAAMY,OAAO,GAAGV,UAAU,CAACS,SAAD,CAA1B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS,CAAC,UAAD,CAAT;AACD,GAFQ,EAEN,CAACA,SAAD,CAFM,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACJ,cAAc,CAAC,KAAD,CAAf,CAAR;AACAI,IAAAA,QAAQ,CAACL,aAAa,CAAC,KAAD,CAAd,CAAR;AACD,GAHQ,EAGN,CAACK,QAAD,CAHM,CAAT;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,MAAAA,GAAG,EAAE;AADS,KAAhB;AAGD,GAJQ,CAAT;;AAMA,MAAIH,OAAO,CAACI,SAAZ,EAAuB;AACrB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIJ,OAAO,CAACK,OAAZ,EAAqB;AACnB,WAAO,IAAP;AACD;;AAEDP,EAAAA,QAAQ,CAACN,iBAAiB,CAACQ,OAAO,CAACM,IAAT,CAAlB,CAAR;AAEA,sBAAO,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhCD;;GAAMV,oB;UACaP,W,EAEKD,S,EACNE,U;;;KAJZM,oB;AAkCN,eAAeA,oBAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useProduct } from '../../../hooks/useProduct';\nimport Spinner from '../../../components/common/Spinner';\nimport {\n  setEditingProduct,\n  setImageError,\n  setImageLoaded,\n} from '../../../redux/slices/adminProducts';\nimport ProductForm from '../../../components/adminPanel/products/editAndAddNewProduct/ProductForm';\n\nconst EditProductContainer = ({ setActive }) => {\n  const dispatch = useDispatch();\n\n  const { productId } = useParams();\n  const product = useProduct(productId);\n\n  useEffect(() => {\n    setActive('products');\n  }, [setActive]);\n\n  useEffect(() => {\n    dispatch(setImageLoaded(false));\n    dispatch(setImageError(false));\n  }, [dispatch]);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n    });\n  });\n\n  if (product.isLoading) {\n    return <Spinner />;\n  }\n\n  if (product.isError) {\n    return null;\n  }\n\n  dispatch(setEditingProduct(product.data));\n\n  return <ProductForm />;\n};\n\nexport default EditProductContainer;\n"]},"metadata":{},"sourceType":"module"}