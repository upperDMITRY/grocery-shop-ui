{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Graphics } from \"./Graphics\";\n/**\r\n * Draws a circle.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\r\n * @important\r\n */\nvar Circle = /** @class */function (_super) {\n  __extends(Circle, _super);\n  function Circle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Object.defineProperty(Circle.prototype, \"_beforeChanged\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._beforeChanged.call(this);\n      if (this.isDirty(\"radius\")) {\n        this._clear = true;\n      }\n    }\n  });\n  Object.defineProperty(Circle.prototype, \"_changed\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._changed.call(this);\n      if (this._clear) {\n        this._display.drawCircle(0, 0, this.get(\"radius\", 10));\n      }\n    }\n  });\n  Object.defineProperty(Circle, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Circle\"\n  });\n  Object.defineProperty(Circle, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: Graphics.classNames.concat([Circle.className])\n  });\n  return Circle;\n}(Graphics);\nexport { Circle };","map":{"version":3,"names":["Graphics","Circle","_super","__extends","value","prototype","_beforeChanged","call","isDirty","_clear","_changed","_display","drawCircle","get","Object","defineProperty","classNames","concat","className"],"sources":["../../../../../src/.internal/core/render/Circle.ts"],"sourcesContent":["import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"./Graphics\";\n\nexport interface ICircleSettings extends IGraphicsSettings {\n\n\t/**\n\t * Circle radius in pixels.\n\t */\n\tradius?: number;\n\n}\n\nexport interface ICirclePrivate extends IGraphicsPrivate {\n}\n\n/**\n * Draws a circle.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/common-elements/graphics/} for more info\n * @important\n */\nexport class Circle extends Graphics {\n\n\tdeclare public _settings: ICircleSettings;\n\tdeclare public _privateSettings: ICirclePrivate;\n\n\tpublic static className: string = \"Circle\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Circle.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"radius\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this._clear) {\n\t\t\tthis._display.drawCircle(0, 0, this.get(\"radius\", 10));\n\t\t}\n\t}\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAA6C,YAAY;AAc1E;;;;;;AAMA,IAAAC,MAAA,0BAAAC,MAAA;EAA4BC,SAAA,CAAAF,MAAA,EAAAC,MAAA;EAA5B,SAAAD,OAAA;;EAuBA;;;;;WAfC,SAAAG,CAAA;MACCF,MAAA,CAAAG,SAAA,CAAMC,cAAc,CAAAC,IAAA,MAAE;MAEtB,IAAI,IAAI,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACC,MAAM,GAAG,IAAI;;IAEpB;;;;;;WAEA,SAAAL,CAAA;MACCF,MAAA,CAAAG,SAAA,CAAMK,QAAQ,CAAAH,IAAA,MAAE;MAEhB,IAAI,IAAI,CAACE,MAAM,EAAE;QAChB,IAAI,CAACE,QAAQ,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;;IAExD;;EAjBAC,MAAA,CAAAC,cAAA,CAAAd,MAAA;;;;WAAkC;;EAClCa,MAAA,CAAAC,cAAA,CAAAd,MAAA;;;;WAA0CD,QAAQ,CAACgB,UAAU,CAACC,MAAM,CAAC,CAAChB,MAAM,CAACiB,SAAS,CAAC;;EAiBxF,OAAAjB,MAAC;CAAA,CAvB2BD,QAAQ;SAAvBC,MAAM"},"metadata":{},"sourceType":"module"}