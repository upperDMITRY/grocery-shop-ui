{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dcurchin/Desktop/final/grocery-shop-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/dcurchin/Desktop/final/grocery-shop-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"/Users/dcurchin/Desktop/final/grocery-shop-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{useQuery}from'react-query';export var useProduct=function useProduct(id){return useQuery(['product',id],getProduct,{staleTime:60*1000*5,cacheTime:0});};var getProduct=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(context){var _context$queryKey,id,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context$queryKey=_slicedToArray(context.queryKey,2),id=_context$queryKey[1];_context.next=3;return axios.get(\"/api/products/\".concat(id));case 3:res=_context.sent;return _context.abrupt(\"return\",res.data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getProduct(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/dcurchin/Desktop/final/grocery-shop-ui/src/hooks/useProduct.js"],"names":["axios","useQuery","useProduct","id","getProduct","staleTime","cacheTime","context","queryKey","get","res","data"],"mappings":"yeAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,QACxBF,CAAAA,QAAQ,CAAC,CAAC,SAAD,CAAYE,EAAZ,CAAD,CAAkBC,UAAlB,CAA8B,CACpCC,SAAS,CAAE,GAAK,IAAL,CAAY,CADa,CAEpCC,SAAS,CAAE,CAFyB,CAA9B,CADgB,EAAnB,CAMP,GAAMF,CAAAA,UAAU,0FAAG,iBAAOG,OAAP,gLACFA,OAAO,CAACC,QADN,IACRL,EADQ,4CAECH,CAAAA,KAAK,CAACS,GAAN,yBAA2BN,EAA3B,EAFD,QAEXO,GAFW,+CAGVA,GAAG,CAACC,IAHM,wDAAH,kBAAVP,CAAAA,UAAU,4CAAhB","sourcesContent":["import axios from 'axios';\r\nimport { useQuery } from 'react-query';\r\n\r\nexport const useProduct = (id) =>\r\n  useQuery(['product', id], getProduct, {\r\n    staleTime: 60 * 1000 * 5,\r\n    cacheTime: 0,\r\n  });\r\n\r\nconst getProduct = async (context) => {\r\n  const [, id] = context.queryKey;\r\n  const res = await axios.get(`/api/products/${id}`);\r\n  return res.data;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}